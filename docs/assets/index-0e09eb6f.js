var X4=Object.defineProperty;var q4=(x,C,d)=>C in x?X4(x,C,{enumerable:!0,configurable:!0,writable:!0,value:d}):x[C]=d;var Ve=(x,C,d)=>(q4(x,typeof C!="symbol"?C+"":C,d),d);(function(){const C=document.createElement("link").relList;if(C&&C.supports&&C.supports("modulepreload"))return;for(const Q of document.querySelectorAll('link[rel="modulepreload"]'))k(Q);new MutationObserver(Q=>{for(const H of Q)if(H.type==="childList")for(const S of H.addedNodes)S.tagName==="LINK"&&S.rel==="modulepreload"&&k(S)}).observe(document,{childList:!0,subtree:!0});function d(Q){const H={};return Q.integrity&&(H.integrity=Q.integrity),Q.referrerPolicy&&(H.referrerPolicy=Q.referrerPolicy),Q.crossOrigin==="use-credentials"?H.credentials="include":Q.crossOrigin==="anonymous"?H.credentials="omit":H.credentials="same-origin",H}function k(Q){if(Q.ep)return;Q.ep=!0;const H=d(Q);fetch(Q.href,H)}})();const J4="modulepreload",_4=function(x,C){return new URL(x,C).href},qu={},$4=function(C,d,k){if(!d||d.length===0)return C();const Q=document.getElementsByTagName("link");return Promise.all(d.map(H=>{if(H=_4(H,k),H in qu)return;qu[H]=!0;const S=H.endsWith(".css"),W=S?'[rel="stylesheet"]':"";if(!!k)for(let N=Q.length-1;N>=0;N--){const K=Q[N];if(K.href===H&&(!S||K.rel==="stylesheet"))return}else if(document.querySelector(`link[href="${H}"]${W}`))return;const R=document.createElement("link");if(R.rel=S?"stylesheet":J4,S||(R.as="script",R.crossOrigin=""),R.href=H,document.head.appendChild(R),S)return new Promise((N,K)=>{R.addEventListener("load",N),R.addEventListener("error",()=>K(new Error(`Unable to preload CSS for ${H}`)))})})).then(()=>C()).catch(H=>{const S=new Event("vite:preloadError",{cancelable:!0});if(S.payload=H,window.dispatchEvent(S),!S.defaultPrevented)throw H})};var _c,d2,od={"./node_modules/onnxruntime-web/dist/ort-wasm-simd-threaded.jsep.wasm":(x,C,d)=>{x.exports=d.p+"ort-wasm-simd-threaded.jsep.wasm"},"./node_modules/onnxruntime-web/dist/ort.bundle.min.mjs?46eb":(x,C,d)=>{x.exports=d.p+"ort.bundle.min.mjs"},"?2ce3":()=>{},"?7a2c":()=>{},"?a42a":()=>{},"?2b25":()=>{},"?569f":()=>{},"?3f59":()=>{},"?154a":()=>{},"./node_modules/@huggingface/jinja/dist/index.js":(x,C,d)=>{d.r(C),d.d(C,{Environment:()=>MA,Interpreter:()=>LA,Template:()=>HA,parse:()=>ke,tokenize:()=>N});var k=Object.freeze({Text:"Text",NumericLiteral:"NumericLiteral",BooleanLiteral:"BooleanLiteral",NullLiteral:"NullLiteral",StringLiteral:"StringLiteral",Identifier:"Identifier",Equals:"Equals",OpenParen:"OpenParen",CloseParen:"CloseParen",OpenStatement:"OpenStatement",CloseStatement:"CloseStatement",OpenExpression:"OpenExpression",CloseExpression:"CloseExpression",OpenSquareBracket:"OpenSquareBracket",CloseSquareBracket:"CloseSquareBracket",OpenCurlyBracket:"OpenCurlyBracket",CloseCurlyBracket:"CloseCurlyBracket",Comma:"Comma",Dot:"Dot",Colon:"Colon",Pipe:"Pipe",CallOperator:"CallOperator",AdditiveBinaryOperator:"AdditiveBinaryOperator",MultiplicativeBinaryOperator:"MultiplicativeBinaryOperator",ComparisonBinaryOperator:"ComparisonBinaryOperator",UnaryOperator:"UnaryOperator",Set:"Set",If:"If",For:"For",In:"In",Is:"Is",NotIn:"NotIn",Else:"Else",EndIf:"EndIf",ElseIf:"ElseIf",EndFor:"EndFor",And:"And",Or:"Or",Not:"UnaryOperator",Macro:"Macro",EndMacro:"EndMacro"}),Q=Object.freeze({set:k.Set,for:k.For,in:k.In,is:k.Is,if:k.If,else:k.Else,endif:k.EndIf,elif:k.ElseIf,endfor:k.EndFor,and:k.And,or:k.Or,not:k.Not,"not in":k.NotIn,macro:k.Macro,endmacro:k.EndMacro,true:k.BooleanLiteral,false:k.BooleanLiteral,none:k.NullLiteral,True:k.BooleanLiteral,False:k.BooleanLiteral,None:k.NullLiteral}),H=class{constructor(ge,J){this.value=ge,this.type=J}};function S(ge){return/\w/.test(ge)}function W(ge){return/[0-9]/.test(ge)}var Z=[["{%",k.OpenStatement],["%}",k.CloseStatement],["{{",k.OpenExpression],["}}",k.CloseExpression],["(",k.OpenParen],[")",k.CloseParen],["{",k.OpenCurlyBracket],["}",k.CloseCurlyBracket],["[",k.OpenSquareBracket],["]",k.CloseSquareBracket],[",",k.Comma],[".",k.Dot],[":",k.Colon],["|",k.Pipe],["<=",k.ComparisonBinaryOperator],[">=",k.ComparisonBinaryOperator],["==",k.ComparisonBinaryOperator],["!=",k.ComparisonBinaryOperator],["<",k.ComparisonBinaryOperator],[">",k.ComparisonBinaryOperator],["+",k.AdditiveBinaryOperator],["-",k.AdditiveBinaryOperator],["*",k.MultiplicativeBinaryOperator],["/",k.MultiplicativeBinaryOperator],["%",k.MultiplicativeBinaryOperator],["=",k.Equals]],R=new Map([["n",`
`],["t","	"],["r","\r"],["b","\b"],["f","\f"],["v","\v"],["'","'"],['"','"'],["\\","\\"]]);function N(ge,J={}){var bA,NA,XA;const fe=[],Te=function(TA,st={}){return TA.endsWith(`
`)&&(TA=TA.slice(0,-1)),TA=TA.replace(/{#.*?#}/gs,"{##}"),st.lstrip_blocks&&(TA=TA.replace(/^[ \t]*({[#%])/gm,"$1")),st.trim_blocks&&(TA=TA.replace(/([#%]})\n/g,"$1")),TA.replace(/{##}/g,"").replace(/-%}\s*/g,"%}").replace(/\s*{%-/g,"{%").replace(/-}}\s*/g,"}}").replace(/\s*{{-/g,"{{")}(ge,J);let _e=0;const dA=TA=>{let st="";for(;TA(Te[_e]);)if(Te[_e]!=="\\"){if(st+=Te[_e++],_e>=Te.length)throw new SyntaxError("Unexpected end of input")}else{if(++_e,_e>=Te.length)throw new SyntaxError("Unexpected end of input");const tt=Te[_e++],nt=R.get(tt);if(nt===void 0)throw new SyntaxError(`Unexpected escaped character: ${tt}`);st+=nt}return st};e:for(;_e<Te.length;){const TA=(bA=fe.at(-1))==null?void 0:bA.type;if(TA===void 0||TA===k.CloseStatement||TA===k.CloseExpression){let tt="";for(;_e<Te.length&&(Te[_e]!=="{"||Te[_e+1]!=="%"&&Te[_e+1]!=="{");)tt+=Te[_e++];if(tt.length>0){fe.push(new H(tt,k.Text));continue}}dA(tt=>/\s/.test(tt));const st=Te[_e];if(st==="-"||st==="+"){const tt=(NA=fe.at(-1))==null?void 0:NA.type;if(tt===k.Text||tt===void 0)throw new SyntaxError(`Unexpected character: ${st}`);switch(tt){case k.Identifier:case k.NumericLiteral:case k.BooleanLiteral:case k.NullLiteral:case k.StringLiteral:case k.CloseParen:case k.CloseSquareBracket:break;default:{++_e;const nt=dA(W);fe.push(new H(`${st}${nt}`,nt.length>0?k.NumericLiteral:k.UnaryOperator));continue}}}for(const[tt,nt]of Z)if(Te.slice(_e,_e+tt.length)===tt){fe.push(new H(tt,nt)),_e+=tt.length;continue e}if(st!=="'"&&st!=='"')if(W(st)){const tt=dA(W);fe.push(new H(tt,k.NumericLiteral))}else{if(!S(st))throw new SyntaxError(`Unexpected character: ${st}`);{const tt=dA(S),nt=Object.hasOwn(Q,tt)?Q[tt]:k.Identifier;nt===k.In&&((XA=fe.at(-1))==null?void 0:XA.type)===k.Not?(fe.pop(),fe.push(new H("not in",k.NotIn))):fe.push(new H(tt,nt))}}else{++_e;const tt=dA(nt=>nt!==st);fe.push(new H(tt,k.StringLiteral)),++_e}}return fe}var K=class{constructor(){Ve(this,"type","Statement")}},V=class extends K{constructor(J){super();Ve(this,"type","Program");this.body=J}},Ae=class extends K{constructor(J,fe,Te){super();Ve(this,"type","If");this.test=J,this.body=fe,this.alternate=Te}},me=class extends K{constructor(J,fe,Te,_e){super();Ve(this,"type","For");this.loopvar=J,this.iterable=fe,this.body=Te,this.defaultBlock=_e}},Be=class extends K{constructor(J,fe){super();Ve(this,"type","Set");this.assignee=J,this.value=fe}},Ee=class extends K{constructor(J,fe,Te){super();Ve(this,"type","Macro");this.name=J,this.args=fe,this.body=Te}},se=class extends K{constructor(){super(...arguments);Ve(this,"type","Expression")}},ie=class extends se{constructor(J,fe,Te){super();Ve(this,"type","MemberExpression");this.object=J,this.property=fe,this.computed=Te}},ve=class extends se{constructor(J,fe){super();Ve(this,"type","CallExpression");this.callee=J,this.args=fe}},g=class extends se{constructor(J){super();Ve(this,"type","Identifier");this.value=J}},b=class extends se{constructor(J){super();Ve(this,"type","Literal");this.value=J}},e=class extends b{constructor(){super(...arguments);Ve(this,"type","NumericLiteral")}},l=class extends b{constructor(){super(...arguments);Ve(this,"type","StringLiteral")}},M=class extends b{constructor(){super(...arguments);Ve(this,"type","BooleanLiteral")}},ue=class extends b{constructor(){super(...arguments);Ve(this,"type","NullLiteral")}},D=class extends b{constructor(){super(...arguments);Ve(this,"type","ArrayLiteral")}},F=class extends b{constructor(){super(...arguments);Ve(this,"type","TupleLiteral")}},Ye=class extends b{constructor(){super(...arguments);Ve(this,"type","ObjectLiteral")}},Ne=class extends se{constructor(J,fe,Te){super();Ve(this,"type","BinaryExpression");this.operator=J,this.left=fe,this.right=Te}},Oe=class extends se{constructor(J,fe){super();Ve(this,"type","FilterExpression");this.operand=J,this.filter=fe}},AA=class extends se{constructor(J,fe){super();Ve(this,"type","SelectExpression");this.iterable=J,this.test=fe}},tA=class extends se{constructor(J,fe,Te){super();Ve(this,"type","TestExpression");this.operand=J,this.negate=fe,this.test=Te}},BA=class extends se{constructor(J,fe){super();Ve(this,"type","UnaryExpression");this.operator=J,this.argument=fe}},DA=class extends se{constructor(J=void 0,fe=void 0,Te=void 0){super();Ve(this,"type","SliceExpression");this.start=J,this.stop=fe,this.step=Te}},Ge=class extends se{constructor(J,fe){super();Ve(this,"type","KeywordArgumentExpression");this.key=J,this.value=fe}};function ke(ge){const J=new V([]);let fe=0;function Te(qA,et){const FA=ge[fe++];if(!FA||FA.type!==qA)throw new Error(`Parser Error: ${et}. ${FA.type} !== ${qA}.`);return FA}function _e(){switch(ge[fe].type){case k.Text:return new l(Te(k.Text,"Expected text token").value);case k.OpenStatement:return function(){let qA;switch(Te(k.OpenStatement,"Expected opening statement token"),ge[fe].type){case k.Set:++fe,qA=NA(),Te(k.CloseStatement,"Expected closing statement token");break;case k.If:++fe,qA=XA(),Te(k.OpenStatement,"Expected {% token"),Te(k.EndIf,"Expected endif token"),Te(k.CloseStatement,"Expected %} token");break;case k.Macro:++fe,qA=function(){const et=kn();if(et.type!=="Identifier")throw new SyntaxError("Expected identifier following macro statement");const FA=$t();Te(k.CloseStatement,"Expected closing statement token");const Kt=[];for(;dA(k.OpenStatement,k.EndMacro);)Kt.push(_e());return new Ee(et,FA,Kt)}(),Te(k.OpenStatement,"Expected {% token"),Te(k.EndMacro,"Expected endmacro token"),Te(k.CloseStatement,"Expected %} token");break;case k.For:++fe,qA=function(){const et=TA(!0);if(!(et instanceof g||et instanceof F))throw new SyntaxError(`Expected identifier/tuple for the loop variable, got ${et.type} instead`);Te(k.In,"Expected `in` keyword following loop variable");const FA=st();Te(k.CloseStatement,"Expected closing statement token");const Kt=[];for(;dA(k.OpenStatement,k.EndFor)&&dA(k.OpenStatement,k.Else);)Kt.push(_e());const Vn=[];if(bA(k.OpenStatement,k.Else))for(++fe,++fe,Te(k.CloseStatement,"Expected closing statement token");dA(k.OpenStatement,k.EndFor);)Vn.push(_e());return new me(et,FA,Kt,Vn)}(),Te(k.OpenStatement,"Expected {% token"),Te(k.EndFor,"Expected endfor token"),Te(k.CloseStatement,"Expected %} token");break;default:throw new SyntaxError(`Unknown statement type: ${ge[fe].type}`)}return qA}();case k.OpenExpression:return function(){Te(k.OpenExpression,"Expected opening expression token");const qA=st();return Te(k.CloseExpression,"Expected closing expression token"),qA}();default:throw new SyntaxError(`Unexpected token type: ${ge[fe].type}`)}}function dA(...qA){return fe+qA.length<=ge.length&&qA.some((et,FA)=>et!==ge[fe+FA].type)}function bA(...qA){return fe+qA.length<=ge.length&&qA.every((et,FA)=>et===ge[fe+FA].type)}function NA(){const qA=st();if(bA(k.Equals)){++fe;const et=NA();return new Be(qA,et)}return qA}function XA(){var Kt,Vn,zn,oa,Jn,_n,la,Yr;const qA=st();Te(k.CloseStatement,"Expected closing statement token");const et=[],FA=[];for(;((Kt=ge[fe])==null?void 0:Kt.type)!==k.OpenStatement||((Vn=ge[fe+1])==null?void 0:Vn.type)!==k.ElseIf&&((zn=ge[fe+1])==null?void 0:zn.type)!==k.Else&&((oa=ge[fe+1])==null?void 0:oa.type)!==k.EndIf;)et.push(_e());if(((Jn=ge[fe])==null?void 0:Jn.type)===k.OpenStatement&&((_n=ge[fe+1])==null?void 0:_n.type)!==k.EndIf)if(++fe,bA(k.ElseIf))Te(k.ElseIf,"Expected elseif token"),FA.push(XA());else for(Te(k.Else,"Expected else token"),Te(k.CloseStatement,"Expected closing statement token");((la=ge[fe])==null?void 0:la.type)!==k.OpenStatement||((Yr=ge[fe+1])==null?void 0:Yr.type)!==k.EndIf;)FA.push(_e());return new Ae(qA,et,FA)}function TA(qA=!1){const et=qA?kn:st,FA=[et()],Kt=bA(k.Comma);for(;Kt&&(++fe,FA.push(et()),bA(k.Comma)););return Kt?new F(FA):FA[0]}function st(){return function(){const qA=tt();if(bA(k.If)){++fe;const et=tt();if(bA(k.Else)){++fe;const FA=tt();return new Ae(et,[qA],[FA])}return new AA(qA,et)}return qA}()}function tt(){let qA=nt();for(;bA(k.Or);){const et=ge[fe];++fe;const FA=nt();qA=new Ne(et,qA,FA)}return qA}function nt(){let qA=It();for(;bA(k.And);){const et=ge[fe];++fe;const FA=It();qA=new Ne(et,qA,FA)}return qA}function It(){let qA;for(;bA(k.Not);){const et=ge[fe];++fe;const FA=It();qA=new BA(et,FA)}return qA??function(){let et=Ar();for(;bA(k.ComparisonBinaryOperator)||bA(k.In)||bA(k.NotIn);){const FA=ge[fe];++fe;const Kt=Ar();et=new Ne(FA,et,Kt)}return et}()}function Ar(){let qA=qn();for(;bA(k.AdditiveBinaryOperator);){const et=ge[fe];++fe;const FA=qn();qA=new Ne(et,qA,FA)}return qA}function Vr(qA){let et=new ve(qA,$t());return et=wt(et),bA(k.OpenParen)&&(et=Vr(et)),et}function $t(){Te(k.OpenParen,"Expected opening parenthesis for arguments list");const qA=function(){const et=[];for(;!bA(k.CloseParen);){let FA=st();if(bA(k.Equals)){if(++fe,!(FA instanceof g))throw new SyntaxError("Expected identifier for keyword argument");const Kt=st();FA=new Ge(FA,Kt)}et.push(FA),bA(k.Comma)&&++fe}return et}();return Te(k.CloseParen,"Expected closing parenthesis for arguments list"),qA}function Pr(){const qA=[];let et=!1;for(;!bA(k.CloseSquareBracket);)bA(k.Colon)?(qA.push(void 0),++fe,et=!0):(qA.push(st()),bA(k.Colon)&&(++fe,et=!0));if(qA.length===0)throw new SyntaxError("Expected at least one argument for member/slice expression");if(et){if(qA.length>3)throw new SyntaxError("Expected 0-3 arguments for slice expression");return new DA(...qA)}return qA[0]}function wt(qA){for(;bA(k.Dot)||bA(k.OpenSquareBracket);){const et=ge[fe];let FA;++fe;const Kt=et.type!==k.Dot;if(Kt)FA=Pr(),Te(k.CloseSquareBracket,"Expected closing square bracket");else if(FA=kn(),FA.type!=="Identifier")throw new SyntaxError("Expected identifier following dot operator");qA=new ie(qA,FA,Kt)}return qA}function qn(){let qA=Yn();for(;bA(k.MultiplicativeBinaryOperator);){const et=ge[fe];++fe;const FA=Yn();qA=new Ne(et,qA,FA)}return qA}function Yn(){let qA=function(){let et=function(){const FA=wt(kn());return bA(k.OpenParen)?Vr(FA):FA}();for(;bA(k.Pipe);){++fe;let FA=kn();if(!(FA instanceof g))throw new SyntaxError("Expected identifier for the filter");bA(k.OpenParen)&&(FA=Vr(FA)),et=new Oe(et,FA)}return et}();for(;bA(k.Is);){++fe;const et=bA(k.Not);et&&++fe;let FA=kn();if(FA instanceof M?FA=new g(FA.value.toString()):FA instanceof ue&&(FA=new g("none")),!(FA instanceof g))throw new SyntaxError("Expected identifier for the test");qA=new tA(qA,et,FA)}return qA}function kn(){const qA=ge[fe];switch(qA.type){case k.NumericLiteral:return++fe,new e(Number(qA.value));case k.StringLiteral:return++fe,new l(qA.value);case k.BooleanLiteral:return++fe,new M(qA.value.toLowerCase()==="true");case k.NullLiteral:return++fe,new ue(null);case k.Identifier:return++fe,new g(qA.value);case k.OpenParen:{++fe;const et=TA();if(ge[fe].type!==k.CloseParen)throw new SyntaxError(`Expected closing parenthesis, got ${ge[fe].type} instead`);return++fe,et}case k.OpenSquareBracket:{++fe;const et=[];for(;!bA(k.CloseSquareBracket);)et.push(st()),bA(k.Comma)&&++fe;return++fe,new D(et)}case k.OpenCurlyBracket:{++fe;const et=new Map;for(;!bA(k.CloseCurlyBracket);){const FA=st();Te(k.Colon,"Expected colon between key and value in object literal");const Kt=st();et.set(FA,Kt),bA(k.Comma)&&++fe}return++fe,new Ye(et)}default:throw new SyntaxError(`Unexpected token: ${qA.type}`)}}for(;fe<ge.length;)J.body.push(_e());return J}function ze(ge,J,fe=1){J===void 0&&(J=ge,ge=0);const Te=[];for(let _e=ge;_e<J;_e+=fe)Te.push(_e);return Te}function Ke(ge,J,fe,Te=1){const _e=Math.sign(Te);_e>=0?(J=(J??(J=0))<0?Math.max(ge.length+J,0):Math.min(J,ge.length),fe=(fe??(fe=ge.length))<0?Math.max(ge.length+fe,0):Math.min(fe,ge.length)):(J=(J??(J=ge.length-1))<0?Math.max(ge.length+J,-1):Math.min(J,ge.length-1),fe=(fe??(fe=-1))<-1?Math.max(ge.length+fe,-1):Math.min(fe,ge.length-1));const dA=[];for(let bA=J;_e*bA<_e*fe;bA+=Te)dA.push(ge[bA]);return dA}function Pe(ge){return ge.replace(/\b\w/g,J=>J.toUpperCase())}var xA=class{constructor(ge=void 0){Ve(this,"type","RuntimeValue");Ve(this,"value");Ve(this,"builtins",new Map);this.value=ge}__bool__(){return new yA(!!this.value)}},sA=class extends xA{constructor(){super(...arguments);Ve(this,"type","NumericValue")}},cA=class extends xA{constructor(){super(...arguments);Ve(this,"type","StringValue");Ve(this,"builtins",new Map([["upper",new IA(()=>new cA(this.value.toUpperCase()))],["lower",new IA(()=>new cA(this.value.toLowerCase()))],["strip",new IA(()=>new cA(this.value.trim()))],["title",new IA(()=>new cA(Pe(this.value)))],["length",new sA(this.value.length)],["rstrip",new IA(()=>new cA(this.value.trimEnd()))],["lstrip",new IA(()=>new cA(this.value.trimStart()))],["split",new IA(J=>{const fe=J[0]??new Qe;if(!(fe instanceof cA||fe instanceof Qe))throw new Error("sep argument must be a string or null");const Te=J[1]??new sA(-1);if(!(Te instanceof sA))throw new Error("maxsplit argument must be a number");let _e=[];if(fe instanceof Qe){const dA=this.value.trimStart();for(const{0:bA,index:NA}of dA.matchAll(/\S+/g)){if(Te.value!==-1&&_e.length>=Te.value&&NA!==void 0){_e.push(bA+dA.slice(NA+bA.length));break}_e.push(bA)}}else{if(fe.value==="")throw new Error("empty separator");_e=this.value.split(fe.value),Te.value!==-1&&_e.length>Te.value&&_e.push(_e.splice(Te.value).join(fe.value))}return new Je(_e.map(dA=>new cA(dA)))})]]))}},yA=class extends xA{constructor(){super(...arguments);Ve(this,"type","BooleanValue")}},gA=class extends xA{constructor(){super(...arguments);Ve(this,"type","ObjectValue");Ve(this,"builtins",new Map([["get",new IA(([J,fe])=>{if(!(J instanceof cA))throw new Error(`Object key must be a string: got ${J.type}`);return this.value.get(J.value)??fe??new Qe})],["items",new IA(()=>new Je(Array.from(this.value.entries()).map(([J,fe])=>new Je([new cA(J),fe]))))]]))}__bool__(){return new yA(this.value.size>0)}},He=class extends gA{constructor(){super(...arguments);Ve(this,"type","KeywordArgumentsValue")}},Je=class extends xA{constructor(){super(...arguments);Ve(this,"type","ArrayValue");Ve(this,"builtins",new Map([["length",new sA(this.value.length)]]))}__bool__(){return new yA(this.value.length>0)}},hA=class extends Je{constructor(){super(...arguments);Ve(this,"type","TupleValue")}},IA=class extends xA{constructor(){super(...arguments);Ve(this,"type","FunctionValue")}},Qe=class extends xA{constructor(){super(...arguments);Ve(this,"type","NullValue")}},mA=class extends xA{constructor(){super(...arguments);Ve(this,"type","UndefinedValue")}},MA=class{constructor(ge){Ve(this,"variables",new Map([["namespace",new IA(ge=>{if(ge.length===0)return new gA(new Map);if(ge.length!==1||!(ge[0]instanceof gA))throw new Error("`namespace` expects either zero arguments or a single object argument");return ge[0]})]]));Ve(this,"tests",new Map([["boolean",ge=>ge.type==="BooleanValue"],["callable",ge=>ge instanceof IA],["odd",ge=>{if(ge.type!=="NumericValue")throw new Error(`Cannot apply test "odd" to type: ${ge.type}`);return ge.value%2!=0}],["even",ge=>{if(ge.type!=="NumericValue")throw new Error(`Cannot apply test "even" to type: ${ge.type}`);return ge.value%2==0}],["false",ge=>ge.type==="BooleanValue"&&!ge.value],["true",ge=>ge.type==="BooleanValue"&&ge.value],["none",ge=>ge.type==="NullValue"],["string",ge=>ge.type==="StringValue"],["number",ge=>ge.type==="NumericValue"],["integer",ge=>ge.type==="NumericValue"&&Number.isInteger(ge.value)],["iterable",ge=>ge.type==="ArrayValue"||ge.type==="StringValue"],["mapping",ge=>ge.type==="ObjectValue"],["lower",ge=>{const J=ge.value;return ge.type==="StringValue"&&J===J.toLowerCase()}],["upper",ge=>{const J=ge.value;return ge.type==="StringValue"&&J===J.toUpperCase()}],["none",ge=>ge.type==="NullValue"],["defined",ge=>ge.type!=="UndefinedValue"],["undefined",ge=>ge.type==="UndefinedValue"],["equalto",(ge,J)=>ge.value===J.value],["eq",(ge,J)=>ge.value===J.value]]));this.parent=ge}set(ge,J){return this.declareVariable(ge,OA(J))}declareVariable(ge,J){if(this.variables.has(ge))throw new SyntaxError(`Variable already declared: ${ge}`);return this.variables.set(ge,J),J}setVariable(ge,J){return this.variables.set(ge,J),J}resolve(ge){if(this.variables.has(ge))return this;if(this.parent)return this.parent.resolve(ge);throw new Error(`Unknown variable: ${ge}`)}lookupVariable(ge){try{return this.resolve(ge).variables.get(ge)??new mA}catch{return new mA}}},LA=class{constructor(ge){Ve(this,"global");this.global=ge??new MA}run(ge){return this.evaluate(ge,this.global)}evaluateBinaryExpression(ge,J){const fe=this.evaluate(ge.left,J);switch(ge.operator.value){case"and":return fe.__bool__().value?this.evaluate(ge.right,J):fe;case"or":return fe.__bool__().value?fe:this.evaluate(ge.right,J)}const Te=this.evaluate(ge.right,J);switch(ge.operator.value){case"==":return new yA(fe.value==Te.value);case"!=":return new yA(fe.value!=Te.value)}if(fe instanceof mA||Te instanceof mA)throw new Error("Cannot perform operation on undefined values");if(fe instanceof Qe||Te instanceof Qe)throw new Error("Cannot perform operation on null values");if(fe instanceof sA&&Te instanceof sA)switch(ge.operator.value){case"+":return new sA(fe.value+Te.value);case"-":return new sA(fe.value-Te.value);case"*":return new sA(fe.value*Te.value);case"/":return new sA(fe.value/Te.value);case"%":return new sA(fe.value%Te.value);case"<":return new yA(fe.value<Te.value);case">":return new yA(fe.value>Te.value);case">=":return new yA(fe.value>=Te.value);case"<=":return new yA(fe.value<=Te.value)}else if(fe instanceof Je&&Te instanceof Je){if(ge.operator.value==="+")return new Je(fe.value.concat(Te.value))}else if(Te instanceof Je){const _e=Te.value.find(dA=>dA.value===fe.value)!==void 0;switch(ge.operator.value){case"in":return new yA(_e);case"not in":return new yA(!_e)}}if((fe instanceof cA||Te instanceof cA)&&ge.operator.value==="+")return new cA(fe.value.toString()+Te.value.toString());if(fe instanceof cA&&Te instanceof cA)switch(ge.operator.value){case"in":return new yA(Te.value.includes(fe.value));case"not in":return new yA(!Te.value.includes(fe.value))}if(fe instanceof cA&&Te instanceof gA)switch(ge.operator.value){case"in":return new yA(Te.value.has(fe.value));case"not in":return new yA(!Te.value.has(fe.value))}throw new SyntaxError(`Unknown operator "${ge.operator.value}" between ${fe.type} and ${Te.type}`)}evaluateArguments(ge,J){const fe=[],Te=new Map;for(const _e of ge)if(_e.type==="KeywordArgumentExpression"){const dA=_e;Te.set(dA.key.value,this.evaluate(dA.value,J))}else{if(Te.size>0)throw new Error("Positional arguments must come before keyword arguments");fe.push(this.evaluate(_e,J))}return[fe,Te]}evaluateFilterExpression(ge,J){const fe=this.evaluate(ge.operand,J);if(ge.filter.type==="Identifier"){const Te=ge.filter;if(Te.value==="tojson")return new cA(q(fe));if(fe instanceof Je)switch(Te.value){case"list":return fe;case"first":return fe.value[0];case"last":return fe.value[fe.value.length-1];case"length":return new sA(fe.value.length);case"reverse":return new Je(fe.value.reverse());case"sort":return new Je(fe.value.sort((_e,dA)=>{if(_e.type!==dA.type)throw new Error(`Cannot compare different types: ${_e.type} and ${dA.type}`);switch(_e.type){case"NumericValue":return _e.value-dA.value;case"StringValue":return _e.value.localeCompare(dA.value);default:throw new Error(`Cannot compare type: ${_e.type}`)}}));case"join":return new cA(fe.value.map(_e=>_e.value).join(""));default:throw new Error(`Unknown ArrayValue filter: ${Te.value}`)}else if(fe instanceof cA)switch(Te.value){case"length":return new sA(fe.value.length);case"upper":return new cA(fe.value.toUpperCase());case"lower":return new cA(fe.value.toLowerCase());case"title":return new cA(Pe(fe.value));case"capitalize":return new cA(fe.value.charAt(0).toUpperCase()+fe.value.slice(1));case"trim":return new cA(fe.value.trim());case"indent":return new cA(fe.value.split(`
`).map((_e,dA)=>dA===0||_e.length===0?_e:"    "+_e).join(`
`));case"join":case"string":return fe;default:throw new Error(`Unknown StringValue filter: ${Te.value}`)}else{if(fe instanceof sA){if(Te.value==="abs")return new sA(Math.abs(fe.value));throw new Error(`Unknown NumericValue filter: ${Te.value}`)}if(fe instanceof gA)switch(Te.value){case"items":return new Je(Array.from(fe.value.entries()).map(([_e,dA])=>new Je([new cA(_e),dA])));case"length":return new sA(fe.value.size);default:throw new Error(`Unknown ObjectValue filter: ${Te.value}`)}}throw new Error(`Cannot apply filter "${Te.value}" to type: ${fe.type}`)}if(ge.filter.type==="CallExpression"){const Te=ge.filter;if(Te.callee.type!=="Identifier")throw new Error(`Unknown filter: ${Te.callee.type}`);const _e=Te.callee.value;if(_e==="tojson"){const[,dA]=this.evaluateArguments(Te.args,J),bA=dA.get("indent")??new Qe;if(!(bA instanceof sA||bA instanceof Qe))throw new Error("If set, indent must be a number");return new cA(q(fe,bA.value))}if(_e==="join"){let dA;if(fe instanceof cA)dA=Array.from(fe.value);else{if(!(fe instanceof Je))throw new Error(`Cannot apply filter "${_e}" to type: ${fe.type}`);dA=fe.value.map(TA=>TA.value)}const[bA,NA]=this.evaluateArguments(Te.args,J),XA=bA.at(0)??NA.get("separator")??new cA("");if(!(XA instanceof cA))throw new Error("separator must be a string");return new cA(dA.join(XA.value))}if(fe instanceof Je){switch(_e){case"selectattr":case"rejectattr":{const dA=_e==="selectattr";if(fe.value.some(tt=>!(tt instanceof gA)))throw new Error(`\`${_e}\` can only be applied to array of objects`);if(Te.args.some(tt=>tt.type!=="StringLiteral"))throw new Error(`arguments of \`${_e}\` must be strings`);const[bA,NA,XA]=Te.args.map(tt=>this.evaluate(tt,J));let TA;if(NA){const tt=J.tests.get(NA.value);if(!tt)throw new Error(`Unknown test: ${NA.value}`);TA=tt}else TA=(...tt)=>tt[0].__bool__().value;const st=fe.value.filter(tt=>{const nt=tt.value.get(bA.value),It=!!nt&&TA(nt,XA);return dA?It:!It});return new Je(st)}case"map":{const[,dA]=this.evaluateArguments(Te.args,J);if(dA.has("attribute")){const bA=dA.get("attribute");if(!(bA instanceof cA))throw new Error("attribute must be a string");const NA=dA.get("default"),XA=fe.value.map(TA=>{if(!(TA instanceof gA))throw new Error("items in map must be an object");return TA.value.get(bA.value)??NA??new mA});return new Je(XA)}throw new Error("`map` expressions without `attribute` set are not currently supported.")}}throw new Error(`Unknown ArrayValue filter: ${_e}`)}if(fe instanceof cA){if(_e==="indent"){const[dA,bA]=this.evaluateArguments(Te.args,J),NA=dA.at(0)??bA.get("width")??new sA(4);if(!(NA instanceof sA))throw new Error("width must be a number");const XA=dA.at(1)??bA.get("first")??new yA(!1),TA=dA.at(2)??bA.get("blank")??new yA(!1),st=fe.value.split(`
`),tt=" ".repeat(NA.value),nt=st.map((It,Ar)=>!XA.value&&Ar===0||!TA.value&&It.length===0?It:tt+It);return new cA(nt.join(`
`))}throw new Error(`Unknown StringValue filter: ${_e}`)}throw new Error(`Cannot apply filter "${_e}" to type: ${fe.type}`)}throw new Error(`Unknown filter: ${ge.filter.type}`)}evaluateTestExpression(ge,J){const fe=this.evaluate(ge.operand,J),Te=J.tests.get(ge.test.value);if(!Te)throw new Error(`Unknown test: ${ge.test.value}`);const _e=Te(fe);return new yA(ge.negate?!_e:_e)}evaluateUnaryExpression(ge,J){const fe=this.evaluate(ge.argument,J);if(ge.operator.value==="not")return new yA(!fe.value);throw new SyntaxError(`Unknown operator: ${ge.operator.value}`)}evalProgram(ge,J){return this.evaluateBlock(ge.body,J)}evaluateBlock(ge,J){let fe="";for(const Te of ge){const _e=this.evaluate(Te,J);_e.type!=="NullValue"&&_e.type!=="UndefinedValue"&&(fe+=_e.value)}return new cA(fe)}evaluateIdentifier(ge,J){return J.lookupVariable(ge.value)}evaluateCallExpression(ge,J){const[fe,Te]=this.evaluateArguments(ge.args,J);Te.size>0&&fe.push(new He(Te));const _e=this.evaluate(ge.callee,J);if(_e.type!=="FunctionValue")throw new Error(`Cannot call something that is not a function: got ${_e.type}`);return _e.value(fe,J)}evaluateSliceExpression(ge,J,fe){if(!(ge instanceof Je||ge instanceof cA))throw new Error("Slice object must be an array or string");const Te=this.evaluate(J.start,fe),_e=this.evaluate(J.stop,fe),dA=this.evaluate(J.step,fe);if(!(Te instanceof sA||Te instanceof mA))throw new Error("Slice start must be numeric or undefined");if(!(_e instanceof sA||_e instanceof mA))throw new Error("Slice stop must be numeric or undefined");if(!(dA instanceof sA||dA instanceof mA))throw new Error("Slice step must be numeric or undefined");return ge instanceof Je?new Je(Ke(ge.value,Te.value,_e.value,dA.value)):new cA(Ke(Array.from(ge.value),Te.value,_e.value,dA.value).join(""))}evaluateMemberExpression(ge,J){const fe=this.evaluate(ge.object,J);let Te,_e;if(ge.computed){if(ge.property.type==="SliceExpression")return this.evaluateSliceExpression(fe,ge.property,J);Te=this.evaluate(ge.property,J)}else Te=new cA(ge.property.value);if(fe instanceof gA){if(!(Te instanceof cA))throw new Error(`Cannot access property with non-string: got ${Te.type}`);_e=fe.value.get(Te.value)??fe.builtins.get(Te.value)}else if(fe instanceof Je||fe instanceof cA)if(Te instanceof sA)_e=fe.value.at(Te.value),fe instanceof cA&&(_e=new cA(fe.value.at(Te.value)));else{if(!(Te instanceof cA))throw new Error(`Cannot access property with non-string/non-number: got ${Te.type}`);_e=fe.builtins.get(Te.value)}else{if(!(Te instanceof cA))throw new Error(`Cannot access property with non-string: got ${Te.type}`);_e=fe.builtins.get(Te.value)}return _e instanceof xA?_e:new mA}evaluateSet(ge,J){const fe=this.evaluate(ge.value,J);if(ge.assignee.type==="Identifier"){const Te=ge.assignee.value;J.setVariable(Te,fe)}else{if(ge.assignee.type!=="MemberExpression")throw new Error(`Invalid LHS inside assignment expression: ${JSON.stringify(ge.assignee)}`);{const Te=ge.assignee,_e=this.evaluate(Te.object,J);if(!(_e instanceof gA))throw new Error("Cannot assign to member of non-object");if(Te.property.type!=="Identifier")throw new Error("Cannot assign to member with non-identifier property");_e.value.set(Te.property.value,fe)}}return new Qe}evaluateIf(ge,J){const fe=this.evaluate(ge.test,J);return this.evaluateBlock(fe.__bool__().value?ge.body:ge.alternate,J)}evaluateFor(ge,J){const fe=new MA(J);let Te,_e;if(ge.iterable.type==="SelectExpression"){const TA=ge.iterable;_e=this.evaluate(TA.iterable,fe),Te=TA.test}else _e=this.evaluate(ge.iterable,fe);if(!(_e instanceof Je))throw new Error(`Expected iterable type in for loop: got ${_e.type}`);const dA=[],bA=[];for(let TA=0;TA<_e.value.length;++TA){const st=new MA(fe),tt=_e.value[TA];let nt;if(ge.loopvar.type==="Identifier")nt=It=>It.setVariable(ge.loopvar.value,tt);else{if(ge.loopvar.type!=="TupleLiteral")throw new Error(`Invalid loop variable(s): ${ge.loopvar.type}`);{const It=ge.loopvar;if(tt.type!=="ArrayValue")throw new Error(`Cannot unpack non-iterable type: ${tt.type}`);const Ar=tt;if(It.value.length!==Ar.value.length)throw new Error(`Too ${It.value.length>Ar.value.length?"few":"many"} items to unpack`);nt=Vr=>{for(let $t=0;$t<It.value.length;++$t){if(It.value[$t].type!=="Identifier")throw new Error(`Cannot unpack non-identifier type: ${It.value[$t].type}`);Vr.setVariable(It.value[$t].value,Ar.value[$t])}}}}Te&&(nt(st),!this.evaluate(Te,st).__bool__().value)||(dA.push(tt),bA.push(nt))}let NA="",XA=!0;for(let TA=0;TA<dA.length;++TA){const st=new Map([["index",new sA(TA+1)],["index0",new sA(TA)],["revindex",new sA(dA.length-TA)],["revindex0",new sA(dA.length-TA-1)],["first",new yA(TA===0)],["last",new yA(TA===dA.length-1)],["length",new sA(dA.length)],["previtem",TA>0?dA[TA-1]:new mA],["nextitem",TA<dA.length-1?dA[TA+1]:new mA]]);fe.setVariable("loop",new gA(st)),bA[TA](fe),NA+=this.evaluateBlock(ge.body,fe).value,XA=!1}return XA&&(NA+=this.evaluateBlock(ge.defaultBlock,fe).value),new cA(NA)}evaluateMacro(ge,J){return J.setVariable(ge.name.value,new IA((fe,Te)=>{var bA;const _e=new MA(Te);let dA;fe=fe.slice(),((bA=fe.at(-1))==null?void 0:bA.type)==="KeywordArgumentsValue"&&(dA=fe.pop());for(let NA=0;NA<ge.args.length;++NA){const XA=ge.args[NA],TA=fe[NA];if(XA.type==="Identifier"){const st=XA;if(!TA)throw new Error(`Missing positional argument: ${st.value}`);_e.setVariable(st.value,TA)}else{if(XA.type!=="KeywordArgumentExpression")throw new Error(`Unknown argument type: ${XA.type}`);{const st=XA,tt=TA??(dA==null?void 0:dA.value.get(st.key.value))??this.evaluate(st.value,_e);_e.setVariable(st.key.value,tt)}}}return this.evaluateBlock(ge.body,_e)})),new Qe}evaluate(ge,J){if(ge===void 0)return new mA;switch(ge.type){case"Program":return this.evalProgram(ge,J);case"Set":return this.evaluateSet(ge,J);case"If":return this.evaluateIf(ge,J);case"For":return this.evaluateFor(ge,J);case"Macro":return this.evaluateMacro(ge,J);case"NumericLiteral":return new sA(Number(ge.value));case"StringLiteral":return new cA(ge.value);case"BooleanLiteral":return new yA(ge.value);case"NullLiteral":return new Qe(ge.value);case"ArrayLiteral":return new Je(ge.value.map(fe=>this.evaluate(fe,J)));case"TupleLiteral":return new hA(ge.value.map(fe=>this.evaluate(fe,J)));case"ObjectLiteral":{const fe=new Map;for(const[Te,_e]of ge.value){const dA=this.evaluate(Te,J);if(!(dA instanceof cA))throw new Error(`Object keys must be strings: got ${dA.type}`);fe.set(dA.value,this.evaluate(_e,J))}return new gA(fe)}case"Identifier":return this.evaluateIdentifier(ge,J);case"CallExpression":return this.evaluateCallExpression(ge,J);case"MemberExpression":return this.evaluateMemberExpression(ge,J);case"UnaryExpression":return this.evaluateUnaryExpression(ge,J);case"BinaryExpression":return this.evaluateBinaryExpression(ge,J);case"FilterExpression":return this.evaluateFilterExpression(ge,J);case"TestExpression":return this.evaluateTestExpression(ge,J);default:throw new SyntaxError(`Unknown node type: ${ge.type}`)}}};function OA(ge){switch(typeof ge){case"number":return new sA(ge);case"string":return new cA(ge);case"boolean":return new yA(ge);case"undefined":return new mA;case"object":return ge===null?new Qe:Array.isArray(ge)?new Je(ge.map(OA)):new gA(new Map(Object.entries(ge).map(([J,fe])=>[J,OA(fe)])));case"function":return new IA((J,fe)=>{const Te=ge(...J.map(_e=>_e.value))??null;return OA(Te)});default:throw new Error(`Cannot convert to runtime value: ${ge}`)}}function q(ge,J,fe){const Te=fe??0;switch(ge.type){case"NullValue":case"UndefinedValue":return"null";case"NumericValue":case"StringValue":case"BooleanValue":return JSON.stringify(ge.value);case"ArrayValue":case"ObjectValue":{const _e=J?" ".repeat(J):"",dA=`
`+_e.repeat(Te),bA=dA+_e;if(ge.type==="ArrayValue"){const NA=ge.value.map(XA=>q(XA,J,Te+1));return J?`[${bA}${NA.join(`,${bA}`)}${dA}]`:`[${NA.join(", ")}]`}{const NA=Array.from(ge.value.entries()).map(([XA,TA])=>{const st=`"${XA}": ${q(TA,J,Te+1)}`;return J?`${bA}${st}`:st});return J?`{${NA.join(",")}${dA}}`:`{${NA.join(", ")}}`}}default:throw new Error(`Cannot convert to JSON: ${ge.type}`)}}var HA=class{constructor(ge){Ve(this,"parsed");const J=N(ge,{lstrip_blocks:!0,trim_blocks:!0});this.parsed=ke(J)}render(ge){const J=new MA;if(J.set("false",!1),J.set("true",!0),J.set("raise_exception",fe=>{throw new Error(fe)}),J.set("range",ze),ge)for(const[fe,Te]of Object.entries(ge))J.set(fe,Te);return new LA(J).run(this.parsed).value}}},"./node_modules/onnxruntime-common/dist/esm/backend-impl.js":(x,C,d)=>{d.r(C),d.d(C,{registerBackend:()=>H,resolveBackendAndExecutionProviders:()=>W});const k=new Map,Q=[],H=(Z,R,N)=>{if(!R||typeof R.init!="function"||typeof R.createInferenceSessionHandler!="function")throw new TypeError("not a valid backend");{const K=k.get(Z);if(K===void 0)k.set(Z,{backend:R,priority:N});else{if(K.priority>N)return;if(K.priority===N&&K.backend!==R)throw new Error(`cannot register backend "${Z}" using priority ${N}`)}if(N>=0){const V=Q.indexOf(Z);V!==-1&&Q.splice(V,1);for(let Ae=0;Ae<Q.length;Ae++)if(k.get(Q[Ae]).priority<=N)return void Q.splice(Ae,0,Z);Q.push(Z)}}},S=async Z=>{const R=k.get(Z);if(!R)return"backend not found.";if(R.initialized)return R.backend;if(R.aborted)return R.error;{const N=!!R.initPromise;try{return N||(R.initPromise=R.backend.init(Z)),await R.initPromise,R.initialized=!0,R.backend}catch(K){return N||(R.error=`${K}`,R.aborted=!0),R.error}finally{delete R.initPromise}}},W=async Z=>{const R=Z.executionProviders||[],N=R.map(Ee=>typeof Ee=="string"?Ee:Ee.name),K=N.length===0?Q:N;let V;const Ae=[],me=new Set;for(const Ee of K){const se=await S(Ee);typeof se=="string"?Ae.push({name:Ee,err:se}):(V||(V=se),V===se&&me.add(Ee))}if(!V)throw new Error(`no available backend found. ERR: ${Ae.map(Ee=>`[${Ee.name}] ${Ee.err}`).join(", ")}`);for(const{name:Ee,err:se}of Ae)N.includes(Ee)&&console.warn(`removing requested execution provider "${Ee}" from session options because it is not available: ${se}`);const Be=R.filter(Ee=>me.has(typeof Ee=="string"?Ee:Ee.name));return[V,new Proxy(Z,{get:(Ee,se)=>se==="executionProviders"?Be:Reflect.get(Ee,se)})]}},"./node_modules/onnxruntime-common/dist/esm/backend.js":(x,C,d)=>{d.r(C),d.d(C,{registerBackend:()=>k.registerBackend});var k=d("./node_modules/onnxruntime-common/dist/esm/backend-impl.js")},"./node_modules/onnxruntime-common/dist/esm/env-impl.js":(x,C,d)=>{d.r(C),d.d(C,{env:()=>H});var k=d("./node_modules/onnxruntime-common/dist/esm/version.js");let Q="warning";const H={wasm:{},webgl:{},webgpu:{},versions:{common:k.version},set logLevel(S){if(S!==void 0){if(typeof S!="string"||["verbose","info","warning","error","fatal"].indexOf(S)===-1)throw new Error(`Unsupported logging level: ${S}`);Q=S}},get logLevel(){return Q}};Object.defineProperty(H,"logLevel",{enumerable:!0})},"./node_modules/onnxruntime-common/dist/esm/env.js":(x,C,d)=>{d.r(C),d.d(C,{env:()=>k});const k=d("./node_modules/onnxruntime-common/dist/esm/env-impl.js").env},"./node_modules/onnxruntime-common/dist/esm/index.js":(x,C,d)=>{d.r(C),d.d(C,{InferenceSession:()=>H.InferenceSession,TRACE:()=>W.TRACE,TRACE_FUNC_BEGIN:()=>W.TRACE_FUNC_BEGIN,TRACE_FUNC_END:()=>W.TRACE_FUNC_END,Tensor:()=>S.Tensor,TrainingSession:()=>Z.TrainingSession,env:()=>Q.env,registerBackend:()=>k.registerBackend});var k=d("./node_modules/onnxruntime-common/dist/esm/backend.js"),Q=d("./node_modules/onnxruntime-common/dist/esm/env.js"),H=d("./node_modules/onnxruntime-common/dist/esm/inference-session.js"),S=d("./node_modules/onnxruntime-common/dist/esm/tensor.js");d("./node_modules/onnxruntime-common/dist/esm/tensor-conversion.js"),d("./node_modules/onnxruntime-common/dist/esm/tensor-factory.js");var W=d("./node_modules/onnxruntime-common/dist/esm/trace.js");d("./node_modules/onnxruntime-common/dist/esm/onnx-model.js"),d("./node_modules/onnxruntime-common/dist/esm/onnx-value.js");var Z=d("./node_modules/onnxruntime-common/dist/esm/training-session.js")},"./node_modules/onnxruntime-common/dist/esm/inference-session-impl.js":(x,C,d)=>{d.r(C),d.d(C,{InferenceSession:()=>S});var k=d("./node_modules/onnxruntime-common/dist/esm/backend-impl.js"),Q=d("./node_modules/onnxruntime-common/dist/esm/tensor.js"),H=d("./node_modules/onnxruntime-common/dist/esm/trace.js");class S{constructor(Z){this.handler=Z}async run(Z,R,N){(0,H.TRACE_FUNC_BEGIN)();const K={};let V={};if(typeof Z!="object"||Z===null||Z instanceof Q.Tensor||Array.isArray(Z))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let Ae=!0;if(typeof R=="object"){if(R===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(R instanceof Q.Tensor)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(R)){if(R.length===0)throw new TypeError("'fetches' cannot be an empty array.");Ae=!1;for(const Ee of R){if(typeof Ee!="string")throw new TypeError("'fetches' must be a string array or an object.");if(this.outputNames.indexOf(Ee)===-1)throw new RangeError(`'fetches' contains invalid output name: ${Ee}.`);K[Ee]=null}if(typeof N=="object"&&N!==null)V=N;else if(N!==void 0)throw new TypeError("'options' must be an object.")}else{let Ee=!1;const se=Object.getOwnPropertyNames(R);for(const ie of this.outputNames)if(se.indexOf(ie)!==-1){const ve=R[ie];(ve===null||ve instanceof Q.Tensor)&&(Ee=!0,Ae=!1,K[ie]=ve)}if(Ee){if(typeof N=="object"&&N!==null)V=N;else if(N!==void 0)throw new TypeError("'options' must be an object.")}else V=R}}else if(R!==void 0)throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(const Ee of this.inputNames)if(Z[Ee]===void 0)throw new Error(`input '${Ee}' is missing in 'feeds'.`);if(Ae)for(const Ee of this.outputNames)K[Ee]=null;const me=await this.handler.run(Z,K,V),Be={};for(const Ee in me)if(Object.hasOwnProperty.call(me,Ee)){const se=me[Ee];se instanceof Q.Tensor?Be[Ee]=se:Be[Ee]=new Q.Tensor(se.type,se.data,se.dims)}return(0,H.TRACE_FUNC_END)(),Be}async release(){return this.handler.dispose()}static async create(Z,R,N,K){let V;(0,H.TRACE_FUNC_BEGIN)();let Ae={};if(typeof Z=="string"){if(V=Z,typeof R=="object"&&R!==null)Ae=R;else if(R!==void 0)throw new TypeError("'options' must be an object.")}else if(Z instanceof Uint8Array){if(V=Z,typeof R=="object"&&R!==null)Ae=R;else if(R!==void 0)throw new TypeError("'options' must be an object.")}else{if(!(Z instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&Z instanceof SharedArrayBuffer))throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");{const se=Z;let ie=0,ve=Z.byteLength;if(typeof R=="object"&&R!==null)Ae=R;else if(typeof R=="number"){if(ie=R,!Number.isSafeInteger(ie))throw new RangeError("'byteOffset' must be an integer.");if(ie<0||ie>=se.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${se.byteLength}).`);if(ve=Z.byteLength-ie,typeof N=="number"){if(ve=N,!Number.isSafeInteger(ve))throw new RangeError("'byteLength' must be an integer.");if(ve<=0||ie+ve>se.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${se.byteLength-ie}].`);if(typeof K=="object"&&K!==null)Ae=K;else if(K!==void 0)throw new TypeError("'options' must be an object.")}else if(N!==void 0)throw new TypeError("'byteLength' must be a number.")}else if(R!==void 0)throw new TypeError("'options' must be an object.");V=new Uint8Array(se,ie,ve)}}const[me,Be]=await(0,k.resolveBackendAndExecutionProviders)(Ae),Ee=await me.createInferenceSessionHandler(V,Be);return(0,H.TRACE_FUNC_END)(),new S(Ee)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}}},"./node_modules/onnxruntime-common/dist/esm/inference-session.js":(x,C,d)=>{d.r(C),d.d(C,{InferenceSession:()=>k});const k=d("./node_modules/onnxruntime-common/dist/esm/inference-session-impl.js").InferenceSession},"./node_modules/onnxruntime-common/dist/esm/onnx-model.js":(x,C,d)=>{d.r(C)},"./node_modules/onnxruntime-common/dist/esm/onnx-value.js":(x,C,d)=>{d.r(C)},"./node_modules/onnxruntime-common/dist/esm/tensor-conversion-impl.js":(x,C,d)=>{d.r(C),d.d(C,{tensorToDataURL:()=>k,tensorToImageData:()=>Q});const k=(H,S)=>{const W=typeof document<"u"?document.createElement("canvas"):new OffscreenCanvas(1,1);W.width=H.dims[3],W.height=H.dims[2];const Z=W.getContext("2d");if(Z!=null){let R,N;(S==null?void 0:S.tensorLayout)!==void 0&&S.tensorLayout==="NHWC"?(R=H.dims[2],N=H.dims[3]):(R=H.dims[3],N=H.dims[2]);const K=(S==null?void 0:S.format)!==void 0?S.format:"RGB",V=S==null?void 0:S.norm;let Ae,me;V===void 0||V.mean===void 0?Ae=[255,255,255,255]:typeof V.mean=="number"?Ae=[V.mean,V.mean,V.mean,V.mean]:(Ae=[V.mean[0],V.mean[1],V.mean[2],0],V.mean[3]!==void 0&&(Ae[3]=V.mean[3])),V===void 0||V.bias===void 0?me=[0,0,0,0]:typeof V.bias=="number"?me=[V.bias,V.bias,V.bias,V.bias]:(me=[V.bias[0],V.bias[1],V.bias[2],0],V.bias[3]!==void 0&&(me[3]=V.bias[3]));const Be=N*R;let Ee=0,se=Be,ie=2*Be,ve=-1;K==="RGBA"?(Ee=0,se=Be,ie=2*Be,ve=3*Be):K==="RGB"?(Ee=0,se=Be,ie=2*Be):K==="RBG"&&(Ee=0,ie=Be,se=2*Be);for(let g=0;g<N;g++)for(let b=0;b<R;b++){const e=(H.data[Ee++]-me[0])*Ae[0],l=(H.data[se++]-me[1])*Ae[1],M=(H.data[ie++]-me[2])*Ae[2],ue=ve===-1?255:(H.data[ve++]-me[3])*Ae[3];Z.fillStyle="rgba("+e+","+l+","+M+","+ue+")",Z.fillRect(b,g,1,1)}if("toDataURL"in W)return W.toDataURL();throw new Error("toDataURL is not supported")}throw new Error("Can not access image data")},Q=(H,S)=>{const W=typeof document<"u"?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d");let Z;if(W==null)throw new Error("Can not access image data");{let R,N,K;(S==null?void 0:S.tensorLayout)!==void 0&&S.tensorLayout==="NHWC"?(R=H.dims[2],N=H.dims[1],K=H.dims[3]):(R=H.dims[3],N=H.dims[2],K=H.dims[1]);const V=S!==void 0&&S.format!==void 0?S.format:"RGB",Ae=S==null?void 0:S.norm;let me,Be;Ae===void 0||Ae.mean===void 0?me=[255,255,255,255]:typeof Ae.mean=="number"?me=[Ae.mean,Ae.mean,Ae.mean,Ae.mean]:(me=[Ae.mean[0],Ae.mean[1],Ae.mean[2],255],Ae.mean[3]!==void 0&&(me[3]=Ae.mean[3])),Ae===void 0||Ae.bias===void 0?Be=[0,0,0,0]:typeof Ae.bias=="number"?Be=[Ae.bias,Ae.bias,Ae.bias,Ae.bias]:(Be=[Ae.bias[0],Ae.bias[1],Ae.bias[2],0],Ae.bias[3]!==void 0&&(Be[3]=Ae.bias[3]));const Ee=N*R;if(S!==void 0&&(S.format!==void 0&&K===4&&S.format!=="RGBA"||K===3&&S.format!=="RGB"&&S.format!=="BGR"))throw new Error("Tensor format doesn't match input tensor dims");const se=4;let ie=0,ve=1,g=2,b=3,e=0,l=Ee,M=2*Ee,ue=-1;V==="RGBA"?(e=0,l=Ee,M=2*Ee,ue=3*Ee):V==="RGB"?(e=0,l=Ee,M=2*Ee):V==="RBG"&&(e=0,M=Ee,l=2*Ee),Z=W.createImageData(R,N);for(let D=0;D<N*R;ie+=se,ve+=se,g+=se,b+=se,D++)Z.data[ie]=(H.data[e++]-Be[0])*me[0],Z.data[ve]=(H.data[l++]-Be[1])*me[1],Z.data[g]=(H.data[M++]-Be[2])*me[2],Z.data[b]=ue===-1?255:(H.data[ue++]-Be[3])*me[3]}return Z}},"./node_modules/onnxruntime-common/dist/esm/tensor-conversion.js":(x,C,d)=>{d.r(C)},"./node_modules/onnxruntime-common/dist/esm/tensor-factory-impl.js":(x,C,d)=>{d.r(C),d.d(C,{bufferToTensor:()=>Q,tensorFromGpuBuffer:()=>W,tensorFromImage:()=>H,tensorFromMLTensor:()=>Z,tensorFromPinnedBuffer:()=>R,tensorFromTexture:()=>S});var k=d("./node_modules/onnxruntime-common/dist/esm/tensor-impl.js");const Q=(N,K)=>{if(N===void 0)throw new Error("Image buffer must be defined");if(K.height===void 0||K.width===void 0)throw new Error("Image height and width must be defined");if(K.tensorLayout==="NHWC")throw new Error("NHWC Tensor layout is not supported yet");const{height:V,width:Ae}=K,me=K.norm??{mean:255,bias:0};let Be,Ee;Be=typeof me.mean=="number"?[me.mean,me.mean,me.mean,me.mean]:[me.mean[0],me.mean[1],me.mean[2],me.mean[3]??255],Ee=typeof me.bias=="number"?[me.bias,me.bias,me.bias,me.bias]:[me.bias[0],me.bias[1],me.bias[2],me.bias[3]??0];const se=K.format!==void 0?K.format:"RGBA",ie=K.tensorFormat!==void 0&&K.tensorFormat!==void 0?K.tensorFormat:"RGB",ve=V*Ae,g=ie==="RGBA"?new Float32Array(4*ve):new Float32Array(3*ve);let b=4,e=0,l=1,M=2,ue=3,D=0,F=ve,Ye=2*ve,Ne=-1;se==="RGB"&&(b=3,e=0,l=1,M=2,ue=-1),ie==="RGBA"?Ne=3*ve:ie==="RBG"?(D=0,Ye=ve,F=2*ve):ie==="BGR"&&(Ye=0,F=ve,D=2*ve);for(let Oe=0;Oe<ve;Oe++,e+=b,M+=b,l+=b,ue+=b)g[D++]=(N[e]+Ee[0])/Be[0],g[F++]=(N[l]+Ee[1])/Be[1],g[Ye++]=(N[M]+Ee[2])/Be[2],Ne!==-1&&ue!==-1&&(g[Ne++]=(N[ue]+Ee[3])/Be[3]);return ie==="RGBA"?new k.Tensor("float32",g,[1,4,V,Ae]):new k.Tensor("float32",g,[1,3,V,Ae])},H=async(N,K)=>{const V=typeof HTMLImageElement<"u"&&N instanceof HTMLImageElement,Ae=typeof ImageData<"u"&&N instanceof ImageData,me=typeof ImageBitmap<"u"&&N instanceof ImageBitmap,Be=typeof N=="string";let Ee,se=K??{};const ie=()=>{if(typeof document<"u")return document.createElement("canvas");if(typeof OffscreenCanvas<"u")return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},ve=g=>typeof HTMLCanvasElement<"u"&&g instanceof HTMLCanvasElement||g instanceof OffscreenCanvas?g.getContext("2d"):null;if(V){const g=ie();g.width=N.width,g.height=N.height;const b=ve(g);if(b==null)throw new Error("Can not access image data");{let e=N.height,l=N.width;if(K!==void 0&&K.resizedHeight!==void 0&&K.resizedWidth!==void 0&&(e=K.resizedHeight,l=K.resizedWidth),K!==void 0){if(se=K,K.tensorFormat!==void 0)throw new Error("Image input config format must be RGBA for HTMLImageElement");se.tensorFormat="RGBA",se.height=e,se.width=l}else se.tensorFormat="RGBA",se.height=e,se.width=l;b.drawImage(N,0,0),Ee=b.getImageData(0,0,l,e).data}}else{if(!Ae){if(me){if(K===void 0)throw new Error("Please provide image config with format for Imagebitmap");const g=ie();g.width=N.width,g.height=N.height;const b=ve(g);if(b!=null){const e=N.height,l=N.width;return b.drawImage(N,0,0,l,e),Ee=b.getImageData(0,0,l,e).data,se.height=e,se.width=l,Q(Ee,se)}throw new Error("Can not access image data")}if(Be)return new Promise((g,b)=>{const e=ie(),l=ve(e);if(!N||!l)return b();const M=new Image;M.crossOrigin="Anonymous",M.src=N,M.onload=()=>{e.width=M.width,e.height=M.height,l.drawImage(M,0,0,e.width,e.height);const ue=l.getImageData(0,0,e.width,e.height);se.height=e.height,se.width=e.width,g(Q(ue.data,se))}});throw new Error("Input data provided is not supported - aborted tensor creation")}{let g,b;if(K!==void 0&&K.resizedWidth!==void 0&&K.resizedHeight!==void 0?(g=K.resizedHeight,b=K.resizedWidth):(g=N.height,b=N.width),K!==void 0&&(se=K),se.format="RGBA",se.height=g,se.width=b,K!==void 0){const e=ie();e.width=b,e.height=g;const l=ve(e);if(l==null)throw new Error("Can not access image data");l.putImageData(N,0,0),Ee=l.getImageData(0,0,b,g).data}else Ee=N.data}}if(Ee!==void 0)return Q(Ee,se);throw new Error("Input data provided is not supported - aborted tensor creation")},S=(N,K)=>{const{width:V,height:Ae,download:me,dispose:Be}=K,Ee=[1,Ae,V,4];return new k.Tensor({location:"texture",type:"float32",texture:N,dims:Ee,download:me,dispose:Be})},W=(N,K)=>{const{dataType:V,dims:Ae,download:me,dispose:Be}=K;return new k.Tensor({location:"gpu-buffer",type:V??"float32",gpuBuffer:N,dims:Ae,download:me,dispose:Be})},Z=(N,K)=>{const{dataType:V,dims:Ae,download:me,dispose:Be}=K;return new k.Tensor({location:"ml-tensor",type:V??"float32",mlTensor:N,dims:Ae,download:me,dispose:Be})},R=(N,K,V)=>new k.Tensor({location:"cpu-pinned",type:N,data:K,dims:V??[K.length]})},"./node_modules/onnxruntime-common/dist/esm/tensor-factory.js":(x,C,d)=>{d.r(C)},"./node_modules/onnxruntime-common/dist/esm/tensor-impl-type-mapping.js":(x,C,d)=>{d.r(C),d.d(C,{NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP:()=>Q,NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP:()=>k,checkTypedArray:()=>S});const k=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array],["int4",Uint8Array],["uint4",Uint8Array]]),Q=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]);let H=!1;const S=()=>{if(!H){H=!0;const W=typeof BigInt64Array<"u"&&BigInt64Array.from,Z=typeof BigUint64Array<"u"&&BigUint64Array.from,R=typeof Float16Array<"u"&&Float16Array.from;W&&(k.set("int64",BigInt64Array),Q.set(BigInt64Array,"int64")),Z&&(k.set("uint64",BigUint64Array),Q.set(BigUint64Array,"uint64")),R?(k.set("float16",Float16Array),Q.set(Float16Array,"float16")):k.set("float16",Uint16Array)}}},"./node_modules/onnxruntime-common/dist/esm/tensor-impl.js":(x,C,d)=>{d.r(C),d.d(C,{Tensor:()=>W});var k=d("./node_modules/onnxruntime-common/dist/esm/tensor-conversion-impl.js"),Q=d("./node_modules/onnxruntime-common/dist/esm/tensor-factory-impl.js"),H=d("./node_modules/onnxruntime-common/dist/esm/tensor-impl-type-mapping.js"),S=d("./node_modules/onnxruntime-common/dist/esm/tensor-utils-impl.js");class W{constructor(R,N,K){let V,Ae;if((0,H.checkTypedArray)(),typeof R=="object"&&"location"in R)switch(this.dataLocation=R.location,V=R.type,Ae=R.dims,R.location){case"cpu-pinned":{const Be=H.NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.get(V);if(!Be)throw new TypeError(`unsupported type "${V}" to create tensor from pinned buffer`);if(!(R.data instanceof Be))throw new TypeError(`buffer should be of type ${Be.name}`);this.cpuData=R.data;break}case"texture":if(V!=="float32")throw new TypeError(`unsupported type "${V}" to create tensor from texture`);this.gpuTextureData=R.texture,this.downloader=R.download,this.disposer=R.dispose;break;case"gpu-buffer":if(V!=="float32"&&V!=="float16"&&V!=="int32"&&V!=="int64"&&V!=="uint32"&&V!=="uint8"&&V!=="bool"&&V!=="uint4"&&V!=="int4")throw new TypeError(`unsupported type "${V}" to create tensor from gpu buffer`);this.gpuBufferData=R.gpuBuffer,this.downloader=R.download,this.disposer=R.dispose;break;case"ml-tensor":if(V!=="float32"&&V!=="float16"&&V!=="int32"&&V!=="int64"&&V!=="uint32"&&V!=="uint64"&&V!=="int8"&&V!=="uint8"&&V!=="bool")throw new TypeError(`unsupported type "${V}" to create tensor from MLTensor`);this.mlTensorData=R.mlTensor,this.downloader=R.download,this.disposer=R.dispose;break;default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let Be,Ee;if(typeof R=="string")if(V=R,Ee=K,R==="string"){if(!Array.isArray(N))throw new TypeError("A string tensor's data must be a string array.");Be=N}else{const se=H.NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.get(R);if(se===void 0)throw new TypeError(`Unsupported tensor type: ${R}.`);if(Array.isArray(N)){if(R==="float16"&&se===Uint16Array||R==="uint4"||R==="int4")throw new TypeError(`Creating a ${R} tensor from number array is not supported. Please use ${se.name} as data.`);Be=R==="uint64"||R==="int64"?se.from(N,BigInt):se.from(N)}else if(N instanceof se)Be=N;else{if(!(N instanceof Uint8ClampedArray))throw new TypeError(`A ${V} tensor's data must be type of ${se}`);if(R!=="uint8")throw new TypeError("A Uint8ClampedArray tensor's data must be type of uint8");Be=Uint8Array.from(N)}}else if(Ee=N,Array.isArray(R)){if(R.length===0)throw new TypeError("Tensor type cannot be inferred from an empty array.");const se=typeof R[0];if(se==="string")V="string",Be=R;else{if(se!=="boolean")throw new TypeError(`Invalid element type of data array: ${se}.`);V="bool",Be=Uint8Array.from(R)}}else if(R instanceof Uint8ClampedArray)V="uint8",Be=Uint8Array.from(R);else{const se=H.NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.get(R.constructor);if(se===void 0)throw new TypeError(`Unsupported type for tensor data: ${R.constructor}.`);V=se,Be=R}if(Ee===void 0)Ee=[Be.length];else if(!Array.isArray(Ee))throw new TypeError("A tensor's dims must be a number array");Ae=Ee,this.cpuData=Be,this.dataLocation="cpu"}const me=(0,S.calculateSize)(Ae);if(this.cpuData&&me!==this.cpuData.length&&(V!=="uint4"&&V!=="int4"||Math.ceil(me/2)!==this.cpuData.length))throw new Error(`Tensor's size(${me}) does not match data length(${this.cpuData.length}).`);this.type=V,this.dims=Ae,this.size=me}static async fromImage(R,N){return(0,Q.tensorFromImage)(R,N)}static fromTexture(R,N){return(0,Q.tensorFromTexture)(R,N)}static fromGpuBuffer(R,N){return(0,Q.tensorFromGpuBuffer)(R,N)}static fromMLTensor(R,N){return(0,Q.tensorFromMLTensor)(R,N)}static fromPinnedBuffer(R,N,K){return(0,Q.tensorFromPinnedBuffer)(R,N,K)}toDataURL(R){return(0,k.tensorToDataURL)(this,R)}toImageData(R){return(0,k.tensorToImageData)(this,R)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}get mlTensor(){if(this.ensureValid(),!this.mlTensorData)throw new Error("The data is not stored as a WebNN MLTensor.");return this.mlTensorData}async getData(R){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":case"ml-tensor":if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;const N=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=N,R&&this.disposer&&(this.disposer(),this.disposer=void 0),N}finally{this.isDownloading=!1}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.mlTensorData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if(this.dataLocation==="none")throw new Error("The tensor is disposed.")}reshape(R){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return(0,S.tensorReshape)(this,R)}}},"./node_modules/onnxruntime-common/dist/esm/tensor-utils-impl.js":(x,C,d)=>{d.r(C),d.d(C,{calculateSize:()=>Q,tensorReshape:()=>H});var k=d("./node_modules/onnxruntime-common/dist/esm/tensor-impl.js");const Q=S=>{let W=1;for(let Z=0;Z<S.length;Z++){const R=S[Z];if(typeof R!="number"||!Number.isSafeInteger(R))throw new TypeError(`dims[${Z}] must be an integer, got: ${R}`);if(R<0)throw new RangeError(`dims[${Z}] must be a non-negative integer, got: ${R}`);W*=R}return W},H=(S,W)=>{switch(S.location){case"cpu":return new k.Tensor(S.type,S.data,W);case"cpu-pinned":return new k.Tensor({location:"cpu-pinned",data:S.data,type:S.type,dims:W});case"texture":return new k.Tensor({location:"texture",texture:S.texture,type:S.type,dims:W});case"gpu-buffer":return new k.Tensor({location:"gpu-buffer",gpuBuffer:S.gpuBuffer,type:S.type,dims:W});case"ml-tensor":return new k.Tensor({location:"ml-tensor",mlTensor:S.mlTensor,type:S.type,dims:W});default:throw new Error(`tensorReshape: tensor location ${S.location} is not supported`)}}},"./node_modules/onnxruntime-common/dist/esm/tensor.js":(x,C,d)=>{d.r(C),d.d(C,{Tensor:()=>k});const k=d("./node_modules/onnxruntime-common/dist/esm/tensor-impl.js").Tensor},"./node_modules/onnxruntime-common/dist/esm/trace.js":(x,C,d)=>{d.r(C),d.d(C,{TRACE:()=>Q,TRACE_FUNC_BEGIN:()=>S,TRACE_FUNC_END:()=>W});var k=d("./node_modules/onnxruntime-common/dist/esm/env-impl.js");const Q=(Z,R)=>{(k.env.trace===void 0?k.env.wasm.trace:k.env.trace)&&console.timeStamp(`${Z}::ORT::${R}`)},H=(Z,R)=>{var V;const N=((V=new Error().stack)==null?void 0:V.split(/\r\n|\r|\n/g))||[];let K=!1;for(let Ae=0;Ae<N.length;Ae++){if(K&&!N[Ae].includes("TRACE_FUNC")){let me=`FUNC_${Z}::${N[Ae].trim().split(" ")[1]}`;return R&&(me+=`::${R}`),void Q("CPU",me)}N[Ae].includes("TRACE_FUNC")&&(K=!0)}},S=Z=>{(k.env.trace===void 0?k.env.wasm.trace:k.env.trace)&&H("BEGIN",Z)},W=Z=>{(k.env.trace===void 0?k.env.wasm.trace:k.env.trace)&&H("END",Z)}},"./node_modules/onnxruntime-common/dist/esm/training-session-impl.js":(x,C,d)=>{d.r(C),d.d(C,{TrainingSession:()=>H});var k=d("./node_modules/onnxruntime-common/dist/esm/backend-impl.js"),Q=d("./node_modules/onnxruntime-common/dist/esm/tensor.js");class H{constructor(W,Z,R){this.handler=W,this.hasOptimizerModel=Z,this.hasEvalModel=R}get trainingInputNames(){return this.handler.inputNames}get trainingOutputNames(){return this.handler.outputNames}get evalInputNames(){if(this.hasEvalModel)return this.handler.evalInputNames;throw new Error("This training session has no evalModel loaded.")}get evalOutputNames(){if(this.hasEvalModel)return this.handler.evalOutputNames;throw new Error("This training session has no evalModel loaded.")}static async create(W,Z){const R=W.evalModel||"",N=W.optimizerModel||"",K=Z||{},[V,Ae]=await(0,k.resolveBackendAndExecutionProviders)(K);if(V.createTrainingSessionHandler){const me=await V.createTrainingSessionHandler(W.checkpointState,W.trainModel,R,N,Ae);return new H(me,!!W.optimizerModel,!!W.evalModel)}throw new Error("Training backend could not be resolved. Make sure you're using the correct configuration & WebAssembly files.")}typeNarrowingForRunStep(W,Z,R,N,K){const V={};let Ae={};if(typeof R!="object"||R===null||R instanceof Q.Tensor||Array.isArray(R))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let me=!0;if(typeof N=="object"){if(N===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(N instanceof Q.Tensor)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(N)){if(N.length===0)throw new TypeError("'fetches' cannot be an empty array.");me=!1;for(const Be of N){if(typeof Be!="string")throw new TypeError("'fetches' must be a string array or an object.");if(Z.indexOf(Be)===-1)throw new RangeError(`'fetches' contains invalid output name: ${Be}.`);V[Be]=null}if(typeof K=="object"&&K!==null)Ae=K;else if(K!==void 0)throw new TypeError("'options' must be an object.")}else{let Be=!1;const Ee=Object.getOwnPropertyNames(N);for(const se of Z)if(Ee.indexOf(se)!==-1){const ie=N[se];(ie===null||ie instanceof Q.Tensor)&&(Be=!0,me=!1,V[se]=ie)}if(Be){if(typeof K=="object"&&K!==null)Ae=K;else if(K!==void 0)throw new TypeError("'options' must be an object.")}else Ae=N}}else if(N!==void 0)throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(const Be of W)if(R[Be]===void 0)throw new Error(`input '${Be}' is missing in 'feeds'.`);if(me)for(const Be of Z)V[Be]=null;return[V,Ae]}convertHandlerReturnTypeToMapOfTensors(W){const Z={};for(const R in W)if(Object.hasOwnProperty.call(W,R)){const N=W[R];N instanceof Q.Tensor?Z[R]=N:Z[R]=new Q.Tensor(N.type,N.data,N.dims)}return Z}async lazyResetGrad(){await this.handler.lazyResetGrad()}async runTrainStep(W,Z,R){const[N,K]=this.typeNarrowingForRunStep(this.trainingInputNames,this.trainingOutputNames,W,Z,R),V=await this.handler.runTrainStep(W,N,K);return this.convertHandlerReturnTypeToMapOfTensors(V)}async runOptimizerStep(W){if(!this.hasOptimizerModel)throw new Error("This TrainingSession has no OptimizerModel loaded.");await this.handler.runOptimizerStep(W||{})}async runEvalStep(W,Z,R){if(this.hasEvalModel){const[N,K]=this.typeNarrowingForRunStep(this.evalInputNames,this.evalOutputNames,W,Z,R),V=await this.handler.runEvalStep(W,N,K);return this.convertHandlerReturnTypeToMapOfTensors(V)}throw new Error("This TrainingSession has no EvalModel loaded.")}async getParametersSize(W=!0){return this.handler.getParametersSize(W)}async loadParametersBuffer(W,Z=!0){const R=await this.getParametersSize(Z);if(W.length!==4*R)throw new Error("Size of the buffer passed into loadParametersBuffer must match the number of parameters in the model. Please use getParametersSize method to check.");return this.handler.loadParametersBuffer(W,Z)}async getContiguousParameters(W=!0){return this.handler.getContiguousParameters(W)}async release(){return this.handler.dispose()}}},"./node_modules/onnxruntime-common/dist/esm/training-session.js":(x,C,d)=>{d.r(C),d.d(C,{TrainingSession:()=>k});const k=d("./node_modules/onnxruntime-common/dist/esm/training-session-impl.js").TrainingSession},"./node_modules/onnxruntime-common/dist/esm/version.js":(x,C,d)=>{d.r(C),d.d(C,{version:()=>k});const k="1.20.1"},"./node_modules/onnxruntime-web/dist/ort.bundle.min.mjs?3a96":(x,C,d)=>{d.r(C),d.d(C,{InferenceSession:()=>BA,TRACE:()=>Ye,TRACE_FUNC_BEGIN:()=>Oe,TRACE_FUNC_END:()=>AA,Tensor:()=>F,default:()=>Df,env:()=>K,registerBackend:()=>H});var k,Q,H,S,W,Z,R,N,K,V,Ae,me,Be,Ee,se,ie,ve,g,b,e,l,M,ue,D,F,Ye,Ne,Oe,AA,tA,BA,DA=Object.defineProperty,Ge=Object.getOwnPropertyDescriptor,ke=Object.getOwnPropertyNames,ze=Object.prototype.hasOwnProperty,Ke=(i=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(i,{get:(u,h)=>(typeof require<"u"?require:u)[h]}):i)(function(i){if(typeof require<"u")return require.apply(this,arguments);throw Error('Dynamic require of "'+i+'" is not supported')}),Pe=(i,u)=>()=>(i&&(u=i(i=0)),u),xA=(i,u)=>{for(var h in u)DA(i,h,{get:u[h],enumerable:!0})},sA=i=>((u,h,w,B)=>{if(h&&typeof h=="object"||typeof h=="function")for(let E of ke(h))!ze.call(u,E)&&E!==w&&DA(u,E,{get:()=>h[E],enumerable:!(B=Ge(h,E))||B.enumerable});return u})(DA({},"__esModule",{value:!0}),i),cA=Pe(()=>{k=new Map,Q=[],H=(i,u,h)=>{if(!u||typeof u.init!="function"||typeof u.createInferenceSessionHandler!="function")throw new TypeError("not a valid backend");{let w=k.get(i);if(w===void 0)k.set(i,{backend:u,priority:h});else{if(w.priority>h)return;if(w.priority===h&&w.backend!==u)throw new Error(`cannot register backend "${i}" using priority ${h}`)}if(h>=0){let B=Q.indexOf(i);B!==-1&&Q.splice(B,1);for(let E=0;E<Q.length;E++)if(k.get(Q[E]).priority<=h)return void Q.splice(E,0,i);Q.push(i)}}},S=async i=>{let u=k.get(i);if(!u)return"backend not found.";if(u.initialized)return u.backend;if(u.aborted)return u.error;{let h=!!u.initPromise;try{return h||(u.initPromise=u.backend.init(i)),await u.initPromise,u.initialized=!0,u.backend}catch(w){return h||(u.error=`${w}`,u.aborted=!0),u.error}finally{delete u.initPromise}}},W=async i=>{let u,h=i.executionProviders||[],w=h.map(O=>typeof O=="string"?O:O.name),B=w.length===0?Q:w,E=[],v=new Set;for(let O of B){let L=await S(O);typeof L=="string"?E.push({name:O,err:L}):(u||(u=L),u===L&&v.add(O))}if(!u)throw new Error(`no available backend found. ERR: ${E.map(O=>`[${O.name}] ${O.err}`).join(", ")}`);for(let{name:O,err:L}of E)w.includes(O)&&console.warn(`removing requested execution provider "${O}" from session options because it is not available: ${L}`);let z=h.filter(O=>v.has(typeof O=="string"?O:O.name));return[u,new Proxy(i,{get:(O,L)=>L==="executionProviders"?z:Reflect.get(O,L)})]}}),yA=Pe(()=>{cA()}),gA=Pe(()=>{Z="1.21.0-dev.20250206-d981b153d3"}),He=Pe(()=>{gA(),R="warning",N={wasm:{},webgl:{},webgpu:{},versions:{common:Z},set logLevel(i){if(i!==void 0){if(typeof i!="string"||["verbose","info","warning","error","fatal"].indexOf(i)===-1)throw new Error(`Unsupported logging level: ${i}`);R=i}},get logLevel(){return R}},Object.defineProperty(N,"logLevel",{enumerable:!0})}),Je=Pe(()=>{He(),K=N}),hA=Pe(()=>{V=(i,u)=>{let h=typeof document<"u"?document.createElement("canvas"):new OffscreenCanvas(1,1);h.width=i.dims[3],h.height=i.dims[2];let w=h.getContext("2d");if(w!=null){let B,E;(u==null?void 0:u.tensorLayout)!==void 0&&u.tensorLayout==="NHWC"?(B=i.dims[2],E=i.dims[3]):(B=i.dims[3],E=i.dims[2]);let v,z,O=(u==null?void 0:u.format)!==void 0?u.format:"RGB",L=u==null?void 0:u.norm;L===void 0||L.mean===void 0?v=[255,255,255,255]:typeof L.mean=="number"?v=[L.mean,L.mean,L.mean,L.mean]:(v=[L.mean[0],L.mean[1],L.mean[2],0],L.mean[3]!==void 0&&(v[3]=L.mean[3])),L===void 0||L.bias===void 0?z=[0,0,0,0]:typeof L.bias=="number"?z=[L.bias,L.bias,L.bias,L.bias]:(z=[L.bias[0],L.bias[1],L.bias[2],0],L.bias[3]!==void 0&&(z[3]=L.bias[3]));let ee=E*B,te=0,T=ee,le=2*ee,de=-1;O==="RGBA"?(te=0,T=ee,le=2*ee,de=3*ee):O==="RGB"?(te=0,T=ee,le=2*ee):O==="RBG"&&(te=0,le=ee,T=2*ee);for(let we=0;we<E;we++)for(let be=0;be<B;be++){let Me=(i.data[te++]-z[0])*v[0],Fe=(i.data[T++]-z[1])*v[1],We=(i.data[le++]-z[2])*v[2],$e=de===-1?255:(i.data[de++]-z[3])*v[3];w.fillStyle="rgba("+Me+","+Fe+","+We+","+$e+")",w.fillRect(be,we,1,1)}if("toDataURL"in h)return h.toDataURL();throw new Error("toDataURL is not supported")}throw new Error("Can not access image data")},Ae=(i,u)=>{let h,w=typeof document<"u"?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d");if(w==null)throw new Error("Can not access image data");{let B,E,v;(u==null?void 0:u.tensorLayout)!==void 0&&u.tensorLayout==="NHWC"?(B=i.dims[2],E=i.dims[1],v=i.dims[3]):(B=i.dims[3],E=i.dims[2],v=i.dims[1]);let z,O,L=u!==void 0&&u.format!==void 0?u.format:"RGB",ee=u==null?void 0:u.norm;ee===void 0||ee.mean===void 0?z=[255,255,255,255]:typeof ee.mean=="number"?z=[ee.mean,ee.mean,ee.mean,ee.mean]:(z=[ee.mean[0],ee.mean[1],ee.mean[2],255],ee.mean[3]!==void 0&&(z[3]=ee.mean[3])),ee===void 0||ee.bias===void 0?O=[0,0,0,0]:typeof ee.bias=="number"?O=[ee.bias,ee.bias,ee.bias,ee.bias]:(O=[ee.bias[0],ee.bias[1],ee.bias[2],0],ee.bias[3]!==void 0&&(O[3]=ee.bias[3]));let te=E*B;if(u!==void 0&&(u.format!==void 0&&v===4&&u.format!=="RGBA"||v===3&&u.format!=="RGB"&&u.format!=="BGR"))throw new Error("Tensor format doesn't match input tensor dims");let T=4,le=0,de=1,we=2,be=3,Me=0,Fe=te,We=2*te,$e=-1;L==="RGBA"?(Me=0,Fe=te,We=2*te,$e=3*te):L==="RGB"?(Me=0,Fe=te,We=2*te):L==="RBG"&&(Me=0,We=te,Fe=2*te),h=w.createImageData(B,E);for(let eA=0;eA<E*B;le+=T,de+=T,we+=T,be+=T,eA++)h.data[le]=(i.data[Me++]-O[0])*z[0],h.data[de]=(i.data[Fe++]-O[1])*z[1],h.data[we]=(i.data[We++]-O[2])*z[2],h.data[be]=$e===-1?255:(i.data[$e++]-O[3])*z[3]}return h}}),IA=Pe(()=>{MA(),me=(i,u)=>{if(i===void 0)throw new Error("Image buffer must be defined");if(u.height===void 0||u.width===void 0)throw new Error("Image height and width must be defined");if(u.tensorLayout==="NHWC")throw new Error("NHWC Tensor layout is not supported yet");let h,w,{height:B,width:E}=u,v=u.norm??{mean:255,bias:0};h=typeof v.mean=="number"?[v.mean,v.mean,v.mean,v.mean]:[v.mean[0],v.mean[1],v.mean[2],v.mean[3]??255],w=typeof v.bias=="number"?[v.bias,v.bias,v.bias,v.bias]:[v.bias[0],v.bias[1],v.bias[2],v.bias[3]??0];let z=u.format!==void 0?u.format:"RGBA",O=u.tensorFormat!==void 0&&u.tensorFormat!==void 0?u.tensorFormat:"RGB",L=B*E,ee=O==="RGBA"?new Float32Array(4*L):new Float32Array(3*L),te=4,T=0,le=1,de=2,we=3,be=0,Me=L,Fe=2*L,We=-1;z==="RGB"&&(te=3,T=0,le=1,de=2,we=-1),O==="RGBA"?We=3*L:O==="RBG"?(be=0,Fe=L,Me=2*L):O==="BGR"&&(Fe=0,Me=L,be=2*L);for(let $e=0;$e<L;$e++,T+=te,de+=te,le+=te,we+=te)ee[be++]=(i[T]+w[0])/h[0],ee[Me++]=(i[le]+w[1])/h[1],ee[Fe++]=(i[de]+w[2])/h[2],We!==-1&&we!==-1&&(ee[We++]=(i[we]+w[3])/h[3]);return new D("float32",ee,O==="RGBA"?[1,4,B,E]:[1,3,B,E])},Be=async(i,u)=>{let h,w=typeof HTMLImageElement<"u"&&i instanceof HTMLImageElement,B=typeof ImageData<"u"&&i instanceof ImageData,E=typeof ImageBitmap<"u"&&i instanceof ImageBitmap,v=typeof i=="string",z=u??{},O=()=>{if(typeof document<"u")return document.createElement("canvas");if(typeof OffscreenCanvas<"u")return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},L=ee=>typeof HTMLCanvasElement<"u"&&ee instanceof HTMLCanvasElement||ee instanceof OffscreenCanvas?ee.getContext("2d"):null;if(w){let ee=O();ee.width=i.width,ee.height=i.height;let te=L(ee);if(te==null)throw new Error("Can not access image data");{let T=i.height,le=i.width;if(u!==void 0&&u.resizedHeight!==void 0&&u.resizedWidth!==void 0&&(T=u.resizedHeight,le=u.resizedWidth),u!==void 0){if(z=u,u.tensorFormat!==void 0)throw new Error("Image input config format must be RGBA for HTMLImageElement");z.tensorFormat="RGBA",z.height=T,z.width=le}else z.tensorFormat="RGBA",z.height=T,z.width=le;te.drawImage(i,0,0),h=te.getImageData(0,0,le,T).data}}else{if(!B){if(E){if(u===void 0)throw new Error("Please provide image config with format for Imagebitmap");let ee=O();ee.width=i.width,ee.height=i.height;let te=L(ee);if(te!=null){let T=i.height,le=i.width;return te.drawImage(i,0,0,le,T),h=te.getImageData(0,0,le,T).data,z.height=T,z.width=le,me(h,z)}throw new Error("Can not access image data")}if(v)return new Promise((ee,te)=>{let T=O(),le=L(T);if(!i||!le)return te();let de=new Image;de.crossOrigin="Anonymous",de.src=i,de.onload=()=>{T.width=de.width,T.height=de.height,le.drawImage(de,0,0,T.width,T.height);let we=le.getImageData(0,0,T.width,T.height);z.height=T.height,z.width=T.width,ee(me(we.data,z))}});throw new Error("Input data provided is not supported - aborted tensor creation")}{let ee,te;if(u!==void 0&&u.resizedWidth!==void 0&&u.resizedHeight!==void 0?(ee=u.resizedHeight,te=u.resizedWidth):(ee=i.height,te=i.width),u!==void 0&&(z=u),z.format="RGBA",z.height=ee,z.width=te,u!==void 0){let T=O();T.width=te,T.height=ee;let le=L(T);if(le==null)throw new Error("Can not access image data");le.putImageData(i,0,0),h=le.getImageData(0,0,te,ee).data}else h=i.data}}if(h!==void 0)return me(h,z);throw new Error("Input data provided is not supported - aborted tensor creation")},Ee=(i,u)=>{let{width:h,height:w,download:B,dispose:E}=u;return new D({location:"texture",type:"float32",texture:i,dims:[1,w,h,4],download:B,dispose:E})},se=(i,u)=>{let{dataType:h,dims:w,download:B,dispose:E}=u;return new D({location:"gpu-buffer",type:h??"float32",gpuBuffer:i,dims:w,download:B,dispose:E})},ie=(i,u)=>{let{dataType:h,dims:w,download:B,dispose:E}=u;return new D({location:"ml-tensor",type:h??"float32",mlTensor:i,dims:w,download:B,dispose:E})},ve=(i,u,h)=>new D({location:"cpu-pinned",type:i,data:u,dims:h??[u.length]})}),Qe=Pe(()=>{g=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array],["int4",Uint8Array],["uint4",Uint8Array]]),b=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]),e=!1,l=()=>{if(!e){e=!0;let i=typeof BigInt64Array<"u"&&BigInt64Array.from,u=typeof BigUint64Array<"u"&&BigUint64Array.from,h=typeof Float16Array<"u"&&Float16Array.from;i&&(g.set("int64",BigInt64Array),b.set(BigInt64Array,"int64")),u&&(g.set("uint64",BigUint64Array),b.set(BigUint64Array,"uint64")),h?(g.set("float16",Float16Array),b.set(Float16Array,"float16")):g.set("float16",Uint16Array)}}}),mA=Pe(()=>{MA(),M=i=>{let u=1;for(let h=0;h<i.length;h++){let w=i[h];if(typeof w!="number"||!Number.isSafeInteger(w))throw new TypeError(`dims[${h}] must be an integer, got: ${w}`);if(w<0)throw new RangeError(`dims[${h}] must be a non-negative integer, got: ${w}`);u*=w}return u},ue=(i,u)=>{switch(i.location){case"cpu":return new D(i.type,i.data,u);case"cpu-pinned":return new D({location:"cpu-pinned",data:i.data,type:i.type,dims:u});case"texture":return new D({location:"texture",texture:i.texture,type:i.type,dims:u});case"gpu-buffer":return new D({location:"gpu-buffer",gpuBuffer:i.gpuBuffer,type:i.type,dims:u});case"ml-tensor":return new D({location:"ml-tensor",mlTensor:i.mlTensor,type:i.type,dims:u});default:throw new Error(`tensorReshape: tensor location ${i.location} is not supported`)}}}),MA=Pe(()=>{hA(),IA(),Qe(),mA(),D=class{constructor(i,u,h){let w,B;if(l(),typeof i=="object"&&"location"in i)switch(this.dataLocation=i.location,w=i.type,B=i.dims,i.location){case"cpu-pinned":{let v=g.get(w);if(!v)throw new TypeError(`unsupported type "${w}" to create tensor from pinned buffer`);if(!(i.data instanceof v))throw new TypeError(`buffer should be of type ${v.name}`);this.cpuData=i.data;break}case"texture":if(w!=="float32")throw new TypeError(`unsupported type "${w}" to create tensor from texture`);this.gpuTextureData=i.texture,this.downloader=i.download,this.disposer=i.dispose;break;case"gpu-buffer":if(w!=="float32"&&w!=="float16"&&w!=="int32"&&w!=="int64"&&w!=="uint32"&&w!=="uint8"&&w!=="bool"&&w!=="uint4"&&w!=="int4")throw new TypeError(`unsupported type "${w}" to create tensor from gpu buffer`);this.gpuBufferData=i.gpuBuffer,this.downloader=i.download,this.disposer=i.dispose;break;case"ml-tensor":if(w!=="float32"&&w!=="float16"&&w!=="int32"&&w!=="int64"&&w!=="uint32"&&w!=="uint64"&&w!=="int8"&&w!=="uint8"&&w!=="bool"&&w!=="uint4"&&w!=="int4")throw new TypeError(`unsupported type "${w}" to create tensor from MLTensor`);this.mlTensorData=i.mlTensor,this.downloader=i.download,this.disposer=i.dispose;break;default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let v,z;if(typeof i=="string")if(w=i,z=h,i==="string"){if(!Array.isArray(u))throw new TypeError("A string tensor's data must be a string array.");v=u}else{let O=g.get(i);if(O===void 0)throw new TypeError(`Unsupported tensor type: ${i}.`);if(Array.isArray(u)){if(i==="float16"&&O===Uint16Array||i==="uint4"||i==="int4")throw new TypeError(`Creating a ${i} tensor from number array is not supported. Please use ${O.name} as data.`);v=i==="uint64"||i==="int64"?O.from(u,BigInt):O.from(u)}else if(u instanceof O)v=u;else{if(!(u instanceof Uint8ClampedArray))throw new TypeError(`A ${w} tensor's data must be type of ${O}`);if(i!=="uint8")throw new TypeError("A Uint8ClampedArray tensor's data must be type of uint8");v=Uint8Array.from(u)}}else if(z=u,Array.isArray(i)){if(i.length===0)throw new TypeError("Tensor type cannot be inferred from an empty array.");let O=typeof i[0];if(O==="string")w="string",v=i;else{if(O!=="boolean")throw new TypeError(`Invalid element type of data array: ${O}.`);w="bool",v=Uint8Array.from(i)}}else if(i instanceof Uint8ClampedArray)w="uint8",v=Uint8Array.from(i);else{let O=b.get(i.constructor);if(O===void 0)throw new TypeError(`Unsupported type for tensor data: ${i.constructor}.`);w=O,v=i}if(z===void 0)z=[v.length];else if(!Array.isArray(z))throw new TypeError("A tensor's dims must be a number array");B=z,this.cpuData=v,this.dataLocation="cpu"}let E=M(B);if(this.cpuData&&E!==this.cpuData.length&&(w!=="uint4"&&w!=="int4"||Math.ceil(E/2)!==this.cpuData.length))throw new Error(`Tensor's size(${E}) does not match data length(${this.cpuData.length}).`);this.type=w,this.dims=B,this.size=E}static async fromImage(i,u){return Be(i,u)}static fromTexture(i,u){return Ee(i,u)}static fromGpuBuffer(i,u){return se(i,u)}static fromMLTensor(i,u){return ie(i,u)}static fromPinnedBuffer(i,u,h){return ve(i,u,h)}toDataURL(i){return V(this,i)}toImageData(i){return Ae(this,i)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}get mlTensor(){if(this.ensureValid(),!this.mlTensorData)throw new Error("The data is not stored as a WebNN MLTensor.");return this.mlTensorData}async getData(i){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":case"ml-tensor":if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;let u=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=u,i&&this.disposer&&(this.disposer(),this.disposer=void 0),u}finally{this.isDownloading=!1}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.mlTensorData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if(this.dataLocation==="none")throw new Error("The tensor is disposed.")}reshape(i){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return ue(this,i)}}}),LA=Pe(()=>{MA(),F=D}),OA=Pe(()=>{He(),Ye=(i,u)=>{(typeof N.trace>"u"?!N.wasm.trace:!N.trace)||console.timeStamp(`${i}::ORT::${u}`)},Ne=(i,u)=>{var B;let h=((B=new Error().stack)==null?void 0:B.split(/\r\n|\r|\n/g))||[],w=!1;for(let E=0;E<h.length;E++){if(w&&!h[E].includes("TRACE_FUNC")){let v=`FUNC_${i}::${h[E].trim().split(" ")[1]}`;return u&&(v+=`::${u}`),void Ye("CPU",v)}h[E].includes("TRACE_FUNC")&&(w=!0)}},Oe=i=>{(typeof N.trace>"u"?!N.wasm.trace:!N.trace)||Ne("BEGIN",i)},AA=i=>{(typeof N.trace>"u"?!N.wasm.trace:!N.trace)||Ne("END",i)}}),q=Pe(()=>{cA(),LA(),OA(),tA=class ld{constructor(u){this.handler=u}async run(u,h,w){Oe();let B={},E={};if(typeof u!="object"||u===null||u instanceof F||Array.isArray(u))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let v=!0;if(typeof h=="object"){if(h===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(h instanceof F)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(h)){if(h.length===0)throw new TypeError("'fetches' cannot be an empty array.");v=!1;for(let L of h){if(typeof L!="string")throw new TypeError("'fetches' must be a string array or an object.");if(this.outputNames.indexOf(L)===-1)throw new RangeError(`'fetches' contains invalid output name: ${L}.`);B[L]=null}if(typeof w=="object"&&w!==null)E=w;else if(typeof w<"u")throw new TypeError("'options' must be an object.")}else{let L=!1,ee=Object.getOwnPropertyNames(h);for(let te of this.outputNames)if(ee.indexOf(te)!==-1){let T=h[te];(T===null||T instanceof F)&&(L=!0,v=!1,B[te]=T)}if(L){if(typeof w=="object"&&w!==null)E=w;else if(typeof w<"u")throw new TypeError("'options' must be an object.")}else E=h}}else if(typeof h<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let L of this.inputNames)if(typeof u[L]>"u")throw new Error(`input '${L}' is missing in 'feeds'.`);if(v)for(let L of this.outputNames)B[L]=null;let z=await this.handler.run(u,B,E),O={};for(let L in z)if(Object.hasOwnProperty.call(z,L)){let ee=z[L];O[L]=ee instanceof F?ee:new F(ee.type,ee.data,ee.dims)}return AA(),O}async release(){return this.handler.dispose()}static async create(u,h,w,B){Oe();let E,v={};if(typeof u=="string"){if(E=u,typeof h=="object"&&h!==null)v=h;else if(typeof h<"u")throw new TypeError("'options' must be an object.")}else if(u instanceof Uint8Array){if(E=u,typeof h=="object"&&h!==null)v=h;else if(typeof h<"u")throw new TypeError("'options' must be an object.")}else{if(!(u instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&u instanceof SharedArrayBuffer))throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");{let ee=u,te=0,T=u.byteLength;if(typeof h=="object"&&h!==null)v=h;else if(typeof h=="number"){if(te=h,!Number.isSafeInteger(te))throw new RangeError("'byteOffset' must be an integer.");if(te<0||te>=ee.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${ee.byteLength}).`);if(T=u.byteLength-te,typeof w=="number"){if(T=w,!Number.isSafeInteger(T))throw new RangeError("'byteLength' must be an integer.");if(T<=0||te+T>ee.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${ee.byteLength-te}].`);if(typeof B=="object"&&B!==null)v=B;else if(typeof B<"u")throw new TypeError("'options' must be an object.")}else if(typeof w<"u")throw new TypeError("'byteLength' must be a number.")}else if(typeof h<"u")throw new TypeError("'options' must be an object.");E=new Uint8Array(ee,te,T)}}let[z,O]=await W(v),L=await z.createInferenceSessionHandler(E,O);return AA(),new ld(L)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}}}),HA=Pe(()=>{q(),BA=tA}),ge=Pe(()=>{}),J=Pe(()=>{}),fe=Pe(()=>{}),Te=Pe(()=>{}),_e={};xA(_e,{InferenceSession:()=>BA,TRACE:()=>Ye,TRACE_FUNC_BEGIN:()=>Oe,TRACE_FUNC_END:()=>AA,Tensor:()=>F,env:()=>K,registerBackend:()=>H});var dA=Pe(()=>{yA(),Je(),HA(),LA(),ge(),J(),OA(),fe(),Te()}),bA=Pe(()=>{}),NA={};xA(NA,{default:()=>st});var XA,TA,st,tt=Pe(()=>{var i;Eg(),si(),e2(),XA="ort-wasm-proxy-worker",(TA=((i=globalThis.self)==null?void 0:i.name)===XA)&&(self.onmessage=u=>{let{type:h,in:w}=u.data;try{switch(h){case"init-wasm":Dn(w.wasm).then(()=>{Qr(w).then(()=>{postMessage({type:h})},B=>{postMessage({type:h,err:B})})},B=>{postMessage({type:h,err:B})});break;case"init-ep":{let{epName:B,env:E}=w;un(E,B).then(()=>{postMessage({type:h})},v=>{postMessage({type:h,err:v})});break}case"copy-from":{let{buffer:B}=w,E=Ls(B);postMessage({type:h,out:E});break}case"create":{let{model:B,options:E}=w;V0(B,E).then(v=>{postMessage({type:h,out:v})},v=>{postMessage({type:h,err:v})});break}case"release":ao(w),postMessage({type:h});break;case"run":{let{sessionId:B,inputIndices:E,inputs:v,outputIndices:z,options:O}=w;io(B,E,v,z,new Array(z.length).fill(null),O).then(L=>{L.some(ee=>ee[3]!=="cpu")?postMessage({type:h,err:"Proxy does not support non-cpu tensor location."}):postMessage({type:h,out:L},oo([...v,...L]))},L=>{postMessage({type:h,err:L})});break}case"end-profiling":x1(w),postMessage({type:h})}}catch(B){postMessage({type:h,err:B})}}),st=TA?null:u=>new Worker(u??Pr,{type:"module",name:XA})}),nt={};xA(nt,{default:()=>Vr});var It,Ar,Vr,$t,Pr,wt,qn,Yn,kn,qA,et,FA,Kt,Vn,zn,oa,Jn,_n,la,Yr,yt,Dn,zr,jr,Ca,Xt,$n,ba,ks,As,ts,xs,qr,ca,Ia,rs,ea,Ma,Br,Ya,Ha,Bs,Ra,Ga,Wa,Da,xt,Ft,xn,ns,Qa,Va,ga,Ta,rA,re,xe,Se,je,Ze,uA,PA,Le,YA,vA,Bt,fr,jt,er,zt,VA,_A,Zt,Bn,hn,ir,it,pr,pA,$A,mn,Hr,Ur,Fr,wr,Ut,vr,as,Hn,Ys,Qn,Hs,Dt,An,jn,g0,u0,d0,f0,ss,ja,p0,Rs,Fn,Jr,JA,Tn,bi,Ws,Ii,h0,m0,wi,J0,Sn,nr,vs,ys,vn,Ua,ua,ki,xi,Ka,Bi,vi,yi,QA,Za,UA,Ei,Vs,yn,Nn,is,Es,Mi,Nr,C0,b0,Pa,os,I0,js,ls,RA,Aa,Gi,Ms,wa,Di,w0,k0,Us,x0,B0,Rr,v0,y0,kt,Wt,Qi,da,E0,tn,ka,rn,xa,Ks,Ti,M0,Zs,Mr,Gs,Pi,nn,cs,Ba,zi,Fi,Si,Xs,fa,qs,G0,Ni,Oi,va,Js,Wr,Li,_s,Ds,On,Qs,Yi,ta,Hi,$s,Ri,gs,Wi,D0,Q0,an,Ts,Cn,Vi,ei,Un,hr,ji,za,us,T0,Ui,Ki,P0,Fa,ra,Zi,Ps,_r,ar,ds,z0,Sa,Na,Xa,Xi,bn,F0,qi,fs,zs,sn,Ji,Ai,qa,S0,ps,pt,A,t,r,n,a,s,o,c,f,m,p,I,y,P,Y,X,_,ce,he,ye,De,Re,Xe,nA,fA,GA,SA,At,ct,bt,Nt,qt,tr,mr,Cr,Gr,Dr,Or,Kr,on,$r,ln,En,na,pa,ha,Oa,Fs,hs,ms,Ss,_i,N0,O0,ti,x2,B2,v2,y2,E2,Co,M2,G2,bo,D2,Q2,T2,P2,Io,z2,F2,wo,S2,N2,ko,O2,Ja,_a,ri,ni,L2,Y2,xo,H2,R2,W2,V2,j2,U2,Rn,K2,Z2,_0,X2,L0,Ns,q2,J2,_2,$2,$0,el,Al,tl,rl,Y0,nl,Bo,al,H0,sl,il,ol,ll,eo,cl,gl,ul,T1,dl,fl,pl,$i,hl,ml,Cl,bl,Il,wl,kl,ai,xl,vo,yo,Eo,Bl,vl,Ao,Mo,yl,Go,Do,El,Qo,To,Ml,to,Gl,Dl,Ql,Tl,Po,ro,P1,Pl,zl,zo,Fl,Sl,Fo,Nl,Ol,So,Ll,z1,No,Oo,Yl,Hl,Lo,Rl,Wl,no,Vl,jl,Yo,Ul,Kl,Zl,Xl,ql,Jl,_l,$l,e1,Ho,A1,R0,Ro,Wo,t1,ur,F1,S1,N1,Vo,r1,n1,jo,a1,Uo,Ko,O1,s1,i1,Zo,L1,Y1,o1,l1,c1,g1,u1,d1,Xo,f1,qo,Jo,_o,p1,H1,$o,h1,m1,R1=Pe(()=>{var i;It=import.meta.url,Ar=async function(u={}){function h(){return iA.buffer!=ot.buffer&&kr(),ot}function w(){return iA.buffer!=ot.buffer&&kr(),sr}function B(){return iA.buffer!=ot.buffer&&kr(),dn}function E(){return iA.buffer!=ot.buffer&&kr(),Xn}function v(){return iA.buffer!=ot.buffer&&kr(),ui}function z(){return iA.buffer!=ot.buffer&&kr(),n0}function O(){return iA.buffer!=ot.buffer&&kr(),lo}function L(){return iA.buffer!=ot.buffer&&kr(),fi}var ee,te,T=Object.assign({},u),le=new Promise((G,j)=>{ee=G,te=j}),de=typeof window=="object",we=typeof importScripts=="function",be=we&&self.name=="em-pthread";T.mountExternalData=(G,j)=>{G.startsWith("./")&&(G=G.substring(2)),(T.Fb||(T.Fb=new Map)).set(G,j)},T.unmountExternalData=()=>{delete T.Fb};var Me=globalThis.SharedArrayBuffer??new WebAssembly.Memory({initial:0,maximum:0,shared:!0}).buffer.constructor;let Fe=()=>{let G=($,oe,Ie)=>(...Ue)=>{let kA=mi,EA=oe==null?void 0:oe();Ue=$(...Ue);let lt=oe==null?void 0:oe();return EA!==lt&&($=lt,Ie(EA),oe=Ie=null),mi!=kA?new Promise((ut,Et)=>{Vc={resolve:ut,reject:Et}}):Ue},j=$=>async(...oe)=>{var Ie;try{if(T.Gb)throw Error("Session already started");let Ue=T.Gb={hc:oe[0],errors:[]},kA=await $(...oe);if(T.Gb!==Ue)throw Error("Session mismatch");(Ie=T.Hb)==null||Ie.flush();let EA=Ue.errors;if(0<EA.length){let lt=await Promise.all(EA);if(lt=lt.filter(ut=>ut),0<lt.length)throw Error(lt.join(`
`))}return kA}finally{T.Gb=null}};T._OrtCreateSession=G(T._OrtCreateSession,()=>T._OrtCreateSession,$=>T._OrtCreateSession=$),T._OrtRun=j(G(T._OrtRun,()=>T._OrtRun,$=>T._OrtRun=$)),T._OrtRunWithBinding=j(G(T._OrtRunWithBinding,()=>T._OrtRunWithBinding,$=>T._OrtRunWithBinding=$)),T._OrtBindInput=G(T._OrtBindInput,()=>T._OrtBindInput,$=>T._OrtBindInput=$),Fe=void 0};T.jsepInit=(G,j)=>{if(Fe==null||Fe(),G==="webgpu"){[T.Hb,T.Vb,T.Zb,T.Ob,T.Yb,T.kb,T.$b,T.cc,T.Wb,T.Xb,T.ac]=j;let $=T.Hb;T.jsepRegisterBuffer=(oe,Ie,Ue,kA)=>$.registerBuffer(oe,Ie,Ue,kA),T.jsepGetBuffer=oe=>$.getBuffer(oe),T.jsepCreateDownloader=(oe,Ie,Ue)=>$.createDownloader(oe,Ie,Ue),T.jsepOnCreateSession=oe=>{$.onCreateSession(oe)},T.jsepOnReleaseSession=oe=>{$.onReleaseSession(oe)},T.jsepOnRunStart=oe=>$.onRunStart(oe),T.dc=(oe,Ie)=>{$.upload(oe,Ie)}}else if(G==="webnn"){[T.Hb,T.bc,T.Pb,T.jsepEnsureTensor,T.ec,T.jsepDownloadTensor]=j,T.jsepReleaseTensorId=T.Pb;let $=T.Hb;T.jsepOnRunStart=oe=>$.onRunStart(oe),T.jsepRegisterMLContext=(oe,Ie)=>{$.registerMLContext(oe,Ie)},T.jsepOnReleaseSession=oe=>{$.onReleaseSession(oe)},T.jsepCreateMLTensorDownloader=(oe,Ie)=>$.createMLTensorDownloader(oe,Ie),T.jsepRegisterMLTensor=(oe,Ie,Ue)=>$.registerMLTensor(oe,Ie,Ue),T.jsepCreateMLContext=oe=>$.createMLContext(oe),T.jsepRegisterMLConstant=(oe,Ie,Ue,kA,EA)=>$.registerMLConstant(oe,Ie,Ue,kA,EA,T.Fb)}};var We,$e,eA=Object.assign({},T),aA=(G,j)=>{throw j},zA="";(de||we)&&(we?zA=self.location.href:typeof document<"u"&&document.currentScript&&(zA=document.currentScript.src),It&&(zA=It),zA=zA.startsWith("blob:")?"":zA.substr(0,zA.replace(/[?#].*/,"").lastIndexOf("/")+1),we&&($e=G=>{var j=new XMLHttpRequest;return j.open("GET",G,!1),j.responseType="arraybuffer",j.send(null),new Uint8Array(j.response)}),We=(G,j,$)=>{var oe=new XMLHttpRequest;oe.open("GET",G,!0),oe.responseType="arraybuffer",oe.onload=()=>{oe.status==200||oe.status==0&&oe.response?j(oe.response):$()},oe.onerror=$,oe.send(null)});var jA,ht=console.log.bind(console),mt=console.error.bind(console),Jt=ht,Ct=mt;if(Object.assign(T,eA),eA=null,be){let G=function(j){try{var $=j.data,oe=$.cmd;if(oe==="load"){let Ie=[];self.onmessage=Ue=>Ie.push(Ue),self.startWorker=()=>{postMessage({cmd:"loaded"});for(let Ue of Ie)G(Ue);self.onmessage=G};for(let Ue of $.handlers)T[Ue]&&!T[Ue].proxy||(T[Ue]=(...kA)=>{postMessage({Nb:"callHandler",pc:Ue,args:kA})},Ue=="print"&&(Jt=T[Ue]),Ue=="printErr"&&(Ct=T[Ue]));iA=$.wasmMemory,kr(),Pt($.wasmModule)}else if(oe==="run"){Zc($.pthread_ptr,0,0,1,0,0),Rc($.pthread_ptr),Pf(),Hg(),Qt||(Ou(),Qt=!0);try{zf($.start_routine,$.arg)}catch(Ie){if(Ie!="unwind")throw Ie}}else oe==="cancel"?u2()&&hc(-1):$.target!=="setimmediate"&&(oe==="checkMailbox"?Qt&&sc():oe&&(Ct(`worker: received unknown command ${oe}`),Ct($)))}catch(Ie){throw Lu(),Ie}};var Pt,Qt=!1;Ct=function(...j){j=j.join(" "),console.error(j)},self.alert=function(...j){postMessage({Nb:"alert",text:j.join(" "),rc:u2()})},T.instantiateWasm=(j,$)=>new Promise(oe=>{Pt=Ie=>{Ie=new WebAssembly.Instance(Ie,Sg()),$(Ie),oe()}}),self.onunhandledrejection=j=>{throw j.reason||j},self.onmessage=G}T.wasmBinary&&(jA=T.wasmBinary);var iA,gt,at,ot,sr,dn,Xn,ui,n0,lo,bs,di,fi,Is=!1;function kr(){var G=iA.buffer;T.HEAP8=ot=new Int8Array(G),T.HEAP16=dn=new Int16Array(G),T.HEAPU8=sr=new Uint8Array(G),T.HEAPU16=Xn=new Uint16Array(G),T.HEAP32=ui=new Int32Array(G),T.HEAPU32=n0=new Uint32Array(G),T.HEAPF32=lo=new Float32Array(G),T.HEAPF64=fi=new Float64Array(G),T.HEAP64=bs=new BigInt64Array(G),T.HEAPU64=di=new BigUint64Array(G)}if(!be){if(!((iA=new WebAssembly.Memory({initial:256,maximum:65536,shared:!0})).buffer instanceof Me))throw Ct("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),Error("bad memory");kr()}var Ea=[],a0=[],Gc=[],co=0,v1=null;function Qg(){if(--co==0&&v1){var G=v1;v1=null,G()}}function j0(G){throw Ct(G="Aborted("+G+")"),Is=!0,at=1,G=new WebAssembly.RuntimeError(G+". Build with -sASSERTIONS for more info."),te(G),G}var Dc,Tg=G=>G.startsWith("data:application/octet-stream;base64,"),Pg=G=>G.startsWith("file://");function zg(G){if(G==Dc&&jA)return new Uint8Array(jA);if($e)return $e(G);throw"both async and sync fetching of the wasm failed"}function Fg(G,j,$){return function(oe){if(!jA&&(de||we)){if(typeof fetch=="function"&&!Pg(oe))return fetch(oe,{credentials:"same-origin"}).then(Ie=>{if(!Ie.ok)throw`failed to load wasm binary file at '${oe}'`;return Ie.arrayBuffer()}).catch(()=>zg(oe));if(We)return new Promise((Ie,Ue)=>{We(oe,kA=>Ie(new Uint8Array(kA)),Ue)})}return Promise.resolve().then(()=>zg(oe))}(G).then(oe=>WebAssembly.instantiate(oe,j)).then($,oe=>{Ct(`failed to asynchronously prepare wasm: ${oe}`),j0(oe)})}function Sg(){return{a:{O:Tf,Aa:Qf,b:Sf,aa:jg,B:Zg,qa:Xg,Y:Jg,_:_g,ra:$g,oa:eu,ha:Au,na:tu,L:ru,Z:nu,W:au,pa:su,X:iu,va:Nf,F:Of,Q:Lf,P:Hf,E:Wf,u:Vf,q:jf,G:Uf,A:$f,R:e4,ua:A4,ka:t4,U:r4,ba:n4,H:a4,ja:Rc,ta:s4,t:i4,Ba:o4,x:g4,o:u4,m:f4,c:Yc,n:p4,k:C4,w:b4,p:I4,f:w4,s:k4,l:x4,e:B4,j:v4,i:y4,g:E4,d:M4,ea:G4,fa:D4,ga:Q4,ca:wu,da:ku,T:T4,h:P4,D:z4,I:F4,M:S4,y:N4,sa:O4,V:L4,v:Bu,z:Y4,N:H4,S:R4,za:W4,ya:V4,la:Eu,ma:Mu,$:Fc,C:Gu,K:Du,ia:Qu,J:Tu,a:iA,xa:zc,wa:Fu,r:K4}}}var Qc={916868:(G,j,$,oe,Ie)=>{if(T===void 0||!T.Fb)return 1;if((G=Mn(Number(G>>>0))).startsWith("./")&&(G=G.substring(2)),!(G=T.Fb.get(G)))return 2;if(j=Number(j>>>0),$=Number($>>>0),oe=Number(oe>>>0),j+$>G.byteLength)return 3;try{let Ue=G.subarray(j,j+$);switch(Ie){case 0:w().set(Ue,oe>>>0);break;case 1:T.dc(oe,Ue);break;default:return 4}return 0}catch{return 4}},917583:(G,j,$)=>{T.ec(G,w().subarray(j>>>0,j+$>>>0))},917646:()=>T.bc(),917687:G=>{T.Pb(G)},917723:()=>{T.Wb()},917754:()=>{T.Xb()},917783:()=>{T.ac()},917808:G=>T.Vb(G),917841:G=>T.Zb(G),917873:(G,j,$)=>{T.Ob(Number(G),Number(j),Number($),!0)},917936:(G,j,$)=>{T.Ob(Number(G),Number(j),Number($))},917993:()=>typeof wasmOffsetConverter<"u",918050:G=>{T.kb("Abs",G,void 0)},918101:G=>{T.kb("Neg",G,void 0)},918152:G=>{T.kb("Floor",G,void 0)},918205:G=>{T.kb("Ceil",G,void 0)},918257:G=>{T.kb("Reciprocal",G,void 0)},918315:G=>{T.kb("Sqrt",G,void 0)},918367:G=>{T.kb("Exp",G,void 0)},918418:G=>{T.kb("Erf",G,void 0)},918469:G=>{T.kb("Sigmoid",G,void 0)},918524:(G,j,$)=>{T.kb("HardSigmoid",G,{alpha:j,beta:$})},918603:G=>{T.kb("Log",G,void 0)},918654:G=>{T.kb("Sin",G,void 0)},918705:G=>{T.kb("Cos",G,void 0)},918756:G=>{T.kb("Tan",G,void 0)},918807:G=>{T.kb("Asin",G,void 0)},918859:G=>{T.kb("Acos",G,void 0)},918911:G=>{T.kb("Atan",G,void 0)},918963:G=>{T.kb("Sinh",G,void 0)},919015:G=>{T.kb("Cosh",G,void 0)},919067:G=>{T.kb("Asinh",G,void 0)},919120:G=>{T.kb("Acosh",G,void 0)},919173:G=>{T.kb("Atanh",G,void 0)},919226:G=>{T.kb("Tanh",G,void 0)},919278:G=>{T.kb("Not",G,void 0)},919329:(G,j,$)=>{T.kb("Clip",G,{min:j,max:$})},919398:G=>{T.kb("Clip",G,void 0)},919450:(G,j)=>{T.kb("Elu",G,{alpha:j})},919508:G=>{T.kb("Gelu",G,void 0)},919560:G=>{T.kb("Relu",G,void 0)},919612:(G,j)=>{T.kb("LeakyRelu",G,{alpha:j})},919676:(G,j)=>{T.kb("ThresholdedRelu",G,{alpha:j})},919746:(G,j)=>{T.kb("Cast",G,{to:j})},919804:G=>{T.kb("Add",G,void 0)},919855:G=>{T.kb("Sub",G,void 0)},919906:G=>{T.kb("Mul",G,void 0)},919957:G=>{T.kb("Div",G,void 0)},920008:G=>{T.kb("Pow",G,void 0)},920059:G=>{T.kb("Equal",G,void 0)},920112:G=>{T.kb("Greater",G,void 0)},920167:G=>{T.kb("GreaterOrEqual",G,void 0)},920229:G=>{T.kb("Less",G,void 0)},920281:G=>{T.kb("LessOrEqual",G,void 0)},920340:(G,j,$,oe,Ie)=>{T.kb("ReduceMean",G,{keepDims:!!j,noopWithEmptyAxes:!!$,axes:oe?Array.from(v().subarray(Number(oe)>>>0,Number(Ie)>>>0)):[]})},920515:(G,j,$,oe,Ie)=>{T.kb("ReduceMax",G,{keepDims:!!j,noopWithEmptyAxes:!!$,axes:oe?Array.from(v().subarray(Number(oe)>>>0,Number(Ie)>>>0)):[]})},920689:(G,j,$,oe,Ie)=>{T.kb("ReduceMin",G,{keepDims:!!j,noopWithEmptyAxes:!!$,axes:oe?Array.from(v().subarray(Number(oe)>>>0,Number(Ie)>>>0)):[]})},920863:(G,j,$,oe,Ie)=>{T.kb("ReduceProd",G,{keepDims:!!j,noopWithEmptyAxes:!!$,axes:oe?Array.from(v().subarray(Number(oe)>>>0,Number(Ie)>>>0)):[]})},921038:(G,j,$,oe,Ie)=>{T.kb("ReduceSum",G,{keepDims:!!j,noopWithEmptyAxes:!!$,axes:oe?Array.from(v().subarray(Number(oe)>>>0,Number(Ie)>>>0)):[]})},921212:(G,j,$,oe,Ie)=>{T.kb("ReduceL1",G,{keepDims:!!j,noopWithEmptyAxes:!!$,axes:oe?Array.from(v().subarray(Number(oe)>>>0,Number(Ie)>>>0)):[]})},921385:(G,j,$,oe,Ie)=>{T.kb("ReduceL2",G,{keepDims:!!j,noopWithEmptyAxes:!!$,axes:oe?Array.from(v().subarray(Number(oe)>>>0,Number(Ie)>>>0)):[]})},921558:(G,j,$,oe,Ie)=>{T.kb("ReduceLogSum",G,{keepDims:!!j,noopWithEmptyAxes:!!$,axes:oe?Array.from(v().subarray(Number(oe)>>>0,Number(Ie)>>>0)):[]})},921735:(G,j,$,oe,Ie)=>{T.kb("ReduceSumSquare",G,{keepDims:!!j,noopWithEmptyAxes:!!$,axes:oe?Array.from(v().subarray(Number(oe)>>>0,Number(Ie)>>>0)):[]})},921915:(G,j,$,oe,Ie)=>{T.kb("ReduceLogSumExp",G,{keepDims:!!j,noopWithEmptyAxes:!!$,axes:oe?Array.from(v().subarray(Number(oe)>>>0,Number(Ie)>>>0)):[]})},922095:G=>{T.kb("Where",G,void 0)},922148:(G,j,$)=>{T.kb("Transpose",G,{perm:j?Array.from(v().subarray(Number(j)>>>0,Number($)>>>0)):[]})},922272:(G,j,$,oe)=>{T.kb("DepthToSpace",G,{blocksize:j,mode:Mn($),format:oe?"NHWC":"NCHW"})},922405:(G,j,$,oe)=>{T.kb("DepthToSpace",G,{blocksize:j,mode:Mn($),format:oe?"NHWC":"NCHW"})},922538:(G,j,$,oe,Ie,Ue,kA,EA,lt,ut,Et,cr,xr,CA,gr)=>{T.kb("ConvTranspose",G,{format:lt?"NHWC":"NCHW",autoPad:j,dilations:[$],group:oe,kernelShape:[Ie],pads:[Ue,kA],strides:[EA],wIsConst:()=>!!h()[ut>>>0],outputPadding:Et?Array.from(v().subarray(Number(Et)>>>0,Number(cr)>>>0)):[],outputShape:xr?Array.from(v().subarray(Number(xr)>>>0,Number(CA)>>>0)):[],activation:Mn(gr)})},922971:(G,j,$,oe,Ie,Ue,kA,EA,lt,ut,Et,cr,xr,CA)=>{T.kb("ConvTranspose",G,{format:EA?"NHWC":"NCHW",autoPad:j,dilations:Array.from(v().subarray(Number($)>>>0,2+(Number($)>>>0)>>>0)),group:oe,kernelShape:Array.from(v().subarray(Number(Ie)>>>0,2+(Number(Ie)>>>0)>>>0)),pads:Array.from(v().subarray(Number(Ue)>>>0,4+(Number(Ue)>>>0)>>>0)),strides:Array.from(v().subarray(Number(kA)>>>0,2+(Number(kA)>>>0)>>>0)),wIsConst:()=>!!h()[lt>>>0],outputPadding:ut?Array.from(v().subarray(Number(ut)>>>0,Number(Et)>>>0)):[],outputShape:cr?Array.from(v().subarray(Number(cr)>>>0,Number(xr)>>>0)):[],activation:Mn(CA)})},923632:(G,j,$,oe,Ie,Ue,kA,EA,lt,ut,Et,cr,xr,CA,gr)=>{T.kb("ConvTranspose",G,{format:lt?"NHWC":"NCHW",autoPad:j,dilations:[$],group:oe,kernelShape:[Ie],pads:[Ue,kA],strides:[EA],wIsConst:()=>!!h()[ut>>>0],outputPadding:Et?Array.from(v().subarray(Number(Et)>>>0,Number(cr)>>>0)):[],outputShape:xr?Array.from(v().subarray(Number(xr)>>>0,Number(CA)>>>0)):[],activation:Mn(gr)})},924065:(G,j,$,oe,Ie,Ue,kA,EA,lt,ut,Et,cr,xr,CA)=>{T.kb("ConvTranspose",G,{format:EA?"NHWC":"NCHW",autoPad:j,dilations:Array.from(v().subarray(Number($)>>>0,2+(Number($)>>>0)>>>0)),group:oe,kernelShape:Array.from(v().subarray(Number(Ie)>>>0,2+(Number(Ie)>>>0)>>>0)),pads:Array.from(v().subarray(Number(Ue)>>>0,4+(Number(Ue)>>>0)>>>0)),strides:Array.from(v().subarray(Number(kA)>>>0,2+(Number(kA)>>>0)>>>0)),wIsConst:()=>!!h()[lt>>>0],outputPadding:ut?Array.from(v().subarray(Number(ut)>>>0,Number(Et)>>>0)):[],outputShape:cr?Array.from(v().subarray(Number(cr)>>>0,Number(xr)>>>0)):[],activation:Mn(CA)})},924726:(G,j)=>{T.kb("GlobalAveragePool",G,{format:j?"NHWC":"NCHW"})},924817:(G,j,$,oe,Ie,Ue,kA,EA,lt,ut,Et,cr,xr,CA)=>{T.kb("AveragePool",G,{format:CA?"NHWC":"NCHW",auto_pad:j,ceil_mode:$,count_include_pad:oe,storage_order:Ie,dilations:Ue?Array.from(v().subarray(Number(Ue)>>>0,Number(kA)>>>0)):[],kernel_shape:EA?Array.from(v().subarray(Number(EA)>>>0,Number(lt)>>>0)):[],pads:ut?Array.from(v().subarray(Number(ut)>>>0,Number(Et)>>>0)):[],strides:cr?Array.from(v().subarray(Number(cr)>>>0,Number(xr)>>>0)):[]})},925296:(G,j)=>{T.kb("GlobalAveragePool",G,{format:j?"NHWC":"NCHW"})},925387:(G,j,$,oe,Ie,Ue,kA,EA,lt,ut,Et,cr,xr,CA)=>{T.kb("AveragePool",G,{format:CA?"NHWC":"NCHW",auto_pad:j,ceil_mode:$,count_include_pad:oe,storage_order:Ie,dilations:Ue?Array.from(v().subarray(Number(Ue)>>>0,Number(kA)>>>0)):[],kernel_shape:EA?Array.from(v().subarray(Number(EA)>>>0,Number(lt)>>>0)):[],pads:ut?Array.from(v().subarray(Number(ut)>>>0,Number(Et)>>>0)):[],strides:cr?Array.from(v().subarray(Number(cr)>>>0,Number(xr)>>>0)):[]})},925866:(G,j)=>{T.kb("GlobalMaxPool",G,{format:j?"NHWC":"NCHW"})},925953:(G,j,$,oe,Ie,Ue,kA,EA,lt,ut,Et,cr,xr,CA)=>{T.kb("MaxPool",G,{format:CA?"NHWC":"NCHW",auto_pad:j,ceil_mode:$,count_include_pad:oe,storage_order:Ie,dilations:Ue?Array.from(v().subarray(Number(Ue)>>>0,Number(kA)>>>0)):[],kernel_shape:EA?Array.from(v().subarray(Number(EA)>>>0,Number(lt)>>>0)):[],pads:ut?Array.from(v().subarray(Number(ut)>>>0,Number(Et)>>>0)):[],strides:cr?Array.from(v().subarray(Number(cr)>>>0,Number(xr)>>>0)):[]})},926428:(G,j)=>{T.kb("GlobalMaxPool",G,{format:j?"NHWC":"NCHW"})},926515:(G,j,$,oe,Ie,Ue,kA,EA,lt,ut,Et,cr,xr,CA)=>{T.kb("MaxPool",G,{format:CA?"NHWC":"NCHW",auto_pad:j,ceil_mode:$,count_include_pad:oe,storage_order:Ie,dilations:Ue?Array.from(v().subarray(Number(Ue)>>>0,Number(kA)>>>0)):[],kernel_shape:EA?Array.from(v().subarray(Number(EA)>>>0,Number(lt)>>>0)):[],pads:ut?Array.from(v().subarray(Number(ut)>>>0,Number(Et)>>>0)):[],strides:cr?Array.from(v().subarray(Number(cr)>>>0,Number(xr)>>>0)):[]})},926990:(G,j,$,oe,Ie)=>{T.kb("Gemm",G,{alpha:j,beta:$,transA:oe,transB:Ie})},927094:G=>{T.kb("MatMul",G,void 0)},927148:(G,j,$,oe)=>{T.kb("ArgMax",G,{keepDims:!!j,selectLastIndex:!!$,axis:oe})},927256:(G,j,$,oe)=>{T.kb("ArgMin",G,{keepDims:!!j,selectLastIndex:!!$,axis:oe})},927364:(G,j)=>{T.kb("Softmax",G,{axis:j})},927427:(G,j)=>{T.kb("Concat",G,{axis:j})},927487:(G,j,$,oe,Ie)=>{T.kb("Split",G,{axis:j,numOutputs:$,splitSizes:oe?Array.from(v().subarray(Number(oe)>>>0,Number(Ie)>>>0)):[]})},927643:G=>{T.kb("Expand",G,void 0)},927697:(G,j)=>{T.kb("Gather",G,{axis:Number(j)})},927768:(G,j)=>{T.kb("GatherElements",G,{axis:Number(j)})},927847:(G,j)=>{T.kb("GatherND",G,{batch_dims:Number(j)})},927926:(G,j,$,oe,Ie,Ue,kA,EA,lt,ut,Et)=>{T.kb("Resize",G,{antialias:j,axes:$?Array.from(v().subarray(Number($)>>>0,Number(oe)>>>0)):[],coordinateTransformMode:Mn(Ie),cubicCoeffA:Ue,excludeOutside:kA,extrapolationValue:EA,keepAspectRatioPolicy:Mn(lt),mode:Mn(ut),nearestMode:Mn(Et)})},928288:(G,j,$,oe,Ie,Ue,kA)=>{T.kb("Slice",G,{starts:j?Array.from(v().subarray(Number(j)>>>0,Number($)>>>0)):[],ends:oe?Array.from(v().subarray(Number(oe)>>>0,Number(Ie)>>>0)):[],axes:Ue?Array.from(v().subarray(Number(Ue)>>>0,Number(kA)>>>0)):[]})},928552:G=>{T.kb("Tile",G,void 0)},928604:(G,j,$)=>{T.kb("InstanceNormalization",G,{epsilon:j,format:$?"NHWC":"NCHW"})},928718:(G,j,$)=>{T.kb("InstanceNormalization",G,{epsilon:j,format:$?"NHWC":"NCHW"})},928832:G=>{T.kb("Range",G,void 0)},928885:(G,j)=>{T.kb("Einsum",G,{equation:Mn(j)})},928966:(G,j,$,oe,Ie)=>{T.kb("Pad",G,{mode:j,value:$,pads:oe?Array.from(v().subarray(Number(oe)>>>0,Number(Ie)>>>0)):[]})},929109:(G,j,$,oe,Ie,Ue)=>{T.kb("BatchNormalization",G,{epsilon:j,momentum:$,spatial:!!Ie,trainingMode:!!oe,format:Ue?"NHWC":"NCHW"})},929278:(G,j,$,oe,Ie,Ue)=>{T.kb("BatchNormalization",G,{epsilon:j,momentum:$,spatial:!!Ie,trainingMode:!!oe,format:Ue?"NHWC":"NCHW"})},929447:(G,j,$)=>{T.kb("CumSum",G,{exclusive:Number(j),reverse:Number($)})},929544:(G,j,$)=>{T.kb("DequantizeLinear",G,{axis:j,blockSize:$})},929634:(G,j,$,oe,Ie)=>{T.kb("GridSample",G,{align_corners:j,mode:Mn($),padding_mode:Mn(oe),format:Ie?"NHWC":"NCHW"})},929804:(G,j,$,oe,Ie)=>{T.kb("GridSample",G,{align_corners:j,mode:Mn($),padding_mode:Mn(oe),format:Ie?"NHWC":"NCHW"})},929974:(G,j,$,oe,Ie,Ue,kA,EA,lt)=>{T.kb("Attention",G,{numHeads:j,isUnidirectional:$,maskFilterValue:oe,scale:Ie,doRotary:Ue,qkvHiddenSizes:kA?Array.from(v().subarray(Number(EA)>>>0,Number(EA)+kA>>>0)):[],pastPresentShareBuffer:!!lt})},930246:G=>{T.kb("BiasAdd",G,void 0)},930301:G=>{T.kb("BiasSplitGelu",G,void 0)},930362:G=>{T.kb("FastGelu",G,void 0)},930418:(G,j,$,oe,Ie,Ue,kA,EA,lt,ut,Et,cr,xr,CA,gr,wn)=>{T.kb("Conv",G,{format:cr?"NHWC":"NCHW",auto_pad:j,dilations:$?Array.from(v().subarray(Number($)>>>0,Number(oe)>>>0)):[],group:Ie,kernel_shape:Ue?Array.from(v().subarray(Number(Ue)>>>0,Number(kA)>>>0)):[],pads:EA?Array.from(v().subarray(Number(EA)>>>0,Number(lt)>>>0)):[],strides:ut?Array.from(v().subarray(Number(ut)>>>0,Number(Et)>>>0)):[],w_is_const:()=>!!h()[Number(xr)>>>0],activation:Mn(CA),activation_params:gr?Array.from(O().subarray(Number(gr)>>>0,Number(wn)>>>0)):[]})},931002:G=>{T.kb("Gelu",G,void 0)},931054:(G,j,$,oe,Ie,Ue,kA,EA,lt)=>{T.kb("GroupQueryAttention",G,{numHeads:j,kvNumHeads:$,scale:oe,softcap:Ie,doRotary:Ue,rotaryInterleaved:kA,smoothSoftmax:EA,localWindowSize:lt})},931271:(G,j,$,oe)=>{T.kb("LayerNormalization",G,{axis:j,epsilon:$,simplified:!!oe})},931382:(G,j,$,oe)=>{T.kb("LayerNormalization",G,{axis:j,epsilon:$,simplified:!!oe})},931493:(G,j,$,oe,Ie,Ue)=>{T.kb("MatMulNBits",G,{k:j,n:$,accuracyLevel:oe,bits:Ie,blockSize:Ue})},931620:(G,j,$,oe,Ie,Ue)=>{T.kb("MultiHeadAttention",G,{numHeads:j,isUnidirectional:$,maskFilterValue:oe,scale:Ie,doRotary:Ue})},931779:(G,j)=>{T.kb("QuickGelu",G,{alpha:j})},931843:(G,j,$,oe,Ie)=>{T.kb("RotaryEmbedding",G,{interleaved:!!j,numHeads:$,rotaryEmbeddingDim:oe,scale:Ie})},931982:(G,j,$)=>{T.kb("SkipLayerNormalization",G,{epsilon:j,simplified:!!$})},932084:(G,j,$)=>{T.kb("SkipLayerNormalization",G,{epsilon:j,simplified:!!$})},932186:(G,j,$,oe)=>{T.kb("GatherBlockQuantized",G,{gatherAxis:j,quantizeAxis:$,blockSize:oe})},932307:G=>{T.$b(G)},932341:(G,j)=>T.cc(Number(G),Number(j),T.Gb.hc,T.Gb.errors)};function Qf(G,j,$){return hu(async()=>{await T.Yb(Number(G),Number(j),Number($))})}function Tf(){return typeof wasmOffsetConverter<"u"}function Tc(G){this.name="ExitStatus",this.message=`Program terminated with exit(${G})`,this.status=G}var Pc=G=>{G.terminate(),G.onmessage=()=>{}},Ng=G=>{U0.length==0&&(Wg(),Rg(U0[0]));var j=U0.pop();if(!j)return 6;uo.push(j),pi[G.Bb]=j,j.Bb=G.Bb;var $={cmd:"run",start_routine:G.ic,arg:G.Rb,pthread_ptr:G.Bb};return j.postMessage($,G.nc),0},go=0,fn=(G,j,...$)=>{for(var oe=2*$.length,Ie=Jc(),Ue=qc(8*oe),kA=Ue>>>3,EA=0;EA<$.length;EA++){var lt=$[EA];typeof lt=="bigint"?(bs[kA+2*EA]=1n,bs[kA+2*EA+1]=lt):(bs[kA+2*EA]=0n,L()[kA+2*EA+1>>>0]=lt)}return G=Yu(G,0,oe,Ue,j),mc(Ie),G};function zc(G){if(be)return fn(0,1,G);if(at=G,!(0<go)){for(var j of uo)Pc(j);for(j of U0)Pc(j);U0=[],uo=[],pi=[],Is=!0}aA(0,new Tc(G))}function Og(G){if(be)return fn(1,0,G);Fc(G)}var Fc=G=>{if(at=G,be)throw Og(G),"unwind";zc(G)},U0=[],uo=[],Lg=[],pi={},Yg=G=>{var j=G.Bb;delete pi[j],U0.push(G),uo.splice(uo.indexOf(G),1),G.Bb=0,Xc(j)};function Hg(){Lg.forEach(G=>G())}var Rg=G=>new Promise(j=>{G.onmessage=Ie=>{var Ue=(Ie=Ie.data).cmd;if(Ie.targetThread&&Ie.targetThread!=u2()){var kA=pi[Ie.targetThread];kA?kA.postMessage(Ie,Ie.transferList):Ct(`Internal error! Worker sent a message "${Ue}" to target pthread ${Ie.targetThread}, but that thread no longer exists!`)}else Ue==="checkMailbox"?sc():Ue==="spawnThread"?Ng(Ie):Ue==="cleanupThread"?Yg(pi[Ie.thread]):Ue==="killThread"?(Ie=Ie.thread,Ue=pi[Ie],delete pi[Ie],Pc(Ue),Xc(Ie),uo.splice(uo.indexOf(Ue),1),Ue.Bb=0):Ue==="cancelThread"?pi[Ie.thread].postMessage({cmd:"cancel"}):Ue==="loaded"?(G.loaded=!0,j(G)):Ue==="alert"?alert(`Thread ${Ie.threadId}: ${Ie.text}`):Ie.target==="setimmediate"?G.postMessage(Ie):Ue==="callHandler"?T[Ie.handler](...Ie.args):Ue&&Ct(`worker sent an unknown command ${Ue}`)},G.onerror=Ie=>{throw Ct(`worker sent an error! ${Ie.filename}:${Ie.lineno}: ${Ie.message}`),Ie};var $,oe=[];for($ of[])T.hasOwnProperty($)&&oe.push($);G.postMessage({cmd:"load",handlers:oe,wasmMemory:iA,wasmModule:gt})});function Wg(){var G=new Worker(import.meta.url.startsWith("file:")?new URL(d("./node_modules/onnxruntime-web/dist/ort.bundle.min.mjs?46eb"),d.b):new URL(import.meta.url),{type:"module",workerData:"em-pthread",name:"em-pthread"});U0.push(G)}var ac=G=>{for(;0<G.length;)G.shift()(T)},Pf=()=>{var G=u2(),j=z()[G+52>>>2>>>0];G=z()[G+56>>>2>>>0],Ru(j,j-G),mc(j)},zf=(G,j)=>{go=0,G=Wu(G,j),0<go?at=G:hc(G)};class Ff{constructor(j){this.Kb=j-24}}function Sf(G,j,$){var oe=new Ff(G>>>=0);throw j>>>=0,$>>>=0,z()[oe.Kb+16>>>2>>>0]=0,z()[oe.Kb+4>>>2>>>0]=j,z()[oe.Kb+8>>>2>>>0]=$,G}function Vg(G,j,$,oe){return be?fn(2,1,G,j,$,oe):jg(G,j,$,oe)}function jg(G,j,$,oe){if(G>>>=0,j>>>=0,$>>>=0,oe>>>=0,Me===void 0)return Ct("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var Ie=[];return be&&Ie.length===0?Vg(G,j,$,oe):(G={ic:$,Bb:G,Rb:oe,nc:Ie},be?(G.Nb="spawnThread",postMessage(G,Ie),0):Ng(G))}var Ug=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,Kg=(G,j,$)=>{var oe=(j>>>=0)+$;for($=j;G[$]&&!($>=oe);)++$;if(16<$-j&&G.buffer&&Ug)return Ug.decode(G.buffer instanceof Me?G.slice(j,$):G.subarray(j,$));for(oe="";j<$;){var Ie=G[j++];if(128&Ie){var Ue=63&G[j++];if((224&Ie)==192)oe+=String.fromCharCode((31&Ie)<<6|Ue);else{var kA=63&G[j++];65536>(Ie=(240&Ie)==224?(15&Ie)<<12|Ue<<6|kA:(7&Ie)<<18|Ue<<12|kA<<6|63&G[j++])?oe+=String.fromCharCode(Ie):(Ie-=65536,oe+=String.fromCharCode(55296|Ie>>10,56320|1023&Ie))}}else oe+=String.fromCharCode(Ie)}return oe},Mn=(G,j)=>(G>>>=0)?Kg(w(),G,j):"";function Zg(G,j,$){return be?fn(3,1,G,j,$):0}function Xg(G,j){if(be)return fn(4,1,G,j)}var Sc=G=>{for(var j=0,$=0;$<G.length;++$){var oe=G.charCodeAt($);127>=oe?j++:2047>=oe?j+=2:55296<=oe&&57343>=oe?(j+=4,++$):j+=3}return j},qg=(G,j,$,oe)=>{if(!(0<oe))return 0;var Ie=$>>>=0;oe=$+oe-1;for(var Ue=0;Ue<G.length;++Ue){var kA=G.charCodeAt(Ue);if(55296<=kA&&57343>=kA&&(kA=65536+((1023&kA)<<10)|1023&G.charCodeAt(++Ue)),127>=kA){if($>=oe)break;j[$++>>>0]=kA}else{if(2047>=kA){if($+1>=oe)break;j[$++>>>0]=192|kA>>6}else{if(65535>=kA){if($+2>=oe)break;j[$++>>>0]=224|kA>>12}else{if($+3>=oe)break;j[$++>>>0]=240|kA>>18,j[$++>>>0]=128|kA>>12&63}j[$++>>>0]=128|kA>>6&63}j[$++>>>0]=128|63&kA}}return j[$>>>0]=0,$-Ie},c2=(G,j,$)=>qg(G,w(),j,$);function Jg(G,j){if(be)return fn(5,1,G,j)}function _g(G,j,$){if(be)return fn(6,1,G,j,$)}function $g(G,j,$){return be?fn(7,1,G,j,$):0}function eu(G,j){if(be)return fn(8,1,G,j)}function Au(G,j,$){if(be)return fn(9,1,G,j,$)}function tu(G,j,$,oe){if(be)return fn(10,1,G,j,$,oe)}function ru(G,j,$,oe){if(be)return fn(11,1,G,j,$,oe)}function nu(G,j,$,oe){if(be)return fn(12,1,G,j,$,oe)}function au(G){if(be)return fn(13,1,G)}function su(G,j){if(be)return fn(14,1,G,j)}function iu(G,j,$){if(be)return fn(15,1,G,j,$)}var ou,K0,Nf=()=>{j0("")},hi=G=>{for(var j="";w()[G>>>0];)j+=ou[w()[G++>>>0]];return j},Nc={},Oc={};function s0(G,j,$={}){if(!("argPackAdvance"in j))throw new TypeError("registerType registeredInstance requires argPackAdvance");return function(oe,Ie,Ue={}){var kA=Ie.name;if(!oe)throw new K0(`type "${kA}" must have a positive integer typeid pointer`);if(Oc.hasOwnProperty(oe)){if(Ue.Tb)return;throw new K0(`Cannot register type '${kA}' twice`)}Oc[oe]=Ie,Nc.hasOwnProperty(oe)&&(Ie=Nc[oe],delete Nc[oe],Ie.forEach(EA=>EA()))}(G,j,$)}var lu=(G,j,$)=>{switch(j){case 1:return $?oe=>h()[oe>>>0]:oe=>w()[oe>>>0];case 2:return $?oe=>B()[oe>>>1>>>0]:oe=>E()[oe>>>1>>>0];case 4:return $?oe=>v()[oe>>>2>>>0]:oe=>z()[oe>>>2>>>0];case 8:return $?oe=>bs[oe>>>3]:oe=>di[oe>>>3];default:throw new TypeError(`invalid integer width (${j}): ${G}`)}};function Of(G,j,$){$>>>=0,s0(G>>>=0,{name:j=hi(j>>>0),fromWireType:oe=>oe,toWireType:function(oe,Ie){if(typeof Ie!="bigint"&&typeof Ie!="number")throw Ie=Ie===null?"null":(oe=typeof Ie)=="object"||oe==="array"||oe==="function"?Ie.toString():""+Ie,new TypeError(`Cannot convert "${Ie}" to ${this.name}`);return typeof Ie=="number"&&(Ie=BigInt(Ie)),Ie},argPackAdvance:Z0,readValueFromPointer:lu(j,$,j.indexOf("u")==-1),Eb:null})}var Z0=8;function Lf(G,j,$,oe){s0(G>>>=0,{name:j=hi(j>>>0),fromWireType:function(Ie){return!!Ie},toWireType:function(Ie,Ue){return Ue?$:oe},argPackAdvance:Z0,readValueFromPointer:function(Ie){return this.fromWireType(w()[Ie>>>0])},Eb:null})}var Lc=[],i0=[];function Yc(G){9<(G>>>=0)&&--i0[G+1]==0&&(i0[G]=void 0,Lc.push(G))}var es=G=>{if(!G)throw new K0("Cannot use deleted val. handle = "+G);return i0[G]},ws=G=>{switch(G){case void 0:return 2;case null:return 4;case!0:return 6;case!1:return 8;default:let j=Lc.pop()||i0.length;return i0[j]=G,i0[j+1]=1,j}};function Hc(G){return this.fromWireType(z()[G>>>2>>>0])}var Yf={name:"emscripten::val",fromWireType:G=>{var j=es(G);return Yc(G),j},toWireType:(G,j)=>ws(j),argPackAdvance:Z0,readValueFromPointer:Hc,Eb:null};function Hf(G){return s0(G>>>0,Yf)}var Rf=(G,j)=>{switch(j){case 4:return function($){return this.fromWireType(O()[$>>>2>>>0])};case 8:return function($){return this.fromWireType(L()[$>>>3>>>0])};default:throw new TypeError(`invalid float width (${j}): ${G}`)}};function Wf(G,j,$){$>>>=0,s0(G>>>=0,{name:j=hi(j>>>0),fromWireType:oe=>oe,toWireType:(oe,Ie)=>Ie,argPackAdvance:Z0,readValueFromPointer:Rf(j,$),Eb:null})}function Vf(G,j,$,oe,Ie){if(G>>>=0,$>>>=0,j=hi(j>>>0),Ie===-1&&(Ie=4294967295),Ie=EA=>EA,oe===0){var Ue=32-8*$;Ie=EA=>EA<<Ue>>>Ue}var kA=j.includes("unsigned")?function(EA,lt){return lt>>>0}:function(EA,lt){return lt};s0(G,{name:j,fromWireType:Ie,toWireType:kA,argPackAdvance:Z0,readValueFromPointer:lu(j,$,oe!==0),Eb:null})}function jf(G,j,$){function oe(Ue){var kA=z()[Ue>>>2>>>0];return Ue=z()[Ue+4>>>2>>>0],new Ie(h().buffer,Ue,kA)}var Ie=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][j];s0(G>>>=0,{name:$=hi($>>>0),fromWireType:oe,argPackAdvance:Z0,readValueFromPointer:oe},{Tb:!0})}function Uf(G,j){G>>>=0;var $=(j=hi(j>>>0))==="std::string";s0(G,{name:j,fromWireType:function(oe){var Ie=z()[oe>>>2>>>0],Ue=oe+4;if($)for(var kA=Ue,EA=0;EA<=Ie;++EA){var lt=Ue+EA;if(EA==Ie||w()[lt>>>0]==0){if(kA=Mn(kA,lt-kA),ut===void 0)var ut=kA;else ut+=String.fromCharCode(0),ut+=kA;kA=lt+1}}else{for(ut=Array(Ie),EA=0;EA<Ie;++EA)ut[EA]=String.fromCharCode(w()[Ue+EA>>>0]);ut=ut.join("")}return Ci(oe),ut},toWireType:function(oe,Ie){Ie instanceof ArrayBuffer&&(Ie=new Uint8Array(Ie));var Ue=typeof Ie=="string";if(!(Ue||Ie instanceof Uint8Array||Ie instanceof Uint8ClampedArray||Ie instanceof Int8Array))throw new K0("Cannot pass non-string to std::string");var kA=$&&Ue?Sc(Ie):Ie.length,EA=pc(4+kA+1),lt=EA+4;if(z()[EA>>>2>>>0]=kA,$&&Ue)c2(Ie,lt,kA+1);else if(Ue)for(Ue=0;Ue<kA;++Ue){var ut=Ie.charCodeAt(Ue);if(255<ut)throw Ci(lt),new K0("String has UTF-16 code units that do not fit in 8 bits");w()[lt+Ue>>>0]=ut}else for(Ue=0;Ue<kA;++Ue)w()[lt+Ue>>>0]=Ie[Ue];return oe!==null&&oe.push(Ci,EA),EA},argPackAdvance:Z0,readValueFromPointer:Hc,Eb(oe){Ci(oe)}})}var cu=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,Kf=(G,j)=>{for(var $=G>>1,oe=$+j/2;!($>=oe)&&E()[$>>>0];)++$;if(32<($<<=1)-G&&cu)return cu.decode(w().slice(G,$));for($="",oe=0;!(oe>=j/2);++oe){var Ie=B()[G+2*oe>>>1>>>0];if(Ie==0)break;$+=String.fromCharCode(Ie)}return $},Zf=(G,j,$)=>{if($??($=2147483647),2>$)return 0;var oe=j;$=($-=2)<2*G.length?$/2:G.length;for(var Ie=0;Ie<$;++Ie){var Ue=G.charCodeAt(Ie);B()[j>>>1>>>0]=Ue,j+=2}return B()[j>>>1>>>0]=0,j-oe},Xf=G=>2*G.length,qf=(G,j)=>{for(var $=0,oe="";!($>=j/4);){var Ie=v()[G+4*$>>>2>>>0];if(Ie==0)break;++$,65536<=Ie?(Ie-=65536,oe+=String.fromCharCode(55296|Ie>>10,56320|1023&Ie)):oe+=String.fromCharCode(Ie)}return oe},Jf=(G,j,$)=>{if(j>>>=0,$??($=2147483647),4>$)return 0;var oe=j;$=oe+$-4;for(var Ie=0;Ie<G.length;++Ie){var Ue=G.charCodeAt(Ie);if(55296<=Ue&&57343>=Ue&&(Ue=65536+((1023&Ue)<<10)|1023&G.charCodeAt(++Ie)),v()[j>>>2>>>0]=Ue,(j+=4)+4>$)break}return v()[j>>>2>>>0]=0,j-oe},_f=G=>{for(var j=0,$=0;$<G.length;++$){var oe=G.charCodeAt($);55296<=oe&&57343>=oe&&++$,j+=4}return j};function $f(G,j,$){if(G>>>=0,j>>>=0,$=hi($>>>=0),j===2)var oe=Kf,Ie=Zf,Ue=Xf,kA=EA=>E()[EA>>>1>>>0];else j===4&&(oe=qf,Ie=Jf,Ue=_f,kA=EA=>z()[EA>>>2>>>0]);s0(G,{name:$,fromWireType:EA=>{for(var lt,ut=z()[EA>>>2>>>0],Et=EA+4,cr=0;cr<=ut;++cr){var xr=EA+4+cr*j;cr!=ut&&kA(xr)!=0||(Et=oe(Et,xr-Et),lt===void 0?lt=Et:(lt+=String.fromCharCode(0),lt+=Et),Et=xr+j)}return Ci(EA),lt},toWireType:(EA,lt)=>{if(typeof lt!="string")throw new K0(`Cannot pass non-string to C++ string type ${$}`);var ut=Ue(lt),Et=pc(4+ut+j);return z()[Et>>>2>>>0]=ut/j,Ie(lt,Et+4,ut+j),EA!==null&&EA.push(Ci,Et),Et},argPackAdvance:Z0,readValueFromPointer:Hc,Eb(EA){Ci(EA)}})}function e4(G,j){s0(G>>>=0,{Ub:!0,name:j=hi(j>>>0),argPackAdvance:0,fromWireType:()=>{},toWireType:()=>{}})}var A4=()=>1;function t4(G){Zc(G>>>0,!we,1,!de,131072,!1),Hg()}var gu=G=>{if(!Is)try{if(G(),!(0<go))try{be?hc(at):Fc(at)}catch(j){j instanceof Tc||j=="unwind"||aA(0,j)}}catch(j){j instanceof Tc||j=="unwind"||aA(0,j)}};function Rc(G){G>>>=0,typeof Atomics.oc=="function"&&(Atomics.oc(v(),G>>>2,G).value.then(sc),G+=128,Atomics.store(v(),G>>>2,1))}var sc=()=>{var G=u2();G&&(Rc(G),gu(Hu))};function r4(G,j){(G>>>=0)==j>>>0?setTimeout(sc):be?postMessage({targetThread:G,cmd:"checkMailbox"}):(G=pi[G])&&G.postMessage({cmd:"checkMailbox"})}var Wc=[];function n4(G,j,$,oe,Ie){for(j>>>=0,oe/=2,Wc.length=oe,$=Ie>>>0>>>3,Ie=0;Ie<oe;Ie++)Wc[Ie]=bs[$+2*Ie]?bs[$+2*Ie+1]:L()[$+2*Ie+1>>>0];return(j?Qc[j]:Z4[G])(...Wc)}function a4(G){G>>>=0,be?postMessage({cmd:"cleanupThread",thread:G}):Yg(pi[G])}function s4(G){}var ic=(G,j)=>{var $=Oc[G];if($===void 0)throw G=Nu(G),$=hi(G),Ci(G),new K0(`${j} has unknown type ${$}`);return $},uu=(G,j,$)=>{var oe=[];return G=G.toWireType(oe,$),oe.length&&(z()[j>>>2>>>0]=ws(oe)),G};function i4(G,j,$){return j>>>=0,$>>>=0,G=es(G>>>0),j=ic(j,"emval::as"),uu(j,$,G)}function o4(G,j){return j>>>=0,G=es(G>>>0),(j=ic(j,"emval::as")).toWireType(null,G)}var oc=G=>{try{G()}catch(j){j0(j)}},X0=0,mi=null,du=0,lc=[],fu={},pu={},l4=0,Vc=null,c4=[];function hu(G){return function(){if(!Is){if(X0===0){var j=!1,$=!1;(oe=>{G().then(oe)})((oe=0)=>{if(!Is&&(du=oe,j=!0,$)){X0=2,oc(()=>Uu(mi)),typeof Browser<"u"&&Browser.Lb.Sb&&Browser.Lb.resume(),oe=!1;try{var Ie=function(){var EA=v()[mi+8>>>2>>>0];return EA=vt[pu[EA]],--go,EA()}()}catch(EA){Ie=EA,oe=!0}var Ue=!1;if(!mi){var kA=Vc;kA&&(Vc=null,(oe?kA.reject:kA.resolve)(Ie),Ue=!0)}if(oe&&!Ue)throw Ie}}),$=!0,j||(X0=1,mi=function(){var oe=pc(65548),Ie=oe+12;z()[oe>>>2>>>0]=Ie,z()[oe+4>>>2>>>0]=Ie+65536,Ie=lc[0];var Ue=fu[Ie];return Ue===void 0&&(Ue=l4++,fu[Ie]=Ue,pu[Ue]=Ie),Ie=Ue,v()[oe+8>>>2>>>0]=Ie,oe}(),typeof Browser<"u"&&Browser.Lb.Sb&&Browser.Lb.pause(),oc(()=>Vu(mi)))}else X0===2?(X0=0,oc(Ku),Ci(mi),mi=null,c4.forEach(gu)):j0(`invalid state: ${X0}`);return du}}()}function g4(G){return G>>>=0,hu(()=>(G=es(G)).then(ws))}var cc=[];function u4(G,j,$,oe){return $>>>=0,oe>>>=0,(G=cc[G>>>0])(null,j=es(j>>>0),$,oe)}var d4={},gc=G=>{var j=d4[G];return j===void 0?hi(G):j};function f4(G,j,$,oe,Ie){return $>>>=0,oe>>>=0,Ie>>>=0,(G=cc[G>>>0])(j=es(j>>>0),j[$=gc($)],oe,Ie)}var mu=()=>typeof globalThis=="object"?globalThis:Function("return this")();function p4(G){return(G>>>=0)==0?ws(mu()):(G=gc(G),ws(mu()[G]))}var h4=G=>{var j=cc.length;return cc.push(G),j},m4=(G,j)=>{for(var $=Array(G),oe=0;oe<G;++oe)$[oe]=ic(z()[j+4*oe>>>2>>>0],"parameter "+oe);return $},Cu=(G,j)=>Object.defineProperty(j,"name",{value:G});function C4(G,j,$){var oe=(j=m4(G,j>>>0)).shift();G--;var Ie=`return function (obj, func, destructorsRef, args) {
`,Ue=0,kA=[];$===0&&kA.push("obj");for(var EA=["retType"],lt=[oe],ut=0;ut<G;++ut)kA.push("arg"+ut),EA.push("argType"+ut),lt.push(j[ut]),Ie+=`  var arg${ut} = argType${ut}.readValueFromPointer(args${Ue?"+"+Ue:""});
`,Ue+=j[ut].argPackAdvance;return Ie+=`  var rv = ${$===1?"new func":"func.call"}(${kA.join(", ")});
`,oe.Ub||(EA.push("emval_returnValue"),lt.push(uu),Ie+=`  return emval_returnValue(retType, destructorsRef, rv);
`),EA.push(Ie+`};
`),G=function(Et){var cr=Function;if(!(cr instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof cr} which is not a function`);var xr=Cu(cr.name||"unknownFunctionName",function(){});return xr.prototype=cr.prototype,xr=new xr,(Et=cr.apply(xr,Et))instanceof Object?Et:xr}(EA)(...lt),$=`methodCaller<(${j.map(Et=>Et.name).join(", ")}) => ${oe.name}>`,h4(Cu($,G))}function b4(G){return G=gc(G>>>0),ws(T[G])}function I4(G,j){return j>>>=0,G=es(G>>>0),j=es(j),ws(G[j])}function w4(G){9<(G>>>=0)&&(i0[G+1]+=1)}function k4(){return ws([])}function x4(G){G=es(G>>>0);for(var j=Array(G.length),$=0;$<G.length;$++)j[$]=G[$];return ws(j)}function B4(G){return ws(gc(G>>>0))}function v4(){return ws({})}function y4(G){for(var j=es(G>>>=0);j.length;){var $=j.pop();j.pop()($)}Yc(G)}function E4(G,j,$){j>>>=0,$>>>=0,G=es(G>>>0),j=es(j),$=es($),G[j]=$}function M4(G,j){return j>>>=0,G=(G=ic(G>>>0,"_emval_take_value")).readValueFromPointer(j),ws(G)}function G4(G,j){G=-9007199254740992>G||9007199254740992<G?NaN:Number(G),j>>>=0,G=new Date(1e3*G),v()[j>>>2>>>0]=G.getUTCSeconds(),v()[j+4>>>2>>>0]=G.getUTCMinutes(),v()[j+8>>>2>>>0]=G.getUTCHours(),v()[j+12>>>2>>>0]=G.getUTCDate(),v()[j+16>>>2>>>0]=G.getUTCMonth(),v()[j+20>>>2>>>0]=G.getUTCFullYear()-1900,v()[j+24>>>2>>>0]=G.getUTCDay(),G=(G.getTime()-Date.UTC(G.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,v()[j+28>>>2>>>0]=G}var g2=G=>G%4==0&&(G%100!=0||G%400==0),bu=[0,31,60,91,121,152,182,213,244,274,305,335],Iu=[0,31,59,90,120,151,181,212,243,273,304,334];function D4(G,j){G=-9007199254740992>G||9007199254740992<G?NaN:Number(G),j>>>=0,G=new Date(1e3*G),v()[j>>>2>>>0]=G.getSeconds(),v()[j+4>>>2>>>0]=G.getMinutes(),v()[j+8>>>2>>>0]=G.getHours(),v()[j+12>>>2>>>0]=G.getDate(),v()[j+16>>>2>>>0]=G.getMonth(),v()[j+20>>>2>>>0]=G.getFullYear()-1900,v()[j+24>>>2>>>0]=G.getDay();var $=(g2(G.getFullYear())?bu:Iu)[G.getMonth()]+G.getDate()-1|0;v()[j+28>>>2>>>0]=$,v()[j+36>>>2>>>0]=-60*G.getTimezoneOffset(),$=new Date(G.getFullYear(),6,1).getTimezoneOffset();var oe=new Date(G.getFullYear(),0,1).getTimezoneOffset();G=0|($!=oe&&G.getTimezoneOffset()==Math.min(oe,$)),v()[j+32>>>2>>>0]=G}function Q4(G){G>>>=0;var j=new Date(v()[G+20>>>2>>>0]+1900,v()[G+16>>>2>>>0],v()[G+12>>>2>>>0],v()[G+8>>>2>>>0],v()[G+4>>>2>>>0],v()[G>>>2>>>0],0),$=v()[G+32>>>2>>>0],oe=j.getTimezoneOffset(),Ie=new Date(j.getFullYear(),6,1).getTimezoneOffset(),Ue=new Date(j.getFullYear(),0,1).getTimezoneOffset(),kA=Math.min(Ue,Ie);return 0>$?v()[G+32>>>2>>>0]=+(Ie!=Ue&&kA==oe):0<$!=(kA==oe)&&(Ie=Math.max(Ue,Ie),j.setTime(j.getTime()+6e4*((0<$?kA:Ie)-oe))),v()[G+24>>>2>>>0]=j.getDay(),$=(g2(j.getFullYear())?bu:Iu)[j.getMonth()]+j.getDate()-1|0,v()[G+28>>>2>>>0]=$,v()[G>>>2>>>0]=j.getSeconds(),v()[G+4>>>2>>>0]=j.getMinutes(),v()[G+8>>>2>>>0]=j.getHours(),v()[G+12>>>2>>>0]=j.getDate(),v()[G+16>>>2>>>0]=j.getMonth(),v()[G+20>>>2>>>0]=j.getYear(),G=j.getTime(),BigInt(isNaN(G)?-1:G/1e3)}function wu(G,j,$,oe,Ie,Ue,kA){return be?fn(16,1,G,j,$,oe,Ie,Ue,kA):-52}function ku(G,j,$,oe,Ie,Ue){if(be)return fn(17,1,G,j,$,oe,Ie,Ue)}function T4(G,j,$,oe){G>>>=0,j>>>=0,$>>>=0,oe>>>=0;var Ie=new Date().getFullYear(),Ue=new Date(Ie,0,1),kA=new Date(Ie,6,1);Ie=Ue.getTimezoneOffset();var EA=kA.getTimezoneOffset(),lt=Math.max(Ie,EA);z()[G>>>2>>>0]=60*lt,v()[j>>>2>>>0]=+(Ie!=EA),Ue=(G=ut=>ut.toLocaleTimeString(void 0,{hour12:!1,timeZoneName:"short"}).split(" ")[1])(Ue),kA=G(kA),EA<Ie?(c2(Ue,$,17),c2(kA,oe,17)):(c2(Ue,oe,17),c2(kA,$,17))}var jc=[],xu=(G,j)=>{jc.length=0;for(var $;$=w()[G++>>>0];){var oe=$!=105;j+=(oe&=$!=112)&&j%8?4:0,jc.push($==112?z()[j>>>2>>>0]:$==106?bs[j>>>3]:$==105?v()[j>>>2>>>0]:L()[j>>>3>>>0]),j+=oe?8:4}return jc};function P4(G,j,$){return G>>>=0,j=xu(j>>>0,$>>>0),Qc[G](...j)}function z4(G,j,$){return G>>>=0,j=xu(j>>>0,$>>>0),Qc[G](...j)}var F4=()=>{},S4=()=>Date.now();function N4(G,j){return Ct(Mn(G>>>0,j>>>0))}var Bu,O4=()=>{throw go+=1,"unwind"};function L4(){return 4294901760}Bu=()=>performance.timeOrigin+performance.now();var Y4=()=>navigator.hardwareConcurrency;function H4(){return j0("Cannot use emscripten_pc_get_function without -sUSE_OFFSET_CONVERTER"),0}function R4(G){G>>>=0;var j=w().length;if(G<=j||4294901760<G)return!1;for(var $=1;4>=$;$*=2){var oe=j*(1+.2/$);oe=Math.min(oe,G+100663296);var Ie=Math;oe=Math.max(G,oe);e:{Ie=(Ie.min.call(Ie,4294901760,oe+(65536-oe%65536)%65536)-iA.buffer.byteLength+65535)/65536;try{iA.grow(Ie),kr();var Ue=1;break e}catch{}Ue=void 0}if(Ue)return!0}return!1}var uc=()=>(j0("Cannot use convertFrameToPC (needed by __builtin_return_address) without -sUSE_OFFSET_CONVERTER"),0),y1={},vu=G=>{G.forEach(j=>{uc()})};function W4(){var G=Error().stack.toString().split(`
`);return G[0]=="Error"&&G.shift(),vu(G),y1.Qb=uc(),y1.fc=G,y1.Qb}function V4(G,j,$){if(G>>>=0,j>>>=0,y1.Qb==G)var oe=y1.fc;else(oe=Error().stack.toString().split(`
`))[0]=="Error"&&oe.shift(),vu(oe);for(var Ie=3;oe[Ie]&&uc()!=G;)++Ie;for(G=0;G<$&&oe[G+Ie];++G)v()[j+4*G>>>2>>>0]=uc();return G}var Uc,Kc={},yu=()=>{if(!Uc){var G,j={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:"./this.program"};for(G in Kc)Kc[G]===void 0?delete j[G]:j[G]=Kc[G];var $=[];for(G in j)$.push(`${G}=${j[G]}`);Uc=$}return Uc};function Eu(G,j){if(be)return fn(18,1,G,j);G>>>=0,j>>>=0;var $=0;return yu().forEach((oe,Ie)=>{var Ue=j+$;for(Ie=z()[G+4*Ie>>>2>>>0]=Ue,Ue=0;Ue<oe.length;++Ue)h()[Ie++>>>0]=oe.charCodeAt(Ue);h()[Ie>>>0]=0,$+=oe.length+1}),0}function Mu(G,j){if(be)return fn(19,1,G,j);G>>>=0,j>>>=0;var $=yu();z()[G>>>2>>>0]=$.length;var oe=0;return $.forEach(Ie=>oe+=Ie.length+1),z()[j>>>2>>>0]=oe,0}function Gu(G){return be?fn(20,1,G):52}function Du(G,j,$,oe){return be?fn(21,1,G,j,$,oe):52}function Qu(G,j,$,oe){return be?fn(22,1,G,j,$,oe):70}var j4=[null,[],[]];function Tu(G,j,$,oe){if(be)return fn(23,1,G,j,$,oe);j>>>=0,$>>>=0,oe>>>=0;for(var Ie=0,Ue=0;Ue<$;Ue++){var kA=z()[j>>>2>>>0],EA=z()[j+4>>>2>>>0];j+=8;for(var lt=0;lt<EA;lt++){var ut=w()[kA+lt>>>0],Et=j4[G];ut===0||ut===10?((G===1?Jt:Ct)(Kg(Et,0)),Et.length=0):Et.push(ut)}Ie+=EA}return z()[oe>>>2>>>0]=Ie,0}var Pu=[31,29,31,30,31,30,31,31,30,31,30,31],zu=[31,28,31,30,31,30,31,31,30,31,30,31],U4=(G,j)=>{h().set(G,j>>>0)};function Fu(G,j,$,oe){function Ie(CA,gr,wn){for(CA=typeof CA=="number"?CA.toString():CA||"";CA.length<gr;)CA=wn[0]+CA;return CA}function Ue(CA,gr){return Ie(CA,gr,"0")}function kA(CA,gr){function wn(Xu){return 0>Xu?-1:0<Xu?1:0}var fo;return(fo=wn(CA.getFullYear()-gr.getFullYear()))===0&&(fo=wn(CA.getMonth()-gr.getMonth()))===0&&(fo=wn(CA.getDate()-gr.getDate())),fo}function EA(CA){switch(CA.getDay()){case 0:return new Date(CA.getFullYear()-1,11,29);case 1:return CA;case 2:return new Date(CA.getFullYear(),0,3);case 3:return new Date(CA.getFullYear(),0,2);case 4:return new Date(CA.getFullYear(),0,1);case 5:return new Date(CA.getFullYear()-1,11,31);case 6:return new Date(CA.getFullYear()-1,11,30)}}function lt(CA){var gr=CA.Cb;for(CA=new Date(new Date(CA.Db+1900,0,1).getTime());0<gr;){var wn=CA.getMonth(),fo=(g2(CA.getFullYear())?Pu:zu)[wn];if(!(gr>fo-CA.getDate())){CA.setDate(CA.getDate()+gr);break}gr-=fo-CA.getDate()+1,CA.setDate(1),11>wn?CA.setMonth(wn+1):(CA.setMonth(0),CA.setFullYear(CA.getFullYear()+1))}return wn=new Date(CA.getFullYear()+1,0,4),gr=EA(new Date(CA.getFullYear(),0,4)),wn=EA(wn),0>=kA(gr,CA)?0>=kA(wn,CA)?CA.getFullYear()+1:CA.getFullYear():CA.getFullYear()-1}G>>>=0,j>>>=0,$>>>=0,oe>>>=0;var ut=z()[oe+40>>>2>>>0];for(var Et in oe={lc:v()[oe>>>2>>>0],kc:v()[oe+4>>>2>>>0],Ib:v()[oe+8>>>2>>>0],Mb:v()[oe+12>>>2>>>0],Jb:v()[oe+16>>>2>>>0],Db:v()[oe+20>>>2>>>0],vb:v()[oe+24>>>2>>>0],Cb:v()[oe+28>>>2>>>0],sc:v()[oe+32>>>2>>>0],jc:v()[oe+36>>>2>>>0],mc:ut?Mn(ut):""},$=Mn($),ut={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"})$=$.replace(new RegExp(Et,"g"),ut[Et]);var cr="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),xr="January February March April May June July August September October November December".split(" ");for(Et in ut={"%a":CA=>cr[CA.vb].substring(0,3),"%A":CA=>cr[CA.vb],"%b":CA=>xr[CA.Jb].substring(0,3),"%B":CA=>xr[CA.Jb],"%C":CA=>Ue((CA.Db+1900)/100|0,2),"%d":CA=>Ue(CA.Mb,2),"%e":CA=>Ie(CA.Mb,2," "),"%g":CA=>lt(CA).toString().substring(2),"%G":lt,"%H":CA=>Ue(CA.Ib,2),"%I":CA=>((CA=CA.Ib)==0?CA=12:12<CA&&(CA-=12),Ue(CA,2)),"%j":CA=>{for(var gr=0,wn=0;wn<=CA.Jb-1;gr+=(g2(CA.Db+1900)?Pu:zu)[wn++]);return Ue(CA.Mb+gr,3)},"%m":CA=>Ue(CA.Jb+1,2),"%M":CA=>Ue(CA.kc,2),"%n":()=>`
`,"%p":CA=>0<=CA.Ib&&12>CA.Ib?"AM":"PM","%S":CA=>Ue(CA.lc,2),"%t":()=>"	","%u":CA=>CA.vb||7,"%U":CA=>Ue(Math.floor((CA.Cb+7-CA.vb)/7),2),"%V":CA=>{var gr=Math.floor((CA.Cb+7-(CA.vb+6)%7)/7);if(2>=(CA.vb+371-CA.Cb-2)%7&&gr++,gr)gr==53&&((wn=(CA.vb+371-CA.Cb)%7)==4||wn==3&&g2(CA.Db)||(gr=1));else{gr=52;var wn=(CA.vb+7-CA.Cb-1)%7;(wn==4||wn==5&&g2(CA.Db%400-1))&&gr++}return Ue(gr,2)},"%w":CA=>CA.vb,"%W":CA=>Ue(Math.floor((CA.Cb+7-(CA.vb+6)%7)/7),2),"%y":CA=>(CA.Db+1900).toString().substring(2),"%Y":CA=>CA.Db+1900,"%z":CA=>(0<=(CA=CA.jc)?"+":"-")+("0000"+((CA=Math.abs(CA)/60)/60*100+CA%60)).slice(-4),"%Z":CA=>CA.mc,"%%":()=>"%"},$=$.replace(/%%/g,"\0\0"),ut)$.includes(Et)&&($=$.replace(new RegExp(Et,"g"),ut[Et](oe)));return Et=function(CA){var gr=Array(Sc(CA)+1);return qg(CA,gr,0,gr.length),gr}($=$.replace(/\0\0/g,"%")),Et.length>j?0:(U4(Et,G),Et.length-1)}function K4(G,j,$,oe){return Fu(G>>>0,j>>>0,$>>>0,oe>>>0)}be||function(){for(var G=T.numThreads-1;G--;)Wg();Ea.unshift(()=>{co++,function(j){be?j():Promise.all(U0.map(Rg)).then(j)}(()=>Qg())})}();for(var Su=Array(256),dc=0;256>dc;++dc)Su[dc]=String.fromCharCode(dc);ou=Su,K0=T.BindingError=class extends Error{constructor(G){super(G),this.name="BindingError"}},T.InternalError=class extends Error{constructor(G){super(G),this.name="InternalError"}},i0.push(0,1,void 0,1,null,1,!0,1,!1,1),T.count_emval_handles=()=>i0.length/2-5-Lc.length;var Z4=[zc,Og,Vg,Zg,Xg,Jg,_g,$g,eu,Au,tu,ru,nu,au,su,iu,wu,ku,Eu,Mu,Gu,Du,Qu,Tu],vt=function(){function G($,oe){return vt=$.exports,vt=function(){var Ie=vt,Ue={};for(let[kA,EA]of Object.entries(Ie))Ue[kA]=typeof EA=="function"?(...lt)=>{lc.push(kA);try{return EA(...lt)}finally{Is||(lc.pop(),mi&&X0===1&&lc.length===0&&(X0=0,go+=1,oc(ju),typeof Fibers<"u"&&Fibers.tc()))}}:EA;return Ue}(),vt=function(){var Ie=vt,Ue=EA=>lt=>EA(lt)>>>0,kA=EA=>()=>EA()>>>0;return(Ie=Object.assign({},Ie)).Da=Ue(Ie.Da),Ie.gb=kA(Ie.gb),Ie.ib=Ue(Ie.ib),Ie.emscripten_main_runtime_thread_id=kA(Ie.emscripten_main_runtime_thread_id),Ie.tb=Ue(Ie.tb),Ie.ub=kA(Ie.ub),Ie}(),Lg.push(vt.jb),a0.unshift(vt.Ca),gt=oe,Qg(),vt}var j=Sg();if(co++,T.instantiateWasm)try{return T.instantiateWasm(j,G)}catch($){Ct(`Module.instantiateWasm callback failed with error: ${$}`),te($)}return Dc||(Dc=T.locateFile?Tg("ort-wasm-simd-threaded.jsep.wasm")?"ort-wasm-simd-threaded.jsep.wasm":T.locateFile?T.locateFile("ort-wasm-simd-threaded.jsep.wasm",zA):zA+"ort-wasm-simd-threaded.jsep.wasm":new URL(d("./node_modules/onnxruntime-web/dist/ort-wasm-simd-threaded.jsep.wasm"),d.b).href),function($,oe){var Ie=Dc;return jA||typeof WebAssembly.instantiateStreaming!="function"||Tg(Ie)||Pg(Ie)||typeof fetch!="function"?Fg(Ie,$,oe):fetch(Ie,{credentials:"same-origin"}).then(Ue=>WebAssembly.instantiateStreaming(Ue,$).then(oe,function(kA){return Ct(`wasm streaming compile failed: ${kA}`),Ct("falling back to ArrayBuffer instantiation"),Fg(Ie,$,oe)}))}(j,function($){G($.instance,$.module)}).catch(te),{}}(),Nu=G=>(Nu=vt.Da)(G),Ou=()=>(Ou=vt.Ea)();T._OrtInit=(G,j)=>(T._OrtInit=vt.Fa)(G,j),T._OrtGetLastError=(G,j)=>(T._OrtGetLastError=vt.Ga)(G,j),T._OrtCreateSessionOptions=(G,j,$,oe,Ie,Ue,kA,EA,lt,ut)=>(T._OrtCreateSessionOptions=vt.Ha)(G,j,$,oe,Ie,Ue,kA,EA,lt,ut),T._OrtAppendExecutionProvider=(G,j)=>(T._OrtAppendExecutionProvider=vt.Ia)(G,j),T._OrtAddFreeDimensionOverride=(G,j,$)=>(T._OrtAddFreeDimensionOverride=vt.Ja)(G,j,$),T._OrtAddSessionConfigEntry=(G,j,$)=>(T._OrtAddSessionConfigEntry=vt.Ka)(G,j,$),T._OrtReleaseSessionOptions=G=>(T._OrtReleaseSessionOptions=vt.La)(G),T._OrtCreateSession=(G,j,$)=>(T._OrtCreateSession=vt.Ma)(G,j,$),T._OrtReleaseSession=G=>(T._OrtReleaseSession=vt.Na)(G),T._OrtGetInputOutputCount=(G,j,$)=>(T._OrtGetInputOutputCount=vt.Oa)(G,j,$),T._OrtGetInputName=(G,j)=>(T._OrtGetInputName=vt.Pa)(G,j),T._OrtGetOutputName=(G,j)=>(T._OrtGetOutputName=vt.Qa)(G,j),T._OrtFree=G=>(T._OrtFree=vt.Ra)(G),T._OrtCreateTensor=(G,j,$,oe,Ie,Ue)=>(T._OrtCreateTensor=vt.Sa)(G,j,$,oe,Ie,Ue),T._OrtGetTensorData=(G,j,$,oe,Ie)=>(T._OrtGetTensorData=vt.Ta)(G,j,$,oe,Ie),T._OrtReleaseTensor=G=>(T._OrtReleaseTensor=vt.Ua)(G),T._OrtCreateRunOptions=(G,j,$,oe)=>(T._OrtCreateRunOptions=vt.Va)(G,j,$,oe),T._OrtAddRunConfigEntry=(G,j,$)=>(T._OrtAddRunConfigEntry=vt.Wa)(G,j,$),T._OrtReleaseRunOptions=G=>(T._OrtReleaseRunOptions=vt.Xa)(G),T._OrtCreateBinding=G=>(T._OrtCreateBinding=vt.Ya)(G),T._OrtBindInput=(G,j,$)=>(T._OrtBindInput=vt.Za)(G,j,$),T._OrtBindOutput=(G,j,$,oe)=>(T._OrtBindOutput=vt._a)(G,j,$,oe),T._OrtClearBoundOutputs=G=>(T._OrtClearBoundOutputs=vt.$a)(G),T._OrtReleaseBinding=G=>(T._OrtReleaseBinding=vt.ab)(G),T._OrtRunWithBinding=(G,j,$,oe,Ie)=>(T._OrtRunWithBinding=vt.bb)(G,j,$,oe,Ie),T._OrtRun=(G,j,$,oe,Ie,Ue,kA,EA)=>(T._OrtRun=vt.cb)(G,j,$,oe,Ie,Ue,kA,EA),T._OrtEndProfiling=G=>(T._OrtEndProfiling=vt.db)(G),T._JsepOutput=(G,j,$)=>(T._JsepOutput=vt.eb)(G,j,$),T._JsepGetNodeName=G=>(T._JsepGetNodeName=vt.fb)(G);var fc,u2=()=>(u2=vt.gb)(),Ci=T._free=G=>(Ci=T._free=vt.hb)(G),pc=T._malloc=G=>(pc=T._malloc=vt.ib)(G),Zc=(G,j,$,oe,Ie,Ue)=>(Zc=vt.lb)(G,j,$,oe,Ie,Ue),Lu=()=>(Lu=vt.mb)(),Yu=(G,j,$,oe,Ie)=>(Yu=vt.nb)(G,j,$,oe,Ie),Xc=G=>(Xc=vt.ob)(G),hc=G=>(hc=vt.pb)(G),Hu=()=>(Hu=vt.qb)(),Ru=(G,j)=>(Ru=vt.rb)(G,j),mc=G=>(mc=vt.sb)(G),qc=G=>(qc=vt.tb)(G),Jc=()=>(Jc=vt.ub)(),Wu=T.dynCall_ii=(G,j)=>(Wu=T.dynCall_ii=vt.wb)(G,j),Vu=G=>(Vu=vt.xb)(G),ju=()=>(ju=vt.yb)(),Uu=G=>(Uu=vt.zb)(G),Ku=()=>(Ku=vt.Ab)();function Zu(){0<co||(be?(ee(T),be||ac(a0),startWorker(T)):(ac(Ea),0<co||fc||(fc=!0,T.calledRun=!0,Is||(be||ac(a0),ee(T),be||ac(Gc)))))}return T.___start_em_js=932469,T.___stop_em_js=932715,T.stackSave=()=>Jc(),T.stackRestore=G=>mc(G),T.stackAlloc=G=>qc(G),T.setValue=function(G,j,$="i8"){switch($.endsWith("*")&&($="*"),$){case"i1":case"i8":h()[G>>>0]=j;break;case"i16":B()[G>>>1>>>0]=j;break;case"i32":v()[G>>>2>>>0]=j;break;case"i64":bs[G>>>3]=BigInt(j);break;case"float":O()[G>>>2>>>0]=j;break;case"double":L()[G>>>3>>>0]=j;break;case"*":z()[G>>>2>>>0]=j;break;default:j0(`invalid type for setValue: ${$}`)}},T.getValue=function(G,j="i8"){switch(j.endsWith("*")&&(j="*"),j){case"i1":case"i8":return h()[G>>>0];case"i16":return B()[G>>>1>>>0];case"i32":return v()[G>>>2>>>0];case"i64":return bs[G>>>3];case"float":return O()[G>>>2>>>0];case"double":return L()[G>>>3>>>0];case"*":return z()[G>>>2>>>0];default:j0(`invalid type for getValue: ${j}`)}},T.UTF8ToString=Mn,T.stringToUTF8=c2,T.lengthBytesUTF8=Sc,v1=function G(){fc||Zu(),fc||(v1=G)},Zu(),T.PTR_SIZE=4,le},Vr=Ar,((i=globalThis.self)==null?void 0:i.name)==="em-pthread"&&Ar()}),e2=Pe(()=>{bA(),$t=typeof location>"u"?void 0:location.origin,Pr=(()=>{var i;return(i=import.meta.url)!=null&&i.startsWith("file:")?new URL(new URL(d("./node_modules/onnxruntime-web/dist/ort.bundle.min.mjs?46eb"),d.b).href,$t).href:import.meta.url})(),wt=()=>{if(Pr&&!Pr.startsWith("blob:"))return Pr.substring(0,Pr.lastIndexOf("/")+1)},qn=(i,u)=>{try{let h=u??Pr;return(h?new URL(i,h):new URL(i)).origin===$t}catch{return!1}},Yn=(i,u)=>{let h=u??Pr;try{return(h?new URL(i,h):new URL(i)).href}catch{return}},kn=(i,u)=>`${u??"./"}${i}`,qA=async i=>{let u=await(await fetch(i,{credentials:"same-origin"})).blob();return URL.createObjectURL(u)},et=async i=>(await $4(()=>import(i),[],import.meta.url)).default,FA=(tt(),sA(NA)).default,Kt=async()=>{if(!Pr)throw new Error("Failed to load proxy worker: cannot determine the script source URL.");if(qn(Pr))return[void 0,FA()];let i=await qA(Pr);return[i,FA(i)]},Vn=(R1(),sA(nt)).default,zn=async(i,u,h)=>{if(!i&&!u&&Vn&&Pr&&qn(Pr))return[void 0,Vn];{let w="ort-wasm-simd-threaded.jsep.mjs",B=i??Yn(w,u),E=h&&B&&!qn(B,u),v=E?await qA(B):B??kn(w,u);return[E?v:void 0,await et(v)]}}}),si=Pe(()=>{e2(),Jn=!1,_n=!1,la=!1,Yr=()=>{if(typeof SharedArrayBuffer>"u")return!1;try{return typeof MessageChannel<"u"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}},yt=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},Dn=async i=>{if(Jn)return Promise.resolve();if(_n)throw new Error("multiple calls to 'initializeWebAssembly()' detected.");if(la)throw new Error("previous call to 'initializeWebAssembly()' failed.");_n=!0;let u=i.initTimeout,h=i.numThreads;if(!yt())throw new Error("WebAssembly SIMD is not supported in the current environment.");let w=Yr();h>1&&!w&&(typeof self<"u"&&!self.crossOriginIsolated&&console.warn("env.wasm.numThreads is set to "+h+", but this will not work unless you enable crossOriginIsolated mode. See https://web.dev/cross-origin-isolation-guide/ for more info."),console.warn("WebAssembly multi-threading is not supported in the current environment. Falling back to single-threading."),i.numThreads=h=1);let B=i.wasmPaths,E=typeof B=="string"?B:void 0,v=B==null?void 0:B.mjs,z=(v==null?void 0:v.href)??v,O=B==null?void 0:B.wasm,L=(O==null?void 0:O.href)??O,ee=i.wasmBinary,[te,T]=await zn(z,E,h>1),le=!1,de=[];if(u>0&&de.push(new Promise(we=>{setTimeout(()=>{le=!0,we()},u)})),de.push(new Promise((we,be)=>{let Me={numThreads:h};if(ee)Me.wasmBinary=ee;else if(L||E)Me.locateFile=Fe=>L??E+Fe;else if(z&&z.indexOf("blob:")!==0)Me.locateFile=Fe=>new URL(Fe,z).href;else if(te){let Fe=wt();Fe&&(Me.locateFile=We=>Fe+We)}T(Me).then(Fe=>{_n=!1,Jn=!0,oa=Fe,we(),te&&URL.revokeObjectURL(te)},Fe=>{_n=!1,la=!0,be(Fe)})})),await Promise.race(de),le)throw new Error(`WebAssembly backend initializing failed due to timeout: ${u}ms`)},zr=()=>{if(Jn&&oa)return oa;throw new Error("WebAssembly is not initialized yet.")}}),C1=Pe(()=>{si(),jr=(i,u)=>{let h=zr(),w=h.lengthBytesUTF8(i)+1,B=h._malloc(w);return h.stringToUTF8(i,B,w),u.push(B),B},Ca=(i,u,h,w)=>{if(typeof i=="object"&&i!==null){if(h.has(i))throw new Error("Circular reference in options");h.add(i)}Object.entries(i).forEach(([B,E])=>{let v=u?u+B:B;if(typeof E=="object")Ca(E,v+".",h,w);else if(typeof E=="string"||typeof E=="number")w(v,E.toString());else{if(typeof E!="boolean")throw new Error("Can't handle extra config type: "+typeof E);w(v,E?"1":"0")}})},Xt=i=>{let u=zr(),h=u.stackSave();try{let w=u.PTR_SIZE,B=u.stackAlloc(2*w);u._OrtGetLastError(B,B+w);let E=Number(u.getValue(B,w===4?"i32":"i64")),v=u.getValue(B+w,"*"),z=v?u.UTF8ToString(v):"";throw new Error(`${i} ERROR_CODE: ${E}, ERROR_MESSAGE: ${z}`)}finally{u.stackRestore(h)}}}),b1=Pe(()=>{si(),C1(),$n=i=>{let u=zr(),h=0,w=[],B=i||{};try{if((i==null?void 0:i.logSeverityLevel)===void 0)B.logSeverityLevel=2;else if(typeof i.logSeverityLevel!="number"||!Number.isInteger(i.logSeverityLevel)||i.logSeverityLevel<0||i.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${i.logSeverityLevel}`);if((i==null?void 0:i.logVerbosityLevel)===void 0)B.logVerbosityLevel=0;else if(typeof i.logVerbosityLevel!="number"||!Number.isInteger(i.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${i.logVerbosityLevel}`);(i==null?void 0:i.terminate)===void 0&&(B.terminate=!1);let E=0;return(i==null?void 0:i.tag)!==void 0&&(E=jr(i.tag,w)),h=u._OrtCreateRunOptions(B.logSeverityLevel,B.logVerbosityLevel,!!B.terminate,E),h===0&&Xt("Can't create run options."),(i==null?void 0:i.extra)!==void 0&&Ca(i.extra,"",new WeakSet,(v,z)=>{let O=jr(v,w),L=jr(z,w);u._OrtAddRunConfigEntry(h,O,L)!==0&&Xt(`Can't set a run config entry: ${v} - ${z}.`)}),[h,w]}catch(E){throw h!==0&&u._OrtReleaseRunOptions(h),w.forEach(v=>u._free(v)),E}}}),W1=Pe(()=>{si(),C1(),ba=i=>{switch(i){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${i}`)}},ks=i=>{switch(i){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${i}`)}},As=i=>{i.extra||(i.extra={}),i.extra.session||(i.extra.session={});let u=i.extra.session;u.use_ort_model_bytes_directly||(u.use_ort_model_bytes_directly="1"),i.executionProviders&&i.executionProviders.some(h=>(typeof h=="string"?h:h.name)==="webgpu")&&(i.enableMemPattern=!1)},ts=(i,u,h)=>{for(let w of u){let B=typeof w=="string"?w:w.name;switch(B){case"webnn":if(B="WEBNN",typeof w!="string"){let v=w==null?void 0:w.deviceType;if(v){let z=jr("deviceType",h),O=jr(v,h);zr()._OrtAddSessionConfigEntry(i,z,O)!==0&&Xt(`Can't set a session config entry: 'deviceType' - ${v}.`)}}break;case"webgpu":if(B="JS",typeof w!="string"){let v=w;if(v!=null&&v.preferredLayout){if(v.preferredLayout!=="NCHW"&&v.preferredLayout!=="NHWC")throw new Error(`preferredLayout must be either 'NCHW' or 'NHWC': ${v.preferredLayout}`);let z=jr("preferredLayout",h),O=jr(v.preferredLayout,h);zr()._OrtAddSessionConfigEntry(i,z,O)!==0&&Xt(`Can't set a session config entry: 'preferredLayout' - ${v.preferredLayout}.`)}}break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${B}`)}let E=jr(B,h);zr()._OrtAppendExecutionProvider(i,E)!==0&&Xt(`Can't append execution provider: ${B}.`)}},xs=i=>{let u=zr(),h=0,w=[],B=i||{};As(B);try{let E=ba(B.graphOptimizationLevel??"all"),v=ks(B.executionMode??"sequential"),z=typeof B.logId=="string"?jr(B.logId,w):0,O=B.logSeverityLevel??2;if(!Number.isInteger(O)||O<0||O>4)throw new Error(`log serverity level is not valid: ${O}`);let L=B.logVerbosityLevel??0;if(!Number.isInteger(L)||L<0||L>4)throw new Error(`log verbosity level is not valid: ${L}`);let ee=typeof B.optimizedModelFilePath=="string"?jr(B.optimizedModelFilePath,w):0;if(h=u._OrtCreateSessionOptions(E,!!B.enableCpuMemArena,!!B.enableMemPattern,v,!!B.enableProfiling,0,z,O,L,ee),h===0&&Xt("Can't create session options."),B.executionProviders&&ts(h,B.executionProviders,w),B.enableGraphCapture!==void 0){if(typeof B.enableGraphCapture!="boolean")throw new Error(`enableGraphCapture must be a boolean value: ${B.enableGraphCapture}`);let te=jr("enableGraphCapture",w),T=jr(B.enableGraphCapture.toString(),w);u._OrtAddSessionConfigEntry(h,te,T)!==0&&Xt(`Can't set a session config entry: 'enableGraphCapture' - ${B.enableGraphCapture}.`)}if(B.freeDimensionOverrides)for(let[te,T]of Object.entries(B.freeDimensionOverrides)){if(typeof te!="string")throw new Error(`free dimension override name must be a string: ${te}`);if(typeof T!="number"||!Number.isInteger(T)||T<0)throw new Error(`free dimension override value must be a non-negative integer: ${T}`);let le=jr(te,w);u._OrtAddFreeDimensionOverride(h,le,T)!==0&&Xt(`Can't set a free dimension override: ${te} - ${T}.`)}return B.extra!==void 0&&Ca(B.extra,"",new WeakSet,(te,T)=>{let le=jr(te,w),de=jr(T,w);u._OrtAddSessionConfigEntry(h,le,de)!==0&&Xt(`Can't set a session config entry: ${te} - ${T}.`)}),[h,w]}catch(E){throw h!==0&&u._OrtReleaseSessionOptions(h)!==0&&Xt("Can't release session options."),w.forEach(v=>u._free(v)),E}}}),Mt=Pe(()=>{qr=i=>{switch(i){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;case"int4":return 22;case"uint4":return 21;default:throw new Error(`unsupported data type: ${i}`)}},ca=i=>{switch(i){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";case 22:return"int4";case 21:return"uint4";default:throw new Error(`unsupported data type: ${i}`)}},Ia=(i,u)=>{let h=[-1,4,1,1,2,2,4,8,-1,1,2,8,4,8,-1,-1,-1,-1,-1,-1,-1,.5,.5][i],w=typeof u=="number"?u:u.reduce((B,E)=>B*E,1);return h>0?Math.ceil(w*h):void 0},rs=i=>{switch(i){case"float16":return typeof Float16Array<"u"&&Float16Array.from?Float16Array:Uint16Array;case"float32":return Float32Array;case"uint8":case"bool":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${i}`)}},ea=i=>{switch(i){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${i}`)}},Ma=i=>i==="float32"||i==="float16"||i==="int32"||i==="int64"||i==="uint32"||i==="uint8"||i==="bool"||i==="uint4"||i==="int4",Br=i=>i==="float32"||i==="float16"||i==="int32"||i==="int64"||i==="uint32"||i==="uint64"||i==="int8"||i==="uint8"||i==="bool"||i==="uint4"||i==="int4",Ya=i=>{switch(i){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;case"ml-tensor":return 5;default:throw new Error(`unsupported data location: ${i}`)}}}),I1=Pe(()=>{bA(),Ha=async i=>{if(typeof i=="string"){let u=await fetch(i);if(!u.ok)throw new Error(`failed to load external data file: ${i}`);let h=u.headers.get("Content-Length"),w=h?parseInt(h,10):0;if(w<1073741824)return new Uint8Array(await u.arrayBuffer());{if(!u.body)throw new Error(`failed to load external data file: ${i}, no response body.`);let B,E=u.body.getReader();try{B=new ArrayBuffer(w)}catch(z){if(!(z instanceof RangeError))throw z;{let O=Math.ceil(w/65536);B=new WebAssembly.Memory({initial:O,maximum:O}).buffer}}let v=0;for(;;){let{done:z,value:O}=await E.read();if(z)break;let L=O.byteLength;new Uint8Array(B,v,L).set(O),v+=L}return new Uint8Array(B,0,w)}}return i instanceof Blob?new Uint8Array(await i.arrayBuffer()):i instanceof Uint8Array?i:new Uint8Array(i)}}),Cs=Pe(()=>{Mt(),Bs=["V","I","W","E","F"],Ra=(i,u)=>{console.log(`[${Bs[i]},${new Date().toISOString()}]${u}`)},Da=(i,u)=>{Ga=i,Wa=u},xt=(i,u)=>{let h=ea(i);h>=ea(Ga)&&Ra(h,typeof u=="function"?u():u)},Ft=(...i)=>{Wa&&xt(...i)}}),w1=Pe(()=>{Mt(),xn=(i,u)=>new(rs(u))(i)}),A2=Pe(()=>{}),V1=Pe(()=>{Cs(),A2(),ns=new Map([[64,250],[128,200],[256,200],[512,200],[2048,230],[4096,200],[8192,50],[16384,50],[32768,50],[65536,50],[131072,50],[262144,50],[524288,50],[1048576,50],[2097152,30],[4194304,20],[8388608,10],[12582912,10],[16777216,10],[26214400,15],[33554432,22],[44236800,2],[58982400,6],[67108864,6],[134217728,6],[167772160,6]]),Qa=[],Va=i=>16*Math.ceil(Number(i)/16),ga=i=>{for(let u=0;u<Qa.length;u++){let h=Qa[u];if(i<=h)return h}return 16*Math.ceil(i/16)},Ta=1,rA=()=>Ta++,re=async(i,u,h,w)=>{let B=Va(h),E=i.device.createBuffer({size:B,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let v=i.getCommandEncoder();i.endComputePass(),v.copyBufferToBuffer(u,0,E,0,B),i.flush(),await E.mapAsync(GPUMapMode.READ);let z=E.getMappedRange();if(w){let O=w();return O.set(new Uint8Array(z,0,h)),O}return new Uint8Array(z.slice(0,h))}finally{E.destroy()}},xe=class{constructor(i){this.backend=i,this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersPending=[],this.capturedPendingBuffers=new Map;for(let[u]of ns)Qa.push(u),this.freeBuffers.set(u,[]),this.freeUniformBuffers.set(u,[]);this.sessionCount=0}upload(i,u){let h=u.buffer,w=u.byteOffset,B=u.byteLength,E=Va(B),v=this.storageCache.get(i);if(!v)throw new Error("gpu data for uploading does not exist");if(Number(v.originalSize)!==B)throw new Error(`inconsistent data size. gpu data size=${v.originalSize}, data size=${B}`);let z=this.backend.device.createBuffer({mappedAtCreation:!0,size:E,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),O=z.getMappedRange();new Uint8Array(O).set(new Uint8Array(h,w,B)),z.unmap();let L=this.backend.device.createCommandEncoder();L.copyBufferToBuffer(z,0,v.gpuData.buffer,0,E),this.backend.device.queue.submit([L.finish()]),z.destroy(),Ft("verbose",()=>`[WebGPU] GpuDataManager.upload(id=${i})`)}memcpy(i,u){let h=this.storageCache.get(i);if(!h)throw new Error("source gpu data for memcpy does not exist");let w=this.storageCache.get(u);if(!w)throw new Error("destination gpu data for memcpy does not exist");if(h.originalSize!==w.originalSize)throw new Error("inconsistent source and destination gpu data size");let B=Va(h.originalSize),E=this.backend.getCommandEncoder();this.backend.endComputePass(),E.copyBufferToBuffer(h.gpuData.buffer,0,w.gpuData.buffer,0,B)}registerExternalBuffer(i,u,h){let w;if(h){if(w=h[0],i===h[1])return Ft("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${u}) => id=${w}, buffer is the same, skip.`),w;if(this.backend.capturedCommandList.has(this.backend.currentSessionId))throw new Error(`Registering a different external buffer under graph capture mode is not supported yet.
             Please use the previous external buffer!`)}else w=rA();return this.storageCache.set(w,{gpuData:{id:w,type:0,buffer:i},originalSize:u}),Ft("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${u}) => id=${w}, registered.`),w}unregisterExternalBuffer(i){i!==void 0&&(this.storageCache.delete(i),Ft("verbose",()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${i}`))}create(i,u=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let h,w=ga(i),B=(u&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,E=(u&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(B||E){let z=(B?this.freeBuffers:this.freeUniformBuffers).get(w);h=z&&z.length>0?z.pop():this.backend.device.createBuffer({size:w,usage:u})}else h=this.backend.device.createBuffer({size:w,usage:u});let v={id:rA(),type:0,buffer:h};return this.storageCache.set(v.id,{gpuData:v,originalSize:Number(i)}),Ft("verbose",()=>`[WebGPU] GpuDataManager.create(size=${i}) => id=${v.id}`),v}get(i){var u;return(u=this.storageCache.get(i))==null?void 0:u.gpuData}release(i){let u=typeof i=="bigint"?Number(i):i,h=this.storageCache.get(u);if(!h){if(this.storageCache.size===0)return 0;throw new Error("releasing data does not exist")}return Ft("verbose",()=>`[WebGPU] GpuDataManager.release(id=${u}), gpuDataId=${h.gpuData.id}`),this.storageCache.delete(u),this.buffersPending.push(h.gpuData.buffer),h.originalSize}async download(i,u){let h=this.storageCache.get(Number(i));if(!h)throw new Error("data does not exist");await re(this.backend,h.gpuData.buffer,h.originalSize,u)}refreshPendingBuffers(){if(this.buffersPending.length!==0)if(this.backend.sessionStatus==="default"){for(let i of this.buffersPending){let u=ns.get(i.size);if((i.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE){let h=this.freeBuffers.get(i.size)||[];u===void 0||h.length>=u?i.destroy():h.push(i)}else if((i.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM){let h=this.freeUniformBuffers.get(i.size)||[];u===void 0||h.length>=u?i.destroy():h.push(i)}else i.destroy()}this.buffersPending=[]}else{let i=this.capturedPendingBuffers.get(this.backend.currentSessionId);i||(i=[],this.capturedPendingBuffers.set(this.backend.currentSessionId,i));for(let u of this.buffersPending)i.push(u);this.buffersPending=[]}}dispose(){this.freeBuffers.forEach(i=>{i.forEach(u=>{u.destroy()})}),this.freeUniformBuffers.forEach(i=>{i.forEach(u=>{u.destroy()})}),this.storageCache.forEach(i=>{i.gpuData.buffer.destroy()}),this.capturedPendingBuffers.forEach(i=>{i.forEach(u=>{u.destroy()})}),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.capturedPendingBuffers=new Map}onCreateSession(){this.sessionCount+=1}onReleaseSession(i){let u=this.capturedPendingBuffers.get(i);u&&(u.forEach(h=>{h.destroy()}),this.capturedPendingBuffers.delete(i)),this.sessionCount-=1,this.sessionCount===0&&(Ft("warning",()=>"[WebGPU] Clearing webgpu buffer cache"),this.storageCache.forEach(h=>{h.gpuData.buffer.destroy()}),this.storageCache=new Map)}},Se=(...i)=>new xe(...i)}),Zr=Pe(()=>{je=class{constructor(i){Object.assign(this,i)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map(i=>`${this[i]}`).join(";")),this.key}},Ze=i=>new je(i)}),St=Pe(()=>{uA=class{static calcMatMulShape(i,u){return i[1]!==u[0]?void 0:[i[0],u[1]]}},PA=class{static calcShape(i,u,h=!1){let w=i.length,B=u.length;if(w===0)return u;if(B===0)return i;let E=Math.max(i.length,u.length),v=new Array(E);if(h){if(w<2||B<2)return;let z=uA.calcMatMulShape([i[w-2],i[w-1]],[u[B-2],u[B-1]]);if(z===void 0)return;[v[E-2],v[E-1]]=z}for(let z=h?3:1;z<=E;z++){let O=w-z<0?1:i[w-z],L=B-z<0?1:u[B-z];if(O!==L&&O>1&&L>1)return;let ee=Math.max(O,L);if(O&&L)v[E-z]=Math.max(O,L);else{if(ee>1)return;v[E-z]=0}}return v}static isValidBroadcast(i,u){let h=i.length,w=u.length;if(h>w)return!1;for(let B=1;B<=h;B++)if(i[h-B]!==1&&i[h-B]!==u[w-B])return!1;return!0}},Le=class Cc{static size(u){return Cc.getSizeFromDimensionRange(u,0,u.length)}static convertShape(u,h=4){let w=u.length;if(w===0)return[];let B=new Array(w),E=w-1;for(;E>=0;){if(u[E]%h==0){B[E]=u[E]/h;break}if(h%u[E]!=0)throw new Error("cannot convert shape");B[E]=1,h/=u[E],E--}for(E--;E>=0;E--)B[E]=u[E];return B}static sizeFromDimension(u,h){if(h<0||h>u.length)throw new Error(`invalid dimension of ${h} for sizeFromDimension as Tensor has ${u.length} dimensions.`);return Cc.getSizeFromDimensionRange(u,h,u.length)}static sizeToDimension(u,h){if(h<0||h>u.length)throw new Error(`invalid dimension of ${h} for sizeToDimension as Tensor has ${u.length} dimensions.`);return Cc.getSizeFromDimensionRange(u,0,h)}static getSizeFromDimensionRange(u,h,w){let B=1;for(let E=h;E<w;E++){if(u[E]<0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");B*=Number(u[E])}return B}static computeStrides(u){let h=u.length;if(h===0)return[];if(h===1)return[1];let w=new Array(h);w[h-1]=1,w[h-2]=u[h-1];for(let B=h-3;B>=0;--B)w[B]=w[B+1]*u[B+1];return w}static normalizeAxis(u,h){if(u<-h&&u>=h)throw new Error("unsupported axis for this operation.");return u<0?u+h:u}static normalizeAxes(u,h){return u.map(w=>this.normalizeAxis(w,h??u.length))}static sortBasedOnPerm(u,h){return h?h.map(w=>u[w]):u.slice().reverse()}static padShape(u,h){let w=u.length;return u.map((B,E)=>B+h[E]+h[E+w])}static areEqual(u,h){return u.length===h.length&&u.every((w,B)=>w===h[B])}},YA=class G1{static adjustPoolAttributes(u,h,w,B,E,v){if(!u&&w.length!==h.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(u)for(let z=0;z<h.length-2;z++)z>=w.length?w.push(h[z+2]):w[z]=h[z+2];for(let z=0;z<w.length;z++)if(z<B.length){if(B[z]<0)throw new Error("strides should be greater than or equal to 1")}else B.push(1);for(let z=0;z<w.length;z++)if(z<E.length){if(E[z]<0)throw new Error("dilations should be greater than or equal to 1")}else E.push(1);for(let z=0;z<2*w.length;z++)if(z<v.length){if(v[z]<0)throw new Error("pad should be greater than or equal to 1")}else v.push(0);for(let z=0;z<w.length;z++){if(w[z]<=0)throw new Error("kernel shapes need to be greater than 0");if(v[z]>=w[z]||v[z+w.length]>=w[z])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(u,h,w,B,E,v,z){if(z){if(E.length!==2*(u.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(h.length!==u.length-2)throw new Error("length of strides should be the length of data dimensions");if(B.length!==u.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let O=0;O<u.length-2;O++)G1.adjustPadAndReturnShape(u[O+(v?1:2)],h[O],w[O],B[O],E,O,O+u.length-2,z)}}static computePoolOutputShape(u,h,w,B,E,v,z){if(h.length<=0)throw new Error("input shape must be of size greater than 0");let O=[h[0],h[1]];return G1.computeShapeHelper(u,h,O,w,B,E,v,z),O}static computeConvOutputShape(u,h,w,B,E,v,z){if(u.length<=0||h.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let O=[u[0],h[0]];return G1.computeShapeHelper(!1,u,O,w,B,E,v,z),O}static computeShapeHelper(u,h,w,B,E,v,z,O){if(u)for(let L=0;L<h.length-2;L++)w.push(1);else for(let L=0;L<h.length-2;L++)w.push(G1.adjustPadAndReturnShape(h[L+2],B[L],E[L],v[L],z,L,L+h.length-2,O))}static adjustPadAndReturnShape(u,h,w,B,E,v,z,O){let L=w*(B-1)+1;if(!O||O==="NOTSET")return Math.floor((u+E[v]+E[z]-L)/h+1);switch(O){case"VALID":return E[v]=0,E[z]=0,Math.floor((u-L)/h+1);case"SAME_LOWER":case"SAME_UPPER":if(w!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let ee=((u+h-1)/h-1)*h+B-u;return E[v]=Math.floor(O==="SAME_LOWER"?(ee+1)/2:ee/2),E[z]=ee-E[v],Math.floor((u+ee-B)/h+1)}default:throw new Error("Unsupported AutoPad type")}}},vA=class{static getShapeOfGemmResult(i,u,h,w,B){if(i.length!==2||h.length!==2)throw new Error("shape need to be of size 2");let E,v,z;u?(E=i[1],v=i[0]):(E=i[0],v=i[1]);let O=-1;if(w?(z=h[0],O=1):(z=h[1],O=0),h[O]!==v)throw new Error("dimension mismatch");if(E<=0||z<=0||v<=0)throw new Error("invalid shape specified");if(B&&!PA.isValidBroadcast(B,[E,z]))throw new Error("gemm: invalid bias shape for broadcast");return[E,z,v]}},Bt=-34028234663852886e22,fr=34028234663852886e22}),Yt=Pe(()=>{Mt(),St(),jt=64,er=(i,u)=>{if(u===3)throw new Error("vec3 has same alignment as vec4, use vec4 instead");switch(Number(i)){case 10:return u>1?`vec${u}<f16>`:"f16";case 1:return u>1?`vec${u}<f32>`:"f32";case 6:return u>1?`vec${u}<i32>`:"i32";case 12:return u>1?`vec${u}<u32>`:"u32";case 7:if(u>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(u>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(u!==4)throw new Error("bool must be vec4");return["u32","vec4<bool>"];case 22:return"i32";case 21:return"u32";default:throw new Error(`Unknown data type: ${i}`)}},zt=(i,u=1)=>{let h=er(i,u);return typeof h=="string"?h:h[0]},VA=(i,u=1)=>{let h=er(i,u);return typeof h=="string"?h:h[1]},_A=(...i)=>{let u=[];return i.forEach(h=>{h.length!==0&&u.push({type:12,data:h},{type:12,data:Le.computeStrides(h)})}),u},Zt=i=>i%4==0?4:i%2==0?2:1,Bn=(i="f32",u,h="0")=>u&&u!==1?`vec${u}<${i}>(${h})`:`${i}(${h})`,hn=(i,u,h)=>i==="f32"?h:u===1?`f32(${h})`:`vec${u}<f32>(${h})`,ir=(i,u)=>u===4?`(${i}.x + ${i}.y + ${i}.z + ${i}.w)`:u===2?`(${i}.x + ${i}.y)`:u===3?`(${i}.x + ${i}.y + ${i}.z)`:i,it=(i,u,h,w)=>i.startsWith("uniforms.")&&h>4?typeof u=="string"?w==="f16"?`${i}[(${u}) / 8][(${u}) % 8 / 4][(${u}) % 8 % 4]`:`${i}[(${u}) / 4][(${u}) % 4]`:w==="f16"?`${i}[${Math.floor(u/8)}][${Math.floor(u%8/4)}][${u%8%4}]`:`${i}[${Math.floor(u/4)}][${u%4}]`:h>1?`${i}[${u}]`:i,pr=(i,u,h,w,B)=>{let E=typeof h=="number",v=E?h:h.length,z=[...new Array(v).keys()],O=v<2?"u32":v<=4?`vec${v}<u32>`:`array<u32, ${v}>`,L=er(u,B),ee=typeof L=="string"?L:L[1],te=typeof L=="string"?L:L[0],T={indices:O,value:ee,storage:te,tensor:u},le=iA=>typeof iA=="string"?iA:`${iA}u`,de={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},we=E?"uniforms.":"",be=`${we}${i}_shape`,Me=`${we}${i}_strides`,Fe="";for(let iA=0;iA<v-1;iA++)Fe+=`
    let dim${iA} = current / ${it(Me,iA,v)};
    let rest${iA} = current % ${it(Me,iA,v)};
    indices[${iA}] = dim${iA};
    current = rest${iA};
    `;Fe+=`indices[${v-1}] = current;`;let We=v<2?"":`
  fn o2i_${i}(offset: u32) -> ${T.indices} {
    var indices: ${T.indices};
    var current = offset;
    ${Fe}
    return indices;
  }`,$e=[];if(v>=2)for(let iA=v-1;iA>=0;iA--)$e.push(`${it(Me,iA,v)} * (indices[${iA}])`);let eA=v<2?"":`
  fn i2o_${i}(indices: ${T.indices}) -> u32 {
    return ${$e.join("+")};
  }`,aA=(...iA)=>v===0?"0u":`${T.indices}(${iA.map(le).join(",")})`,zA=(iA,gt)=>v<2?`${iA}`:`${it(iA,gt,v)}`,jA={},ht=(iA,gt)=>(()=>{if(T.storage===T.value)return`${i}[${iA}]=${gt};`;if(T.storage==="vec2<u32>"&&T.value==="i32")return`${i}[${iA}]=vec2<u32>(u32(${gt}), select(0u, 0xFFFFFFFFu, ${gt} < 0));`;if(T.storage==="vec2<u32>"&&T.value==="u32")return`${i}[${iA}]=vec2<u32>(u32(${gt}), 0u);`;if(T.storage==="u32"&&T.value==="vec4<bool>")return`${i}[${iA}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${gt}));`;throw new Error(`not supported combination of storage type ${T.storage} and value type ${T.value} yet`)})(),mt=iA=>(()=>{if(T.storage===T.value)return`${i}[${iA}]`;if(T.storage==="vec2<u32>"&&T.value==="i32")return`i32(${i}[${iA}].x)`;if(T.storage==="vec2<u32>"&&T.value==="u32")return`u32(${i}[${iA}].x)`;if(T.storage==="u32"&&T.value==="vec4<bool>")return`vec4<bool>(bool(${i}[${iA}] & 0xFFu), bool(${i}[${iA}] & 0xFF00u), bool(${i}[${iA}] & 0xFF0000u), bool(${i}[${iA}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${T.storage} and value type ${T.value} yet`)})(),Jt=v<2?"":`
  fn get_${i}ByIndices(indices: ${T.indices}) -> ${ee} {
    return ${mt(`i2o_${i}(indices)`)};
  }`,Ct=v<2?"":(()=>{let iA=z.map(at=>`d${at}: u32`).join(", "),gt=z.map(at=>`d${at}`).join(", ");return`
  fn get_${i}(${iA}) -> ${ee} {
    return get_${i}ByIndices(${aA(gt)});
  }`})(),Pt=v<2?"":`
  fn set_${i}ByIndices(indices: ${T.indices}, value: ${ee}) {
    ${ht(`i2o_${i}(indices)`,"value")}
  }`,Qt=v<2?"":(()=>{let iA=z.map(at=>`d${at}: u32`).join(", "),gt=z.map(at=>`d${at}`).join(", ");return`
  fn set_${i}(${iA}, value: ${ee}) {
    set_${i}ByIndices(${aA(gt)}, value);
  }`})();return{impl:()=>{let iA=[],gt=!1;return de.offsetToIndices&&(iA.push(We),gt=!0),de.indicesToOffset&&(iA.push(eA),gt=!0),de.broadcastedIndicesToOffset&&(Object.values(jA).forEach(at=>iA.push(at)),gt=!0),de.set&&(iA.push(Qt),gt=!0),de.setByIndices&&(iA.push(Pt),gt=!0),de.get&&(iA.push(Ct),gt=!0),de.getByIndices&&(iA.push(Jt),gt=!0),!E&&gt&&iA.unshift(`const ${be} = ${T.indices}(${h.join(",")});`,`const ${Me} = ${T.indices}(${Le.computeStrides(h).join(",")});`),iA.join(`
`)},type:T,offsetToIndices:iA=>(de.offsetToIndices=!0,v<2?iA:`o2i_${i}(${iA})`),indicesToOffset:iA=>(de.indicesToOffset=!0,v<2?iA:`i2o_${i}(${iA})`),broadcastedIndicesToOffset:(iA,gt)=>{de.broadcastedIndicesToOffset=!0;let at=`${gt.name}broadcastedIndicesTo${i}Offset`;if(at in jA)return`${at}(${iA})`;let ot=[];for(let sr=v-1;sr>=0;sr--){let dn=gt.indicesGet("outputIndices",sr+gt.rank-v);ot.push(`${zA(Me,sr)} * (${dn} % ${zA(be,sr)})`)}return jA[at]=`fn ${at}(outputIndices: ${gt.type.indices}) -> u32 {
             return ${ot.length>0?ot.join("+"):"0u"};
           }`,`${at}(${iA})`},indices:aA,indicesGet:zA,indicesSet:(iA,gt,at)=>v<2?`${iA}=${at};`:`${it(iA,gt,v)}=${at};`,set:(...iA)=>{if(iA.length!==v+1)throw new Error(`indices length must be ${v}`);let gt=iA[v];if(typeof gt!="string")throw new Error("value must be string");let at=iA.slice(0,v).map(le).join(",");return v===0?ht("0u",gt):v===1?ht(at[0],gt):(de.set=!0,de.setByIndices=!0,de.indicesToOffset=!0,`set_${i}(${at}, ${gt})`)},setByOffset:ht,setByIndices:(iA,gt)=>v<2?ht(iA,gt):(de.setByIndices=!0,de.indicesToOffset=!0,`set_${i}ByIndices(${iA}, ${gt});`),get:(...iA)=>{if(iA.length!==v)throw new Error(`indices length must be ${v}`);let gt=iA.map(le).join(",");return v===0?mt("0u"):v===1?mt(gt[0]):(de.get=!0,de.getByIndices=!0,de.indicesToOffset=!0,`get_${i}(${gt})`)},getByOffset:mt,getByIndices:iA=>v<2?mt(iA):(de.getByIndices=!0,de.indicesToOffset=!0,`get_${i}ByIndices(${iA})`),usage:w,name:i,strides:Me,shape:be,rank:v}},pA=(i,u,h,w=1)=>pr(i,u,h,"input",w),$A=(i,u,h,w=1)=>pr(i,u,h,"output",w),mn=(i,u,h)=>pr(i,u,h,"atomicOutput",1),Hr=(i,u,h,w=1)=>pr(i,u,h,"internal",w),Ur=class{constructor(i,u){this.normalizedDispatchGroup=i,this.limits=u,this.internalVariables=[],this.variables=[],this.uniforms=[],this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(i){return`if (global_idx >= ${typeof i=="number"?`${i}u`:i}) { return; }`}mainStart(i=jt){let u=typeof i=="number"?i:i[0],h=typeof i=="number"?1:i[1],w=typeof i=="number"?1:i[2];if(u>this.limits.maxComputeWorkgroupSizeX||h>this.limits.maxComputeWorkgroupSizeY||w>this.limits.maxComputeWorkgroupSizeZ)throw new Error(`workgroup size [${u}, ${h}, ${w}] exceeds the maximum workgroup size [${this.limits.maxComputeWorkgroupSizeX}, ${this.limits.maxComputeWorkgroupSizeY}, ${this.limits.maxComputeWorkgroupSizeZ}].`);if(u*h*w>this.limits.maxComputeInvocationsPerWorkgroup)throw new Error(`workgroup size [${u}, ${h}, ${w}] exceeds the maximum workgroup invocations ${this.limits.maxComputeInvocationsPerWorkgroup}.`);let B=this.normalizedDispatchGroup[1]===1&&this.normalizedDispatchGroup[2]===1;return`@compute @workgroup_size(${u}, ${h}, ${w})
  fn main(${B?`@builtin(global_invocation_id) global_id : vec3<u32>,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(local_invocation_index) local_idx : u32,
    @builtin(local_invocation_id) local_id : vec3<u32>`:`@builtin(global_invocation_id) global_id : vec3<u32>,
                                             @builtin(local_invocation_id) local_id : vec3<u32>,
    @builtin(local_invocation_index) local_idx : u32,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(num_workgroups) num_workgroups : vec3<u32>`}) {
    ${B?`let global_idx = global_id.x;
         let workgroup_index = workgroup_id.x;`:`let workgroup_index = workgroup_id.z * num_workgroups[0] * num_workgroups[1] +
             workgroup_id.y * num_workgroups[0] + workgroup_id.x;
         let global_idx = workgroup_index * ${u*h*w}u + local_idx;`}
  `}appendVariableUniforms(i){i.rank!==0&&(i.shape.startsWith("uniforms.")&&this.uniforms.push({name:i.shape.replace("uniforms.",""),type:"u32",length:i.rank}),i.strides.startsWith("uniforms.")&&this.uniforms.push({name:i.strides.replace("uniforms.",""),type:"u32",length:i.rank}))}declareVariable(i,u){if(i.usage==="internal")throw new Error("cannot use internal variable with declareVariable(). use registerInternalVariables() instead.");this.variables.push(i),this.appendVariableUniforms(i);let h=i.usage==="input"?"read":"read_write",w=i.usage==="atomicOutput"?"atomic<i32>":i.type.storage;return`@group(0) @binding(${u}) var<storage, ${h}> ${i.name}: array<${w}>;`}declareVariables(...i){return i.map(u=>this.declareVariable(u,this.variableIndex++)).join(`
`)}registerInternalVariable(i){if(i.usage!=="internal")throw new Error("cannot use input or output variable with registerInternalVariable(). use declareVariables() instead.");this.internalVariables.push(i),this.appendVariableUniforms(i)}registerInternalVariables(...i){return i.forEach(u=>this.registerInternalVariable(u)),this}registerUniform(i,u,h=1){return this.uniforms.push({name:i,type:u,length:h}),this}registerUniforms(i){return this.uniforms=this.uniforms.concat(i),this}uniformDeclaration(){if(this.uniforms.length===0)return"";let i=[];for(let{name:u,type:h,length:w}of this.uniforms)if(w&&w>4)h==="f16"?i.push(`@align(16) ${u}:array<mat2x4<${h}>, ${Math.ceil(w/8)}>`):i.push(`${u}:array<vec4<${h}>, ${Math.ceil(w/4)}>`);else{let B=w==null||w===1?h:`vec${w}<${h}>`;i.push(`${u}:${B}`)}return`
      struct Uniforms { ${i.join(", ")} };
      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.variables.map(i=>i.impl()).join(`
`)+this.internalVariables.map(i=>i.impl()).join(`
`)}get variablesInfo(){if(this.uniforms.length===0)return;let i=u=>[12,10,1,6][["u32","f16","f32","i32"].indexOf(u)];return this.uniforms.map(u=>[i(u.type),u.length??1])}},Fr=(i,u)=>new Ur(i,u)}),Os=Pe(()=>{Mt(),St(),Zr(),Yt(),wr=(i,u)=>{if(!i||i.length!==1)throw new Error("Transpose requires 1 input.");if(u.length!==0&&u.length!==i[0].dims.length)throw new Error(`perm size ${u.length} does not match input rank ${i[0].dims.length}`)},Ut=(i,u)=>u.length!==0?u:[...new Array(i).keys()].reverse(),vr=(i,u)=>Le.sortBasedOnPerm(i,Ut(i.length,u)),as=(i,u,h,w)=>{let B=`fn perm(i: ${w.type.indices}) -> ${h.type.indices} {
    var a: ${h.type.indices};`;for(let E=0;E<u;++E)B+=`a[${i[E]}]=i[${E}];`;return B+"return a;}"},Hn=(i,u)=>{let h=[],w=[];for(let B=0;B<i.length;++B)i[B]!==1&&h.push(i[B]),i[u[B]]!==1&&w.push(u[B]);return{newShape:h,newPerm:w}},Ys=(i,u)=>{let h=0;for(let w=0;w<i.length;++w)if(u[i[w]]!==1){if(i[w]<h)return!1;h=i[w]}return!0},Qn=(i,u)=>{let h,w=i.dataType,B=i.dims.length,E=Ut(B,u),v=vr(i.dims,E),z=i.dims,O=v;if(B<2||Ys(E,i.dims))return h=le=>{let de=pA("input",w,z,4),we=$A("output",w,O,4);return`
  ${le.registerUniform("output_size","u32").declareVariables(de,we)}
  ${le.mainStart()}
    ${le.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    output[global_idx] = input[global_idx];
  }`},{name:"TransposeCopy",shaderCache:{inputDependencies:["type"]},getRunData:()=>{let le=Le.size(v);return{outputs:[{dims:v,dataType:i.dataType}],dispatchGroup:{x:Math.ceil(le/64/4)},programUniforms:[{type:12,data:Math.ceil(le/4)}]}},getShaderSource:h};let{newShape:L,newPerm:ee}=Hn(i.dims,E),te=Le.areEqual(ee,[2,3,1]),T=Le.areEqual(ee,[3,1,2]);if(L.length===2||te||T){z=te?[L[0],L[1]*L[2]]:T?[L[0]*L[1],L[2]]:L,O=[z[1],z[0]];let le=16;return h=de=>{let we=pA("a",w,z.length),be=$A("output",w,O.length);return`
  ${de.registerUniform("output_size","u32").declareVariables(we,be)}
  var<workgroup> tile : array<array<${be.type.value}, ${le+1}>, ${le}>;
  ${de.mainStart([le,le,1])}
    let stride = (uniforms.output_shape[1] - 1) / ${le} + 1;
    let workgroup_id_x = workgroup_index % stride;
    let workgroup_id_y = workgroup_index / stride;
    let input_col = workgroup_id_y * ${le}u + local_id.x;
    let input_row = workgroup_id_x * ${le}u + local_id.y;
    if (input_row < uniforms.a_shape[0] && input_col < uniforms.a_shape[1]) {
      tile[local_id.y][local_id.x] = ${we.getByIndices(`${we.type.indices}(input_row, input_col)`)};
    }
    workgroupBarrier();

    let output_col = workgroup_id_x * ${le}u + local_id.x;
    let output_row = workgroup_id_y * ${le}u + local_id.y;
    if (output_row < uniforms.output_shape[0] && output_col < uniforms.output_shape[1]) {
      ${be.setByIndices(`${be.type.indices}(output_row, output_col)`,"tile[local_id.x][local_id.y]")}
    }
  }`},{name:"TransposeShared",shaderCache:{inputDependencies:["type"]},getRunData:()=>{let de=Le.size(v);return{outputs:[{dims:v,dataType:i.dataType}],dispatchGroup:{x:Math.ceil(O[1]/le),y:Math.ceil(O[0]/le)},programUniforms:[{type:12,data:de},..._A(z,O)]}},getShaderSource:h}}return h=le=>{let de=pA("a",w,z.length),we=$A("output",w,O.length);return`
  ${le.registerUniform("output_size","u32").declareVariables(de,we)}

  ${as(E,B,de,we)}

  ${le.mainStart()}
    ${le.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${we.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${we.setByOffset("global_idx",de.getByIndices("aIndices"))}
  }`},{name:"Transpose",shaderCache:{hint:`${u}`,inputDependencies:["rank"]},getRunData:()=>{let le=Le.size(v);return{outputs:[{dims:v,dataType:i.dataType}],dispatchGroup:{x:Math.ceil(le/64)},programUniforms:[{type:12,data:le},..._A(z,O)]}},getShaderSource:h}},Hs=(i,u)=>{wr(i.inputs,u.perm),i.compute(Qn(i.inputs[0],u.perm))},Dt=i=>Ze({perm:i.perm})}),j1=Pe(()=>{Mt(),St(),Yt(),t2(),Os(),An={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate * candidate",logSumExp:"bestValue + exp(candidate)",l1:"bestValue + abs(candidate)",l2:"bestValue + candidate * candidate",logSum:"bestValue + candidate"},jn={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate",logSumExp:"bestValue + candidate",l1:"bestValue + candidate",l2:"bestValue + candidate",logSum:"bestValue + candidate"},g0={max:"_A[offset]",min:"_A[offset]",mean:"0",sum:"0",prod:"1",sumSquare:"0",logSumExp:"0",l1:"0",l2:"0",logSum:"0"},u0={max:"bestValue",min:"bestValue",sum:"bestValue",prod:"bestValue",sumSquare:"bestValue",logSumExp:"log(bestValue)",l1:"bestValue",l2:"sqrt(bestValue)",logSum:"log(bestValue)"},d0=(i,u)=>{let h=[];for(let w=u-i;w<u;++w)h.push(w);return h},f0=(i,u)=>{let h=[],w=i.length;for(let E=0;E<w;E++)u.indexOf(E)===-1&&h.push(i[E]);let B=u.map(E=>i[E]);return[h,B]},ss=(i,u)=>{let h=i.length+u.length,w=[],B=0;for(let E=0;E<h;E++)u.indexOf(E)===-1?w.push(i[B++]):w.push(1);return w},ja=(i,u)=>{for(let h=0;h<i.length;++h)if(i[i.length-h-1]!==u-1-h)return!1;return!0},p0=(i,u)=>{let h=[];if(!ja(i,u)){for(let w=0;w<u;++w)i.indexOf(w)===-1&&h.push(w);i.forEach(w=>h.push(w))}return h},Rs=(i,u,h,w,B,E,v)=>{let z=h[0].dims,O=Le.size(E),L=Le.size(v),ee=pA("_A",h[0].dataType,z),te=$A("output",B,E),T=64;O===1&&(T=256);let le=`
          var<workgroup> aBestValues : array<f32, ${T}>;
       `;return{name:i,shaderCache:{hint:`${u};${T}`,inputDependencies:["type"]},getShaderSource:de=>`
        ${de.registerUniform("reduceSize","u32").declareVariables(ee,te)}
        ${le}
        fn DIV_CEIL(a : u32, b : u32) -> u32 {
          return ((a - 1u) / b + 1u);
         }
         ${de.mainStart(T)}

          let outputIndex = global_idx / ${T};
          let offset = outputIndex * uniforms.reduceSize;

          var bestValue = f32(${g0[w]});
          let Length = uniforms.reduceSize;
          for (var k = local_idx; k < Length; k = k + ${T}) {
           let candidate = f32(${ee.getByOffset("offset + k")});
           bestValue = ${An[w]};
          }
          aBestValues[local_idx] = bestValue;
          workgroupBarrier();

         var reduceSize = min(Length, ${T}u);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (local_idx < currentSize) {
            let candidate = aBestValues[local_idx + interval];
            bestValue = ${jn[w]};
            aBestValues[local_idx] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (local_idx == 0u) {
          ${te.setByOffset("outputIndex",w==="mean"?`${te.type.storage}(bestValue / f32(uniforms.reduceSize))`:`${te.type.storage}(${u0[w]})`)};
         }
        }`,getRunData:()=>({outputs:[{dims:E,dataType:B}],dispatchGroup:{x:O},programUniforms:[{type:12,data:L}]})}},Fn=(i,u,h,w)=>{let B=i.inputs.length===1?h:ys(i.inputs,h),E=B.axes;E.length===0&&!B.noopWithEmptyAxes&&(E=i.inputs[0].dims.map((le,de)=>de));let v=Le.normalizeAxes(E,i.inputs[0].dims.length),z=v,O=i.inputs[0],L=p0(z,i.inputs[0].dims.length);L.length>0&&(O=i.compute(Qn(i.inputs[0],L),{inputs:[0],outputs:[-1]})[0],z=d0(z.length,O.dims.length));let[ee,te]=f0(O.dims,z),T=ee;B.keepDims&&(T=ss(ee,v)),i.compute(Rs(u,B.cacheKey,[O],w,i.inputs[0].dataType,T,te),{inputs:[O]})},Jr=(i,u)=>{Fn(i,"ReduceMeanShared",u,"mean")},JA=(i,u)=>{Fn(i,"ReduceL1Shared",u,"l1")},Tn=(i,u)=>{Fn(i,"ReduceL2Shared",u,"l2")},bi=(i,u)=>{Fn(i,"ReduceLogSumExpShared",u,"logSumExp")},Ws=(i,u)=>{Fn(i,"ReduceMaxShared",u,"max")},Ii=(i,u)=>{Fn(i,"ReduceMinShared",u,"min")},h0=(i,u)=>{Fn(i,"ReduceProdShared",u,"prod")},m0=(i,u)=>{Fn(i,"ReduceSumShared",u,"sum")},wi=(i,u)=>{Fn(i,"ReduceSumSquareShared",u,"sumSquare")},J0=(i,u)=>{Fn(i,"ReduceLogSumShared",u,"logSum")}}),t2=Pe(()=>{Mt(),St(),Zr(),Yt(),j1(),Sn=i=>{if(!i||i.length===0||i.length>2)throw new Error("Reduce op requires 1 or 2 inputs.");if(i.length===2&&i[1].dims.length!==1)throw new Error("Invalid axes input dims.")},nr=i=>["","",`var value = ${i.getByIndices("input_indices")};`,""],vs=(i,u,h,w,B,E,v=!1,z=!1)=>{let O=[],L=h[0].dims,ee=L.length,te=Le.normalizeAxes(B,ee),T=!z&&te.length===0;L.forEach((we,be)=>{T||te.indexOf(be)>=0?v&&O.push(1):O.push(we)});let le=O.length,de=Le.size(O);return{name:i,shaderCache:u,getShaderSource:we=>{let be=[],Me=pA("_A",h[0].dataType,ee),Fe=$A("output",E,le),We=w(Me,Fe,te),$e=We[2];for(let eA=0,aA=0;eA<ee;eA++)T||te.indexOf(eA)>=0?(v&&aA++,$e=`for(var j${eA}: u32 = 0; j${eA} < ${L[eA]}; j${eA}++) {
                  ${We[2].includes("last_index")?`let last_index = j${eA};`:""}
                  ${Me.indicesSet("input_indices",eA,`j${eA}`)}
                  ${$e}
                }`):(be.push(`${Me.indicesSet("input_indices",eA,Fe.indicesGet("output_indices",aA))};`),aA++);return`

        ${we.registerUniform("output_size","u32").declareVariables(Me,Fe)}

        ${we.mainStart()}
          ${we.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          var input_indices: ${Me.type.indices};
          let output_indices = ${Fe.offsetToIndices("global_idx")};

          ${be.join(`
`)}
          ${We[0]}       // init ops for reduce max/min
          ${We[1]}
          ${$e}
          ${We[3]}
          ${We.length===4?Fe.setByOffset("global_idx","value"):We.slice(4).join(`
`)}
        }`},getRunData:()=>({outputs:[{dims:O,dataType:E}],dispatchGroup:{x:Math.ceil(de/64)},programUniforms:[{type:12,data:de},..._A(L,O)]})}},ys=(i,u)=>{let h=[];return i[1].dims[0]>0&&i[1].getBigInt64Array().forEach(w=>h.push(Number(w))),Ze({axes:h,keepDims:u.keepDims,noopWithEmptyAxes:u.noopWithEmptyAxes})},vn=(i,u,h,w)=>{let B=i.inputs,E=B.length===1?h:ys(B,h);i.compute(vs(u,{hint:E.cacheKey,inputDependencies:["rank"]},[B[0]],E.noopWithEmptyAxes&&E.axes.length===0?nr:w,E.axes,B[0].dataType,E.keepDims,E.noopWithEmptyAxes),{inputs:[0]})},Ua=(i,u)=>{Sn(i.inputs),vn(i,"ReduceLogSum",u,(h,w)=>[`var value = ${w.type.storage}(0);`,"",`value += ${h.getByIndices("input_indices")};`,"value = log(value);"])},ua=(i,u)=>{Sn(i.inputs),vn(i,"ReduceL1",u,(h,w)=>[`var value = ${w.type.storage}(0);`,"",`value += abs(${h.getByIndices("input_indices")});`,""])},ki=(i,u)=>{Sn(i.inputs),vn(i,"ReduceL2",u,(h,w)=>[`var t = ${w.type.value}(0); var value = ${w.type.value}(0);`,"",`t = ${h.getByIndices("input_indices")}; value += (t * t);`,"value = sqrt(value);"])},xi=(i,u)=>{Sn(i.inputs),vn(i,"ReduceLogSumExp",u,(h,w)=>[`var value = ${w.type.storage}(0);`,"",`value += exp(${h.getByIndices("input_indices")});`,"value = log(value);"])},Ka=(i,u)=>{Sn(i.inputs),vn(i,"ReduceMax",u,(h,w,B)=>{let E=[];for(let v=0;v<h.rank;v++)(B.indexOf(v)>=0||B.length===0)&&E.push(h.indicesSet("input_indices",v,0));return[`${E.join(`
`)}`,`var value = ${h.getByIndices("input_indices")};`,`value = max(value, ${h.getByIndices("input_indices")});`,""]})},Bi=(i,u)=>{Sn(i.inputs),vn(i,"ReduceMean",u,(h,w,B)=>{let E=1;for(let v=0;v<h.rank;v++)(B.indexOf(v)>=0||B.length===0)&&(E*=i.inputs[0].dims[v]);return["var sum = f32(0);","",`sum += f32(${h.getByIndices("input_indices")});`,`let value = ${w.type.value}(sum / ${E});`]})},vi=(i,u)=>{Sn(i.inputs),vn(i,"ReduceMin",u,(h,w,B)=>{let E=[];for(let v=0;v<h.rank;v++)(B.indexOf(v)>=0||B.length===0)&&E.push(`input_indices[${v}] = 0;`);return[`${E.join(`
`)}`,`var value = ${h.getByIndices("input_indices")};`,`value = min(value, ${h.getByIndices("input_indices")});`,""]})},yi=(i,u)=>{Sn(i.inputs),vn(i,"ReduceProd",u,(h,w)=>[`var value = ${w.type.storage}(1);`,"",`value *= ${h.getByIndices("input_indices")};`,""])},QA=(i,u)=>{Sn(i.inputs),vn(i,"ReduceSum",u,(h,w)=>[`var value = ${w.type.storage}(0);`,"",`value += ${h.getByIndices("input_indices")};`,""])},Za=(i,u)=>{Sn(i.inputs),vn(i,"ReduceSumSquare",u,(h,w)=>[`var t = ${w.type.value}(0); var value = ${w.type.value}(0);`,"",`t = ${h.getByIndices("input_indices")}; value += t * t;`,""])},UA=(i,u,h)=>{if(u.length===0)return h;let w=1,B=1;for(let E=0;E<u.length;E++)u.indexOf(E)===-1?w*=i[E]:B*=i[E];return B<32&&w>1024},Ei=(i,u)=>{UA(i.inputs[0].dims,u.axes,u.noopWithEmptyAxes)?Bi(i,u):Jr(i,u)},Vs=(i,u)=>{UA(i.inputs[0].dims,u.axes,u.noopWithEmptyAxes)?ua(i,u):JA(i,u)},yn=(i,u)=>{UA(i.inputs[0].dims,u.axes,u.noopWithEmptyAxes)?ki(i,u):Tn(i,u)},Nn=(i,u)=>{UA(i.inputs[0].dims,u.axes,u.noopWithEmptyAxes)?xi(i,u):bi(i,u)},is=(i,u)=>{UA(i.inputs[0].dims,u.axes,u.noopWithEmptyAxes)?Ka(i,u):Ws(i,u)},Es=(i,u)=>{UA(i.inputs[0].dims,u.axes,u.noopWithEmptyAxes)?vi(i,u):Ii(i,u)},Mi=(i,u)=>{UA(i.inputs[0].dims,u.axes,u.noopWithEmptyAxes)?yi(i,u):h0(i,u)},Nr=(i,u)=>{UA(i.inputs[0].dims,u.axes,u.noopWithEmptyAxes)?QA(i,u):m0(i,u)},C0=(i,u)=>{UA(i.inputs[0].dims,u.axes,u.noopWithEmptyAxes)?Za(i,u):wi(i,u)},b0=(i,u)=>{UA(i.inputs[0].dims,u.axes,u.noopWithEmptyAxes)?Ua(i,u):J0(i,u)}}),U1=Pe(()=>{Mt(),Zr(),t2(),Pa=i=>{if(!i||i.length===0||i.length>2)throw new Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(i[0].dataType!==1)throw new Error("Invalid input type.")},os=(i,u)=>{Pa(i.inputs),i.compute(vs("ArgMin",{hint:u.cacheKey,inputDependencies:["rank"]},[i.inputs[0]],(h,w,B)=>{let E=[];for(let v=0;v<h.rank;v++)(B.indexOf(v)>=0||B.length===0)&&E.push(`input_indices[${v}] = 0;`);return[`${E.join(`
`)}`,`var value = ${h.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${h.getByIndices("input_indices")} ${u.selectLastIndex>0?"<=":"<"} value) {
         value = ${h.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",w.setByOffset("global_idx","best_index")]},[u.axis],7,u.keepDims),{inputs:[0]})},I0=(i,u)=>{Pa(i.inputs),i.compute(vs("argMax",{hint:u.cacheKey,inputDependencies:["rank"]},[i.inputs[0]],(h,w,B)=>{let E=[];for(let v=0;v<h.rank;v++)(B.indexOf(v)>=0||B.length===0)&&E.push(`input_indices[${v}] = 0;`);return[`${E.join(`
`)}`,`var value = ${h.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${h.getByIndices("input_indices")} ${u.selectLastIndex>0?">=":">"} value) {
         value = ${h.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",w.setByOffset("global_idx","best_index")]},[u.axis],7,u.keepDims),{inputs:[0]})},js=i=>Ze(i)}),r2=Pe(()=>{Mt(),St(),A2(),Yt(),ls=(i,u)=>{let h=i[0],w=i[1],B=i[2],E=i[3],v=i[4],z=i[5];if(v&&z)throw new Error("Attention cannot have both past and attention_bias");if(h.dims.length!==3)throw new Error('Input "input" must have 3 dimensions');let O=h.dims[0],L=h.dims[1],ee=h.dims[2];if(B.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimensions');if(w.dims.length!==2)throw new Error('Input "weights" is expected to have 2 dimensions');if(w.dims[0]!==ee)throw new Error("Input 1 dimension 0 should have same length as dimension 2 of input 0");if(B.dims[0]!==w.dims[1])throw new Error('Input "bias" dimension 0 should have same length as dimension 1 of input "weights"');let te=B.dims[0]/3,T=te,le=T;if(u.qkvHiddenSizes.length>0){if(u.qkvHiddenSizes.length!==3)throw new Error("qkv_hidden_sizes attribute should have 3 elements");for(let Me of u.qkvHiddenSizes)if(Me%u.numHeads!=0)throw new Error("qkv_hidden_sizes should be divisible by num_heads");te=u.qkvHiddenSizes[0],T=u.qkvHiddenSizes[1],le=u.qkvHiddenSizes[2]}let de=L;if(te!==T)throw new Error("qkv_hidden_sizes first element should be same as the second");if(B.dims[0]!==te+T+le)throw new Error('Input "bias" dimension 0 should have same length as sum of Q/K/V hidden sizes');let we=0;if(v){if(T!==le)throw new Error('Input "past" expect k_hidden_size == v_hidden_size');if(v.dims.length!==5)throw new Error('Input "past" must have 5 dimensions');if(v.dims[0]!==2)throw new Error('Input "past" first dimension must be 2');if(v.dims[1]!==O)throw new Error('Input "past" second dimension must be batch_size');if(v.dims[2]!==u.numHeads)throw new Error('Input "past" third dimension must be num_heads');if(v.dims[4]!==T/u.numHeads)throw new Error('Input "past" fifth dimension must be k_hidden_size / num_heads');u.pastPresentShareBuffer||(we=v.dims[3])}let be=de+we;if(E)throw new Error("Mask not supported");if(v)throw new Error("past is not supported");if(z){if(z.dims.length!==4)throw new Error('Input "attention_bias" must have 4 dimensions');if(z.dims[0]!==O||z.dims[1]!==u.numHeads||z.dims[2]!==L||z.dims[3]!==be)throw new Error('Expect "attention_bias" shape (batch_size, num_heads, sequence_length, total_sequence_length)')}return{batchSize:O,sequenceLength:L,pastSequenceLength:we,kvSequenceLength:de,totalSequenceLength:be,maxSequenceLength:-1,inputHiddenSize:ee,hiddenSize:te,vHiddenSize:le,headSize:Math.floor(te/u.numHeads),vHeadSize:Math.floor(le/u.numHeads),numHeads:u.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:u.maskFilterValue,maskType:0,scale:u.scale,broadcastResPosBias:!1,passPastInKv:!1,qkvFormat:1}},RA=(i,u,h)=>u&&i?`
      let total_sequence_length_input = u32(${u.getByOffset("0")});
      let present_sequence_length = max(total_sequence_length_input, uniforms.past_sequence_length);
      let is_subsequent_prompt: bool = sequence_length > 1 && sequence_length != total_sequence_length_input;
      let is_first_prompt: bool = is_subsequent_prompt == false && sequence_length == total_sequence_length_input;
      total_sequence_length = u32(${i==null?void 0:i.getByOffset("batchIdx")}) + 1;
      var past_sequence_length: u32 = 0;
      if (is_first_prompt == false) {
        past_sequence_length = total_sequence_length - sequence_length;
      }
       `:`
    ${h?"let past_sequence_length = uniforms.past_sequence_length":""};
    let present_sequence_length = total_sequence_length;
    `,Aa=(i,u,h,w,B,E,v,z)=>{let O=Zt(v?1:E),L=64,ee=E/O;ee<L&&(L=32);let te=Math.ceil(E/O/L),T=[{type:12,data:u},{type:12,data:h},{type:12,data:w},{type:12,data:B},{type:12,data:ee},{type:12,data:te}],le=zt(i.dataType,O),de=VA(1,O),we=["type"];return v&&we.push("type"),z&&we.push("type"),{name:"AttentionProbsSoftmax",shaderCache:{hint:`${L};${le};${O}`,inputDependencies:we},getShaderSource:be=>{let Me=$A("x",i.dataType,i.dims,O),Fe=[Me],We=v?pA("seq_lens",v.dataType,v.dims):void 0;We&&Fe.push(We);let $e=z?pA("total_sequence_length_input",z.dataType,z.dims):void 0;$e&&Fe.push($e);let eA=VA(i.dataType);return`
  var<workgroup> thread_max: array<f32, ${L}>;
  var<workgroup> thread_sum: array<f32, ${L}>;
  ${be.registerUniforms([{name:"batch_size",type:"u32"},{name:"num_heads",type:"u32"},{name:"past_sequence_length",type:"u32"},{name:"sequence_length",type:"u32"},{name:"total_sequence_length",type:"u32"},{name:"elements_per_thread",type:"u32"}]).declareVariables(...Fe)}
  ${be.mainStart([L,1,1])}
    let batchIdx = workgroup_id.z / uniforms.num_heads;
    let headIdx = workgroup_id.z % uniforms.num_heads;
    let sequence_length = uniforms.sequence_length;
    var total_sequence_length = uniforms.total_sequence_length;
    ${RA(We,$e,!1)}
    let local_offset = local_idx * uniforms.elements_per_thread;
    let offset = (global_idx / ${L}) * uniforms.total_sequence_length + local_offset;
    let seq_causal_length = ${v?"u32(past_sequence_length + workgroup_id.y + 1)":"total_sequence_length"};
    var thread_max_vector = ${de}(-3.402823e+38f);
    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
      thread_max_vector = max(${de}(x[offset + i]), thread_max_vector);
    }
    thread_max[local_idx] = ${(()=>{switch(O){case 1:return"thread_max_vector";case 2:return"max(thread_max_vector.x, thread_max_vector.y)";case 4:return"max(max(thread_max_vector.x, thread_max_vector.y), max(thread_max_vector.z, thread_max_vector.w))";default:throw new Error(`Unsupported components: ${O}`)}})()};
    workgroupBarrier();

    var max_value =  f32(-3.402823e+38f);
    for (var i = 0u; i < ${L}; i++) {
      max_value = max(thread_max[i], max_value);
    }

    var sum_vector = ${de}(0);
    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
      sum_vector += exp(${de}(x[offset + i]) - max_value);
    }
    thread_sum[local_idx] = ${(()=>{switch(O){case 1:return"sum_vector";case 2:return"sum_vector.x + sum_vector.y";case 4:return"sum_vector.x + sum_vector.y + sum_vector.z + sum_vector.w";default:throw new Error(`Unsupported components: ${O}`)}})()};
    workgroupBarrier();

    var sum: f32 = 0;
    for (var i = 0u; i < ${L}; i++) {
      sum += thread_sum[i];
    }

    if (sum == 0) {
      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
        x[offset + i] = ${Me.type.value}(${eA}(1.0) / ${eA}(seq_causal_length));
      }
    } else {
      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
        var f32input = ${de}(x[offset + i]);
        x[offset + i] = ${Me.type.value}(exp(f32input - max_value) / sum);
      }
    }
      ${v?`
        for (var total_seq_id: u32 = seq_causal_length; total_seq_id + local_offset < uniforms.total_sequence_length; total_seq_id++) {
          x[offset + total_seq_id] = ${Me.type.value}(${eA}(0));
        }`:""};
  }`},getRunData:()=>({outputs:[],dispatchGroup:{x:Math.ceil(E/L),y:B,z:u*h},programUniforms:T})}},Gi=(i,u,h,w,B,E,v,z,O)=>{let L=v+E.kvSequenceLength,ee=[E.batchSize,E.numHeads,E.sequenceLength,L],te=i>1&&w,T=E.kvNumHeads?E.kvNumHeads:E.numHeads,le=te?[E.batchSize,T,L,E.headSize]:void 0,de=E.nReps?E.nReps:1,we=E.scale===0?1/Math.sqrt(E.headSize):E.scale,be=Zt(E.headSize),Me=E.headSize/be,Fe=12,We={x:Math.ceil(L/Fe),y:Math.ceil(E.sequenceLength/Fe),z:E.batchSize*E.numHeads},$e=[{type:12,data:E.sequenceLength},{type:12,data:Me},{type:12,data:L},{type:12,data:E.numHeads},{type:12,data:E.headSize},{type:1,data:we},{type:12,data:v},{type:12,data:E.kvSequenceLength},{type:12,data:de}],eA=te&&w&&Le.size(w.dims)>0,aA=["type","type"];eA&&aA.push("type"),B&&aA.push("type"),z&&aA.push("type"),O&&aA.push("type");let zA=[{dims:ee,dataType:u.dataType,gpuDataType:0}];return te&&zA.push({dims:le,dataType:u.dataType,gpuDataType:0}),{name:"AttentionProbs",shaderCache:{hint:`${be};${B!==void 0};${w!==void 0};${i}`,inputDependencies:aA},getRunData:()=>({outputs:zA,dispatchGroup:We,programUniforms:$e}),getShaderSource:jA=>{let ht=pA("q",u.dataType,u.dims,be),mt=[ht,pA("key",h.dataType,h.dims,be)];if(eA){let gt=pA("past_key",w.dataType,w.dims,be);mt.push(gt)}B&&mt.push(pA("attention_bias",B.dataType,B.dims));let Jt=z?pA("seq_lens",z.dataType,z.dims):void 0;Jt&&mt.push(Jt);let Ct=O?pA("total_sequence_length_input",O.dataType,O.dims):void 0;Ct&&mt.push(Ct);let Pt=$A("output",u.dataType,ee),Qt=[Pt];te&&Qt.push($A("present_key",u.dataType,le,be));let iA=VA(1,be);return`
  const TILE_SIZE = 12u;

  var<workgroup> tileQ: array<${ht.type.storage}, 144>;
  var<workgroup> tileK: array<${ht.type.storage}, 144>;
  ${jA.registerUniforms([{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"alpha",type:"f32"},{name:"past_sequence_length",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"n_reps",type:"u32"}]).declareVariables(...mt,...Qt)}
  ${jA.mainStart([Fe,Fe,1])}
    // x holds the N and y holds the M
    let headIdx = workgroup_id.z % uniforms.num_heads;
    let kvHeadIdx = ${de===1?"headIdx":"headIdx / uniforms.n_reps"};
    let kv_num_heads = ${de===1?"uniforms.num_heads":"uniforms.num_heads / uniforms.n_reps"};
    let batchIdx = workgroup_id.z / uniforms.num_heads;
    let m = workgroup_id.y * TILE_SIZE;
    let n = workgroup_id.x * TILE_SIZE;
    let sequence_length = uniforms.M;
    var total_sequence_length = uniforms.N;
    ${RA(Jt,Ct,!0)}
    let absKvHeadIdx = batchIdx * kv_num_heads + kvHeadIdx;
    let qOffset = workgroup_id.z * uniforms.M * uniforms.K + m * uniforms.K;
    ${eA&&te?"let pastKeyOffset = absKvHeadIdx * uniforms.past_sequence_length * uniforms.K;":""};
    let kOffset = absKvHeadIdx * uniforms.kv_sequence_length * uniforms.K;
    ${te?"let presentKeyOffset = absKvHeadIdx * uniforms.N * uniforms.K;":""}
    var value = ${iA}(0);
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (global_id.y < uniforms.M && w + local_id.x < uniforms.K) {
        tileQ[TILE_SIZE * local_id.y + local_id.x] = q[qOffset + local_id.y * uniforms.K + w + local_id.x];
      }
      if (n + local_id.y < uniforms.N && w + local_id.x < uniforms.K) {
        var idx = TILE_SIZE * local_id.y + local_id.x;
      ${eA&&te?`
              if (n + local_id.y < past_sequence_length) {
                tileK[idx] = past_key[pastKeyOffset + (n + local_id.y) * uniforms.K + w + local_id.x];
              } else if (n + local_id.y - past_sequence_length < uniforms.kv_sequence_length) {
                tileK[idx] = key[kOffset + (n + local_id.y - past_sequence_length) * uniforms.K + w + local_id.x];
              }`:`
          if (n + local_id.y < uniforms.kv_sequence_length) {
            tileK[idx] = key[kOffset + (n + local_id.y) * uniforms.K + w + local_id.x];
          }`}
      ${te?`if (n + local_id.y < present_sequence_length) {
        present_key[presentKeyOffset + (n + local_id.y) * uniforms.K + w + local_id.x] = tileK[idx];
      }`:""}
      }
      workgroupBarrier();

      for (var k: u32 = 0u; k < TILE_SIZE && w+k < uniforms.K; k++) {
          value += ${iA}(tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * local_id.x + k]);
      }

      workgroupBarrier();
    }

    if (global_id.y < uniforms.M && global_id.x < total_sequence_length) {
      let headOffset = workgroup_id.z * uniforms.M * uniforms.N;
      let outputIdx = headOffset + global_id.y * uniforms.N + global_id.x;
      var sum: f32 = ${(()=>{switch(be){case 1:return"value";case 2:return"value.x + value.y";case 4:return"value.x + value.y + value.z + value.w";default:throw new Error(`Unsupported components: ${be}`)}})()};
        output[outputIdx] = ${Pt.type.value} (sum * uniforms.alpha) + ${B?"attention_bias[outputIdx]":"0.0"};
    }
  }`}}},Ms=(i,u,h,w,B,E,v=void 0,z=void 0)=>{let O=E+B.kvSequenceLength,L=B.nReps?B.nReps:1,ee=B.vHiddenSize*L,te=i>1&&w,T=B.kvNumHeads?B.kvNumHeads:B.numHeads,le=te?[B.batchSize,T,O,B.headSize]:void 0,de=[B.batchSize,B.sequenceLength,ee],we=12,be={x:Math.ceil(B.vHeadSize/we),y:Math.ceil(B.sequenceLength/we),z:B.batchSize*B.numHeads},Me=[{type:12,data:B.sequenceLength},{type:12,data:O},{type:12,data:B.vHeadSize},{type:12,data:B.numHeads},{type:12,data:B.headSize},{type:12,data:ee},{type:12,data:E},{type:12,data:B.kvSequenceLength},{type:12,data:L}],Fe=te&&w&&Le.size(w.dims)>0,We=["type","type"];Fe&&We.push("type"),v&&We.push("type"),z&&We.push("type");let $e=[{dims:de,dataType:u.dataType,gpuDataType:0}];return te&&$e.push({dims:le,dataType:u.dataType,gpuDataType:0}),{name:"AttentionScore",shaderCache:{hint:`${w!==void 0};${i}`,inputDependencies:We},getRunData:()=>({outputs:$e,dispatchGroup:be,programUniforms:Me}),getShaderSource:eA=>{let aA=pA("probs",u.dataType,u.dims),zA=[aA,pA("v",h.dataType,h.dims)];Fe&&zA.push(pA("past_value",w.dataType,w.dims));let jA=v?pA("seq_lens",v.dataType,v.dims):void 0;v&&zA.push(jA);let ht=z?pA("total_sequence_length_input",z.dataType,z.dims):void 0;z&&zA.push(ht);let mt=[$A("output",u.dataType,de)];return te&&mt.push($A("present_value",u.dataType,le)),`
  const TILE_SIZE = 12u;
  var<workgroup> tileQ: array<${aA.type.value}, 144>;
  var<workgroup> tileV: array<${aA.type.value}, 144>;
  ${eA.registerUniforms([{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"v_hidden_size",type:"u32"},{name:"past_sequence_length",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"n_reps",type:"u32"}]).declareVariables(...zA,...mt)}
  ${eA.mainStart([we,we,1])}
   let headIdx = workgroup_id.z % uniforms.num_heads;
   let batchIdx = workgroup_id.z / uniforms.num_heads;
   let kvHeadIdx = ${L===1?"headIdx":"headIdx / uniforms.n_reps"};
   let kv_num_heads = ${L===1?"uniforms.num_heads":"uniforms.num_heads / uniforms.n_reps"};
   let m = global_id.y;
   let n = global_id.x;
   let sequence_length = uniforms.M;
   var total_sequence_length = uniforms.K;
   ${RA(jA,ht,!0)}
   let offsetA = workgroup_id.z * uniforms.M * uniforms.K + m * uniforms.K;
   let absKvHeadIdx = batchIdx * kv_num_heads + kvHeadIdx; // kvHeadIdx is relative to the batch
   ${Fe&&te?"let pastValueOffset = absKvHeadIdx * uniforms.N * uniforms.past_sequence_length + n;":""};
   let vOffset = absKvHeadIdx * uniforms.N * uniforms.kv_sequence_length + n;
   ${te?"let presentValueOffset = absKvHeadIdx * uniforms.N * uniforms.K + n;":""}
   var value = ${aA.type.storage}(0);
   for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m < uniforms.M && w + local_id.x < uniforms.K) {
        tileQ[TILE_SIZE * local_id.y + local_id.x] = probs[offsetA + w + local_id.x];
      }
      if (n < uniforms.N && w + local_id.y < uniforms.K) {
        var idx = TILE_SIZE * local_id.y + local_id.x;
        ${Fe&&te?`
        if (w + local_id.y < past_sequence_length) {
          tileV[idx] = past_value[pastValueOffset + (w + local_id.y) * uniforms.N];
        } else if (w + local_id.y - past_sequence_length < uniforms.kv_sequence_length) {
          tileV[idx] = v[vOffset + (w + local_id.y - past_sequence_length) * uniforms.N];
        }
      `:`
            if (w + local_id.y < uniforms.kv_sequence_length) {
              tileV[idx] = v[vOffset + (w + local_id.y) * uniforms.N];
            }`}
        ${te?`
            if (w + local_id.y < present_sequence_length) {
          present_value[presentValueOffset + (w + local_id.y) * uniforms.N] = tileV[idx];
        }`:""}
      }
     workgroupBarrier();
     for (var k: u32 = 0u; k < TILE_SIZE && w+k < total_sequence_length; k++) {
       value += tileQ[TILE_SIZE * local_id.y + k] * tileV[TILE_SIZE * k + local_id.x];
     }
     workgroupBarrier();
   }

   // we need to transpose output from BNSH_v to BSND_v
   if (m < uniforms.M && n < uniforms.N) {
     let outputIdx = batchIdx * uniforms.M * uniforms.v_hidden_size + m * uniforms.v_hidden_size
       + headIdx * uniforms.N + n;
     output[outputIdx] = value;
   }
  }`}}},wa=(i,u,h,w,B,E,v,z,O,L,ee=void 0,te=void 0)=>{let T=Math.min(i.outputCount,1+(v?1:0)+(z?1:0)),le=T>1?L.pastSequenceLength:0,de=le+L.kvSequenceLength,we=O&&Le.size(O.dims)>0?O:void 0,be=[u,h];T>1&&v&&Le.size(v.dims)>0&&be.push(v),we&&be.push(we),ee&&be.push(ee),te&&be.push(te);let Me=i.compute(Gi(T,u,h,v,we,L,le,ee,te),{inputs:be,outputs:T>1?[-1,1]:[-1]})[0];i.compute(Aa(Me,L.batchSize,L.numHeads,le,L.sequenceLength,de,ee,te),{inputs:ee&&te?[Me,ee,te]:[Me],outputs:[]});let Fe=[Me,w];T>1&&z&&Le.size(z.dims)>0&&Fe.push(z),ee&&Fe.push(ee),te&&Fe.push(te),i.compute(Ms(T,Me,w,z,L,le,ee,te),{inputs:Fe,outputs:T>1?[0,2]:[0]})},Di=(i,u)=>{let h=[u.batchSize,u.numHeads,u.sequenceLength,u.headSize],w=u.sequenceLength,B=u.inputHiddenSize,E=u.headSize,v=12,z={x:Math.ceil(u.headSize/v),y:Math.ceil(u.sequenceLength/v),z:u.batchSize*u.numHeads},O=[i.inputs[0],i.inputs[1],i.inputs[2]],L=[{type:12,data:w},{type:12,data:B},{type:12,data:E},{type:12,data:u.numHeads},{type:12,data:u.headSize},{type:12,data:u.hiddenSize},{type:12,data:u.hiddenSize+u.hiddenSize+u.vHiddenSize}];return i.compute({name:"AttentionPrepare",shaderCache:{inputDependencies:["type","type","type"]},getRunData:()=>({outputs:[{dims:h,dataType:i.inputs[0].dataType,gpuDataType:0},{dims:h,dataType:i.inputs[0].dataType,gpuDataType:0},{dims:h,dataType:i.inputs[0].dataType,gpuDataType:0}],dispatchGroup:z,programUniforms:L}),getShaderSource:ee=>{let te=$A("output_q",O[0].dataType,h),T=$A("output_k",O[0].dataType,h),le=$A("output_v",O[0].dataType,h),de=pA("input",O[0].dataType,O[0].dims),we=pA("weight",O[1].dataType,O[1].dims),be=pA("bias",O[2].dataType,O[2].dims),Me=de.type.storage;return`
  const TILE_SIZE = 12u;
  var<workgroup> tileInput: array<${Me}, 144>;
  var<workgroup> tileWeightQ: array<${Me}, 144>;
  var<workgroup> tileWeightK: array<${Me}, 144>;
  var<workgroup> tileWeightV: array<${Me}, 144>;
  ${ee.registerUniforms([{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"hidden_size",type:"u32"},{name:"ldb",type:"u32"}]).declareVariables(de,we,be,te,T,le)}
  ${ee.mainStart([v,v,1])}
    let batchIndex = workgroup_id.z / uniforms.num_heads;
    let headNumber = workgroup_id.z % uniforms.num_heads;
    let m = global_id.y;
    let n = global_id.x;

    let inputOffset = batchIndex * (uniforms.M * uniforms.K) + m * uniforms.K;
    let biasOffsetQ = headNumber * uniforms.head_size;
    let biasOffsetK = uniforms.hidden_size + biasOffsetQ;
    let biasOffsetV = uniforms.hidden_size + biasOffsetK;

    var valueQ = ${Me}(0);
    var valueK = ${Me}(0);
    var valueV = ${Me}(0);
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m < uniforms.M && w + local_id.x < uniforms.K) {
        tileInput[TILE_SIZE * local_id.y + local_id.x] = input[inputOffset + w + local_id.x];
      }
      if (n < uniforms.N && w + local_id.y < uniforms.K) {
        let offset = n + (w + local_id.y) * uniforms.ldb;
        tileWeightQ[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetQ + offset];
        tileWeightK[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetK + offset];
        tileWeightV[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetV + offset];
      }
      workgroupBarrier();
      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {
        let inputTileOffset = TILE_SIZE * local_id.y + k;
        let weightTileOffset = TILE_SIZE * k + local_id.x;
        valueQ += tileInput[inputTileOffset] * tileWeightQ[weightTileOffset];
        valueK += tileInput[inputTileOffset] * tileWeightK[weightTileOffset];
        valueV += tileInput[inputTileOffset] * tileWeightV[weightTileOffset];
      }

      workgroupBarrier();
    }

    let headOffset = (m * uniforms.N + n) % uniforms.head_size;
    valueQ += bias[headOffset + biasOffsetQ];
    valueK += bias[headOffset + biasOffsetK];
    valueV += bias[headOffset + biasOffsetV];

    let offset = workgroup_id.z * uniforms.M * uniforms.N;
    if (m < uniforms.M && n < uniforms.N) {
      let outputIdx = offset + m * uniforms.N + n;
      output_q[outputIdx] = valueQ;
      output_k[outputIdx] = valueK;
      output_v[outputIdx] = valueV;
    }
  }`}},{inputs:O,outputs:[-1,-1,-1]})},w0=(i,u)=>{let h=ls(i.inputs,u),[w,B,E]=Di(i,h);return wa(i,w,B,E,i.inputs[4],void 0,void 0,void 0,i.inputs[5],h)}}),K1=Pe(()=>{dA(),Mt(),St(),Zr(),Yt(),k0=(i,u)=>{if(!i||i.length!==5)throw new Error("BatchNormalization requires 5 inputs");let h=(w,B,E)=>{let v=B.length;if(v!==w.length)throw new Error(`${E}: num dimensions != ${v}`);B.forEach((z,O)=>{if(z!==w[O])throw new Error(`${E}: dim[${O}] do not match`)})};if(i[0].dims.length>1){let w=u.format==="NHWC"?u.spatial?i[0].dims.slice(-1):i[0].dims.slice(-1).concat(i[0].dims.slice(1,i[0].dims.length-1)):i[0].dims.slice(1,u.spatial?2:void 0);h(i[1].dims,w,"Invalid input scale"),h(i[2].dims,w,"Invalid input B"),h(i[3].dims,w,"Invalid input mean"),h(i[4].dims,w,"Invalid input var")}else h(i[1].dims,[1],"Invalid input scale"),h(i[2].dims,[1],"Invalid input B"),h(i[3].dims,[1],"Invalid input mean"),h(i[4].dims,[1],"Invalid input var")},Us=(i,u)=>{let{epsilon:h,spatial:w,format:B}=u,E=i[0].dims,v=w?Zt(E[E.length-1]):1,z=B==="NHWC"&&E.length>1?v:1,O=Le.size(E)/v,L=w,ee=L?E.length:E,te=pA("x",i[0].dataType,i[0].dims,v),T=pA("scale",i[1].dataType,i[1].dims,z),le=pA("bias",i[2].dataType,i[2].dims,z),de=pA("inputMean",i[3].dataType,i[3].dims,z),we=pA("inputVar",i[4].dataType,i[4].dims,z),be=$A("y",i[0].dataType,ee,v);return{name:"BatchNormalization",shaderCache:{hint:`${u.epsilon}_${u.format}_${w}_${v}`,inputDependencies:L?["rank","type","type","type","type"]:void 0},getShaderSource:Me=>`
  const epsilon = ${h};
  ${Me.registerUniform("outputSize","u32").declareVariables(te,T,le,de,we,be)}
  ${Me.mainStart()}
  ${Me.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
    var outputIndices = ${be.offsetToIndices(`global_idx * ${v}`)};
    ${(()=>{let Fe="";if(w)Fe=`let cOffset = ${E.length===1?"0u":B==="NHWC"?`outputIndices[${E.length-1}] / ${v}`:"outputIndices[1]"};`;else if(B==="NCHW")Fe=`
            ${be.indicesSet("outputIndices","0","0")}
            let cOffset = ${be.indicesToOffset("outputIndices")};`;else{Fe=`var cIndices = ${T.type.indices}(0);
                       cIndices[0] = outputIndices[${E.length-1}];`;for(let We=1;We<T.rank;We++)Fe+=`cIndices[${We}] = outputIndices[${We}];`;Fe+=`let cOffset = ${T.indicesToOffset("cIndices")};`}return Fe})()}
    let scale = ${T.getByOffset("cOffset")};
    let bias = ${le.getByOffset("cOffset")};
    let inputMean = ${de.getByOffset("cOffset")};
    let inputVar = ${we.getByOffset("cOffset")};
    let x = ${te.getByOffset("global_idx")};
    let value = (x - inputMean) * inverseSqrt(inputVar + epsilon) * scale + bias;
    ${be.setByOffset("global_idx","value")}
  }`,getRunData:()=>({outputs:[{dims:i[0].dims,dataType:i[0].dataType}],dispatchGroup:{x:Math.ceil(O/64)},programUniforms:L?[{type:12,data:O},..._A(E)]:[{type:12,data:O}]})}},x0=i=>Ze(i),B0=(i,u)=>{let{inputs:h,outputCount:w}=i,B=x0({...u,outputCount:w});if(K.webgpu.validateInputContent&&k0(h,B),u.trainingMode)throw new Error("BatchNormalization trainingMode is not supported yet.");i.compute(Us(h,B))}}),Z1=Pe(()=>{St(),Yt(),Rr=i=>{if(i[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![320,640,1280].includes(i[0].dims[2]))throw new Error("number of channels should be 320, 640 or 1280");if(i[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(i[0].dims[2]!==i[1].dims[0])throw new Error("last dimension of input and bias are not the same")},v0=i=>{let u=i[0].dims,h=i[0].dims[2],w=Le.size(u)/4,B=i[0].dataType,E=pA("input",B,u,4),v=pA("bias",B,[h],4),z=pA("residual",B,u,4),O=$A("output",B,u,4);return{name:"BiasAdd",getRunData:()=>({outputs:[{dims:u,dataType:i[0].dataType}],dispatchGroup:{x:Math.ceil(w/64)}}),getShaderSource:L=>`
  const channels = ${h}u / 4;
  ${L.declareVariables(E,v,z,O)}

  ${L.mainStart()}
    ${L.guardAgainstOutOfBoundsWorkgroupSizes(w)}
    let value = ${E.getByOffset("global_idx")}
      + ${v.getByOffset("global_idx % channels")} + ${z.getByOffset("global_idx")};
    ${O.setByOffset("global_idx","value")}
  }`}},y0=i=>{Rr(i.inputs),i.compute(v0(i.inputs))}}),n2=Pe(()=>{Mt(),St(),Zr(),Yt(),kt=(i,u,h,w,B,E,v)=>{let z=Math.ceil(u/4),O="";O=typeof B=="string"?`${B}(a)`:B("a");let L=pA("inputData",h,[z],4),ee=$A("outputData",w,[z],4),te=[{name:"vec_size",type:"u32"}];return v&&te.push(...v),`
      ${i.registerUniforms(te).declareVariables(L,ee)}

  ${E??""}

  ${i.mainStart()}
    ${i.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}

    let a = ${L.getByOffset("global_idx")};
    ${ee.setByOffset("global_idx",O)}
  }`},Wt=(i,u,h,w,B,E=i.dataType,v,z)=>{let O=[{type:12,data:Math.ceil(Le.size(i.dims)/4)}];return v&&O.push(...v),{name:u,shaderCache:{hint:B,inputDependencies:["type"]},getShaderSource:L=>kt(L,Le.size(i.dims),i.dataType,E,h,w,z),getRunData:L=>({outputs:[{dims:i.dims,dataType:E}],dispatchGroup:{x:Math.ceil(Le.size(L[0].dims)/64/4)},programUniforms:O})}},Qi=i=>{i.compute(Wt(i.inputs[0],"Abs","abs"))},da=i=>{i.compute(Wt(i.inputs[0],"Acos","acos"))},E0=i=>{i.compute(Wt(i.inputs[0],"Acosh","acosh"))},tn=i=>{i.compute(Wt(i.inputs[0],"Asin","asin"))},ka=i=>{i.compute(Wt(i.inputs[0],"Asinh","asinh"))},rn=i=>{i.compute(Wt(i.inputs[0],"Atan","atan"))},xa=i=>{i.compute(Wt(i.inputs[0],"Atanh","atanh"))},Ks=i=>Ze(i),Ti=(i,u)=>{let h;switch(u.to){case 10:h="vec4<f16>";break;case 1:h="vec4<f32>";break;case 12:h="vec4<u32>";break;case 6:h="vec4<i32>";break;case 9:h="vec4<bool>";break;default:throw new RangeError(`not supported type (specified in attribute 'to' from 'Cast' operator): ${u.to}`)}i.compute(Wt(i.inputs[0],"Cast",h,void 0,u.cacheKey,u.to))},M0=i=>{let u,h,w=i.length>=2&&i[1].data!==0,B=i.length>=3&&i[2].data!==0;switch(i[0].dataType){case 1:u=w?i[1].getFloat32Array()[0]:-34028234663852886e22,h=B?i[2].getFloat32Array()[0]:34028234663852886e22;break;case 10:u=w?i[1].getUint16Array()[0]:64511,h=B?i[2].getUint16Array()[0]:31743;break;default:throw new Error("Unsupport data type")}return Ze({min:u,max:h})},Zs=(i,u)=>{let h=u||M0(i.inputs),w=VA(i.inputs[0].dataType);i.compute(Wt(i.inputs[0],"Clip",B=>`clamp(${B}, vec4<${w}>(uniforms.min), vec4<${w}>(uniforms.max))`,void 0,h.cacheKey,void 0,[{type:i.inputs[0].dataType,data:h.min},{type:i.inputs[0].dataType,data:h.max}],[{name:"min",type:w},{name:"max",type:w}]),{inputs:[0]})},Mr=i=>{i.compute(Wt(i.inputs[0],"Ceil","ceil"))},Gs=i=>{i.compute(Wt(i.inputs[0],"Cos","cos"))},Pi=i=>{i.compute(Wt(i.inputs[0],"Cosh","cosh"))},nn=i=>Ze(i),cs=(i,u)=>{let h=VA(i.inputs[0].dataType);i.compute(Wt(i.inputs[0],"Elu",w=>`elu_vf32(${w})`,`
  const elu_alpha_ = ${h}(${u.alpha});

  fn elu_f32(a: ${h}) -> ${h} {
  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);
  }

  fn elu_vf32(v: vec4<${h}>) -> vec4<${h}> {
  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));
  }`,u.cacheKey))},Ba=(i="f32")=>`
const r0: ${i} = 0.3275911;
const r1: ${i} = 0.254829592;
const r2: ${i} = -0.284496736;
const r3: ${i} = 1.421413741;
const r4: ${i} = -1.453152027;
const r5: ${i} = 1.061405429;

fn erf_vf32(v: vec4<${i}>) -> vec4<${i}> {
  let absv = abs(v);
  let x = 1.0 / (1.0 + r0 * absv);
  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));
}`,zi=i=>{let u=VA(i.inputs[0].dataType);i.compute(Wt(i.inputs[0],"Erf",h=>`erf_vf32(${h})`,Ba(u)))},Fi=i=>{i.compute(Wt(i.inputs[0],"Exp","exp"))},Si=i=>{i.compute(Wt(i.inputs[0],"Floor","floor"))},Xs=i=>{let u=VA(i.inputs[0].dataType);i.compute(Wt(i.inputs[0],"Gelu",h=>`0.5 * ${h} * (1.0 + erf_vf32(${h} * 0.7071067811865475))`,Ba(u)))},fa=(i,u)=>{let h=VA(i.inputs[0].dataType);i.compute(Wt(i.inputs[0],"LeakyRelu",w=>`select(leaky_relu_alpha_ * ${w}, ${w}, ${w} >= vec4<${h}>(0.0))`,`const leaky_relu_alpha_ = ${h}(${u.alpha});`,u.cacheKey))},qs=i=>{i.compute(Wt(i.inputs[0],"Not",u=>`!${u}`))},G0=i=>{i.compute(Wt(i.inputs[0],"Neg",u=>`-${u}`))},Ni=i=>{i.compute(Wt(i.inputs[0],"Reciprocal",u=>`1.0/${u}`))},Oi=i=>{let u=VA(i.inputs[0].dataType);i.compute(Wt(i.inputs[0],"Relu",h=>`select(vec4<${u}>(0.0), ${h}, ${h} > vec4<${u}>(0.0))`))},va=i=>{i.compute(Wt(i.inputs[0],"Sigmoid",u=>`(1.0 / (1.0 + exp(-${u})))`))},Js=i=>Ze(i),Wr=(i,u)=>{let h=VA(i.inputs[0].dataType);i.compute(Wt(i.inputs[0],"HardSigmoid",w=>`max(vec4<${h}>(0.0), min(vec4<${h}>(1.0), ${u.alpha} * ${w} + vec4<${h}>(${u.beta})))`,void 0,u.cacheKey))},Li=i=>{i.compute(Wt(i.inputs[0],"Sin","sin"))},_s=i=>{i.compute(Wt(i.inputs[0],"Sinh","sinh"))},Ds=i=>{i.compute(Wt(i.inputs[0],"Sqrt","sqrt"))},On=i=>{i.compute(Wt(i.inputs[0],"Tan","tan"))},Qs=i=>`sign(${i}) * (1 - exp(-2 * abs(${i}))) / (1 + exp(-2 * abs(${i})))`,Yi=i=>{i.compute(Wt(i.inputs[0],"Tanh",Qs))},ta=(i="f32")=>`
const fast_gelu_a: ${i} = 0.5;
const fast_gelu_b: ${i} = 0.7978845608028654;
const fast_gelu_c: ${i} = 0.035677408136300125;

fn tanh_v(v: vec4<${i}>) -> vec4<${i}> {
  return ${Qs("v")};
}
`,Hi=i=>`(fast_gelu_a + fast_gelu_a * tanh_v(${i} * (fast_gelu_c * ${i} * ${i} + fast_gelu_b))) * ${i}`,$s=i=>{let u=VA(i.inputs[0].dataType);i.compute(Wt(i.inputs[0],"FastGelu",Hi,ta(u),void 0,i.inputs[0].dataType))},Ri=(i,u)=>{let h=VA(i.inputs[0].dataType);return i.compute(Wt(i.inputs[0],"ThresholdedRelu",w=>`select(vec4<${h}>(0.0), ${w}, ${w} > thresholded_relu_alpha_)`,`const thresholded_relu_alpha_ = vec4<${h}>(${u.alpha});`,u.cacheKey)),0},gs=i=>{i.compute(Wt(i.inputs[0],"Log","log"))},Wi=(i,u)=>`
const alpha = vec4<${i}>(${u});
const one = ${i}(1.0);
const zero = ${i}(0.0);

fn quick_gelu_impl(x: vec4<${i}>) -> vec4<${i}> {
  let v = x *alpha;
  var x1 : vec4<${i}>;
  for (var i = 0; i < 4; i = i + 1) {
    if (v[i] >= zero) {
      x1[i] = one / (one + exp(-v[i]));
    } else {
      x1[i] = one - one / (one + exp(v[i]));
    }
  }
  return x * x1;
}
`,D0=i=>`quick_gelu_impl(${i})`,Q0=(i,u)=>{let h=VA(i.inputs[0].dataType);i.compute(Wt(i.inputs[0],"QuickGelu",D0,Wi(h,u.alpha),u.cacheKey,i.inputs[0].dataType))}}),X1=Pe(()=>{St(),Yt(),n2(),an=i=>{if(i[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![2560,5120,10240].includes(i[0].dims[2]))throw new Error("hidden state should be 2560, 5120 or 10240");if(i[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(i[0].dims[2]!==i[1].dims[0])throw new Error("last dimension of input and bias are not the same")},Ts=i=>{let u=i[0].dims.slice();u[2]=u[2]/2;let h=pA("input",i[0].dataType,i[0].dims,4),w=pA("bias",i[0].dataType,[i[0].dims[2]],4),B=$A("output",i[0].dataType,u,4),E=Le.size(u)/4,v=zt(i[0].dataType);return{name:"BiasSplitGelu",getRunData:()=>({outputs:[{dims:u,dataType:i[0].dataType}],dispatchGroup:{x:Math.ceil(E/64)}}),getShaderSource:z=>`
  const M_SQRT2 = sqrt(2.0);
  const halfChannels = ${i[0].dims[2]/4/2}u;

  ${z.declareVariables(h,w,B)}

  ${Ba(v)}

  ${z.mainStart()}
    ${z.guardAgainstOutOfBoundsWorkgroupSizes(E)}
    let biasIdx = global_idx % halfChannels;
    let batchIndex = global_idx / halfChannels;
    let inputOffset = biasIdx + batchIndex * halfChannels * 2;
    let valueLeft = input[inputOffset] + bias[biasIdx];
    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];
    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);

    ${B.setByOffset("global_idx","valueLeft * geluRight")}
  }`}},Cn=i=>{an(i.inputs),i.compute(Ts(i.inputs))}}),q1=Pe(()=>{Mt(),St(),Yt(),Vi=(i,u,h,w,B,E,v,z,O,L,ee,te)=>{let T,le;typeof z=="string"?T=le=(Fe,We)=>`${z}((${Fe}),(${We}))`:typeof z=="function"?T=le=z:(T=z.scalar,le=z.vector);let de,we=$A("outputData",ee,w.length,4),be=pA("aData",O,u.length,4),Me=pA("bData",L,h.length,4);if(B)if(E){let Fe=Le.size(u)===1,We=Le.size(h)===1,$e=u.length>0&&u[u.length-1]%4==0,eA=h.length>0&&h[h.length-1]%4==0;de=Fe||We?we.setByOffset("global_idx",le(Fe?`${be.type.value}(${be.getByOffset("0")}.x)`:be.getByOffset("global_idx"),We?`${Me.type.value}(${Me.getByOffset("0")}.x)`:Me.getByOffset("global_idx"))):`
            let outputIndices = ${we.offsetToIndices("global_idx * 4u")};
            let offsetA = ${be.broadcastedIndicesToOffset("outputIndices",we)};
            let offsetB = ${Me.broadcastedIndicesToOffset("outputIndices",we)};
            ${we.setByOffset("global_idx",le(v||$e?be.getByOffset("offsetA / 4u"):`${be.type.value}(${be.getByOffset("offsetA / 4u")}[offsetA % 4u])`,v||eA?Me.getByOffset("offsetB / 4u"):`${Me.type.value}(${Me.getByOffset("offsetB / 4u")}[offsetB % 4u])`))}
          `}else de=we.setByOffset("global_idx",le(be.getByOffset("global_idx"),Me.getByOffset("global_idx")));else{if(!E)throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");let Fe=(We,$e,eA="")=>{let aA=`aData[indexA${$e}][componentA${$e}]`,zA=`bData[indexB${$e}][componentB${$e}]`;return`
            let outputIndices${$e} = ${we.offsetToIndices(`global_idx * 4u + ${$e}u`)};
            let offsetA${$e} = ${be.broadcastedIndicesToOffset(`outputIndices${$e}`,we)};
            let offsetB${$e} = ${Me.broadcastedIndicesToOffset(`outputIndices${$e}`,we)};
            let indexA${$e} = offsetA${$e} / 4u;
            let indexB${$e} = offsetB${$e} / 4u;
            let componentA${$e} = offsetA${$e} % 4u;
            let componentB${$e} = offsetB${$e} % 4u;
            ${We}[${$e}] = ${eA}(${T(aA,zA)});
          `};de=ee===9?`
            var data = vec4<u32>(0);
            ${Fe("data",0,"u32")}
            ${Fe("data",1,"u32")}
            ${Fe("data",2,"u32")}
            ${Fe("data",3,"u32")}
            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:`
            ${Fe("outputData[global_idx]",0)}
            ${Fe("outputData[global_idx]",1)}
            ${Fe("outputData[global_idx]",2)}
            ${Fe("outputData[global_idx]",3)}
          `}return`
        ${i.registerUniform("vec_size","u32").declareVariables(be,Me,we)}

        ${te??""}

        ${i.mainStart()}
        ${i.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${de}
      }`},ei=(i,u,h,w,B,E,v=h.dataType)=>{let z=h.dims.map(we=>Number(we)??1),O=w.dims.map(we=>Number(we)??1),L=!Le.areEqual(z,O),ee=z,te=Le.size(z),T=!1,le=!1,de=[L];if(L){let we=PA.calcShape(z,O,!1);if(!we)throw new Error("Can't perform binary op on the given tensors");ee=we.slice(),te=Le.size(ee);let be=Le.size(z)===1,Me=Le.size(O)===1,Fe=z.length>0&&z[z.length-1]%4==0,We=O.length>0&&O[O.length-1]%4==0;de.push(be),de.push(Me),de.push(Fe),de.push(We);let $e=1;for(let eA=1;eA<ee.length;eA++){let aA=z[z.length-eA];if(aA!==O[O.length-eA])break;$e*=aA}$e%4==0?(le=!0,T=!0):(be||Me||Fe||We)&&(T=!0)}else T=!0;return de.push(T),{name:i,shaderCache:{hint:u+de.map(we=>we.toString()).join("_"),inputDependencies:["rank","rank"]},getShaderSource:we=>Vi(we,z,O,ee,T,L,le,B,h.dataType,w.dataType,v,E),getRunData:()=>({outputs:[{dims:ee,dataType:v}],dispatchGroup:{x:Math.ceil(te/64/4)},programUniforms:[{type:12,data:Math.ceil(Le.size(ee)/4)},..._A(z,O,ee)]})}},Un=(i,u,h,w,B,E)=>{i.compute(ei(u,B??"",i.inputs[0],i.inputs[1],h,w,E))},hr=i=>{Un(i,"Add",(u,h)=>`${u}+${h}`)},ji=i=>{Un(i,"Div",(u,h)=>`${u}/${h}`)},za=i=>{Un(i,"Equal",{scalar:(u,h)=>`u32(${u}==${h})`,vector:(u,h)=>`vec4<u32>(${u}==${h})`},void 0,void 0,9)},us=i=>{Un(i,"Mul",(u,h)=>`${u}*${h}`)},T0=i=>{let u=pA("input",i.inputs[0].dataType,i.inputs[0].dims).type.value;Un(i,"Pow",{scalar:(h,w)=>`pow_custom(${h},${w})`,vector:(h,w)=>`pow_vector_custom(${h},${w})`},`
    fn pow_custom(a : ${u}, b : ${u}) -> ${u} {
      if (b == ${u}(0.0)) {
        return ${u}(1.0);
      } else if (a < ${u}(0.0) && f32(b) != floor(f32(b))) {
        return ${u}(pow(f32(a), f32(b))); // NaN
      }
      return select(sign(a), ${u}(1.0), round(f32(abs(b) % ${u}(2.0))) != 1.0) * ${u}(${u==="i32"?"round":""}(pow(f32(abs(a)), f32(b))));
    }
    fn pow_vector_custom(a : vec4<${u}>, b : vec4<${u}>) -> vec4<${u}> {
      // TODO: implement vectorized pow
      return vec4<${u}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));
    }
      `)},Ui=i=>{Un(i,"Sub",(u,h)=>`${u}-${h}`)},Ki=i=>{Un(i,"Greater",{scalar:(u,h)=>`u32(${u}>${h})`,vector:(u,h)=>`vec4<u32>(${u}>${h})`},void 0,void 0,9)},P0=i=>{Un(i,"Less",{scalar:(u,h)=>`u32(${u}<${h})`,vector:(u,h)=>`vec4<u32>(${u}<${h})`},void 0,void 0,9)},Fa=i=>{Un(i,"GreaterOrEqual",{scalar:(u,h)=>`u32(${u}>=${h})`,vector:(u,h)=>`vec4<u32>(${u}>=${h})`},void 0,void 0,9)},ra=i=>{Un(i,"LessOrEqual",{scalar:(u,h)=>`u32(${u}<=${h})`,vector:(u,h)=>`vec4<u32>(${u}<=${h})`},void 0,void 0,9)}}),J1=Pe(()=>{Mt(),St(),Zr(),Yt(),Zi=(i,u)=>{if(!i||i.length<1)throw new Error("too few inputs");let h=i[0],w=h.dataType,B=h.dims.length;i.forEach((E,v)=>{if(v!==0){if(E.dataType!==w)throw new Error("input tensors should be one type");if(E.dims.length!==B)throw new Error("input tensors should have the same shape");E.dims.forEach((z,O)=>{if(O!==u&&z!==h.dims[O])throw new Error("non concat dimensions must match")})}})},Ps=(i,u)=>`
  fn calculateInputIndex(index: u32) -> u32 {
    let sizeInConcatAxis = array<u32, ${i}u>(${u});
    for (var i: u32 = 0u; i < ${i}; i += 1u ) {
      if (index < sizeInConcatAxis[i]) {
        return i;
      }
    }
    return ${i}u;
  }`,_r=(i,u)=>{let h=i.length,w=[];for(let B=0;B<h;++B){let E=u.setByOffset("global_idx",i[B].getByIndices("indices"));h===1?w.push(E):B===0?w.push(`if (inputIndex == ${B}u) { ${E} }`):B===h-1?w.push(`else { ${E} }`):w.push(`else if (inputIndex == ${B}) { ${E} }`)}return w.join(`
`)},ar=(i,u,h,w)=>{let B=Le.size(h),E=new Array(i.length),v=new Array(i.length),z=0,O=[],L=[],ee=[{type:12,data:B}];for(let de=0;de<i.length;++de)z+=i[de].dims[u],E[de]=z,L.push(i[de].dims.length),v[de]=pA(`input${de}`,w,L[de]),O.push("rank"),ee.push({type:12,data:E[de]});for(let de=0;de<i.length;++de)ee.push(..._A(i[de].dims));ee.push(..._A(h));let te=$A("output",w,h.length),T=te.indicesGet("indices",u),le=Array.from(Array(E.length).keys()).map(de=>`uniforms.sizeInConcatAxis${de}`).join(",");return{name:"Concat",shaderCache:{hint:`${u}`,inputDependencies:O},getRunData:()=>({outputs:[{dims:h,dataType:w}],dispatchGroup:{x:Math.ceil(B/64)},programUniforms:ee}),getShaderSource:de=>`

  ${(()=>{de.registerUniform("outputSize","u32");for(let we=0;we<i.length;we++)de.registerUniform(`sizeInConcatAxis${we}`,"u32");return de.declareVariables(...v,te)})()}

  ${Ps(E.length,le)}

  ${de.mainStart()}
    ${de.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

    var indices = ${te.offsetToIndices("global_idx")};

    let inputIndex = calculateInputIndex(${T});
    if (inputIndex != 0u) {
      let sizeInConcatAxis = array<u32, ${E.length}u>(${le});
      ${T} -= sizeInConcatAxis[inputIndex - 1u];
    }

    ${_r(v,te)}
  }`}},ds=(i,u)=>{let h=i.inputs,w=h[0].dims,B=Le.normalizeAxis(u.axis,w.length);Zi(h,B);let E=w.slice();E[B]=h.reduce((z,O)=>z+(O.dims.length>B?O.dims[B]:0),0);let v=h.filter(z=>Le.size(z.dims)>0);i.compute(ar(v,B,E,h[0].dataType),{inputs:v})},z0=i=>Ze({axis:i.axis})}),ii=Pe(()=>{Mt(),St(),Sa=(i,u,h="f32")=>{switch(i.activation){case"Relu":return`value = max(value, ${u}(0.0));`;case"Sigmoid":return`value = (${u}(1.0) / (${u}(1.0) + exp(-value)));`;case"Clip":return`value = clamp(value, ${u}(${h}(uniforms.clip_min)), ${u}(${h}(uniforms.clip_max)));`;case"HardSigmoid":return`value = max(${u}(0.0), min(${u}(1.0), ${h}(uniforms.alpha) * value + ${h}(uniforms.beta)));`;case"LeakyRelu":return`value = select(${h}(uniforms.alpha) * value, value, value >= ${u}(0.0));`;case"Tanh":return`let e2x = exp(-2.0 * abs(value));
              value = sign(value) * (1.0 - e2x) / (1.0 + e2x);
        `;case"":return"";default:throw new Error(`Unsupported activation ${i.activation}`)}},Na=(i,u)=>{i.activation==="Clip"?u.push({type:1,data:i.clipMax},{type:1,data:i.clipMin}):i.activation==="HardSigmoid"?u.push({type:1,data:i.alpha},{type:1,data:i.beta}):i.activation==="LeakyRelu"&&u.push({type:1,data:i.alpha})},Xa=(i,u)=>{i.activation==="Clip"?u.push({name:"clip_max",type:"f32"},{name:"clip_min",type:"f32"}):i.activation==="HardSigmoid"?u.push({name:"alpha",type:"f32"},{name:"beta",type:"f32"}):i.activation==="LeakyRelu"&&u.push({name:"alpha",type:"f32"})},Xi=i=>{let u=(i==null?void 0:i.activation)||"";if(u==="HardSigmoid"){let[h,w]=(i==null?void 0:i.activation_params)||[.2,.5];return{activation:u,alpha:h,beta:w}}if(u==="Clip"){let[h,w]=(i==null?void 0:i.activation_params)||[Bt,fr];return{activation:u,clipMax:w,clipMin:h}}if(u==="LeakyRelu"){let[h]=(i==null?void 0:i.activation_params)||[.01];return{activation:u,alpha:h}}return{activation:u}}}),a2=Pe(()=>{bn=(i,u)=>{switch(i){case 1:return u;case 2:return`vec2<${u}>`;case 3:return`vec3<${u}>`;case 4:return`vec4<${u}>`;default:throw new Error(`${i}-component is not supported.`)}},F0=i=>`
      ${i?"value = value + getBiasByOutputCoords(coords);":""}
      `}),_1=Pe(()=>{qi=i=>`
fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
}
fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
    i32(${i}.x), i32(${i}.y), i32(${i}.z), 1));
}
`}),s2=Pe(()=>{Mt(),St(),Yt(),ii(),fs=(i,u,h,w,B)=>{let E=w-h;return`
      ${Array.from({length:h}).map((v,z)=>`
      if (${it(u.shape,z,u.rank)} != 1) {
        ${u.indicesSet(i,z,it(B,z+E,w))}
      } else {
        ${u.indicesSet(i,z,0)}
      }`).join("")}
`},zs=(i,u,h,w,B=!1,E)=>{let v=i[0].dims,z=i[1].dims,O=v[v.length-2],L=z[z.length-1],ee=v[v.length-1],te=Zt(L),T=Zt(ee),le=Zt(O),de=Le.size(h)/te/le,we=i.length>2,be=w?w.slice(0,-2):h.slice(0,-2),Me=[Le.size(be),O,L],Fe=[{type:12,data:de},{type:12,data:O},{type:12,data:L},{type:12,data:ee}];return Na(u,Fe),Fe.push(..._A(be,v,z)),we&&Fe.push(..._A(i[2].dims)),Fe.push(..._A(Me)),{name:"MatMulNaive",shaderCache:{hint:`${u.activation};${te};${T};${le};${B}`,inputDependencies:we?["rank","rank","rank"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:E?E(h):h,dataType:i[0].dataType}],dispatchGroup:{x:Math.ceil(de/64)},programUniforms:Fe}),getShaderSource:We=>{let $e=Hr("batch_dims",i[0].dataType,be.length),eA=pA("a",i[0].dataType,v.length,T),aA=pA("b",i[1].dataType,z.length,te),zA=$A("output",i[0].dataType,Me.length,te),jA=zt(zA.type.tensor),ht=Sa(u,zA.type.value,jA),mt=[eA,aA],Jt="";if(we){let Pt=B?te:1;mt.push(pA("bias",i[2].dataType,i[2].dims.length,Pt)),Jt=B?`value += bias[col / ${Pt}];`:`value += ${zA.type.value}(bias[row + i]);`}let Ct=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"}];return Xa(u,Ct),`
  ${We.registerUniforms(Ct).registerInternalVariables($e).declareVariables(...mt,zA)}
  ${We.mainStart()}
    ${We.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let col = (global_idx % (uniforms.N / ${te})) * ${te};
    var index1 = global_idx / (uniforms.N / ${te});
    let stride1 = uniforms.M / ${le};
    let row = (index1 % stride1) * ${le};
    let batch = index1 / stride1;

    ${h.length===2?"":`let batch_indices = ${$e.offsetToIndices("batch")};`}

    var a_indices: ${eA.type.indices};
    ${fs("a_indices",eA,eA.rank-2,$e.rank,"batch_indices")}
    ${eA.indicesSet("a_indices",eA.rank-2,0)}
    ${eA.indicesSet("a_indices",eA.rank-1,0)}
    let a_offset = ${eA.indicesToOffset("a_indices")};

    var b_indices: ${aA.type.indices};
    ${fs("b_indices",aA,aA.rank-2,$e.rank,"batch_indices")}
    ${aA.indicesSet("b_indices",aA.rank-2,0)}
    ${aA.indicesSet("b_indices",aA.rank-1,0)}
    let b_offset = ${aA.indicesToOffset("b_indices")};
    var values: array<${zA.type.value}, ${le}>;
    for (var k: u32 = 0u; k < uniforms.K; k = k + ${T}) {
      ${(()=>{let Pt=`var a_data: ${eA.type.value};`;for(let Qt=0;Qt<T;Qt++)Pt+=`
              let b_data${Qt} = b[(b_offset + (k + ${Qt}) * uniforms.N + col) / ${te}];`;for(let Qt=0;Qt<le;Qt++){Pt+=`a_data = a[(a_offset + (row + ${Qt}) * uniforms.K + k) / ${T}];`;for(let iA=0;iA<T;iA++)Pt+=`
            values[${Qt}] = fma(${aA.type.value}(a_data${T===1?"":`[${iA}]`}), b_data${iA}, values[${Qt}]);
`}return Pt})()}
    }
    for (var i = 0u; i < ${le}u; i++) {
      var value = values[i];
      ${Jt}
      ${ht}
      let cur_indices = ${zA.type.indices}(batch, row + i, col);
      let offset = ${zA.indicesToOffset("cur_indices")};
      ${zA.setByOffset(`offset / ${te}`,"value")};
    }
  }
  `}}}}),i2=Pe(()=>{Mt(),St(),Yt(),ii(),s2(),a2(),sn=(i,u)=>i?`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          kStart + inputRow,
          globalRowStart / innerElementSize + inputCol${u?", batchIndices":""});
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          globalRow + innerRow,
          kStart / innerElementSize + inputCol${u?", batchIndices":""});
        `,Ji=(i,u)=>i?`
        let ACached0 = mm_Asub[k * innerElementSize][localRow];
        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];
        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];
        ${u===3?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}
        for (var i = 0; i < rowPerThread; i = i + 1) {
          acc[i] = BCached0 * ACached0[i] + acc[i];
          acc[i] = BCached1 * ACached1[i] + acc[i];
          acc[i] = BCached2 * ACached2[i] + acc[i];
          ${u===3?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}
        }`:`
        for (var i = 0; i < rowPerThread; i = i + 1) {
          let ACached = mm_Asub[tileRow + i][k];
          acc[i] = BCached0 * ACached.x + acc[i];
          acc[i] = BCached1 * ACached.y + acc[i];
          acc[i] = BCached2 * ACached.z + acc[i];
          ${u===3?"":"acc[i] = BCached3 * ACached.w + acc[i];"}
        }`,Ai=(i,u,h="f32",w,B=!1,E=32,v=!1,z=32)=>{let O=u[1]*i[1],L=u[0]*i[0],ee=B?O:E,te=B?E:O,T=ee/u[0],le=E/u[1];if((!B||T!==4||i[1]!==4)&&(B||T!==3&&T!==4)||ee%u[0]!=0||E%u[1]!=0||i[0]!==4)throw new Error(`If transposeA ${B} is true, innerElementSize ${T} and workPerThread[1] ${i[1]} must be 4.
      Otherwise, innerElementSize ${T} must be 3 or 4.
  tileAWidth ${ee} must be divisible by workgroupSize[0]${u[0]}. tileInner ${E} must be divisible by workgroupSize[1] ${u[1]}. colPerThread ${i[0]} must be 4.`);return`
var<workgroup> mm_Asub: array<array<vec${T}<${h}>, ${ee/T}>, ${te}>;
var<workgroup> mm_Bsub: array<array<vec4<${h}>, ${L/i[0]}>, ${E}>;

const rowPerThread = ${i[1]};
const colPerThread = ${i[0]};
const innerElementSize = ${T};
const tileInner = ${E};

@compute @workgroup_size(${u[0]}, ${u[1]}, ${u[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
  let localRow = i32(localId.y);
  let tileRow = localRow * rowPerThread;
  let tileCol = i32(localId.x);

  let globalRow =i32(globalId.y) * rowPerThread;
  let globalCol = i32(globalId.x);
  let batch = ${v?"0":"i32(globalId.z)"};
  ${w?`let batchIndices = ${w.offsetToIndices("u32(batch)")};`:""}
  let globalRowStart = i32(workgroupId.y) * ${O};

  let num_tiles = ${v?`${Math.ceil(z/E)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
  var kStart = ${v?`i32(globalId.z) * ${z}`:"0"};

  var acc: array<vec4<${h}>, rowPerThread>;

  // Loop over shared dimension.
  let tileRowB = localRow * ${le};
  for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let inputRow = tileRow + innerRow;
          let inputCol = tileCol;
          ${sn(B,w)}
      }

      // Load one tile of B into local memory.
      for (var innerRow = 0; innerRow < ${le}; innerRow = innerRow + 1) {
          let inputRow = tileRowB + innerRow;
          let inputCol = tileCol;
          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${w?", batchIndices":""});
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {
          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];
          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];
          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];
          ${T===3?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}

          ${Ji(B,T)}
      }

      workgroupBarrier();
  }

  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);
  }
}`},qa=(i,u)=>i?`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              kStart + inputRow,
              globalRowStart + inputCol${u?", batchIndices":""});
            `:`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              globalRowStart + inputRow,
              kStart + inputCol${u?", batchIndices":""});
            `,S0=i=>i?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];",ps=(i,u,h="f32",w,B=!1,E=32,v=!1,z=32,O=!1)=>{let L=i[1]*u[1],ee=i[0]*u[0],te=B?L:E,T=B?E:L;if(T%u[1]!=0||te%u[0]!=0||E%u[1]!=0)throw new Error(`tileAHight ${T} must be divisible by workgroupSize[1]${u[1]}, tileAWidth ${te} must be divisible by workgroupSize[0]${u[0]}, tileInner ${E} must be divisible by workgroupSize[1]${u[1]}`);let le=T/u[1],de=te/u[0],we=E/u[1],be=O?`
    let localRow = i32(localId.y);
    let localCol = i32(localId.x);
    let globalRowStart = i32(workgroupId.y) * ${L};
    let globalColStart = i32(workgroupId.x) * ${ee};

    // Loop over shared dimension.
    for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var inputRow = localRow; inputRow < ${T}; inputRow = inputRow + ${u[1]}) {
        for (var inputCol = localCol; inputCol < ${te}; inputCol = inputCol + ${u[0]}) {
          ${qa(B,w)}
        }
      }
      // Load one tile of B into local memory.
      for (var inputRow = localRow; inputRow < ${E}; inputRow = inputRow + ${u[1]}) {
            for (var inputCol = localCol; inputCol < ${ee}; inputCol = inputCol + ${u[0]}) {
          mm_Bsub[inputRow][inputCol] = mm_readB(batch,
            kStart + inputRow,
            globalColStart + inputCol${w?", batchIndices":""});
        }
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      var BCached : array<${h}, colPerThread>;
      for (var k = 0; k < tileInner; k = k + 1) {
        for (var inner = 0; inner < colPerThread; inner = inner + 1) {
          BCached[inner] = mm_Bsub[k][localCol + inner * ${u[0]}];
        }
        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let ACached = ${B?`mm_Asub[k][localRow + innerRow * ${u[1]}];`:`mm_Asub[localRow + innerRow * ${u[1]}][k];`}
          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
            acc[innerRow][innerCol] = acc[innerRow][innerCol] +
                ACached * BCached[innerCol];
          }
        }
      }
      workgroupBarrier();
    }
    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      let gRow = globalRowStart + localRow + innerRow * ${u[1]};
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        let gCol = globalColStart + localCol + innerCol * ${u[0]};
        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);
      }
    }
    `:`
let tileRow = i32(localId.y) * rowPerThread;
let tileCol = i32(localId.x) * colPerThread;

let globalRow = i32(globalId.y) * rowPerThread;
let globalCol = i32(globalId.x) * colPerThread;
let globalRowStart = i32(workgroupId.y) * ${L};

let tileRowA = i32(localId.y) * ${le};
let tileColA = i32(localId.x) * ${de};
let tileRowB = i32(localId.y) * ${we};
// Loop over shared dimension.
for (var t = 0; t < num_tiles; t = t + 1) {
  // Load one tile of A into local memory.
  for (var innerRow = 0; innerRow < ${le}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < ${de}; innerCol = innerCol + 1) {
      let inputRow = tileRowA + innerRow;
      let inputCol = tileColA + innerCol;
      ${qa(B,w)}
    }
  }

  // Load one tile of B into local memory.
  for (var innerRow = 0; innerRow < ${we}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
      let inputRow = tileRowB + innerRow;
      let inputCol = tileCol + innerCol;
      mm_Bsub[inputRow][inputCol] = mm_readB(batch,
        kStart + inputRow,
        globalCol + innerCol${w?", batchIndices":""});
    }
  }
  kStart = kStart + tileInner;
  workgroupBarrier();

  // Compute acc values for a single thread.
  var BCached : array<${h}, colPerThread>;
  for (var k = 0; k < tileInner; k = k + 1) {
    for (var inner = 0; inner < colPerThread; inner = inner + 1) {
      BCached[inner] = mm_Bsub[k][tileCol + inner];
    }

    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      ${S0(B)}
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
      }
    }
  }

  workgroupBarrier();
}

for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
    mm_write(batch, globalRow + innerRow, globalCol + innerCol,
        acc[innerRow][innerCol]);
  }
}
`;return`
  var<workgroup> mm_Asub : array<array<${h}, ${te}>, ${T}>;
  var<workgroup> mm_Bsub : array<array<${h}, ${ee}>, ${E}>;
  const rowPerThread = ${i[1]};
  const colPerThread = ${i[0]};
  const tileInner = ${E};

@compute @workgroup_size(${u[0]}, ${u[1]}, ${u[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
    let batch = ${v?"0":"i32(globalId.z)"};
    ${w?`let batchIndices = ${w.offsetToIndices("u32(batch)")};`:""}
    let num_tiles = ${v?`${Math.ceil(z/E)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
    var kStart = ${v?`i32(globalId.z) * ${z}`:"0"};

    var acc : array<array<${h}, colPerThread>, rowPerThread>;
    ${be}
  }
`},pt=(i,u,h,w,B=!1)=>{let[E,v,z,O]=w,L=zt(w[0].type.tensor);return`
    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${E.type.indices}) -> ${bn(i,L)} {
      var value = ${bn(i,L)}(0.0);
      let col = colIn * ${i};
      if(row < uniforms.dim_a_outer && col < uniforms.dim_inner)
      {
        var aIndices: ${v.type.indices};
        ${fs("aIndices",v,v.rank-2,E.rank,"batchIndices")}
        ${v.indicesSet("aIndices",v.rank-2,"u32(row)")}
        ${v.indicesSet("aIndices",v.rank-1,"u32(colIn)")}
        value = ${v.getByIndices("aIndices")};
      }
      return value;
    }

    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${E.type.indices}) -> ${bn(i,L)} {
      var value = ${bn(i,L)}(0.0);
      let col = colIn * ${i};
      if(row < uniforms.dim_inner && col < uniforms.dim_b_outer)
      {
        var bIndices: ${z.type.indices};
        ${fs("bIndices",z,z.rank-2,E.rank,"batchIndices")}
        ${z.indicesSet("bIndices",z.rank-2,"u32(row)")}
        ${z.indicesSet("bIndices",z.rank-1,"u32(colIn)")}
        value = ${z.getByIndices("bIndices")};
      }
      return value;
    }

    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${bn(i,L)}) {
      let col = colIn * ${i};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {
        var value = valueIn;
        let coords = vec3<i32>(batch, row, colIn);
        ${u?`value = value + ${B?"bias[colIn]":`${bn(i,L)}(bias[row])`};`:""}
        ${h}
        ${O.setByIndices("vec3<u32>(coords)","value")}
      }
    }
    `},A=(i,u,h,w,B=!1,E)=>{let v=i[0].dims,z=i[1].dims,O=v.slice(0,-2),L=z.slice(0,-2),ee=w?w.slice(0,-2):h.slice(0,-2),te=Le.size(ee),T=v[v.length-2],le=v[v.length-1],de=z[z.length-1],we=le%4==0&&de%4==0,be=T<=8?[4,1,1]:[4,4,1],Me=[8,8,1],Fe=[Math.ceil(de/Me[0]/be[0]),Math.ceil(T/Me[1]/be[1]),Math.ceil(te/Me[2]/be[2])],We=we?4:1,$e=[...O,T,le/We],eA=$e.length,aA=[...L,le,de/We],zA=aA.length,jA=[te,T,de/We],ht=[{type:6,data:T},{type:6,data:de},{type:6,data:le}];Na(u,ht),ht.push(..._A(ee,$e,aA));let mt=["rank","rank"],Jt=i.length>2;return Jt&&(ht.push(..._A(i[2].dims)),mt.push("rank")),ht.push(..._A(jA)),{name:"MatMul",shaderCache:{hint:`${be};${u.activation};${we};${B}`,inputDependencies:mt},getRunData:()=>({outputs:[{dims:E?E(h):h,dataType:i[0].dataType}],dispatchGroup:{x:Fe[0],y:Fe[1],z:Fe[2]},programUniforms:ht}),getShaderSource:Ct=>{let Pt=ee.length,Qt=Hr("batchDims",i[0].dataType,Pt,1),iA=zt(i[0].dataType),gt=pA("a",i[0].dataType,eA,We),at=pA("b",i[1].dataType,zA,We),ot=$A("result",i[0].dataType,jA.length,We),sr=[gt,at];if(Jt){let lo=B?We:1;sr.push(pA("bias",i[2].dataType,i[2].dims.length,lo))}let dn=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"}];Xa(u,dn);let Xn=zt(ot.type.tensor),ui=Sa(u,ot.type.value,Xn),n0=pt(We,Jt,ui,[Qt,gt,at,ot],B);return`
  ${Ct.registerUniforms(dn).registerInternalVariables(Qt).declareVariables(...sr,ot)}
  ${n0}
  ${we?Ai(be,Me,iA,Qt):ps(be,Me,iA,Qt)}
                   `}}}}),$1=Pe(()=>{Mt(),Cs(),Yt(),ii(),a2(),_1(),i2(),t=(i,u,h,w,B=!1,E,v=4,z=4,O=4,L="f32")=>{let ee=jA=>{switch(jA){case 1:return"return w[row * i32(uniforms.w_shape[3]) + colIn];";case 4:return"return w[row * i32(uniforms.w_shape[3]) / 4 + colIn];";default:throw new Error(`innerElementSize ${jA} is not supported.`)}},te=i?`
    let coord = vec4<i32>(batch, xRow, xCol, xCh);
    `:`
    let coord = vec4<i32>(batch, xCh, xRow, xCol);
    `,T=i?`
    let coords = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    `:`
    let coords = vec4<i32>(
      batch,
      row,
      col / outWidth,
      col % outWidth);
    `,le=i?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",de=i?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",we=i?"row":"col",be=i?"col":"row",Me=`
    let inChannels = i32(uniforms.w_shape[2]);
    let outWidth = ${i?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
    let outRow = ${we} / outWidth;
    let outCol = ${we} % outWidth;

    let WRow = ${be} / (i32(uniforms.w_shape[1]) * inChannels);
    let WCol = ${be} / inChannels % i32(uniforms.w_shape[1]);
    let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];
    let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];
    let xCh = ${be} % inChannels;
    var resData = ${bn(v,L)}(0.0);
    // The bounds checking is always needed since we use it to pad zero for
    // the 'same' padding type.
    if (xRow >= 0 && xRow < ${le} && xCol >= 0 && xCol < ${de}) {
      ${te}
      let xIndex = getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape));
      ${(jA=>{switch(jA){case 1:return"resData = x[xIndex];";case 3:return`resData = vec3<${L}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${jA} is not supported.`)}})(v)}
    }
    return resData;`,Fe=i?u&&w?`
    let col = colIn * ${v};
    ${Me}`:`
    let col = colIn * ${v};
    if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {
      ${Me}
    }
    return ${bn(v,L)}(0.0);`:w&&h?`
    let col = colIn * ${v};
    ${Me}`:`
    let col = colIn * ${v};
    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
      ${Me}
    }
    return ${bn(v,L)}(0.0);`,We=i?w&&h?ee(z):`
    let col = colIn * ${z};
    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
      ${ee(z)}
    }
    return ${bn(z,L)}(0.0);`:`
    let col = colIn * ${z};
    if (row < uniforms.dim_inner && col < uniforms.dim_a_outer) {
      ${ee(z)}
    }
    return ${bn(z,L)}(0.0);`,$e=bn(O,L),eA=bn(i?v:z,L),aA=bn(i?z:v,L),zA=Sa(E,$e,L);return`
    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${eA} {
      ${i?Fe:We}
    }

    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${aA} {
      ${i?We:Fe}
    }

    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${$e}) {
      let col = colIn * ${O};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer)
      {
      var value = valueIn;
      let outWidth = ${i?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      ${T}
      ${F0(B)}
      ${zA}
      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
      }
    }`},r=(i,u,h,w,B,E,v,z,O)=>{let L=u.format==="NHWC",ee=L?i[0].dims[3]:i[0].dims[1],te=h[0],T=L?h[2]:h[3],le=L?h[1]:h[2],de=L?h[3]:h[1],we=L&&(ee%4==0||ee%3==0)&&de%4==0,be=L?de:T*le,Me=L?T*le:de,Fe=[8,8,1],We=w<=8?[4,1,1]:[4,4,1],$e=[Math.ceil(be/Fe[0]/We[0]),Math.ceil(Me/Fe[1]/We[1]),Math.ceil(te/Fe[2]/We[2])];Ft("verbose",()=>`[conv2d_mm_webgpu] dispatch = ${$e}`);let eA=we?L&&ee%4!=0?3:4:1,aA=Fe[1]*We[1],zA=Fe[0]*We[0],jA=Math.max(Fe[0]*eA,Fe[1]),ht=w%aA==0,mt=B%zA==0,Jt=E%jA==0,Ct=we?[eA,4,4]:[1,1,1],Pt=[{type:6,data:w},{type:6,data:B},{type:6,data:E},{type:6,data:[u.pads[0],u.pads[1]]},{type:6,data:u.strides},{type:6,data:u.dilations}];Na(u,Pt),Pt.push(..._A(i[0].dims,i[1].dims));let Qt=["rank","rank"];return v&&(Pt.push(..._A(i[2].dims)),Qt.push("rank")),Pt.push(..._A(h)),{name:"Conv2DMatMul",shaderCache:{hint:`${u.cacheKey};${eA};${we};${ht};${mt};${Jt};${aA};${zA};${jA}`,inputDependencies:Qt},getRunData:()=>({outputs:[{dims:O?O(h):h,dataType:i[0].dataType}],dispatchGroup:{x:$e[0],y:$e[1],z:$e[2]},programUniforms:Pt}),getShaderSource:iA=>{let gt=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"pad",type:"i32",length:2},{name:"stride",type:"i32",length:2},{name:"dilation",type:"i32",length:2}];Xa(u,gt);let at=we?4:1,ot=zt(i[0].dataType),sr=`
      fn setOutputAtIndex(flatIndex : i32, value : ${we?`vec4<${ot}>`:ot}) {
        result[flatIndex] = ${we?`vec4<${ot}>`:ot}(value);
      }
      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${we?`vec4<${ot}>`:ot}) {
        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));
        setOutputAtIndex(flatIndex ${we?"/ 4":""}, value);
      }`,dn=[pA("x",i[0].dataType,i[0].dims.length,eA===3?1:eA),pA("w",i[1].dataType,i[1].dims.length,at)],Xn=$A("result",i[0].dataType,h.length,at);if(v){let ui=pA("bias",i[2].dataType,i[2].dims.length,at);dn.push(ui),sr+=`
        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${we?`vec4<${ot}>`:ot} {
          return bias[coords.${L?"w":"y"}${we?"/ 4":""}];
        }`}return`
        ${qi("uniforms.result_strides")}
        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,
        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,
        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };
        ${iA.registerUniforms(gt).declareVariables(...dn,Xn)}
        ${sr}
        ${t(L,ht,mt,Jt,v,u,Ct[0],Ct[1],Ct[2],ot)}
        ${we?Ai(We,Fe,ot,void 0,!L,jA):ps(We,Fe,ot,void 0,!L,jA,!1,void 0,z)}`}}}}),ec=Pe(()=>{Mt(),Cs(),St(),Yt(),ii(),a2(),n=i=>{let u=1;for(let h=0;h<i.length;h++)u*=i[h];return u},a=i=>typeof i=="number"?[i,i,i]:i,s=(i,u)=>u<=1?i:i+(i-1)*(u-1),o=(i,u,h,w=1)=>{let B=s(u,w);return Math.floor((i[0]*(h-1)-h+B)/2)},c=(i,u,h,w,B)=>{B==null&&(B=o(i,u[0],w[0]));let E=[0,0,0,h];for(let v=0;v<3;v++)i[v]+2*B>=u[v]&&(E[v]=Math.trunc((i[v]-u[v]+2*B)/w[v]+1));return E},f=(i,u,h,w,B,E,v,z,O,L)=>{let ee,te,T,le;if(i==="VALID"&&(i=0),typeof i=="number"){ee={top:i,bottom:i,left:i,right:i,front:i,back:i};let de=c([u,h,w,1],[z,O,L],1,[B,E,v],i);te=de[0],T=de[1],le=de[2]}else if(Array.isArray(i)){if(!i.every((we,be,Me)=>we===Me[0]))throw Error(`Unsupported padding parameter: ${i}`);ee={top:i[0],bottom:i[1],left:i[2],right:i[3],front:i[4],back:i[5]};let de=c([u,h,w,1],[z,O,L],1,[B,E,v],i[0]);te=de[0],T=de[1],le=de[2]}else{if(i!=="SAME_UPPER")throw Error(`Unknown padding parameter: ${i}`);{te=Math.ceil(u/B),T=Math.ceil(h/E),le=Math.ceil(w/v);let de=(te-1)*B+z-u,we=(T-1)*E+O-h,be=(le-1)*v+L-w,Me=Math.floor(de/2),Fe=de-Me,We=Math.floor(we/2),$e=we-We,eA=Math.floor(be/2);ee={top:We,bottom:$e,left:eA,right:be-eA,front:Me,back:Fe}}}return{padInfo:ee,outDepth:te,outHeight:T,outWidth:le}},m=(i,u,h,w,B,E=!1,v="channelsLast")=>{let z,O,L,ee,te;if(v==="channelsLast")[z,O,L,ee,te]=i;else{if(v!=="channelsFirst")throw new Error(`Unknown dataFormat ${v}`);[z,te,O,L,ee]=i}let[T,,le,de,we]=u,[be,Me,Fe]=a(h),[We,$e,eA]=a(w),aA=s(le,We),zA=s(de,$e),jA=s(we,eA),{padInfo:ht,outDepth:mt,outHeight:Jt,outWidth:Ct}=f(B,O,L,ee,be,Me,Fe,aA,zA,jA),Pt=E?T*te:T,Qt=[0,0,0,0,0];return v==="channelsFirst"?Qt=[z,Pt,mt,Jt,Ct]:v==="channelsLast"&&(Qt=[z,mt,Jt,Ct,Pt]),{batchSize:z,dataFormat:v,inDepth:O,inHeight:L,inWidth:ee,inChannels:te,outDepth:mt,outHeight:Jt,outWidth:Ct,outChannels:Pt,padInfo:ht,strideDepth:be,strideHeight:Me,strideWidth:Fe,filterDepth:le,filterHeight:de,filterWidth:we,effectiveFilterDepth:aA,effectiveFilterHeight:zA,effectiveFilterWidth:jA,dilationDepth:We,dilationHeight:$e,dilationWidth:eA,inShape:i,outShape:Qt,filterShape:u}},p=(i,u,h,w,B,E)=>{let v=E==="channelsLast";v?i[0].dims[3]:i[0].dims[1];let z={x:h.map((T,le)=>le)},O=[Math.ceil(n(z.x.map(T=>h[T]))/64),1,1];Ft("verbose",()=>`[conv3d_naive_webgpu] dispatch = ${O}`);let L=[{type:12,data:Le.size(h)},{type:12,data:w},{type:12,data:B},{type:12,data:u.strides},{type:12,data:u.dilations}];Na(u,L),L.push(..._A(i[0].dims,i[1].dims));let ee=["rank","rank"],te=i.length===3;return te&&(L.push(..._A(i[2].dims)),ee.push("rank")),L.push(..._A(h)),{name:"Conv3DNaive",shaderCache:{hint:`${u.cacheKey};${v};1;${te}`,inputDependencies:ee},getRunData:()=>({outputs:[{dims:h,dataType:i[0].dataType}],dispatchGroup:{x:O[0],y:O[1],z:O[2]},programUniforms:L}),getShaderSource:T=>{let le=[{name:"output_size",type:"u32"},{name:"filter_dims",type:"u32",length:w.length},{name:"pads",type:"u32",length:B.length},{name:"strides",type:"u32",length:u.strides.length},{name:"dilations",type:"u32",length:u.dilations.length}];Xa(u,le);let de=zt(i[0].dataType),we=pA("x",i[0].dataType,i[0].dims.length,1),be=pA("W",i[1].dataType,i[1].dims.length,1),Me=[we,be],Fe=$A("result",i[0].dataType,h.length,1),We="";if(te){let aA=pA("bias",i[2].dataType,i[2].dims.length,1);Me.push(aA),We+=`
        fn getBiasByOutputCoords(coords : array<u32, 5>) -> ${de} {
          return bias[${it("coords",v?4:1,5)}];
        }`}let $e=bn(1,de),eA=Sa(u,$e,de);return`
            ${We}
            fn getX(d0 : u32, d1 : u32, d2 : u32, d3 : u32, d4 : u32) -> f32 {
              let aIndices = array<u32, 5>(d0, d1, d2, d3, d4);
              return ${we.getByIndices("aIndices")};
            }
            fn getW(d0 : u32, d1 : u32, d2 : u32, d3 : u32, d4 : u32) -> f32 {
              let aIndices = array<u32, 5>(d0, d1, d2, d3, d4);
              return ${be.getByIndices("aIndices")};
            }
          ${T.registerUniforms(le).declareVariables(...Me,Fe)}
          ${T.mainStart()}
          ${T.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
              let coords = ${Fe.offsetToIndices("global_idx")};
              let batch = ${it("coords",0,we.rank)};
              let d2 = ${it("coords",v?we.rank-1:1,we.rank)};
              let xFRCCorner = vec3<u32>(${it("coords",v?1:2,we.rank)},
              ${it("coords",v?2:3,we.rank)},
              ${it("coords",v?3:4,we.rank)}) * uniforms.strides - uniforms.pads;
              let xFCorner = xFRCCorner.x;
              let xRCorner = xFRCCorner.y;
              let xCCorner = xFRCCorner.z;
              let xShapeY = ${it("uniforms.x_shape",v?1:2,we.rank)};
              let xShapeZ = ${it("uniforms.x_shape",v?2:3,we.rank)};
              let xShapeW = ${it("uniforms.x_shape",v?3:4,we.rank)};
              let xShapeU = ${it("uniforms.x_shape",v?4:1,we.rank)};
              let inputDepthNearestVec4 = (xShapeU / 4) * 4;
              let inputDepthVec4Remainder = xShapeU % 4;

              var value = 0.0;
              for (var wF = 0u; wF < uniforms.filter_dims[0]; wF++) {
                let xF = xFCorner + wF * uniforms.dilations[0];
                if (xF < 0 || xF >= xShapeY) {
                  continue;
                }

                for (var wR = 0u; wR < uniforms.filter_dims[1]; wR++) {
                  let xR = xRCorner + wR * uniforms.dilations[1];
                  if (xR < 0 || xR >= xShapeZ) {
                    continue;
                  }

                  for (var wC = 0u; wC < uniforms.filter_dims[2]; wC++) {
                    let xC = xCCorner + wC * uniforms.dilations[2];
                    if (xC < 0 || xC >= xShapeW) {
                      continue;
                    }

                    for (var d1 = 0u; d1 < inputDepthNearestVec4; d1 += 4) {
                      ${v?`let xValues = vec4<f32>(
                               getX(batch, xF, xR, xC, d1),
                               getX(batch, xF, xR, xC, d1 + 1),
                               getX(batch, xF, xR, xC, d1 + 2),
                               getX(batch, xF, xR, xC, d1 + 3));
                            `:`let xValues = vec4<f32>(
                               getX(batch, d1, xF, xR, xC),
                               getX(batch, d1 + 1, xF, xR, xC),
                               getX(batch, d1 + 2, xF, xR, xC),
                               getX(batch, d1 + 3, xF, xR, xC));
                            `}
                            let wValues = vec4<f32>(
                              getW(d2, d1, wF, wR, wC),
                              getW(d2, d1 + 1, wF, wR, wC),
                              getW(d2, d1 + 2, wF, wR, wC),
                              getW(d2, d1 + 3, wF, wR, wC));
                      value += dot(xValues, wValues);
                    }
                    if (inputDepthVec4Remainder == 1) {
                        ${v?`value += getX(batch, xF, xR, xC, inputDepthNearestVec4)
                          * getW(d2, inputDepthNearestVec4, wF, wR, wC);`:`value += getX(batch, inputDepthNearestVec4, xF, xR, xC)
                          * getW(d2, inputDepthNearestVec4, wF, wR, wC);`}
                    } else if (inputDepthVec4Remainder == 2) {
                      ${v?`let xValues = vec2<f32>(
                        getX(batch, xF, xR, xC, inputDepthNearestVec4),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1));
                      `:`let xValues = vec2<f32>(
                        getX(batch, inputDepthNearestVec4, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 1, xF, xR, xC));
                    `}
                    let wValues = vec2<f32>(
                      getW(d2, inputDepthNearestVec4, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 1, wF, wR, wC));
                      value += dot(xValues, wValues);
                    } else if (inputDepthVec4Remainder == 3) {
                      ${v?`let xValues = vec3<f32>(
                        getX(batch, xF, xR, xC, inputDepthNearestVec4),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 2));
                      `:`let xValues = vec3<f32>(
                        getX(batch, inputDepthNearestVec4, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 1, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 2, xF, xR, xC));
                    `}
                    let wValues = vec3<f32>(
                      getW(d2, inputDepthNearestVec4, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 1, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 2, wF, wR, wC));
                      value += dot(xValues, wValues);
                    }
                  }
                }
              }
              ${te?"value = value + getBiasByOutputCoords(coords)":""};
              ${eA}
              result[global_idx] = f32(value);
          }`}}}}),Bc=Pe(()=>{Mt(),St(),Yt(),ii(),I=(i,u,h,w)=>{let B=i.length>2,E=B?"value += b[output_channel];":"",v=i[0].dims,z=i[1].dims,O=u.format==="NHWC",L=O?h[3]:h[1],ee=L/u.group,te=O&&ee>=4?Zt(L):1,T=Le.size(h)/te,le=[{type:12,data:T},{type:12,data:u.dilations},{type:12,data:[u.strides[0],u.strides[1]]},{type:12,data:[u.pads[0],u.pads[1]]},{type:12,data:ee}];Na(u,le),le.push(..._A(v,[z[0],z[1],z[2],z[3]/te]));let de=B?["rank","rank","rank"]:["rank","rank"];return le.push(..._A([h[0],h[1],h[2],h[3]/te])),{name:"GroupedConv",shaderCache:{hint:`${u.cacheKey}_${te}`,inputDependencies:de},getRunData:()=>({outputs:[{dims:w?w(h):h,dataType:i[0].dataType}],dispatchGroup:{x:Math.ceil(T/64)},programUniforms:le}),getShaderSource:we=>{let be=$A("output",i[0].dataType,h.length,te),Me=zt(be.type.tensor),Fe=Sa(u,be.type.value,Me),We=pA("x",i[0].dataType,v.length),$e=pA("w",i[1].dataType,z.length,te),eA=[We,$e];B&&eA.push(pA("b",i[2].dataType,i[2].dims,te));let aA=[{name:"output_size",type:"u32"},{name:"dilations",type:"u32",length:u.dilations.length},{name:"strides",type:"u32",length:2},{name:"pads",type:"u32",length:2},{name:"output_channels_per_group",type:"u32"}];Xa(u,aA);let zA=O?`
      for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[0]; wHeight++) {
        let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];

        if (xHeight < 0u || xHeight >= uniforms.x_shape[1]) {
          continue;
        }

        for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[1]; wWidth++) {
          let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];
          if (xWidth < 0u || xWidth >= uniforms.x_shape[2]) {
            continue;
          }

          for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[2]; wInChannel++) {
            let input_channel = in_channel_offset + wInChannel;
            let xVal = ${We.get("batch","xHeight","xWidth","input_channel")};
            let wVal = ${$e.get("wHeight","wWidth","wInChannel","output_channel")};
            value += xVal * wVal;
          }
        }
      }
      `:`
      for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[1]; wInChannel++) {
        let input_channel = in_channel_offset + wInChannel;
        for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[2]; wHeight++) {
          let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];

          if (xHeight < 0u || xHeight >= uniforms.x_shape[2]) {
            continue;
          }

          for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[3]; wWidth++) {
            let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];
            if (xWidth < 0u || xWidth >= uniforms.x_shape[3]) {
              continue;
            }

            let xVal = ${We.get("batch","input_channel","xHeight","xWidth")};
            let wVal = ${$e.get("output_channel","wInChannel","wHeight","wWidth")};
            value += xVal * wVal;
          }
        }
      }
      `;return`
  ${we.registerUniforms(aA).declareVariables(...eA,be)}

  ${we.mainStart()}
    ${we.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let outputIndices = ${be.offsetToIndices("global_idx")};
    let batch: u32 = outputIndices[0];
    let output_channel: u32 = outputIndices[${O?3:1}];
    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${O?1:2}], outputIndices[${O?2:3}]) * uniforms.strides - uniforms.pads;
    let group_id: u32 = output_channel * ${te} / uniforms.output_channels_per_group;
    var in_channel_offset = group_id * uniforms.w_shape[${O?2:1}];

    var value: ${be.type.value} = ${be.type.value}(0);
    ${zA}
    ${E}
    ${Fe}
    ${be.setByOffset("global_idx","value")}
  }`}}},y=(i,u,h,w)=>{let B=i.length>2,E=Zt(h[3]),v=Zt(h[2]),z=Le.size(h)/E/v,O=[i[0].dims[0],i[0].dims[1],i[0].dims[2],i[0].dims[3]/E],L=[i[1].dims[0],i[1].dims[1],i[1].dims[2],i[1].dims[3]/E],ee=[h[0],h[1],h[2],h[3]/E],te=[{type:12,data:z},{type:6,data:[u.strides[0],u.strides[1]]},{type:6,data:[u.pads[0],u.pads[1]]}];Na(u,te),te.push(..._A(O,L,ee));let T=(v-1)*u.strides[1]+L[1];return{name:"GroupedConv-Vectorize",shaderCache:{hint:`${u.cacheKey};${E};${v};${T};${L[0]};${L[1]}`,inputDependencies:B?["rank","rank","type"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:w?w(h):h,dataType:i[0].dataType}],dispatchGroup:{x:Math.ceil(z/64)},programUniforms:te}),getShaderSource:le=>{let de=$A("output",i[0].dataType,ee.length,E),we=zt(de.type.tensor),be=Sa(u,de.type.value,we),Me=pA("x",i[0].dataType,O.length,E),Fe=pA("w",i[1].dataType,L.length,E),We=[Me,Fe];B&&We.push(pA("b",i[2].dataType,i[2].dims,E));let $e=B?"value += b[output_channel];":"",eA=[{name:"output_size",type:"u32"},{name:"strides",type:"i32",length:2},{name:"pads",type:"i32",length:2}];return Xa(u,eA),`
  ${le.registerUniforms(eA).declareVariables(...We,de)}
  ${le.mainStart()}
    ${le.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let width0 = uniforms.output_shape[3];
    let output_channel = global_idx % width0;
    var index1 = global_idx / width0;
    let width1 = uniforms.output_shape[2] / ${v}u;
    let col = (index1 % width1) * ${v}u;
    index1 = index1 / width1;
    let row = index1 % uniforms.output_shape[1];
    let batch = index1 / uniforms.output_shape[1];

    let x_corner = vec2<i32>(i32(row), i32(col)) * uniforms.strides - uniforms.pads;

    var x_vals: array<${Me.type.value}, ${T}>;
    var values: array<${de.type.value}, ${v}>;
    let input_channel = output_channel;
    // Use constant instead of uniform can give better performance for w's height/width.
    for (var w_height: u32 = 0u; w_height < ${L[0]}; w_height++) {
      let x_height = x_corner.x + i32(w_height);
      if (x_height >= 0 && u32(x_height) < uniforms.x_shape[1]) {
        for (var i = 0; i < ${T}; i++) {
          let x_width = x_corner.y + i;
          if (x_width >= 0 && u32(x_width) < uniforms.x_shape[2]) {
            x_vals[i] = ${Me.get("batch","u32(x_height)","u32(x_width)","input_channel")};
          } else {
            x_vals[i] = ${Me.type.value}(0);
          }
        }
        for (var w_width: u32 = 0u; w_width < ${L[1]}; w_width++) {
          let w_val = ${Fe.get("w_height","w_width","0","output_channel")};
          for (var i = 0u; i < ${v}u; i++) {
            values[i] = fma(x_vals[i * u32(uniforms.strides[1]) + w_width], w_val, values[i]);
          }
        }
      }
    }

    for (var i = 0u; i < ${v}u; i++) {
      var value = values[i];
      ${$e}
      ${be}
      ${de.set("batch","row","col + i","output_channel","value")};
    }
  }`}}}}),Ot=Pe(()=>{St(),$1(),ec(),i2(),Bc(),ii(),s2(),Os(),P=(i,u,h,w,B,E)=>{let v=i[0],z=i.slice(E?1:2,E?3:4),O=z.length,L=u[0],ee=u.slice(2).map((T,le)=>T+(T-1)*(h[le]-1)),te=z.map((T,le)=>T+w[le]+w[le+O]).map((T,le)=>Math.floor((T-ee[le]+B[le])/B[le]));return te.splice(0,0,v),te.splice(E?3:1,0,L),te},Y=[2,3,1,0],X=(i,u)=>{if(!i||i.length!==2&&i.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(i[0].dims.length>5)throw new Error("greater than 5D is not supported");if(i[0].dims.length!==i[1].dims.length)throw new Error("filter does not have same dimension as input");if(i[0].dims[u.format==="NHWC"?i[0].dims.length-1:1]!==i[1].dims[1]*u.group)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(i.length===3&&(i[2].dims.length!==1||i[1].dims[0]!==i[2].dims[0]))throw new Error("invalid bias");let h=i[0].dims.length-2;if(u.dilations.length!==h)throw new Error(`dilations should be ${h}D`);if(u.strides.length!==h)throw new Error(`strides should be ${h}D`);if(u.pads.length!==2*h)throw new Error(`pads should be ${2*h}D`);if(u.kernelShape.length!==0&&u.kernelShape.length!==i[1].dims.length-2)throw new Error("invalid kernel shape")},_=(i,u)=>{let h=i.kernelShape.slice();h.length<u[1].dims.length-2&&h.push(...Array(u[1].dims.length-2-h.length).fill(0));for(let E=2;E<u[1].dims.length;++E)h[E-2]===0&&(h[E-2]=u[1].dims[E]);let w=i.pads.slice();YA.adjustPadsBasedOnAutoPad(u[0].dims,i.strides,i.dilations,h,w,i.format==="NHWC",i.autoPad);let B=Object.assign({},i);return Object.assign(B,{kernelShape:h,pads:w}),B},ce=i=>{let u=Xi(i),h=i.format;return{autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][i.auto_pad],format:h,dilations:i.dilations,group:i.group,kernelShape:i.kernel_shape,pads:i.pads,strides:i.strides,wIsConst:i.w_is_const(),...u,cacheKey:`${i.format};${u.activation};`}},he=(i,u,h,w)=>{let B=h.format==="NHWC",E=P(u[0].dims,u[1].dims,h.dilations,h.pads,h.strides,B);if(h.group!==1){let eA=[u[0]];if(B){let aA=i.kernelCustomData.wT??i.compute(Qn(u[1],Y),{inputs:[1],outputs:[h.wIsConst?-2:-1]})[0];h.wIsConst&&!i.kernelCustomData.wT&&(i.kernelCustomData.wT=aA),eA.push(aA)}else eA.push(u[1]);return u.length===3&&eA.push(u[2]),void(!i.adapterInfo.isArchitecture("ampere")&&B&&u[1].dims[0]===h.group&&u[1].dims[1]===1&&h.dilations[0]===1&&h.dilations[1]===1?i.compute(y(eA,h,E,w),{inputs:eA}):i.compute(I(eA,h,E,w),{inputs:eA}))}let v=u.length===3,z=u[0].dims[B?1:2],O=u[0].dims[B?2:3],L=u[0].dims[B?3:1],ee=u[1].dims[2],te=u[1].dims[3],T=E[B?1:2],le=E[B?2:3],de=E[B?3:1],we=B&&ee===z&&te===O&&h.pads[0]===0&&h.pads[1]===0;if(we||ee===1&&te===1&&h.dilations[0]===1&&h.dilations[1]===1&&h.strides[0]===1&&h.strides[1]===1&&h.pads[0]===0&&h.pads[1]===0){let eA,aA,zA,jA=E[0],ht=[];if(B){let Ct=i.kernelCustomData.wT??i.compute(Qn(u[1],Y),{inputs:[1],outputs:[h.wIsConst?-2:-1]})[0];if(h.wIsConst&&!i.kernelCustomData.wT&&(i.kernelCustomData.wT=Ct),we){let Pt=z*O*L;eA=u[0].reshape([1,jA,Pt]),aA=Ct.reshape([1,Pt,de]),zA=[1,jA,de]}else eA=u[0].reshape([jA,z*O,L]),aA=Ct.reshape([1,L,de]),zA=[jA,T*le,de];ht.push(eA),ht.push(aA)}else eA=u[0].reshape([jA,L,z*O]),aA=u[1].reshape([1,de,L]),zA=[jA,de,T*le],ht.push(aA),ht.push(eA);v&&ht.push(u[2]);let mt=zA[2],Jt=ht[0].dims[ht[0].dims.length-1];return void(mt<8&&Jt<8?i.compute(zs(ht,h,E,zA,B,w),{inputs:ht}):i.compute(A(ht,h,E,zA,B,w),{inputs:ht}))}let be=i.kernelCustomData.wT??i.compute(Qn(u[1],Y),{inputs:[1],outputs:[h.wIsConst?-2:-1]})[0];h.wIsConst&&!i.kernelCustomData.wT&&(i.kernelCustomData.wT=be);let Me=[u[0],be];v&&Me.push(u[2]);let Fe=B?T*le:de,We=B?de:T*le,$e=ee*te*L;i.compute(r(Me,h,E,Fe,We,$e,v,!0,w),{inputs:Me})},ye=(i,u)=>{let h=u.format==="NHWC",w=[i.inputs[0].reshape(h?[i.inputs[0].dims[0],1,i.inputs[0].dims[1],i.inputs[0].dims[2]]:[i.inputs[0].dims[0],i.inputs[0].dims[1],1,i.inputs[0].dims[2]]),i.inputs[1].reshape([i.inputs[1].dims[0],i.inputs[1].dims[1],1,i.inputs[1].dims[2]])];i.inputs.length===3&&w.push(i.inputs[2]);let B=[0,u.pads[0],0,u.pads[1]],E=[1].concat(u.strides),v=[1].concat(u.dilations),z=[1].concat(u.kernelShape),O=_({...u,pads:B,strides:E,dilations:v,kernelShape:z},w);he(i,w,O,L=>h?[L[0],L[2],L[3]]:[L[0],L[1],L[3]])},De=(i,u,h)=>{let w=h.format==="NHWC"?"channelsLast":"channelsFirst",B=_(h,u),E=h.autoPad==="NOTSET"?h.pads:h.autoPad,v=m(u[0].dims,u[1].dims,h.strides,h.dilations,E,!1,w);i.compute(p(u,B,v.outShape,[v.filterDepth,v.filterHeight,v.filterWidth],[v.padInfo.front,v.padInfo.top,v.padInfo.left],w))},Re=(i,u)=>{if(X(i.inputs,u),i.inputs[0].dims.length===3)ye(i,u);else if(i.inputs[0].dims.length===5)De(i,i.inputs,u);else{let h=_(u,i.inputs);he(i,i.inputs,h)}}}),Ac=Pe(()=>{Mt(),Cs(),St(),Yt(),Xe=(i,u,h)=>{let w=i.length>2,B=u.outputShape,E=u.format==="NHWC",v=u.group,z=i[1].dims,O=z[2]/v,L=z[3],ee=E?Zt(O):1,te=E?Zt(L):1,T=E?L===1?ee:te:1,le=Le.size(B)/te,de=[Math.ceil(le/64),1,1];Ft("verbose",()=>`[conv2d_backprop_webgpu] dispatch = ${de}`);let we=["rank","rank"],be=[u.strides[0],u.strides[1]],Me=[u.kernelShape[E?1:2],u.kernelShape[E?2:3]],Fe=[u.dilations[0],u.dilations[1]],We=[Me[0]+(u.dilations[0]<=1?0:(u.kernelShape[E?1:2]-1)*(u.dilations[0]-1)),Me[1]+(u.dilations[1]<=1?0:(u.kernelShape[E?2:3]-1)*(u.dilations[1]-1))],$e=[We[0]-1-Math.floor((u.pads[0]+u.pads[2])/2),We[1]-1-Math.floor((u.pads[1]+u.pads[3])/2)],eA=[{type:12,data:le},{type:12,data:be},{type:12,data:Me},{type:12,data:Fe},{type:12,data:We},{type:6,data:$e},{type:12,data:O},{type:12,data:L},..._A(i[0].dims,i[1].dims)];return w&&(eA.push(..._A(i[2].dims)),we.push("rank")),eA.push(..._A(B)),{name:"ConvTranspose2D",shaderCache:{hint:`${u.cacheKey};${ee}${T}${te}${L===1}`,inputDependencies:we},getRunData:()=>({dispatchGroup:{x:de[0],y:de[1],z:de[2]},outputs:[{dims:h?h(B):B,dataType:i[0].dataType}],programUniforms:eA}),getShaderSource:aA=>{let zA=[{name:"output_size",type:"u32"},{name:"strides",type:"u32",length:be.length},{name:"filter_dims",type:"u32",length:Me.length},{name:"dilations",type:"u32",length:Me.length},{name:"effective_filter_dims",type:"u32",length:We.length},{name:"pads",type:"i32",length:$e.length},{name:"input_channels_per_group",type:"u32"},{name:"output_channels_per_group",type:"u32"}],jA=zt(i[0].dataType),ht=E?1:2,mt=E?2:3,Jt=E?3:1,Ct=pA("W",i[1].dataType,i[1].dims.length,T),Pt=pA("Dy",i[0].dataType,i[0].dims.length,ee),Qt=[Pt,Ct];w&&Qt.push(pA("bias",i[2].dataType,[B[Jt]].length,te));let iA=$A("result",i[0].dataType,B.length,te),gt=`
            let outputIndices = ${iA.offsetToIndices(`global_idx * ${te}`)};
            let batch = ${iA.indicesGet("outputIndices",0)};
            let d1 = ${iA.indicesGet("outputIndices",Jt)};
            let r = ${iA.indicesGet("outputIndices",ht)};
            let c = ${iA.indicesGet("outputIndices",mt)};
            let dyCorner = vec2<i32>(i32(r), i32(c)) - uniforms.pads;
            let dyRCorner = dyCorner.x;
            let dyCCorner = dyCorner.y;
            let groupId = d1 / uniforms.output_channels_per_group;
            let wOutChannel = d1 - groupId * uniforms.output_channels_per_group;
            // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
            // ? = to be determined. : = across all values in that axis.
            var dotProd = ${iA.type.value}(0.0);
            var wR: u32 = 0;
            if (uniforms.dilations.x == 1) {
              // Minimum wR >= 0 that satisfies (dyRCorner + wR) % (uniforms.strides.x) == 0
              wR = u32(((dyRCorner + i32(uniforms.strides.x) - 1) / i32(uniforms.strides.x)) * i32(uniforms.strides.x) - dyRCorner);
            }
            for (; wR < uniforms.effective_filter_dims.x; wR = wR + 1) {
              if (wR % uniforms.dilations.x != 0) {
                continue;
              }
              let dyR = (${jA}(dyRCorner) + ${jA}(wR)) / ${jA}(uniforms.strides[0]);
              let wRPerm = uniforms.filter_dims.x - 1 - wR / uniforms.dilations.x;
              if (dyR < 0.0 || dyR >= ${jA}(uniforms.Dy_shape[${ht}]) || fract(dyR) > 0.0 ||
                  wRPerm < 0) {
                continue;
              }
              let idyR: u32 = u32(dyR);
              var wC: u32 = 0;
              if (uniforms.dilations.y == 1) {
                // Minimum wC >= 0 that satisfies (dyCCorner + wC) % (uniforms.strides.y) == 0
                wC = u32(((dyCCorner + i32(uniforms.strides.y) - 1) / i32(uniforms.strides.y)) * i32(uniforms.strides.y) - dyCCorner);
              }

              for (; wC < uniforms.effective_filter_dims.y; wC = wC + 1) {
                if (wC % uniforms.dilations.y != 0) {
                  continue;
                }
                let dyC = (${jA}(dyCCorner) + ${jA}(wC)) / ${jA}(uniforms.strides.y);
                let wCPerm = uniforms.filter_dims.y - 1 - wC / uniforms.dilations.y;
                if (dyC < 0.0 || dyC >= ${jA}(uniforms.Dy_shape[${mt}]) ||
                    fract(dyC) > 0.0 || wCPerm < 0) {
                  continue;
                }
                let idyC: u32 = u32(dyC);
                var inputChannel = groupId * uniforms.input_channels_per_group;
                for (var d2: u32 = 0; d2 < uniforms.input_channels_per_group; d2 = d2 + ${ee}) {
                  let xValue = ${E?Pt.getByOffset(`${Pt.indicesToOffset(`${Pt.type.indices}(batch, idyR, idyC, inputChannel)`)} / ${ee}`):Pt.get("batch","inputChannel","idyR","idyC")};
                  ${(()=>{let at="";if(ee===1)at+=`
        let w_offset = ${Ct.indicesToOffset(`${Ct.type.indices}(u32(wRPerm), u32(wCPerm), inputChannel, wOutChannel)`)};
        let wValue = ${Ct.getByOffset(`w_offset / ${T}`)};
        dotProd = dotProd + xValue * wValue;`;else if(L===1)at+=`
          let wValue = ${Ct.getByOffset(`${Ct.indicesToOffset(`${Ct.type.indices}(u32(wRPerm), u32(wCPerm), inputChannel, wOutChannel)`)} / ${T}`)};
          dotProd = dotProd + dot(xValue, wValue);`;else for(let ot=0;ot<ee;ot++)at+=`
            let wValue${ot} = ${Ct.getByOffset(`${Ct.indicesToOffset(`${Ct.type.indices}(u32(wRPerm), u32(wCPerm), inputChannel + ${ot}, wOutChannel)`)} / ${T}`)};
            dotProd = dotProd + xValue[${ot}] * wValue${ot};`;return at})()}
                  inputChannel = inputChannel + ${ee};
                }
                wC = wC + uniforms.strides.y - 1;
              }
              wR = wR + uniforms.strides[0] - 1;
            }
            let value = dotProd${w?` + bias[d1 / ${te}]`:""};
            ${iA.setByOffset("global_idx","value")};
          `;return`
    ${aA.registerUniforms(zA).declareVariables(...Qt,iA)}
      ${aA.mainStart()}
      ${aA.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")};
    ${gt}}`}}}}),Pn=Pe(()=>{Ac(),ii(),Os(),nA=(i,u,h,w,B,E)=>(i-1)*u+h+(w-1)*B+1-E,fA=(i,u,h,w,B)=>{let E=Math.floor(i/2);u==="SAME_UPPER"?(h[w]=E,h[B]=i-E):u==="SAME_LOWER"&&(h[w]=i-E,h[B]=E)},GA=(i,u,h,w,B,E,v,z,O,L)=>{let ee=i.length-2,te=L.length===0;O.length<ee&&O.push(...Array(ee-O.length).fill(0));let T=i[0],le=u[z?3:1]*B;for(let de=0,we=i.length-ee-(z?1:0);de<ee;++de,++we){let be=i[we],Me=te?be*v[de]:L[de],Fe=nA(be,v[de],E[de],u[we],h[de],Me);fA(Fe,w,E,de,de+ee),te&&L.push(v[de]*(be-1)+O[de]+(u[we]-1)*h[de]+1-E[de]-E[de+ee])}L.splice(0,0,T),L.splice(z?3:1,0,le)},SA=(i,u)=>{let h=i.kernelShape.slice();if(i.kernelShape.length===0||i.kernelShape.reduce((te,T)=>te*T,1)===0){h.length=0;for(let te=2;te<u[1].dims.length;++te)h.push(u[1].dims[te])}let w=i.format==="NHWC";h.splice(0,0,u[1].dims[0]),h.splice(w?3:1,0,u[1].dims[1]);let B=i.pads.slice(),E=i.outputShape.slice(),v=i.outputPadding.slice(),z=u[0].dims,O=i.dilations.slice();if(O.reduce((te,T)=>te+T,0)===0){let te=u[0].dims.length-2;O=new Array(te).fill(1)}let L=i.strides.slice();if(L.reduce((te,T)=>te+T,0)===0){let te=u[0].dims.length-2;L=new Array(te).fill(1)}GA(z,h,O,i.autoPad,i.group,B,L,w,v,E);let ee=Object.assign({},i);return Object.assign(ee,{kernelShape:h,pads:B,outputPadding:v,outputShape:E,dilations:O,strides:L}),ee},At=i=>{let u=Xi(i),h=i.format,w=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][typeof i.autoPad>"u"?0:i.autoPad],B=i.dilations,E=i.group,v=i.kernelShape,z=i.pads,O=i.strides,L=i.wIsConst();return{autoPad:w,format:h,dilations:B,group:E,kernelShape:v,outputPadding:i.outputPadding,outputShape:i.outputShape,pads:z,strides:O,wIsConst:L,...u,cacheKey:`${i.format};${u.activation};`}},ct=(i,u)=>{if(!i||i.length!==2&&i.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(i[0].dims.length!==4&&i[0].dims.length!==3)throw new Error("currently only support 2-dimensional conv");if(i[0].dims.length!==i[1].dims.length)throw new Error("filter does not have same dimension as input");if(i[0].dims[u.format==="NHWC"?i[0].dims.length-1:1]!==i[1].dims[0])throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let h=i[1].dims[1]*u.group;if(i.length===3&&(i[2].dims.length!==1||i[2].dims[0]!==h))throw new Error("invalid bias");let w=i[0].dims.length-2;if(u.dilations.reduce((B,E)=>B+E,0)>0&&u.dilations.length!==w)throw new Error(`dilations should be ${w}D`);if(u.strides.reduce((B,E)=>B+E,0)>0&&u.strides.length!==w)throw new Error(`strides should be ${w}D`);if(u.pads.reduce((B,E)=>B+E,0)>0&&u.pads.length!==2*w)throw new Error(`pads should be ${2*w}D`);if(u.outputPadding.length!==w&&u.outputPadding.length!==0)throw new Error(`output_padding should be ${w}D`);if(u.kernelShape.reduce((B,E)=>B+E,0)>0&&u.kernelShape.length!==0&&u.kernelShape.length!==i[1].dims.length-2)throw new Error("invalid kernel shape");if(u.outputShape.length!==0&&u.outputShape.length!==i[0].dims.length-2)throw new Error("invalid output shape")},bt=(i,u,h,w)=>{let B=i.kernelCustomData.wT??i.compute(Qn(u[1],[2,3,0,1]),{inputs:[1],outputs:[h.wIsConst?-2:-1]})[0];h.wIsConst&&!i.kernelCustomData.wT&&(i.kernelCustomData.wT=B);let E=[u[0],B];u.length===3&&E.push(u[2]),i.compute(Xe(E,h,w),{inputs:E})},Nt=(i,u)=>{let h=u.format==="NHWC",w=[i.inputs[0].reshape(h?[i.inputs[0].dims[0],1,i.inputs[0].dims[1],i.inputs[0].dims[2]]:[i.inputs[0].dims[0],i.inputs[0].dims[1],1,i.inputs[0].dims[2]]),i.inputs[1].reshape([i.inputs[1].dims[0],i.inputs[1].dims[1],1,i.inputs[1].dims[2]])];i.inputs.length===3&&w.push(i.inputs[2]);let B=u.kernelShape;(B.length===0||B[0]===0)&&(B=[i.inputs[1].dims[2]]);let E=u.dilations;(E.length===0||E[0]===0)&&(E=[1]);let v=u.strides;(v.length===0||v[0]===0)&&(v=[1]);let z=u.pads;z.length===0&&(z=[0,0]),z=[0,z[0],0,z[1]],v=[1].concat(v),E=[1].concat(E),B=[1].concat(B);let O=u.outputPadding;O=[0].concat(O);let L=SA({...u,pads:z,strides:v,dilations:E,kernelShape:B,outputPadding:O},w);bt(i,w,L,ee=>h?[ee[0],ee[2],ee[3]]:[ee[0],ee[1],ee[3]])},qt=(i,u)=>{if(ct(i.inputs,u),i.inputs[0].dims.length===3)Nt(i,u);else{let h=SA(u,i.inputs);bt(i,i.inputs,h)}}}),Ln=Pe(()=>{Mt(),St(),Zr(),Yt(),tr=(i,u,h,w)=>{let B=Le.size(u),E=u.length,v=pA("input",i,E),z=$A("output",i,E),O=h.dataType===6?h.getInt32Array()[0]:Number(h.getBigInt64Array()[0]),L=Le.normalizeAxis(O,E);return{name:"CumSum",shaderCache:{hint:w.cacheKey,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:u,dataType:i}],dispatchGroup:{x:Math.ceil(B/64)},programUniforms:[{type:12,data:B},{type:12,data:L},..._A(u,u)]}),getShaderSource:ee=>{let te=` i32(${v.indicesGet("inputIndices","uniforms.axis")}) `,T=it("uniforms.input_shape","uniforms.axis",E),le=w.reverse?te+(w.exclusive?" + 1":""):"0",de=w.reverse?T:te+(w.exclusive?"":" + 1");return`
                ${ee.registerUniform("outputSize","u32").registerUniform("axis","u32").declareVariables(v,z)}
                ${ee.mainStart()}
                  ${ee.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
                  var inputIndices = ${z.offsetToIndices("global_idx")};
                  var sum = ${z.type.value}(0);
                  let first : i32 = ${le};
                  let last : i32 = ${de};
                  for (var i : i32 = first; i < last; i++) {
                    ${v.indicesSet("inputIndices","uniforms.axis","u32(i)")};
                    sum = sum + ${v.getByIndices("inputIndices")};
                  }
                  ${z.setByOffset("global_idx","sum")};
                }`}}},mr=(i,u)=>{let h=i.inputs[0].dims,w=i.inputs[0].dataType,B=i.inputs[1];i.compute(tr(w,h,B,u),{inputs:[0]})},Cr=i=>{let u=i.exclusive===1,h=i.reverse===1;return Ze({exclusive:u,reverse:h})}}),Kn=Pe(()=>{Mt(),St(),Zr(),Yt(),Gr=i=>{if(!i||i.length!==1)throw new Error("DepthToSpace requires 1 input.");if(i[0].dims.length!==4)throw new Error("DepthToSpace requires 4D input.")},Dr=(i,u,h,w)=>{let B=[];B.push(`fn perm(i: ${w.type.indices}) -> ${h.type.indices} {
    var a: ${h.type.indices};`);for(let E=0;E<u;++E)B.push(h.indicesSet("a",i[E],`i[${E}]`));return B.push("return a;}"),B.join(`
`)},Or=(i,u)=>{let h,w,B,E,v,z,O=u.format==="NHWC",L=u.blocksize,ee=u.mode==="DCR";O?([h,w,B,E]=i.dims,v=ee?[h,w,B,L,L,E/L**2]:[h,w,B,E/L**2,L,L],z=ee?[0,1,3,2,4,5]:[0,1,4,2,5,3]):([h,w,B,E]=[i.dims[0],i.dims[2],i.dims[3],i.dims[1]],v=ee?[h,L,L,E/L**2,w,B]:[h,E/L**2,L,L,w,B],z=ee?[0,3,4,1,5,2]:[0,1,4,2,5,3]);let te=i.reshape(v),T=te.dims.length,le=i.dataType,de=pA("a",le,T),we=$A("output",le,T);return{name:"DepthToSpace",shaderCache:{hint:`${i.dims};${u.blocksize};${u.mode}`,inputDependencies:["rank"]},getRunData:be=>{let Me=O?[h,w*L,B*L,E/L**2]:[h,E/L**2,w*L,B*L],Fe=Le.size(Me),We=te.dims,$e=Le.sortBasedOnPerm(We,z);return{outputs:[{dims:Me,dataType:be[0].dataType}],dispatchGroup:{x:Math.ceil(Fe/64)},programUniforms:[{type:12,data:Fe},..._A(We,$e)]}},getShaderSource:be=>`
  ${be.registerUniform("output_size","u32").declareVariables(de,we)}

  ${Dr(z,T,de,we)}

  ${be.mainStart()}
    ${be.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${we.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${we.setByOffset("global_idx",de.getByIndices("aIndices"))}
  }`}},Kr=(i,u)=>{Gr(i.inputs),i.compute(Or(i.inputs[0],u))},on=i=>Ze({blocksize:i.blocksize,mode:i.mode,format:i.format})}),e0=Pe(()=>{Mt(),St(),Zr(),Yt(),En="^"+(ln="("+($r="[a-zA-Z]|\\.\\.\\.")+")+")+"$",na="^"+("("+ln+",)*"+ln)+"$",pa=class{constructor(i=-1){this.symbolToIndices=new Map,this.inputIndex=i}addSymbol(i,u){let h=this.symbolToIndices.get(i);h===void 0?h=[u]:h.push(u),this.symbolToIndices.set(i,h)}},ha=class{constructor(i,u){var B;this.equation=u,this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=new Array,this.outputDims=[];let[h,w]=u.includes("->")?u.split("->",2):[u,""];if(!h.match(RegExp(na)))throw new Error("Invalid LHS term");if(h.split(",").forEach((E,v)=>{let z=i[v].dims.slice();if(!E.match(RegExp(En)))throw new Error("Invalid LHS term");let O=this.processTerm(E,!0,z,v);this.lhs.push(O)}),w==="")w+=[...this.symbolToInfo.entries()].filter(([E,v])=>v.count===1||E==="...").map(([E])=>E).join("");else if(!w.match(RegExp(ln)))throw new Error("Invalid RHS");(B=w.match(RegExp($r,"g")))==null||B.forEach(E=>{if(E==="...")this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let v=this.symbolToInfo.get(E);if(v===void 0)throw new Error("Invalid RHS symbol");this.outputDims.push(v.dimValue)}}),this.rhs=this.processTerm(w,!1,this.outputDims)}addSymbol(i,u,h){let w=this.symbolToInfo.get(i);if(w!==void 0){if(w.dimValue!==u&&w.count!==1)throw new Error("Dimension mismatch");w.count++,w.inputIndices.push(h)}else w={count:1,dimValue:u,inputIndices:[h]};this.symbolToInfo.set(i,w)}processTerm(i,u,h,w=-1){let B=h.length,E=!1,v=[],z=0;if(!i.match(RegExp(En))&&!u&&i!=="")throw new Error("Invalid LHS term");let O=i.match(RegExp($r,"g")),L=new pa(w);return O==null||O.forEach((ee,te)=>{if(ee==="..."){if(E)throw new Error("Only one ellipsis is allowed per input term");E=!0;let T=B-O.length+1;if(T<0)throw new Error("Ellipsis out of bounds");if(v=h.slice(z,z+T),this.hasEllipsis){if(this.ellipsisDims.length!==v.length||this.ellipsisDims.toString()!==v.toString())throw new Error("Ellipsis dimensions mismatch")}else{if(!u)throw new Error("Ellipsis must be specified in the LHS");this.hasEllipsis=!0,this.ellipsisDims=v}for(let le=0;le<v.length;le++){let de=String.fromCharCode("0".charCodeAt(0)+le);L.addSymbol(de,te+le),this.addSymbol(de,h[z++],w)}}else L.addSymbol(ee,te+(this.hasEllipsis?this.ellipsisDims.length-1:0)),this.addSymbol(ee,h[z++],w)}),L}},Oa=i=>i+"_max",Fs=(i,u,h,w)=>{let B=i.map(O=>O.length).map((O,L)=>pA(`input${L}`,u,O)),E=Le.size(w),v=$A("output",u,w.length),z=[...h.symbolToInfo.keys()].filter(O=>!h.rhs.symbolToIndices.has(O));return{name:"Einsum",shaderCache:{hint:h.equation,inputDependencies:i.map(()=>"rank")},getRunData:()=>{let O=z.filter(ee=>h.symbolToInfo.has(ee)).map(ee=>{var te;return{type:12,data:((te=h.symbolToInfo.get(ee))==null?void 0:te.dimValue)||0}});O.push({type:12,data:E});let L=i.map((ee,te)=>[..._A(ee)]).reduce((ee,te)=>ee.concat(te),O);return L.push(..._A(w)),{outputs:[{dims:w,dataType:u}],dispatchGroup:{x:Math.ceil(E/64)},programUniforms:L}},getShaderSource:O=>{let L=[],ee=[],te=[],T=[],le=[],de=h.symbolToInfo.size===h.rhs.symbolToIndices.size;h.symbolToInfo.forEach((be,Me)=>{var Fe;if(h.rhs.symbolToIndices.has(Me)){let We=(Fe=h.rhs.symbolToIndices.get(Me))==null?void 0:Fe[0];We!==void 0&&h.lhs.forEach(($e,eA)=>{if(be.inputIndices.includes(eA)){let aA=$e.symbolToIndices.get(Me);if(aA===void 0)throw new Error("Invalid symbol error");aA.forEach(zA=>{L.push(`${B[eA].indicesSet(`input${eA}Indices`,zA,v.indicesGet("outputIndices",We))}`)})}})}else h.lhs.forEach((We,$e)=>{if(be.inputIndices.includes($e)){let eA=We.symbolToIndices.get(Me);if(eA===void 0)throw new Error("Invalid symbol error");eA.forEach(aA=>{ee.push(`${B[$e].indicesSet(`input${$e}Indices`,aA,`${Me}`)}`)}),le.push(`prod *= ${B[$e].getByIndices(`input${$e}Indices`)};`)}}),te.push(`for(var ${Me}: u32 = 0; ${Me} < uniforms.${Oa(Me)}; ${Me}++) {`),T.push("}")});let we=de?[...L,`let sum = ${B.map((be,Me)=>be.getByIndices(`input${Me}Indices`)).join(" * ")};`]:[...L,"var sum = 0.0;",...te,...ee,"var prod = 1.0;",...le,"sum += prod;",...T];return`
            ${O.registerUniforms(z.map(be=>({name:`${Oa(be)}`,type:"u32"}))).registerUniform("outputSize","u32").declareVariables(...B,v)}

            ${O.mainStart()}
            ${O.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
            var outputIndices = ${v.offsetToIndices("global_idx")};
            ${B.map((be,Me)=>`var input${Me}Indices: ${B[Me].type.indices};`).join(`
`)}
            ${we.join(`
`)};
            ${v.setByOffset("global_idx","sum")};
          }`}}},hs=(i,u)=>{let h=new ha(i.inputs,u.equation),w=h.outputDims,B=i.inputs.map((E,v)=>E.dims);i.compute(Fs(B,i.inputs[0].dataType,h,w))},ms=i=>{let u=i.equation.replace(/\s+/g,"");return Ze({equation:u})}}),vc=Pe(()=>{Mt(),St(),Yt(),Ss=i=>{if(!i||i.length!==2)throw new Error("Expand requires 2 input.");let u=i[0].dims,h=Array.from(i[1].getBigInt64Array(),Number),w=h.length<u.length?0:h.length-u.length,B=u.length<h.length?0:u.length-h.length;for(;w<h.length&&B<u.length;++w,++B)if(h[w]!==u[B]&&h[w]!==1&&u[B]!==1)throw new Error("Expand requires shape to be broadcastable to input")},_i=(i,u)=>{let h=i.length-u.length,w=[];for(let B=0;B<h;++B)w.push(i[B]);for(let B=0;B<u.length;++B)w.push(u[B]===1?i[B+h]:u[B]);return w},N0=(i,u)=>i.length>u.length?_i(i,u):_i(u,i),O0=i=>{let u=i[0].dims,h=Array.from(i[1].getBigInt64Array(),Number),w=N0(u,h),B=i[0].dataType,E=B===9||Le.size(u)===1,v=B===9||u.length>0&&u[u.length-1]%4==0?4:1,z=E||w.length>0&&w[w.length-1]%4==0?4:1,O=Math.ceil(Le.size(w)/z),L=[{type:12,data:O},..._A(u,w)];return{name:"Expand",shaderCache:{hint:`${w.length};${v}${z}`,inputDependencies:["rank"]},getShaderSource:ee=>{let te,T=pA("input",B,u.length,v),le=$A("output",B,w.length,z);if(B===9){let de=(we,be,Me="")=>`
          let outputIndices${be} = ${le.offsetToIndices(`outputOffset + ${be}u`)};
          let offset${be} = ${T.broadcastedIndicesToOffset(`outputIndices${be}`,le)};
          let index${be} = offset${be} / 4u;
          let component${be} = offset${be} % 4u;
          ${we}[${be}] = ${Me}(${T.getByOffset(`index${be}`)}[component${be}]);
        `;te=`
        let outputOffset = global_idx * ${z};
        var data = vec4<u32>(0);
        ${de("data",0,"u32")}
        ${de("data",1,"u32")}
        ${de("data",2,"u32")}
        ${de("data",3,"u32")}
        ${le.setByOffset("global_idx","data")}
      }`}else te=`
        let outputIndices = ${le.offsetToIndices(`global_idx * ${z}`)};
        let inputOffset = ${T.broadcastedIndicesToOffset("outputIndices",le)};
        let data = ${le.type.value}(${T.getByOffset(`inputOffset / ${v}`)});
        ${le.setByOffset("global_idx","data")}
      }`;return`
    ${ee.registerUniform("vec_size","u32").declareVariables(T,le)}
    ${ee.mainStart()}
    ${ee.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
    ${te}`},getRunData:()=>({outputs:[{dims:w,dataType:i[0].dataType}],dispatchGroup:{x:Math.ceil(O/64)},programUniforms:L})}},ti=i=>{Ss(i.inputs),i.compute(O0(i.inputs),{inputs:[0]})}}),tc=Pe(()=>{Mt(),St(),Yt(),n2(),x2=i=>{let u=i[0].dataType,h=Le.size(i[0].dims),w=Le.size(i[1].dims),B=w%4==0;return{name:"FastGeluWithBias",shaderCache:{hint:`${B}`,inputDependencies:["type","type"]},getShaderSource:E=>{let v=pA("x",u,[1],4),z=pA("bias",u,[1],4),O=$A("y",u,[1],4),L=te=>`
      let bias${te}_offset: u32 = (global_idx * 4 + ${te}) % uniforms.bias_size;
      let bias${te} = ${z.getByOffset(`bias${te}_offset / 4`)}[bias${te}_offset % 4];`,ee=B?`
      let bias = ${z.getByOffset("global_idx % (uniforms.bias_size / 4)")};`:`${L(0)}${L(1)}${L(2)}${L(3)}
      let bias = ${v.type.value}(bias0, bias1, bias2, bias3);`;return`${E.registerUniforms([{name:"output_vec_size",type:"u32"},{name:"bias_size",type:"u32"}]).declareVariables(v,z,O)}

    ${ta(VA(u))}

    ${E.mainStart(jt)}
      ${E.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_vec_size")}

      let x = ${v.getByOffset("global_idx")};
      ${ee}
      let x_in = x + bias;
      ${O.setByOffset("global_idx",Hi("x_in"))}
    }`},getRunData:E=>({outputs:[{dims:E[0].dims,dataType:E[0].dataType}],programUniforms:[{type:12,data:Math.ceil(h/4)},{type:12,data:w}],dispatchGroup:{x:Math.ceil(h/jt/4)}})}},B2=i=>{i.inputs.length<2||Le.size(i.inputs[1].dims)===0?$s(i):i.compute(x2(i.inputs))}}),rc=Pe(()=>{Mt(),St(),Zr(),Yt(),v2=i=>{if(!i||i.length!==2)throw new Error("Gather requires 2 inputs.")},y2=(i,u)=>{let h=i[0].dims,w=i[1].dims,B=h.length,E=Le.normalizeAxis(u.axis,B),v=h.slice(0);v.splice(E,1,...w);let z=h[E],O=i[0].dataType===9?4:1,L=Math.ceil(Le.size(v)/O),ee=[{type:12,data:L},{type:6,data:z},{type:12,data:E},..._A(i[0].dims,i[1].dims,v)];return{name:"Gather",shaderCache:{hint:u.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:v,dataType:i[0].dataType}],dispatchGroup:{x:Math.ceil(L/64)},programUniforms:ee}),getShaderSource:te=>{let T,le=pA("data",i[0].dataType,i[0].dims.length,O),de=pA("inputIndices",i[1].dataType,i[1].dims.length),we=$A("output",i[0].dataType,v.length,O),be=Me=>{let Fe=w.length,We=`var indicesIndices${Me}  = ${de.type.indices}(0);`;for(let $e=0;$e<Fe;$e++)We+=`${Fe>1?`indicesIndices${Me}[${$e}]`:`indicesIndices${Me}`} = ${v.length>1?`outputIndices${Me}[uniforms.axis + ${$e}]`:`outputIndices${Me}`};`;We+=`
          var idx${Me} = ${de.getByIndices(`indicesIndices${Me}`)};
          if (idx${Me} < 0) {
            idx${Me} = idx${Me} + uniforms.axisDimLimit;
          }
          var dataIndices${Me} : ${le.type.indices};
        `;for(let $e=0,eA=0;$e<B;$e++)$e===E?(We+=`${B>1?`dataIndices${Me}[${$e}]`:`dataIndices${Me}`} = u32(idx${Me});`,eA+=Fe):(We+=`${B>1?`dataIndices${Me}[${$e}]`:`dataIndices${Me}`} = ${v.length>1?`outputIndices${Me}[${eA}]`:`outputIndices${Me}`};`,eA++);return We};if(i[0].dataType===9){let Me=(Fe,We,$e="")=>`
          let outputIndices${We} = ${we.offsetToIndices(`outputOffset + ${We}u`)};
          ${be(We)};
          let offset${We} = ${le.indicesToOffset(`dataIndices${We}`)};
          let index${We} = offset${We} / 4u;
          let component${We} = offset${We} % 4u;
          ${Fe}[${We}] = ${$e}(${le.getByOffset(`index${We}`)}[component${We}]);
        `;T=`
        let outputOffset = global_idx * ${O};
        var value = vec4<u32>(0);
        ${Me("value",0,"u32")}
        ${Me("value",1,"u32")}
        ${Me("value",2,"u32")}
        ${Me("value",3,"u32")}
        ${we.setByOffset("global_idx","value")}
      `}else T=`
      let outputIndices = ${we.offsetToIndices("global_idx")};
      ${be("")};
      let value = ${le.getByIndices("dataIndices")};
      ${we.setByOffset("global_idx","value")};
      `;return`
      ${te.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(le,de,we)}
      ${te.mainStart()}
        ${te.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        ${T}
      }`}}},E2=i=>Ze({axis:i.axis}),Co=(i,u)=>{let h=i.inputs;v2(h),i.compute(y2(i.inputs,u))}}),U=Pe(()=>{Mt(),St(),Yt(),M2=(i,u,h,w,B,E,v,z,O)=>{let L=[{type:12,data:E},{type:12,data:w},{type:12,data:B},{type:12,data:h},{type:12,data:v},{type:12,data:z},{type:12,data:O}],ee=[E];return L.push(..._A(u.dims,ee)),i.compute({name:"computeSliceOffsets",shaderCache:{hint:`${B.length}_${h.length}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:ee,dataType:i.inputs[1].dataType}],dispatchGroup:{x:Math.ceil(E/64)},programUniforms:L}),getShaderSource:te=>{let T=[pA("indices_data",u.dataType,u.dims.length),$A("input_slice_offsets_data",12,1,1)],le=[{name:"output_size",type:"u32"},{name:"batch_dims",type:"u32"},{name:"input_dims",type:"u32",length:B.length},{name:"sizes_from_slice_dims_data",type:"u32",length:h.length},{name:"num_slices_per_batch",type:"u32"},{name:"input_batch_stride",type:"u32"},{name:"num_slice_dims",type:"u32"}];return`
  ${te.registerUniforms(le).declareVariables(...T)}
  ${te.mainStart()}
    ${te.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let batch_idx = global_idx / uniforms.num_slices_per_batch;
    let base_offset = batch_idx * uniforms.input_batch_stride;

    let slice_indices_base_offset = global_idx * uniforms.num_slice_dims;
    var relative_slice_offset = 0;
    for (var dim_idx = 0u; dim_idx < uniforms.num_slice_dims; dim_idx ++) {
      var index = i32(indices_data[dim_idx + slice_indices_base_offset].x);
      let input_dim_idx = uniforms.batch_dims + dim_idx;
      if (index < 0) {
        ${B.length===1?"index += i32(uniforms.input_dims);":"index += i32(uniforms.input_dims[input_dim_idx]);"}
      }
      ${h.length===1?"relative_slice_offset += index * i32(uniforms.sizes_from_slice_dims_data);":"relative_slice_offset += index * i32(uniforms.sizes_from_slice_dims_data[dim_idx]);"}
    }

    input_slice_offsets_data[global_idx] =  base_offset + u32(relative_slice_offset);
  }`}},{inputs:[u],outputs:[-1]})[0]},G2=(i,u)=>{let h=i.inputs,w=h[0].dims,B=h[0].dataType,E=h[1].dims,v=E[E.length-1],z=Le.sizeToDimension(E,E.length-1),O=Le.sizeFromDimension(w,u.batchDims+v),L=Le.sizeToDimension(w,u.batchDims),ee=Le.sizeFromDimension(w,u.batchDims),te=z/L,T=new Array(v),le=O;for(let We=0;We<v;++We)T[v-1-We]=le,le*=w[u.batchDims+v-1-We];let de=M2(i,h[1],T,u.batchDims,w,z,te,ee,v),we=u.batchDims+v;if(we>w.length)throw new Error("last dimension of indices must not be larger than rank of input tensor");let be=E.slice(0,-1).concat(w.slice(we)),Me=Le.size(be),Fe=[{type:12,data:Me},{type:12,data:O},..._A(h[0].dims,de.dims,be)];i.compute({name:"GatherND",shaderCache:{hint:u.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:be,dataType:B}],dispatchGroup:{x:Math.ceil(Me/64)},programUniforms:Fe}),getShaderSource:We=>{let $e=pA("data",h[0].dataType,h[0].dims.length),eA=pA("slice_offsets",12,de.dims.length),aA=$A("output",h[0].dataType,be.length);return`
          ${We.registerUniform("output_size","u32").registerUniform("slice_size","u32").declareVariables($e,eA,aA)}
            ${We.mainStart()}
            ${We.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          let slice_offset = slice_offsets[global_idx / uniforms.slice_size];
          output[global_idx] = data[u32(slice_offset) + global_idx % uniforms.slice_size];
        }`}},{inputs:[h[0],de]})},bo=i=>({batchDims:i.batch_dims,cacheKey:""})}),ne=Pe(()=>{Mt(),St(),Zr(),Yt(),D2=(i,u)=>{if(i.length<3||i.length>4)throw new Error("GatherBlockQuantized requires 3 or 4 inputs.");let h=Le.normalizeAxis(u.quantizeAxis,i[0].dims.length),w=u.blockSize,B=i[0],E=i[2],v=i.length===4?i[3]:void 0;if(E.dims.length!==B.dims.length||!B.dims.map((z,O)=>O===h?Math.ceil(z/w)===E.dims[O]:z===E.dims[O]).reduce((z,O)=>z&&O,!0))throw new Error("Scales must have the same rank as the input tensor and the dims should match except on gatherAxis.");if(v){if(v.dataType!==B.dataType)throw new Error("Zero point must have the same data type as the input tensor.");if(v.dims.length!==E.dims.length||!v.dims.map((z,O)=>z===E.dims[O]).reduce((z,O)=>z&&O,!0))throw new Error("Zero point must have the same rank as the input tensor and the dims should match except on quantizeAxis.")}},Q2=(i,u)=>{let h=i[0].dims,w=i[1].dims,B=h.length,E=Le.normalizeAxis(u.gatherAxis,B),v=Le.normalizeAxis(u.quantizeAxis,B),z=h.slice(0);z.splice(E,1,...w);let O=Le.size(z),L=i[2].dataType,ee=i[0].dataType===22,te=[{type:12,data:O},{type:12,data:v},{type:12,data:E},{type:12,data:u.blockSize},..._A(...i.map((T,le)=>T.dims),z)];return{name:"GatherBlockQuantized",shaderCache:{hint:`${u.cacheKey};${i.filter((T,le)=>le!==1).map(T=>T.dims.join("_")).join(";")}`,inputDependencies:Array.from({length:i.length},(T,le)=>"rank")},getRunData:()=>({outputs:[{dims:z,dataType:L}],dispatchGroup:{x:Math.ceil(O/64)},programUniforms:te}),getShaderSource:T=>{let le=pA("data",i[0].dataType,i[0].dims.length),de=pA("inputIndices",i[1].dataType,i[1].dims.length),we=pA("scales",i[2].dataType,i[2].dims.length),be=i.length>3?pA("zeroPoint",i[3].dataType,i[3].dims.length):void 0,Me=$A("output",L,z.length),Fe=[le,de,we];return be&&Fe.push(be),`
        ${T.registerUniforms([{name:"output_size",type:"u32"},{name:"quantize_axis",type:"u32"},{name:"gather_axis",type:"u32"},{name:"block_size",type:"u32"}]).declareVariables(...Fe,Me)}
        ${T.mainStart()}
        let output_indices = ${Me.offsetToIndices("global_idx")};
        var indices_indices = ${de.type.indices}(0);
        ${w.length>1?`
          for (var i: u32 = 0; i < ${w.length}; i++) {
            let index = ${Me.indicesGet("output_indices","uniforms.gather_axis + i")};
            ${de.indicesSet("indices_indices","i","index")};
          }`:`indices_indices = ${Me.indicesGet("output_indices","uniforms.gather_axis")};`};
        var data_indices = ${le.type.indices}(0);
        for (var i: u32 = 0; i < uniforms.gather_axis; i++) {
          let index = ${Me.indicesGet("output_indices","i")};
          ${le.indicesSet("data_indices","i","index")};
        }
        var index_from_indices = ${de.getByIndices("indices_indices")};
        if (index_from_indices < 0) {
          index_from_indices += ${h[E]};
        }
        ${le.indicesSet("data_indices","uniforms.gather_axis","u32(index_from_indices)")};
        for (var i = uniforms.gather_axis + 1; i < ${z.length}; i++) {
          let index = ${Me.indicesGet("output_indices",`i + ${w.length} - 1`)};
          ${le.indicesSet("data_indices","i","index")};
        }
        let data_offset = ${le.indicesToOffset("data_indices")};
        let data_index = data_offset % 8;
        // Convert 4-bit packed data to 8-bit packed data.
        let packed_4bit_quantized_data = ${le.getByOffset("data_offset / 8")};
        let packed_8bit_quantized_data = (packed_4bit_quantized_data >> (4 * (data_index % 2))) & 0x0f0f0f0f;
        let quantized_data_vec = ${ee?"unpack4xI8":"unpack4xU8"}(u32(packed_8bit_quantized_data));
        let quantized_data = quantized_data_vec[data_index / 2];
        var scale_indices = data_indices;
        let quantize_axis_index = ${we.indicesGet("data_indices","uniforms.quantize_axis")} / uniforms.block_size;
        ${we.indicesSet("scale_indices","uniforms.quantize_axis","quantize_axis_index")};
        var scale = ${we.getByIndices("scale_indices")};
        ${be?`
              let zero_point_indices = scale_indices;
              let zero_point_offset = ${be.indicesToOffset("zero_point_indices")};
              let zero_point_index = zero_point_offset % 8;
              let packed_4bit_zero_points = ${be.getByOffset("zero_point_offset / 8")};
              let packed_8bit_zero_points = (packed_4bit_zero_points >> (4 * (zero_point_index % 2))) & 0x0f0f0f0f;
              let zero_point_vec = ${ee?"unpack4xI8":"unpack4xU8"}(u32(packed_8bit_zero_points));
              let zero_point = zero_point_vec[zero_point_index / 2];`:"var zero_point = 0"};
        let dequantized_data = ${VA(L)}(quantized_data - zero_point) * scale;
        ${Me.setByOffset("global_idx","dequantized_data")};
    }`}}},T2=(i,u)=>{let h=i.inputs;D2(h,u),i.compute(Q2(i.inputs,u))},P2=i=>Ze({blockSize:i.blockSize,gatherAxis:i.gatherAxis,quantizeAxis:i.quantizeAxis})}),Ce=Pe(()=>{Mt(),St(),Zr(),Yt(),Io=i=>{if(!i||i.length!==2)throw new Error("GatherElements requires 2 inputs.");if(i[0].dims.length<1)throw new Error("GatherElements requires that the data input be rank >= 1.");if(i[0].dims.length!==i[1].dims.length)throw new Error(`GatherElements requires that the data input and
                     indices input tensors be of same rank.`)},z2=(i,u)=>{let h=i[0].dims,w=i[0].dataType,B=h.length,E=i[1].dims,v=i[1].dataType,z=Le.normalizeAxis(u.axis,B),O=h[z],L=E.slice(0),ee=Le.size(L),te=pA("input",w,B),T=pA("indicesInput",v,E.length),le=$A("output",w,L.length),de=[{type:12,data:ee},{type:6,data:O},{type:12,data:z}];return de.push(..._A(h,E,L)),{name:"GatherElements",shaderCache:{inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:L,dataType:i[0].dataType}],dispatchGroup:{x:Math.ceil(ee/64)},programUniforms:de}),getShaderSource:we=>`
      ${we.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(te,T,le)}
      ${we.mainStart()}
      ${we.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

      let outputIndices = ${le.offsetToIndices("global_idx")};

      var idx = ${T.getByOffset("global_idx")};
      if (idx < 0) {
        idx = idx + uniforms.axisDimLimit;
      }
      var inputIndices = ${te.type.indices}(outputIndices);
      ${te.indicesSet("inputIndices","uniforms.axis","u32(idx)")};
      let value = ${te.getByIndices("inputIndices")};

      ${le.setByOffset("global_idx","value")};
  }`}},F2=i=>Ze({axis:i.axis}),wo=(i,u)=>{let h=i.inputs;Io(h),i.compute(z2(i.inputs,u))}}),qe=Pe(()=>{Mt(),St(),Yt(),S2=i=>{if(!i)throw new Error("Input is missing");if(i.length<2||i.length>3)throw new Error("Invaid input number.");if(i.length===3&&i[2].dims.length>2)throw new Error("Invalid input shape of C");if(i[0].dataType!==i[1].dataType||i.length===3&&i[0].dataType!==i[2].dataType)throw new Error("Input types are mismatched")},N2=(i,u)=>{let h=i[0].dims.slice(),w=i[1].dims.slice(),[B,E,v]=vA.getShapeOfGemmResult(h,u.transA,w,u.transB,i.length===3?i[2].dims:void 0),z=[B,E];if(!z)throw new Error("Can't use gemm on the given tensors");let O=16,L=Math.ceil(E/O),ee=Math.ceil(B/O),te=(Le.size(z),[{type:12,data:L},{type:12,data:B},{type:12,data:E},{type:12,data:v},{type:1,data:u.alpha},{type:1,data:u.beta}]),T=["type","type"];return i.length===3&&(te.push(..._A(i[2].dims)),T.push("rank")),te.push(..._A(z)),{name:"GemmShared",shaderCache:{hint:`${u.cacheKey}`,inputDependencies:T},getRunData:()=>({outputs:[{dims:z,dataType:i[0].dataType}],dispatchGroup:{x:L*ee},programUniforms:te}),getShaderSource:le=>{let de=pA("a",i[0].dataType,i[0].dims),we=pA("b",i[1].dataType,i[1].dims),be=null,Me=[de,we];i.length===3&&(be=pA("c",i[2].dataType,i[2].dims.length),Me.push(be));let Fe=$A("output",i[0].dataType,z.length);Me.push(Fe);let We="",$e="";u.transA&&u.transB?($e=`
      var col = tile_row_start + local_id.x;
      var row = k_start + local_id.y;
      if (col < uniforms.M && row < uniforms.K) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.M + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${de.type.value}(0);
      }

      col = k_start + local_id.x;
      row = tile_col_start + local_id.y;
      if (col < uniforms.K && row < uniforms.N) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.K + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${we.type.value}(0);
      }
      `,We="value += tile_a[k][local_id.y] * tile_b[local_id.x][k];"):u.transA&&!u.transB?($e=`
      var col = tile_row_start + local_id.x;
      var row = k_start + local_id.y;
      if (col < uniforms.M && row < uniforms.K) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.M + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${de.type.value}(0);
      }

      col = tile_col_start + local_id.x;
      row = k_start + local_id.y;
      if (col < uniforms.N && row < uniforms.K) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.N + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${we.type.value}(0);
      }
      `,We="value += tile_a[k][local_id.y] * tile_b[k][local_id.x];"):!u.transA&&u.transB?($e=`
      var col = k_start + local_id.x;
      var row = tile_row_start + local_id.y;
      if (col < uniforms.K && row < uniforms.M) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.K + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${de.type.value}(0);
      }

      col = k_start + local_id.x;
      row = tile_col_start + local_id.y;
      if (col < uniforms.K && row < uniforms.N) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.K + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${we.type.value}(0);
      }
      `,We="value += tile_a[local_id.y][k] * tile_b[local_id.x][k];"):!u.transA&&!u.transB&&($e=`
      var col = k_start + local_id.x;
      var row = tile_row_start + local_id.y;
      if (col < uniforms.K && row < uniforms.M) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.K + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${de.type.value}(0);
      }

      col = tile_col_start + local_id.x;
      row = k_start + local_id.y;
      if (col < uniforms.N && row < uniforms.K) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.N + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${we.type.value}(0);
      }
      `,We="value += tile_a[local_id.y][k] * tile_b[k][local_id.x];");let eA=u.alpha===1?"":"value *= uniforms.alpha;";return`
  ${le.registerUniforms([{name:"num_tile_n",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}]).declareVariables(...Me)}
  var<workgroup> tile_a: array<array<${de.type.storage}, 16>, 16>;
  var<workgroup> tile_b: array<array<${we.type.storage}, 16>, 16>;
  ${le.mainStart([O,O,1])}
    let tile_col_start = (workgroup_index % uniforms.num_tile_n) * 16;
    let tile_row_start = (workgroup_index / uniforms.num_tile_n) * 16;
    let num_tiles = (uniforms.K - 1) / 16 + 1;
    var k_start = 0u;
    var value = ${Fe.type.value}(0);
    for (var t: u32 = 0u; t < num_tiles; t++) {
      ${$e}
      k_start = k_start + 16;
      workgroupBarrier();

      for (var k: u32 = 0u; k < 16; k++) {
        ${We}
      }
      workgroupBarrier();
    }

    ${eA}
    let m = tile_row_start + local_id.y;
    let n = tile_col_start + local_id.x;
    ${be!=null?`let cOffset = ${be.broadcastedIndicesToOffset("vec2(m, n)",Fe)}; value += ${Fe.type.value}(uniforms.beta) * ${be.getByOffset("cOffset")};`:""}
    if (m < uniforms.M && n < uniforms.N) {
      output[m * uniforms.N + n] = value;
    }
  }`}}},ko=i=>({transA:i.transA,transB:i.transB,alpha:i.alpha,beta:i.beta,cacheKey:`${i.transA};${i.transB};${i.alpha===1}`}),O2=(i,u)=>{S2(i.inputs),i.compute(N2(i.inputs,u))}}),lA=Pe(()=>{Mt(),St(),Zr(),Yt(),[Ja,_a,ri,ni]=[0,1,2,3],L2=i=>{if(i[0].dims.length!==4)throw new Error("only 4-D tensor is supported.");if(i[0].dims.length!==i[1].dims.length)throw new Error("input dimensions must be equal to grid dimensions");if(i[0].dims.length-2!==i[1].dims[i[1].dims.length-1])throw new Error("last dimension of grid must be equal to "+(i[0].dims.length-2));if(i[0].dims[0]!==i[1].dims[0])throw new Error("grid batch size must match input batch size")},Y2=i=>`
  fn gs_bicubic_interpolate(p: mat4x4<${i}>, x: f32, y: f32) -> ${i} {
    var v: vec4<f32>;
    var coeffs = gs_get_cubic_coeffs(x);
    for (var i = 0; i < 4; i++) {
      v[i] = coeffs[0] * p[i][0] + coeffs[1] * p[i][1] + coeffs[2] * p[i][2] + coeffs[3] * p[i][3];
    }
    coeffs = gs_get_cubic_coeffs(y);
    let pixel = ${i}(coeffs[0] * v[0] + coeffs[1] * v[1] + coeffs[2] * v[2] + coeffs[3] * v[3]);
    return pixel;
  }
`,xo=i=>`
  fn gs_denormalize(n: f32, length: i32) -> f32 {
    ${i.alignCorners===0?`
    // alignCorners: false => [-1, 1] to [-0.5, length - 0.5]
    return ((n + 1.0) * f32(length) - 1.0) / 2.0;
    `:`
    // alignCorners: true => [-1, 1] to [0, length - 1]
    return (n + 1.0) / 2.0 * (f32(length - 1));
    `}
  }
`,H2=i=>`
  ${i.paddingMode==="reflection"?`
      fn gs_reflect(x: i32, x_min: f32, x_max: f32) -> u32 {
        var dx = 0.0;
        var fx = f32(x);
        let range = x_max - x_min;
        if (fx < x_min) {
          dx = x_min - fx;
          let n = u32(dx / range);
          let r = dx - f32(n) * range;
          if (n % 2 == 0) {
            fx = x_min + r;
          } else {
            fx = x_max - r;
          }
        } else if (fx > x_max) {
          dx = fx - x_max;
          let n = u32(dx / range);
          let r = dx - f32(n) * range;
          if (n % 2 == 0) {
            fx = x_max - r;
          } else {
            fx = x_min + r;
          }
        }
        return u32(fx);
      }`:""}
`,R2=(i,u,h)=>`
  fn pixel_at_grid(r: i32, c: i32, H: i32, W: i32, batch: u32, channel: u32, border: vec4<f32>) -> ${u} {
     var pixel = ${u}(0);
     var indices = vec4<u32>(0);
     indices[${Ja}] = batch;
     indices[${_a}] = channel;`+(()=>{switch(h.paddingMode){case"zeros":return`
          if (r >= 0 && r < H && c >=0 && c < W) {
            indices[${ri}] = u32(r);
            indices[${ni}] = u32(c);
          }
        `;case"border":return`
          indices[${ri}] = u32(clamp(r, 0, H - 1));
          indices[${ni}] = u32(clamp(c, 0, W - 1));
        `;case"reflection":return`
          indices[${ri}] = gs_reflect(r, border[1], border[3]);
          indices[${ni}] = gs_reflect(c, border[0], border[2]);
        `;default:throw new Error(`padding mode ${h.paddingMode} is not supported`)}})()+`
    return ${i.getByIndices("indices")};
  }
`,W2=(i,u,h)=>(()=>{switch(h.mode){case"nearest":return`
          let result = pixel_at_grid(i32(round(y)), i32(round(x)), H_in, W_in, indices[${Ja}], indices[${_a}], border);
        `;case"bilinear":return`
          let x1 = i32(floor(x));
          let y1 = i32(floor(y));
          let x2 = x1 + 1;
          let y2 = y1 + 1;

          let p11 = pixel_at_grid(y1, x1, H_in, W_in, indices[${Ja}], indices[${_a}], border);
          let p12 = pixel_at_grid(y1, x2, H_in, W_in, indices[${Ja}], indices[${_a}], border);
          let p21 = pixel_at_grid(y2, x1, H_in, W_in, indices[${Ja}], indices[${_a}], border);
          let p22 = pixel_at_grid(y2, x2, H_in, W_in, indices[${Ja}], indices[${_a}], border);

          let dx2 = ${u}(f32(x2) - x);
          let dx1 = ${u}(x - f32(x1));
          let dy2 = ${u}(f32(y2) - y);
          let dy1 = ${u}(y - f32(y1));
          let result = dy2 * (dx2 * p11 + dx1 * p12) + dy1 * (dx2 * p21 + dx1 * p22);
        `;case"bicubic":return`
          let x0 = i32(floor(x)) - 1;
          let y0 = i32(floor(y)) - 1;
          var p: mat4x4<${u}>;
          for (var h = 0; h < 4; h++) {
            for (var w = 0; w < 4; w++) {
              p[h][w] = pixel_at_grid(h + y0, w + x0, H_in, W_in, indices[${Ja}], indices[${_a}], border);
            }
          }

          let dx = x - f32(x0 + 1);
          let dy = y - f32(y0 + 1);
          let result = gs_bicubic_interpolate(p, dx, dy);
        `;default:throw new Error(`mode ${h.mode} is not supported`)}})()+`${i.setByOffset("global_idx","result")}`,V2=(i,u)=>{let h=pA("x",i[0].dataType,i[0].dims.length),w=[i[1].dims[0],i[1].dims[1],i[1].dims[2]],B=pA("grid",i[1].dataType,w.length,2),E=[i[0].dims[0],i[0].dims[1],i[1].dims[1],i[1].dims[2]];u.format==="NHWC"&&(E=[i[0].dims[0],i[1].dims[1],i[1].dims[2],i[0].dims[3]],[Ja,_a,ri,ni]=[0,3,1,2]);let v=$A("output",i[0].dataType,E.length),z=h.type.value,O=[{type:12,data:Le.size(E)},..._A(i[0].dims,w,E)];return{name:"GridSample",shaderCache:{hint:`${u.cacheKey}`,inputDependencies:["type","type"]},getRunData:L=>{let ee=Le.size(E);return{outputs:[{dims:E,dataType:L[0].dataType}],dispatchGroup:{x:Math.ceil(ee/64)},programUniforms:O}},getShaderSource:L=>`
  ${L.registerUniform("output_size","u32").declareVariables(h,B,v)}
  
  fn gs_get_cubic_coeffs(x: f32) -> vec4<f32> {
    let cubic_alpha = -0.75f;
    let x_abs = abs(x);
    var coeffs: vec4<f32>;
    coeffs[0] = (((cubic_alpha * (x_abs + 1) - 5 * cubic_alpha) * (x_abs + 1) + 8 * cubic_alpha) * (x_abs + 1) - 4 * cubic_alpha);
    coeffs[1] = (((cubic_alpha + 2) * x_abs - (cubic_alpha + 3)) * x_abs * x_abs + 1);
    coeffs[2] = (((cubic_alpha + 2) * (1 - x_abs) - (cubic_alpha + 3)) * (1 - x_abs) * (1 - x_abs) + 1);
    coeffs[3] = (((cubic_alpha * (2 - x_abs) - 5 * cubic_alpha) * (2 - x_abs) + 8 * cubic_alpha) * (2 - x_abs) - 4 * cubic_alpha);
    return coeffs;
  }

  ${Y2(z)}
  ${xo(u)}
  ${H2(u)}
  ${R2(h,z,u)}

  ${L.mainStart()}
    ${L.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let H_in = i32(uniforms.x_shape[${ri}]);
      let W_in = i32(uniforms.x_shape[${ni}]);

      ${u.alignCorners===0?`
      let x_min = -0.5;
      let x_max = f32(W_in) - 0.5;
      let y_min = -0.5;
      let y_max = f32(H_in) - 0.5;
      `:`
      let x_min = 0.0;
      let x_max = f32(W_in) - 1.0;
      let y_min = 0.0;
      let y_max = f32(H_in) - 1.0;
      `};
      let border = vec4<f32>(x_min, y_min, x_max, y_max);

      let indices = ${v.offsetToIndices("global_idx")};
      var grid_indices = vec3<u32>(indices[${Ja}], indices[${ri}], indices[${ni}]);
      let nxy = ${B.getByIndices("grid_indices")};
      var x = gs_denormalize(f32(nxy[0]), W_in);
      var y = gs_denormalize(f32(nxy[1]), H_in);

      ${W2(v,z,u)}
  }`}},j2=(i,u)=>{L2(i.inputs),i.compute(V2(i.inputs,u))},U2=i=>Ze({alignCorners:i.align_corners,mode:i.mode,paddingMode:i.padding_mode,format:i.format})}),oA=Pe(()=>{Mt(),St(),Zr(),A2(),r2(),Yt(),Os(),Rn=(i,u)=>i.length>u&&i[u].dims.length>0?i[u]:void 0,K2=(i,u)=>{let h=i[0],w=Rn(i,1),B=Rn(i,2),E=Rn(i,3),v=Rn(i,4),z=Rn(i,5),O=Rn(i,6),L=Rn(i,7);if(h.dims.length!==3&&h.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let ee,te=h.dims[0],T=h.dims[1],le=h.dims.length===3?h.dims[2]:u.numHeads*h.dims[4],de=T,we=0,be=0,Me=Math.floor(le/u.numHeads);if(O&&L&&Le.size(O.dims)&&Le.size(L.dims)){if(O.dims.length!==4)throw new Error('Input "past_key" is expected to have 4 dimensions');if(O.dims[0]!==te||O.dims[1]!==u.numHeads||O.dims[3]!==Me)throw new Error('Input "past_key" shape (batch_size, num_heads, past_sequence_length, head_size)');if(L.dims[0]!==te||L.dims[1]!==u.numHeads||L.dims[3]!==Me)throw new Error('Input "past_value" shape (batch_size, num_heads, past_sequence_length, head_size)');if(O.dims[2]!==L.dims[2])throw new Error('Input "past_key" and "past_value" shall have same dim 2 (past_sequence_length)');if(L.dims.length!==4)throw new Error('Input "past_value" is expected to have 4 dimensions');we=O.dims[2],be=O.dims[2]}else if(O&&Le.size(O.dims)||L&&Le.size(L.dims))throw new Error('Input "past_key" and "past_value" shall be both present or both absent');if(w&&Le.size(w.dims)>0){if(h.dims.length!==3)throw new Error('Input "query" is expected to have 3 dimensions when key is given');if(w.dims.length<3||w.dims.length>5)throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(h.dims[0]!==w.dims[0])throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');if(w.dims.length===3){if(w.dims[2]!==h.dims[2])throw new Error('Input "query" and "key" shall have same dim 2 (hidden_size)');ee=2,de=w.dims[1]}else if(w.dims.length===5){if(w.dims[2]!==u.numHeads||w.dims[3]!==2||w.dims[4]!==Me)throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(B)throw new Error('Expect "value" be none when "key" has packed kv format.');ee=5,de=w.dims[1]}else{if(w.dims[1]!==u.numHeads||w.dims[3]!==Me)throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');ee=0,de=w.dims[2]}}else{if(h.dims.length!==5)throw new Error('Input "query" is expected to have 5 dimensions when key is empty');if(h.dims[2]!==u.numHeads||h.dims[3]!==3)throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');ee=3}if(E&&Le.size(E.dims)>0){if(E.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimension');if(w&&w.dims.length===5&&w.dims[3]===2)throw new Error("bias is not allowed for packed kv.")}let Fe=we+de,We=0;if(v&&Le.size(v.dims)>0){We=8;let aA=v.dims;throw aA.length===1?aA[0]===te?We=1:aA[0]===3*te+2&&(We=3):aA.length===2&&aA[0]===te&&aA[1]===Fe&&(We=5),We===8?new Error('Input "key_padding_mask" shape shall be (batch_size) or (batch_size, total_sequence_length)'):new Error("Mask not supported")}let $e=!1,eA=le;if(B&&Le.size(B.dims)>0){if(B.dims.length!==3&&B.dims.length!==4)throw new Error('Input "value" is expected to have 3 or 4 dimensions');if(h.dims[0]!==B.dims[0])throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(B.dims.length===3){if(de!==B.dims[1])throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');eA=B.dims[2]}else{if(de!==B.dims[2])throw new Error('Input "key" and "value" shall have the same dim 2 (kv_sequence_length)');eA=B.dims[1]*B.dims[3],$e=!0}}if(v&&Le.size(v.dims)>0)throw new Error("Key padding mask is not supported");if(z&&Le.size(z.dims)>0){if(z.dims.length!==4)throw new Error('Input "attention_bias" is expected to have 4 dimensions');if(z.dims[0]!==te||z.dims[1]!==u.numHeads||z.dims[2]!==T||z.dims[3]!==Fe)throw new Error('Expect "attention_bias" shape (batch_size, num_heads, sequence_length, total_sequence_length)')}return{batchSize:te,sequenceLength:T,pastSequenceLength:we,kvSequenceLength:de,totalSequenceLength:Fe,maxSequenceLength:be,inputHiddenSize:0,hiddenSize:le,vHiddenSize:eA,headSize:Me,vHeadSize:Math.floor(eA/u.numHeads),numHeads:u.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:u.maskFilterValue,maskType:We,scale:u.scale,broadcastResPosBias:!1,passPastInKv:$e,qkvFormat:ee}},Z2=i=>Ze({...i}),_0=Ze({perm:[0,2,1,3]}),X2=(i,u,h,w,B,E,v)=>{let z=[w,B,E],O=Le.size(z),L=[{type:12,data:O},{type:12,data:v},{type:12,data:E}];return i.compute({name:"MultiHeadAttentionAddBias",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:z,dataType:u.dataType,gpuDataType:0}],dispatchGroup:{x:Math.ceil(O/64)},programUniforms:L}),getShaderSource:ee=>{let te=$A("qkv_with_bias",u.dataType,z),T=pA("qkv",u.dataType,z),le=pA("bias",h.dataType,z);return`
  ${ee.registerUniforms([{name:"output_size",type:"u32"},{name:"bias_offset",type:"u32"},{name:"hidden_size",type:"u32"}]).declareVariables(T,le,te)}
  ${ee.mainStart()}
    ${ee.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let bias_offset_idx = (global_idx % uniforms.hidden_size) + uniforms.bias_offset;

    qkv_with_bias[global_idx] = qkv[global_idx] + bias[bias_offset_idx];
  }`}},{inputs:[u,h],outputs:[-1]})[0]},L0=(i,u,h,w,B,E,v,z)=>{let O=E;if(v&&Le.size(v.dims)>0){if(w===1)throw new Error("AddBiasReshape is not implemented. Please export your model with packed QKV or KV");return O=X2(i,E,v,u,w,h*B,z),O=O.reshape([u,w,h,B]),h===1||w===1?O:i.compute(Qn(O,_0.perm),{inputs:[O],outputs:[-1]})[0]}return E.dims.length===3&&(O=E.reshape([u,w,h,B])),h===1||w===1?O:i.compute(Qn(O,_0.perm),{inputs:[O],outputs:[-1]})[0]},Ns=(i,u)=>{let h=K2(i.inputs,u),w=i.inputs[0],B=Rn(i.inputs,1),E=Rn(i.inputs,2),v=Rn(i.inputs,3),z=Rn(i.inputs,4),O=Rn(i.inputs,5),L=Rn(i.inputs,6),ee=Rn(i.inputs,7);if(w.dims.length===5)throw new Error("Packed QKV is not implemented");if((B==null?void 0:B.dims.length)===5)throw new Error("Packed KV is not implemented");let te=B&&E&&B.dims.length===4&&E.dims.length===4,T=L0(i,h.batchSize,h.numHeads,h.sequenceLength,h.headSize,w,v,0);if(te)return wa(i,T,B,E,z,void 0,L,ee,O,h);if(!B||!E)throw new Error("key and value must be provided");let le=L0(i,h.batchSize,h.numHeads,h.kvSequenceLength,h.headSize,B,v,h.hiddenSize),de=L0(i,h.batchSize,h.numHeads,h.kvSequenceLength,h.vHeadSize,E,v,2*h.hiddenSize);wa(i,T,le,de,z,void 0,L,ee,O,h)}}),wA=Pe(()=>{Mt(),St(),Zr(),Yt(),q2=i=>{if(!i||i.length<1)throw new Error("too few inputs")},J2=(i,u)=>{let h=[],w=u.numOutputs;return i[1].dims[0]>0&&(i[1].getBigInt64Array().forEach(B=>h.push(Number(B))),w=h.length),Ze({numOutputs:w,axis:u.axis,splitSizes:h})},_2=i=>`
fn calculateOutputIndex(index: u32) -> u32 {
    for (var i: u32 = 0u; i < ${i}u; i += 1u ) {
    if (index < ${it("uniforms.size_in_split_axis","i",i)}) {
        return i;
    }
    }
    return ${i}u;
}`,$2=i=>{let u=i.length,h=[];for(let w=0;w<u;++w){let B=i[w].setByIndices("indices","input[global_idx]");u===1?h.push(B):w===0?h.push(`if (output_number == ${w}u) { ${B} }`):w===u-1?h.push(`else { ${B} }`):h.push(`else if (output_number == ${w}) { ${B} }`)}return`
      fn writeBufferData(output_number: u32, indices: ${i[0].type.indices}, global_idx: u32) {
        ${h.join(`
`)}
      }`},$0=(i,u)=>{let h=i[0].dims,w=Le.size(h),B=i[0].dataType,E=Le.normalizeAxis(u.axis,h.length),v=new Array(u.numOutputs),z=pA("input",B,h.length),O=new Array(u.numOutputs),L=[],ee=[],te=0,T=[{type:12,data:w}];for(let le=0;le<u.numOutputs;le++){te+=u.splitSizes[le],O[le]=te;let de=h.slice();de[E]=u.splitSizes[le],ee.push(de),v[le]=$A(`output${le}`,B,de.length),L.push({dims:ee[le],dataType:i[0].dataType})}return T.push({type:12,data:O},..._A(h,...ee)),{name:"Split",shaderCache:{hint:u.cacheKey,inputDependencies:["rank"]},getShaderSource:le=>`
  ${le.registerUniform("input_size","u32").registerUniform("size_in_split_axis","u32",O.length).declareVariables(z,...v)}
  ${_2(O.length)}
  ${$2(v)}

  ${le.mainStart()}
    ${le.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.input_size")}

    var indices = ${z.offsetToIndices("global_idx")};
    var index = ${z.indicesGet("indices",E)};
    let output_number = calculateOutputIndex(index);
    if (output_number != 0) {
      index -= ${it("uniforms.size_in_split_axis","output_number - 1u",O.length)};
      ${z.indicesSet("indices",E,"index")};
    }
    writeBufferData(output_number, indices, global_idx);
  }`,getRunData:()=>({outputs:L,dispatchGroup:{x:Math.ceil(w/64)},programUniforms:T})}},el=(i,u)=>{q2(i.inputs);let h=i.inputs.length===1?u:J2(i.inputs,u);i.compute($0(i.inputs,h),{inputs:[0]})},Al=i=>{let u=i.axis,h=i.splitSizes,w=i.numOutputs<0?h.length:i.numOutputs;if(w!==h.length)throw new Error("numOutputs and splitSizes lengh must be equal");return Ze({axis:u,numOutputs:w,splitSizes:h})}}),KA=Pe(()=>{Zr(),r2(),oA(),wA(),Os(),tl=(i,u)=>{if(u.doRotary)throw new Error("GroupQuerryAttention do_rotary attribute is not supported");if(u.doRotary&&i.length<=7)throw new Error("cos_cache and sin_cache inputs are required if do_rotary is specified");let h=i[0],w=i[1],B=i[2],E=i[3],v=i[4];if(u.localWindowSize!==-1)throw new Error("Local attention is not supported");if(u.softcap!==0)throw new Error("Softcap is not supported");if(u.rotaryInterleaved!==0)throw new Error("Rotary interleaved is not supported");if(u.smoothSoftmax)throw new Error("Smooth softmax is not supported");if(h.dims.length!==3&&h.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let z=h.dims[0],O=h.dims[1],L=h.dims.length===3?h.dims[2]:u.numHeads*h.dims[4],ee=O,te=0,T=!w||w.dims.length===0,le=Math.floor(T?L/(u.numHeads+2*u.kvNumHeads):L/u.numHeads);T&&(L=le*u.numHeads);let de=E&&E.dims.length!==0,we=v&&v.dims.length!==0;if(de&&E.dims.length===4&&E.dims[0]===z&&E.dims[1]!==u.kvNumHeads&&E.dims[2]===u.kvNumHeads&&E.dims[3]===le)throw new Error("BSNH pastKey/pastValue is not supported");if(de&&we){if(E.dims.length!==4)throw new Error('Input "past_key" is expected to have 4 dimensions');if(v.dims.length!==4)throw new Error('Input "past_value" is expected to have 4 dimensions');te=E.dims[2]}else if(de||we)throw new Error('Input "past_key" and "past_value" shall be both present or both absent');let be=1;if(w&&w.dims.length>0){if(h.dims.length!==3)throw new Error('Input "query" is expected to have 3 dimensions when key is given');if(w.dims.length<3||w.dims.length>5)throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(h.dims[0]!==w.dims[0])throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');if(w.dims.length===3){if(h.dims[2]%w.dims[2]!=0)throw new Error('Dimension 2 of "query" should be a multiple of "key"');ee=w.dims[1]}else if(w.dims.length===5){if(w.dims[2]!==u.numHeads||w.dims[3]!==2||w.dims[4]!==le)throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(B)throw new Error('Expect "value" be none when "key" has packed kv format.');ee=w.dims[1]}else{if(w.dims[1]!==u.numHeads||w.dims[3]!==le)throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');ee=w.dims[2]}}else{if(h.dims.length!==3&&h.dims.length!==5)throw new Error('Input "query" is expected to have 3 or 5 dimensions when key is empty');if(h.dims.length===5&&(h.dims[2]!==u.numHeads||h.dims[3]!==3))throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');be=3}let Me=!1,Fe=u.kvNumHeads?le*u.kvNumHeads:L;if(B&&B.dims.length>0){if(B.dims.length!==3&&B.dims.length!==4)throw new Error('Input "value" is expected to have 3 or 4 dimensions');if(h.dims[0]!==B.dims[0])throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(B.dims.length===3){if(ee!==B.dims[1])throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');Fe=B.dims[2]}else{if(ee!==B.dims[2])throw new Error('Input "past_key" and "past_value" shall have the same dim 2 (kv_sequence_length)');Fe=B.dims[1]*B.dims[3],Me=!0}}let We=i.length>4?i[5]:void 0;if(We&&We.dims.length!==1&&We.dims[0]!==z)throw new Error('Input "seqlens" is expected to have 1 dimension and the same dim 0 as batch_size');return{batchSize:z,sequenceLength:O,pastSequenceLength:te,kvSequenceLength:ee,totalSequenceLength:-1,maxSequenceLength:-1,inputHiddenSize:0,hiddenSize:L,vHiddenSize:Fe,headSize:le,vHeadSize:Math.floor(Fe/u.kvNumHeads),numHeads:u.numHeads,kvNumHeads:u.kvNumHeads,nReps:u.numHeads/u.kvNumHeads,pastPresentShareBuffer:!1,maskType:0,scale:u.scale,broadcastResPosBias:!1,passPastInKv:Me,qkvFormat:be}},rl=Ze({perm:[0,2,1,3]}),Y0=(i,u,h)=>{let w=u,B=h.kvNumHeads;return u.dims.length===3&&h.kvSequenceLength!==0&&(w=u.reshape([h.batchSize,h.kvSequenceLength,B,h.headSize]),w=i.compute(Qn(w,rl.perm),{inputs:[w],outputs:[-1]})[0]),w},nl=(i,u)=>{var be;let h=tl(i.inputs,u);if(i.inputs[0].dims.length===5)throw new Error("Packed QKV is not implemented");if(((be=i.inputs[1])==null?void 0:be.dims.length)===5)throw new Error("Packed KV is not implemented");let w=i.inputs[0],B=i.inputs[1]&&i.inputs[1].dims.length>0?i.inputs[1]:void 0,E=i.inputs[2]&&i.inputs[2].dims.length>0?i.inputs[2]:void 0,v=i.inputs[3]&&i.inputs[3].dims.length!==0?i.inputs[3]:void 0,z=i.inputs[4]&&i.inputs[4].dims.length!==0?i.inputs[4]:void 0,O=i.inputs.length>4?i.inputs[5]:void 0,L=i.inputs.length>5?i.inputs[6]:void 0,ee=h.kvNumHeads?h.kvNumHeads:h.numHeads,te=Ze({axis:2,numOutputs:3,splitSizes:[h.numHeads*h.headSize,ee*h.headSize,ee*h.headSize]}),[T,le,de]=B||E?[w,B,E]:i.compute($0([w],te),{inputs:[w],outputs:[-1,-1,-1]}),we=L0(i,h.batchSize,h.numHeads,h.sequenceLength,h.headSize,T,void 0,0);wa(i,we,Y0(i,le,h),Y0(i,de,h),void 0,void 0,v,z,void 0,h,O,L)}}),ZA=Pe(()=>{Mt(),St(),Os(),Yt(),Bo=(i,u,h,w,B,E,v,z)=>{let O=Zt(E),L=O===1?"f32":`vec${O}f`,ee=O===1?"vec2f":`mat2x${O}f`,te=B*v,T=64;te===1&&(T=256);let le=[B,v,E/O],de=[B,v,2],we=[];return we.push(..._A(le,de)),i.compute({name:"InstanceNormComputeChannelScaleShift",shaderCache:{hint:`${O};${z};${T}`,inputDependencies:["rank","type","type"]},getRunData:()=>({outputs:[{dims:de,dataType:1}],dispatchGroup:{x:te},programUniforms:we}),getShaderSource:be=>{let Me=pA("x",u.dataType,3,O),Fe=[Me,pA("scale",h.dataType,h.dims),pA("bias",w.dataType,w.dims),$A("output",1,3,2)];return`
  var<workgroup> workgroup_shared : array<${ee}, ${T}>;
  const workgroup_size = ${T}u;
  ${be.declareVariables(...Fe)}
  ${be.mainStart(T)}
    let batch = workgroup_index / uniforms.x_shape[1];
    let channel = workgroup_index % uniforms.x_shape[1];
    let hight = uniforms.x_shape[2];
    // initialize workgroup memory
    var sum = ${L}(0);
    var squared_sum = ${L}(0);
    for (var h = local_idx; h < hight; h += workgroup_size) {
      let value = ${L}(${Me.get("batch","channel","h")});
      sum += value;
      squared_sum += value * value;
    }
    workgroup_shared[local_idx] = ${ee}(sum, squared_sum);
    workgroupBarrier();

    for (var currSize = workgroup_size >> 1;  currSize > 0; currSize = currSize >> 1) {
      if (local_idx < currSize) {
        workgroup_shared[local_idx] = workgroup_shared[local_idx] + workgroup_shared[local_idx + currSize];
      }
      workgroupBarrier();
    }
    if (local_idx == 0) {
      let sum_final = ${ir("workgroup_shared[0][0]",O)} / f32(hight * ${O});
      let squared_sum_final = ${ir("workgroup_shared[0][1]",O)} / f32(hight * ${O});

      let inv_std_dev = inverseSqrt(squared_sum_final - sum_final * sum_final + f32(${z}));
      let channel_scale = inv_std_dev * f32(scale[channel]);
      let channel_shift = f32(bias[channel]) - sum_final * channel_scale;
      output[workgroup_index] = vec2f(channel_scale, channel_shift);
    }
  }`}},{inputs:[u,h,w],outputs:[-1]})[0]},al=(i,u,h)=>{let w=u[0].dims,B=w,E=w[0],v=w[1],z=Le.sizeFromDimension(w,2),O=Zt(z),L=Le.size(B)/O,ee=Bo(i,u[0],u[1],u[2],E,z,v,h.epsilon),te=[E,v,z/O],T=[E,v];i.compute({name:"InstanceNormalization",shaderCache:{hint:`${O}`,inputDependencies:["type","none"]},getRunData:()=>({outputs:[{dims:B,dataType:u[0].dataType}],dispatchGroup:{x:Math.ceil(L/64)},programUniforms:[{type:12,data:L},..._A(te,T,te)]}),getShaderSource:le=>{let de=pA("x",u[0].dataType,te.length,O),we=pA("scale_shift",1,T.length,2),be=$A("output",u[0].dataType,te.length,O),Me=[de,we,be];return`
  ${le.registerUniform("output_size","u32").declareVariables(...Me)}
  ${le.mainStart()}
  ${le.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let outputIndices = ${be.offsetToIndices("global_idx")};
      let batch = outputIndices[0];
      let channel = outputIndices[1];
      let scale_shift = ${we.getByIndices("vec2<u32>(batch, channel)")};
      let value = ${de.getByOffset("global_idx")} * ${be.type.value}(scale_shift.x) + ${be.type.value}(scale_shift.y);
      ${be.setByOffset("global_idx","value")};
  }`}},{inputs:[u[0],ee]})},H0=(i,u,h)=>{let w=u[0].dims,B=w,E=w[0],v=w[w.length-1],z=Le.sizeFromDimension(w,1)/v,O=Zt(v),L=Le.size(B)/O,ee=[{type:12,data:z},{type:12,data:Math.floor(v/O)}],te=!1,T=[0,w.length-1];for(let we=0;we<w.length-2;we++)te=te||w[we+1]!==1,T.push(we+1);te=te&&w[w.length-1]!==1;let le=te?i.compute(Qn(i.inputs[0],T),{inputs:[i.inputs[0]],outputs:[-1]})[0]:i.inputs[0].reshape(Array.from({length:w.length},(we,be)=>w[T[be]])),de=Bo(i,le,u[1],u[2],E,z,v,h.epsilon);i.compute({name:"InstanceNormalizationNHWC",shaderCache:{hint:`${O}`,inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:B,dataType:u[0].dataType}],dispatchGroup:{x:Math.ceil(L/64)},programUniforms:ee}),getShaderSource:we=>{let be=zt(u[0].dataType),Me=O===1?"vec2f":`mat${O}x2f`,Fe=eA=>{let aA=eA===0?"x":"y",zA=O===1?"f32":`vec${O}f`;switch(O){case 1:return`${be}(${zA}(scale.${aA}))`;case 2:return`vec2<${be}>(${zA}(scale[0].${aA}, scale[1].${aA}))`;case 4:return`vec4<${be}>(${zA}(scale[0].${aA}, scale[1].${aA}, scale[2].${aA}, scale[3].${aA}))`;default:throw new Error(`Not supported compoents ${O}`)}},We=pA("input",u[0].dataType,u[0].dims,O),$e=$A("output",u[0].dataType,B,O);return`
  @group(0) @binding(0) var<storage, read> input : array<${We.type.storage}>;
  @group(0) @binding(1) var<storage, read> scale_input : array<${Me}>;
  @group(0) @binding(2) var<storage, read_write> output : array<${$e.type.storage}>;
  struct Uniforms {H: u32, C : u32};
  @group(0) @binding(3) var<uniform> uniforms: Uniforms;

  ${we.mainStart()}
    let current_image_number = global_idx / (uniforms.C * uniforms.H);
    let current_channel_number = global_idx % uniforms.C;

    let scale_offset = current_image_number * uniforms.C + current_channel_number;
    let scale = scale_input[scale_offset];
    output[global_idx] = fma(input[global_idx], ${Fe(0)}, ${Fe(1)});
  }`}},{inputs:[u[0],de]})},sl=(i,u)=>{u.format==="NHWC"?H0(i,i.inputs,u):al(i,i.inputs,u)}}),WA=Pe(()=>{Mt(),St(),Yt(),il=i=>{if(!i||i.length<2)throw new Error("layerNorm requires at least 2 inputs.")},ol=(i,u,h)=>{let w=u.simplified,B=i[0].dims,E=i[1],v=!w&&i[2],z=B,O=Le.normalizeAxis(u.axis,B.length),L=Le.sizeToDimension(B,O),ee=Le.sizeFromDimension(B,O),te=Le.size(E.dims),T=v?Le.size(v.dims):0;if(te!==ee||v&&T!==ee)throw new Error(`Size of X.shape()[axis:] == ${ee}.
       Size of scale and bias (if provided) must match this.
       Got scale size of ${te} and bias size of ${T}`);let le=[];for(let $e=0;$e<B.length;++$e)$e<O?le.push(B[$e]):le.push(1);let de=Zt(ee),we=["type","type"],be=[{type:12,data:L},{type:1,data:ee},{type:12,data:Math.floor(ee/de)},{type:1,data:u.epsilon}];v&&we.push("type");let Me=h>1,Fe=h>2,We=[{dims:z,dataType:i[0].dataType}];return Me&&We.push({dims:le,dataType:1}),Fe&&We.push({dims:le,dataType:1}),{name:"LayerNormalization",shaderCache:{hint:`${de};${h};${w}`,inputDependencies:we},getRunData:()=>({outputs:We,dispatchGroup:{x:Math.ceil(L/64)},programUniforms:be}),getShaderSource:$e=>{let eA=zt(i[0].dataType),aA=[pA("x",i[0].dataType,i[0].dims,de),pA("scale",E.dataType,E.dims,de)];return v&&aA.push(pA("bias",v.dataType,v.dims,de)),aA.push($A("output",i[0].dataType,z,de)),Me&&aA.push($A("mean_data_output",1,le)),Fe&&aA.push($A("inv_std_output",1,le)),`
  ${$e.registerUniforms([{name:"norm_count",type:"u32"},{name:"norm_size",type:"f32"},{name:"norm_size_vectorized",type:"u32"},{name:"epsilon",type:"f32"}]).declareVariables(...aA)}
  ${$e.mainStart()}
    ${$e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.norm_count")}
    let offset = global_idx * uniforms.norm_size_vectorized;
    var mean_vector = ${Bn("f32",de)};
    var mean_square_vector = ${Bn("f32",de)};

    for (var h: u32 = 0u; h < uniforms.norm_size_vectorized; h++) {
      let value = ${hn(eA,de,"x[h + offset]")};
      mean_vector += value;
      mean_square_vector += value * value;
    }
    let mean = ${ir("mean_vector",de)} / uniforms.norm_size;
    let inv_std_dev = inverseSqrt(${ir("mean_square_vector",de)} / uniforms.norm_size ${w?"":"- mean * mean"} + uniforms.epsilon);

    for (var j: u32 = 0; j < uniforms.norm_size_vectorized; j++) {
      let f32input = ${hn(eA,de,"x[j + offset]")};
      let f32scale = ${hn(eA,de,"scale[j]")};
      output[j + offset] = ${aA[0].type.value}((f32input ${w?"":"- mean"}) * inv_std_dev * f32scale
        ${v?`+ ${hn(eA,de,"bias[j]")}`:""}
      );
    }

    ${Me?"mean_data_output[global_idx] = mean":""};
    ${Fe?"inv_std_output[global_idx] = inv_std_dev":""};
  }`}}},ll=(i,u)=>{il(i.inputs),i.compute(ol(i.inputs,u,i.outputCount))}}),rt=Pe(()=>{St(),s2(),i2(),eo=i=>{if(!i||i.length!==2)throw new Error("MatMul requires 2 inputs.");if(i[0].dims[i[0].dims.length-1]!==i[1].dims[i[1].dims.length-2])throw new Error("shared dimension does not match.")},cl=i=>{eo(i.inputs);let u=PA.calcShape(i.inputs[0].dims,i.inputs[1].dims,!0);if(!u)throw new Error("Can't use matmul on the given tensors");let h=u[u.length-1],w=i.inputs[0].dims[i.inputs[0].dims.length-1];if(h<8&&w<8)i.compute(zs(i.inputs,{activation:""},u));else{let B=u[u.length-2],E=Le.size(i.inputs[0].dims.slice(0,-2)),v=Le.size(i.inputs[1].dims.slice(0,-2));if(E!==1&&B===1&&v===1){let z=[1,E,h],O=[i.inputs[0].reshape([1,E,w]),i.inputs[1].reshape([1,w,h])];i.compute(A(O,{activation:""},u,z),{inputs:O})}else i.compute(A(i.inputs,{activation:""},u))}}}),dt=Pe(()=>{Mt(),St(),Zr(),Yt(),gl=(i,u)=>{if(i.length<3||i.length>4)throw new Error("MatMulNBits requires 3 or 4 inputs");let h=i[0],w=h.dims.length;if(h.dims[w-1]!==u.k)throw new Error("The last dim of input shape does not match the k value");let B=Math.floor((u.k+u.blockSize-1)/u.blockSize),E=u.blockSize/8*u.bits,v=i[1];if(!Le.areEqual(v.dims,[u.n,B,E]))throw new Error("The second inputs must be 3D tensor with shape N X nBlocksPerCol X blobSize");let z=i[2].dims;if(Le.size(z)!==u.n*B)throw new Error("scales input size error.");if(i.length===4){let O=i[3].dims,L=u.bits>4?u.n*B:u.n*Math.floor((B+1)/2);if(Le.size(O)!==L)throw new Error("zeroPoints input size error.")}},ul=(i,u)=>{let h=i[0].dims,w=h.length,B=h[w-2],E=u.k,v=u.n,z=h.slice(0,w-2),O=Le.size(z),L=i[1].dims[2]/4,ee=i[0].dataType,te=Zt(u.k),T=Zt(L),le=Zt(v),de=z.concat([B,v]),we=B>1&&v/le%2==0?2:1,be=Le.size(de)/le/we,Me=64,Fe=[],We=[O,B,E/te],$e=Le.convertShape(i[1].dims).slice();$e.splice(-1,1,L/T),Fe.push(..._A(We)),Fe.push(..._A($e)),Fe.push(..._A(i[2].dims)),i.length===4&&Fe.push(..._A(Le.convertShape(i[3].dims)));let eA=[O,B,v/le];return Fe.push(..._A(eA)),{name:"MatMulNBits",shaderCache:{hint:`${u.blockSize};${u.bits};${te};${T};${le};${we};64`,inputDependencies:Array(i.length).fill("rank")},getRunData:()=>({outputs:[{dims:de,dataType:ee}],dispatchGroup:{x:be},programUniforms:Fe}),getShaderSource:aA=>{let zA=We.length,jA=pA("a",i[0].dataType,zA,te),ht=pA("b",12,$e.length,T),mt=pA("scales",i[2].dataType,i[2].dims.length),Jt=[jA,ht,mt],Ct=i.length===4?pA("zero_points",12,i[3].dims.length):void 0;Ct&&Jt.push(Ct);let Pt=eA.length,Qt=$A("output",i[0].dataType,Pt,le),iA=zt(i[0].dataType),gt=(()=>{switch(te){case 1:return`array<${iA}, 8>`;case 2:return`mat4x2<${iA}>`;case 4:return`mat2x4<${iA}>`;default:throw new Error(`${te}-component is not supported.`)}})();return`
        var<workgroup> workgroup_shared: array<${Qt.type.value}, ${we*Me}>;
        ${aA.declareVariables(...Jt,Qt)}
        ${aA.mainStart([Me,1,1])}
          let output_indices = ${Qt.offsetToIndices(`(global_idx / 64) * ${we}`)};
          let col = output_indices[2];
          let row = output_indices[1];
          let batch = output_indices[0];
          let nBlocksPerCol = uniforms.b_shape[1];

          for (var block = local_id.x; block < nBlocksPerCol; block += 64) {
            //process one block
            var word_offset: u32 = block * ${u.blockSize/te};
            ${(()=>{let at=`
            var col_index = col * ${le};
            ${Ct?`
            let zero_point_bytes_per_col = (nBlocksPerCol + 1) / 2;
            var zero_point_byte_count: u32;
            var zero_point_word_index: u32;
            var zero_point_byte_offset: u32;
            let zero_point_nibble_offset: u32 = block & 0x1u;
            var zero_point_bits_offset: u32;
            var zero_point_word: u32;`:`
            // The default zero point is 8 for unsigned 4-bit quantization.
            let zero_point = ${iA}(8);`}
            `;for(let ot=0;ot<le*we;ot++)at+=`
            let scale${ot} = ${mt.getByOffset("col_index * nBlocksPerCol + block")};
            ${Ct?`
            zero_point_byte_count = col_index * zero_point_bytes_per_col + (block >> 0x1u);
            zero_point_word_index = zero_point_byte_count >> 0x2u;
            zero_point_byte_offset = zero_point_byte_count & 0x3u;
            zero_point_bits_offset = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);
            zero_point_word = ${Ct.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;
            let zero_point${ot} = ${iA}((zero_point_word) & 0xFu);`:""}
            col_index += 1;`;return at})()}
            for (var word: u32 = 0; word < ${L}; word += ${T}) {
              ${(()=>{let at=`col_index = col * ${le};`;for(let ot=0;ot<le*we;ot++)at+=`
            let b${ot}_data = ${ht.getByIndices(`${ht.type.indices}(col_index, block, word)`)};
            col_index += 1;`;return at+=`
            var b_value: u32;
            let b_mask: u32 = 0x0F0F0F0Fu;
            var b_value_lower: vec4<u32>;
            var b_value_upper: vec4<u32>;
            var b_quantized_values: ${gt};
            var b_dequantized_values: ${gt};`,at})()}
              for (var i: u32 = 0; i < ${T}; i++) {
                ${(()=>{let at=`
          // reuse a data
            var input_offset = ${jA.indicesToOffset(`${jA.type.indices}(batch, row, word_offset)`)};
            var a_data: ${gt};
            for (var j: u32 = 0; j < ${8/te}; j++) {
              a_data[j] = ${jA.getByOffset("input_offset")};
              input_offset++;
            }
          `;for(let ot=0;ot<le*we;ot++)at+=`
            b_value = ${T===1?`b${ot}_data`:`b${ot}_data[i]`};
            b_value_lower = unpack4xU8(b_value & b_mask);
            b_value_upper = unpack4xU8((b_value >> 4) & b_mask);
            b_quantized_values = ${gt}(${Array.from({length:4},(sr,dn)=>`${iA}(b_value_lower[${dn}]), ${iA}(b_value_upper[${dn}])`).join(", ")});
            b_dequantized_values = ${te===1?`${gt}(${Array.from({length:8},(sr,dn)=>`(b_quantized_values[${dn}] - ${Ct?`zero_point${ot}`:"zero_point"}) * scale${ot}`).join(", ")});`:`(b_quantized_values - ${gt}(${Array(8).fill(Ct?`zero_point${ot}`:"zero_point").join(",")})) * scale${ot};`};
            workgroup_shared[local_id.x * ${we} + ${Math.floor(ot/le)}]${le>1?`[${ot%le}]`:""} += ${Array.from({length:8/te},(sr,dn)=>te===1?`a_data[${dn}] * b_dequantized_values[${dn}]`:`dot(a_data[${dn}], b_dequantized_values[${dn}])`).join(" + ")};
          `;return at})()}
                word_offset += ${8/te};
              }
            }
          }
          workgroupBarrier();

          if (local_id.x < ${we}) {
            var output_value: ${Qt.type.value} = ${Qt.type.value}(0);
            var workgroup_shared_offset: u32 = local_id.x;
            for (var b: u32 = 0u; b < 64u; b++) {
              output_value += workgroup_shared[workgroup_shared_offset];
              workgroup_shared_offset += ${we};
            }
            ${Qt.setByIndices(`${Qt.type.indices}(batch, row, col + local_id.x)`,"output_value")};
          }
        }`}}},T1=(i,u)=>{let h=i[0].dims,w=h.length,B=h[w-2],E=u.k,v=u.n,z=h.slice(0,w-2),O=Le.size(z),L=i[1].dims[2]/4,ee=i[0].dataType,te=Zt(u.k),T=Zt(L),le=z.concat([B,v]),de=v%8==0?8:v%4==0?4:1,we=128/de,be=we*T*8,Me=be/te,Fe=be/u.blockSize,We=Le.size(le)/de,$e=[],eA=[O,B,E/te],aA=Le.convertShape(i[1].dims).slice();aA.splice(-1,1,L/T),$e.push(..._A(eA)),$e.push(..._A(aA)),$e.push(..._A(i[2].dims)),i.length===4&&$e.push(..._A(Le.convertShape(i[3].dims)));let zA=[O,B,v];return $e.push(..._A(zA)),{name:"BlockwiseMatMulNBits32",shaderCache:{hint:`${u.blockSize};${te};${T};${we};${de}`,inputDependencies:Array(i.length).fill("rank")},getRunData:()=>({outputs:[{dims:le,dataType:ee}],dispatchGroup:{x:We},programUniforms:$e}),getShaderSource:jA=>{let ht=eA.length,mt=pA("a",i[0].dataType,ht,te),Jt=pA("b",12,aA.length,T),Ct=pA("scales",i[2].dataType,i[2].dims.length),Pt=[mt,Jt,Ct],Qt=i.length===4?pA("zero_points",12,i[3].dims.length):void 0;Qt&&Pt.push(Qt);let iA=zA.length,gt=$A("output",i[0].dataType,iA),at=zt(i[0].dataType);return`
        var<workgroup> sub_a: array<${mt.type.value}, ${Me}>;
        var<workgroup> inter_results: array<array<${gt.type.value}, ${we}>, ${de}>;
        ${jA.declareVariables(...Pt,gt)}
        ${jA.mainStart([we,de,1])}
          let output_indices = ${gt.offsetToIndices(`workgroup_index * ${de}`)};
          let col = output_indices[2];
          let row = output_indices[1];
          let batch = output_indices[0];
          let n_blocks_per_col = uniforms.b_shape[1];
          let num_tiles =  (n_blocks_per_col - 1) / ${Fe} + 1;

          // Loop over shared dimension.
          for (var tile: u32 = 0; tile < num_tiles; tile += 1) {
            let a_col_start = tile * ${Me};
            // load one tile A data into shared memory.
            for (var a_offset = local_idx; a_offset < ${Me}; a_offset += 128)
            {
              let a_col = a_col_start + a_offset;
              if (a_col < uniforms.a_shape[2])
              {
                sub_a[a_offset] = ${mt.getByIndices(`${mt.type.indices}(batch, row, a_col)`)};
              } else {
                sub_a[a_offset] = ${mt.type.value}(0);
              }
            }
            workgroupBarrier();

            // each thread process one block
            let b_row = col + local_id.y;
            let block = tile * ${Fe} + local_id.x;
            ${Qt?`
            let zero_point_bytes_per_col = (n_blocks_per_col + 1) / 2;
            let zero_point_byte_count = b_row * zero_point_bytes_per_col + (block >> 0x1u);
            let zero_point_word_index = zero_point_byte_count >> 0x2u;
            let zero_point_byte_offset = zero_point_byte_count & 0x3u;
            let zero_point_nibble_offset: u32 = block & 0x1u;
            let zero_point_bits_offset = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);
            let zero_point_word = ${Qt.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;
            let zero_point = ${at}((zero_point_word) & 0xFu);`:`
            // The default zero point is 8 for unsigned 4-bit quantization.
            let zero_point = ${at}(8);`}
            let scale = ${Ct.getByOffset("b_row * n_blocks_per_col + block")};
            let b_data = ${Jt.getByIndices(`${Jt.type.indices}(b_row, block, 0)`)};
            var word_offset = local_id.x * ${u.blockSize/te};
            for (var i: u32 = 0; i < ${T}; i++) {
              ${(()=>{switch(te){case 1:return`
          let a_data0 = vec4<${at}>(sub_a[word_offset], sub_a[word_offset + 1], sub_a[word_offset + 2], sub_a[word_offset + 3]);
          let a_data1 = vec4<${at}>(sub_a[word_offset + 4], sub_a[word_offset + 5], sub_a[word_offset + 6], sub_a[word_offset + 7]);`;case 2:return`
          let a_data0 = vec4<${at}>(sub_a[word_offset], sub_a[word_offset + 1]);
          let a_data1 = vec4<${at}>(sub_a[word_offset + 2], sub_a[word_offset + 3]);`;case 4:return`
          let a_data0 = sub_a[word_offset];
          let a_data1 = sub_a[word_offset + 1];`;default:throw new Error(`${te}-component is not supported.`)}})()}
              let b_value = ${T===1?"b_data":"b_data[i]"};
              let b_value_lower = unpack4xU8(b_value & 0x0F0F0F0Fu);
              let b_value_upper = unpack4xU8((b_value >> 4) & 0x0F0F0F0Fu);
              let b_quantized_values = mat2x4<${at}>(${Array.from({length:4},(ot,sr)=>`${at}(b_value_lower[${sr}]), ${at}(b_value_upper[${sr}])`).join(", ")});
              let b_dequantized_values = (b_quantized_values - mat2x4<${at}>(${Array(8).fill("zero_point").join(",")})) * scale;
              inter_results[local_id.y][local_id.x] += ${Array.from({length:2},(ot,sr)=>`dot(a_data${sr}, b_dequantized_values[${sr}])`).join(" + ")};
              word_offset += ${8/te};
            }
            workgroupBarrier();
          }

          if (local_idx < ${de}) {
            var output_value: ${gt.type.value} = ${gt.type.value}(0);
            for (var b = 0u; b < ${we}; b++) {
              output_value += inter_results[local_idx][b];
            }
            if (col + local_idx < uniforms.output_shape[2])
            {
              ${gt.setByIndices(`${gt.type.indices}(batch, row, col + local_idx)`,"output_value")}
            }
          }
        }`}}},dl=(i,u)=>{gl(i.inputs,u),u.blockSize===32&&i.adapterInfo.isVendor("intel")&&i.adapterInfo.isArchitecture("gen-12lp")?i.compute(T1(i.inputs,u)):i.compute(ul(i.inputs,u))},fl=i=>Ze(i)}),Gt=Pe(()=>{Mt(),St(),Yt(),pl=i=>{if(!i||i.length<1)throw new Error("Too few inputs");if(i[0].dataType!==1&&i[0].dataType!==10)throw new Error("Input type must be float or float16.");if(i.length>=2){let u=2*i[0].dims.length===i[1].dims[0];if(i.length===4&&(u=2*i[3].dims[0]===i[1].dims[0]),!u)throw new Error("The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].")}},$i=(i,u,h)=>{let w="";for(let B=u-1;B>=0;--B)w+=`
            k = i32(${i.indicesGet("indices",B)}) - ${it("uniforms.pads",B,h)};
            if (k < 0) {
              break;
            }
            if (k >= i32(${it("uniforms.x_shape",B,u)})) {
              break;
            }
            offset += k * i32(${it("uniforms.x_strides",B,u)});
        `;return`
          value = ${i.type.value}(uniforms.constant_value);
          for (var i = 0; i < 1; i++) {
            var offset = 0;
            var k = 0;
            ${w}
            value = x[offset];
          }
      `},hl=(i,u,h)=>{let w="";for(let B=u-1;B>=0;--B)w+=`
                k = i32(${i.indicesGet("indices",B)}) - ${it("uniforms.pads",B,h)};
                if (k < 0) {
                  k = -k;
                }
                {
                  let _2n_1 = 2 * (i32(${it("uniforms.x_shape",B,u)}) - 1);
                  k = k % _2n_1;
                  if(k >= i32(${it("uniforms.x_shape",B,u)})) {
                    k = _2n_1 - k;
                  }
                }
                offset += k * i32(${it("uniforms.x_strides",B,u)});
            `;return`
              var offset = 0;
              var k = 0;
              ${w}
              value = x[offset];
          `},ml=(i,u,h)=>{let w="";for(let B=u-1;B>=0;--B)w+=`
                k = i32(${i.indicesGet("indices",B)}) - ${it("uniforms.pads",B,h)};
                if (k < 0) {
                  k = 0;
                }
                if (k >= i32(${it("uniforms.x_shape",B,u)})) {
                  k = i32(${it("uniforms.x_shape",B,u)}) - 1;
                }
                offset += k * i32(${it("uniforms.x_strides",B,u)});
            `;return`
              var offset = 0;
              var k = 0;
              ${w}
              value = x[offset];
          `},Cl=(i,u,h)=>{let w="";for(let B=u-1;B>=0;--B)w+=`
                k = i32(${i.indicesGet("indices",B)}) - ${it("uniforms.pads",B,h)};
                if (k < 0)  {
                  k += i32(${it("uniforms.x_shape",B,u)}]);
                }
                if (k >= i32(${it("uniforms.x_shape",B,u)})) {
                  k -= i32(${it("uniforms.x_shape",B,u)});
                }
                offset += k * i32(${it("uniforms.x_strides",B,u)});
            `;return`
              var offset = 0;
              var k = 0;
              ${w}
              value = x[offset];
          `},bl=(i,u,h)=>{switch(h.mode){case 0:return $i(i,u,h.pads.length);case 1:return hl(i,u,h.pads.length);case 2:return ml(i,u,h.pads.length);case 3:return Cl(i,u,h.pads.length);default:throw new Error("Invalid mode")}},Il=(i,u)=>{let h=Le.padShape(i[0].dims.slice(),u.pads),w=i[0].dims,B=[{type:12,data:Le.size(h)},{type:6,data:u.pads}],E=i.length>=3&&i[2].data;return u.mode===0&&B.push({type:E?i[2].dataType:1,data:u.value}),B.push(..._A(i[0].dims,h)),{name:"Pad",shaderCache:{hint:`${u.mode}${E}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:h,dataType:i[0].dataType}],dispatchGroup:{x:Math.ceil(Le.size(h)/64)},programUniforms:B}),getShaderSource:v=>{let z=$A("output",i[0].dataType,h.length),O=pA("x",i[0].dataType,w.length),L=O.type.value,ee=bl(z,w.length,u),te=[{name:"output_size",type:"u32"},{name:"pads",type:"i32",length:u.pads.length}];return u.mode===0&&te.push({name:"constant_value",type:E?L:"f32"}),`
            ${v.registerUniforms(te).declareVariables(O,z)}
            ${v.mainStart()}
            ${v.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

            let indices = ${z.offsetToIndices("global_idx")};

            var value = ${L}(0);
            ${ee}
            output[global_idx] = value;
        }`}}},wl=(i,u)=>{if(i.length>1){let h=i[1].getBigInt64Array(),w=i.length>=3&&i[2].data?i[2].dataType===10?i[2].getUint16Array()[0]:i[2].getFloat32Array()[0]:0,B=i[0].dims.length,E=new Int32Array(2*B).fill(0);if(i.length>=4){let z=i[3].getBigInt64Array();for(let O=0;O<z.length;O++)E[Number(z[O])]=Number(h[O]),E[Number(z[O])+B]=Number(h[O+z.length])}else h.forEach((z,O)=>E[Number(O)]=Number(z));let v=[];return E.forEach(z=>v.push(z)),{mode:u.mode,value:w,pads:v}}return u},kl=(i,u)=>{pl(i.inputs);let h=wl(i.inputs,u);i.compute(Il(i.inputs,h),{inputs:[0]})}}),or=Pe(()=>{dA(),Mt(),St(),Yt(),ai=i=>{if(K.webgpu.validateInputContent&&(!i||i.length!==1))throw new Error("Pool ops requires 1 input.")},xl=(i,u,h)=>{let w=u.format==="NHWC",B=i.dims.slice();w&&B.splice(1,0,B.pop());let E=Object.hasOwnProperty.call(u,"dilations"),v=u.kernelShape.slice(),z=u.strides.slice(),O=E?u.dilations.slice():[],L=u.pads.slice();YA.adjustPoolAttributes(h,B,v,z,O,L);let ee=YA.computePoolOutputShape(h,B,z,O,v,L,u.autoPad),te=Object.assign({},u);E?Object.assign(te,{kernelShape:v,strides:z,pads:L,dilations:O,cacheKey:u.cacheKey}):Object.assign(te,{kernelShape:v,strides:z,pads:L,cacheKey:u.cacheKey});let T=ee.slice();return T.push(T.splice(1,1)[0]),[te,w?T:ee]},vo=(i,u)=>{let h=u.format==="NHWC",w=[{type:12,data:Le.size(i)},{type:12,data:Le.size(u.kernelShape)}],B=[{name:"outputSize",type:"u32"},{name:"kernelSize",type:"u32"}];if(u.kernelShape.length<=2){let E=u.kernelShape[u.kernelShape.length-1],v=u.strides[u.strides.length-1],z=u.pads[u.pads.length/2-1],O=u.pads[u.pads.length-1],L=!!(z+O);w.push({type:12,data:E},{type:12,data:v},{type:12,data:z},{type:12,data:O}),B.push({name:"kw",type:"u32"},{name:"sw",type:"u32"},{name:"pwStart",type:"u32"},{name:"pwEnd",type:"u32"});let ee=!1;if(u.kernelShape.length===2){let te=u.kernelShape[u.kernelShape.length-2],T=u.strides[u.strides.length-2],le=u.pads[u.pads.length/2-2],de=u.pads[u.pads.length-2];ee=!!(le+de),w.push({type:12,data:te},{type:12,data:T},{type:12,data:le},{type:12,data:de}),B.push({name:"kh",type:"u32"},{name:"sh",type:"u32"},{name:"phStart",type:"u32"},{name:"phEnd",type:"u32"})}return[w,B,!0,L,ee]}{if(h)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let E=Le.computeStrides(u.kernelShape);w.push({type:12,data:E},{type:12,data:u.pads},{type:12,data:u.strides}),B.push({name:"kernelStrides",type:"u32",length:E.length},{name:"pads",type:"u32",length:u.pads.length},{name:"strides",type:"u32",length:u.strides.length});let v=u.pads.reduce((z,O)=>z+O);return[w,B,!!v,!1,!1]}},yo=(i,u,h,w,B,E,v,z,O,L,ee,te)=>{let T=B.format==="NHWC",le=u.type.value,de=$A("output",u.type.tensor,w);if(B.kernelShape.length<=2){let we="",be="",Me="",Fe=h-(T?2:1);if(we=ee?`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${Fe}] = indices[${Fe}] * uniforms.sw - uniforms.pwStart + i;
                  if (xIndices[${Fe}] < 0 || xIndices[${Fe}]
                      >= uniforms.x_shape[${Fe}]) {
                    pad++;
                    continue;
                  }
                  let x_val = x[${u.indicesToOffset("xIndices")}];
                  ${E}
                }`:`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${Fe}] = indices[${Fe}] * uniforms.sw - uniforms.pwStart + i;
                  let x_val = x[${u.indicesToOffset("xIndices")}];
                  ${E}
                }`,B.kernelShape.length===2){let We=h-(T?3:2);be=te?`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${We}] = indices[${We}] * uniforms.sh - uniforms.phStart + j;
                  if (xIndices[${We}] < 0 || xIndices[${We}] >= uniforms.x_shape[${We}]) {
                    pad += i32(uniforms.kw);
                    continue;
                  }
              `:`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${We}] = indices[${We}] * uniforms.sh - uniforms.phStart + j;
                `,Me=`
              }
            `}return`
            ${i.registerUniforms(O).declareVariables(u,de)}

            ${i.mainStart()}
              ${i.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

              let indices = ${de.offsetToIndices("global_idx")};
              var xIndices = ${de.offsetToIndices("global_idx")};

              var value = ${le}(${z});
              var pad = 0;
              ${be}
              ${we}
              ${Me}
              ${v}

              output[global_idx] = value;
            }`}{if(T)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let we=B.kernelShape.length,be=B.pads.length,Me="";return Me=L?`
                if (xIndices[j] >= uniforms.x_shape[j]) {
                  pad++;
                  isPad = true;
                  break;
                }
              }
              if (!isPad) {
                let x_val = x[${u.indicesToOffset("xIndices")}];
                ${E}
              }`:`
              }
              let x_val = x[${u.indicesToOffset("xIndices")}];
              ${E}
            `,`
            ${i.registerUniforms(O).declareVariables(u,de)}

            ${i.mainStart()}
              ${i.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
              let indices = ${de.offsetToIndices("global_idx")};
              var xIndices = ${de.offsetToIndices("global_idx")};

              var offsets: array<u32, ${we}>;

              var value = ${le}(${z});
              var pad = 0;
              var isPad = false;

              for (var i: u32 = 0u; i < uniforms.kernelSize; i++) {
                var offset = i;
                for (var j = 0u; j < ${we-1}u; j++) {
                  offsets[j] = offset / ${it("uniforms.kernelStrides","j",we)};
                  offset -= offsets[j] * ${it("uniforms.kernelStrides","j",we)};
                }
                offsets[${we-1}] = offset;

                isPad = false;
                for (var j = ${h-we}u; j < ${h}u; j++) {
                  xIndices[j] = indices[j] * ${it("uniforms.strides",`j - ${h-we}u`,we)}
                    + offsets[j - ${h-we}u] - ${it("uniforms.pads","j - 2u",be)};
                  ${Me}
              }
              ${v}

              output[global_idx] = value;
            }`}},Eo=i=>`${i.format};${i.ceilMode};${i.autoPad};${i.kernelShape.length}`,Bl=i=>`${Eo(i)};${i.countIncludePad}`,vl=i=>`${Eo(i)};${i.storageOrder};${i.dilations}`,Ao=i=>({format:i.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][i.auto_pad],ceilMode:i.ceil_mode,kernelShape:i.kernel_shape,strides:i.strides,pads:i.pads}),Mo=(i,u,h,w)=>{let[B,E]=xl(u,w,h),v=pA("x",u.dataType,u.dims.length),z=v.type.value,O="";B.countIncludePad?O+=`value /= ${z}(uniforms.kernelSize);`:O+=`value /= ${z}(i32(uniforms.kernelSize) - pad);`;let[L,ee,te,T,le]=vo(E,B);return L.push(..._A(u.dims,E)),{name:i,shaderCache:{hint:`${w.cacheKey};${te};${T};${le}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:E,dataType:u.dataType}],dispatchGroup:{x:Math.ceil(Le.size(E)/64)},programUniforms:L}),getShaderSource:de=>yo(de,v,u.dims.length,E.length,B,"value += x_val;",O,0,ee,te,T,le)}},yl=i=>{let u=i.count_include_pad!==0,h=Ao(i);if(h.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");let w={countIncludePad:u,...h,cacheKey:""};return{...w,cacheKey:Bl(w)}},Go=(i,u)=>{ai(i.inputs),i.compute(Mo("AveragePool",i.inputs[0],!1,u))},Do={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[]},El=i=>{let u=i.format;return{format:u,...Do,cacheKey:u}},Qo=(i,u)=>{ai(i.inputs),i.compute(Mo("GlobalAveragePool",i.inputs[0],!0,u))},To=(i,u,h,w)=>{let[B,E]=xl(u,w,h),v=pA("x",u.dataType,u.dims.length),[z,O,L,ee,te]=vo(E,B);return z.push(..._A(u.dims,E)),{name:i,shaderCache:{hint:`${w.cacheKey};${L};${ee};${te}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:E,dataType:u.dataType}],dispatchGroup:{x:Math.ceil(Le.size(E)/64)},programUniforms:z}),getShaderSource:T=>yo(T,v,u.dims.length,E.length,B,`
      value = max(x_val, value);
    `,"",u.dataType===10?-65504:-1e5,O,L,ee,te)}},Ml=(i,u)=>{ai(i.inputs),i.compute(To("MaxPool",i.inputs[0],!1,u))},to=i=>{let u=i.storage_order,h=i.dilations,w=Ao(i);if(u!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(w.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");let B={storageOrder:u,dilations:h,...w,cacheKey:""};return{...B,cacheKey:vl(B)}},Gl=i=>{let u=i.format;return{format:u,...Do,cacheKey:u}},Dl=(i,u)=>{ai(i.inputs),i.compute(To("GlobalMaxPool",i.inputs[0],!0,u))}}),Tt=Pe(()=>{Mt(),St(),Zr(),Yt(),Ql=(i,u)=>{if(i.length<2||i.length>3)throw new Error("DequantizeLinear requires 2 or 3 inputs.");if(i.length===3&&i[1].dims===i[2].dims)throw new Error("x-scale and x-zero-point must have the same shape.");if(i.length===3&&i[0].dataType!==i[2].dataType)throw new Error("x and x-zero-point must have the same data type.");if(i[0].dataType===6&&i.length>2)throw new Error("In the case of dequantizing int32 there is no zero point.");if(i[1].dims.length!==0&&i[1].dims.length!==1&&i[1].dims.length!==i[0].dims.length)throw new Error("scale input must be a scalar, a 1D tensor, or have the same rank as the input tensor.");if(i.length>2){if(i[0].dataType!==i[2].dataType)throw new Error("x and x-zero-point must have the same data type.");if(i[1].dims.length!==i[2].dims.length)throw new Error("scale and zero-point inputs must have the same rank.");if(!i[1].dims.map((h,w)=>h===i[2].dims[w]).reduce((h,w)=>h&&w,!0))throw new Error("scale and zero-point inputs must have the same shape.")}if(u.blockSize>0){if(i[1].dims.length===0||i[1].dims.length===1&&i[1].dims[0]===1)throw new Error("blockSize must be set only for block quantization.");if(!i[1].dims.map((B,E)=>E===u.axis||B===i[0].dims[E]).reduce((B,E)=>B&&E,!0))throw new Error("For block qunatization, scale input shape to match the input shape except for the axis");if(i[1].dims.length!==i[0].dims.length)throw new Error("For block qunatization the scale input rank must be the same as the x rank.");let h=i[0].dims[u.axis],w=i[1].dims[u.axis];if(u.blockSize<Math.ceil(h/w)||u.blockSize>Math.ceil(h/(w-1)-1))throw new Error("blockSize must be with in the range [ceil(dI / Si), ceil(dI / (Si - 1) - 1)].")}},Tl=(i,u)=>{let h=Le.normalizeAxis(u.axis,i[0].dims.length),w=i[0].dataType,B=w===3,E=i[0].dims,v=i[1].dataType,z=Le.size(E),O=w===3||w===2,L=O?[Math.ceil(Le.size(i[0].dims)/4)]:i[0].dims,ee=i[1].dims,te=i.length>2?i[2]:void 0,T=te?O?[Math.ceil(Le.size(te.dims)/4)]:te.dims:void 0,le=ee.length===0||ee.length===1&&ee[0]===1,de=le===!1&&ee.length===1,we=Zt(z),be=le&&(!O||we===4),Me=be?we:1,Fe=be&&!O?we:1,We=pA("input",O?12:w,L.length,Fe),$e=pA("scale",v,ee.length),eA=te?pA("zero_point",O?12:w,T.length):void 0,aA=$A("output",v,E.length,Me),zA=[We,$e];eA&&zA.push(eA);let jA=[L,ee];te&&jA.push(T);let ht=[{type:12,data:z/Me},{type:12,data:h},{type:12,data:u.blockSize},..._A(...jA,E)];return{name:"DequantizeLinear",shaderCache:{hint:u.cacheKey,inputDependencies:eA?["rank","rank","rank"]:["rank","rank"]},getShaderSource:mt=>`
      ${mt.registerUniforms([{name:"output_size",type:"u32"},{name:"axis",type:"u32"},{name:"block_size",type:"u32"}]).declareVariables(...zA,aA)}
      ${mt.mainStart()}
          ${mt.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          let output_indices = ${aA.offsetToIndices("global_idx")};

          // Set input x
          ${O?`
            let input = ${We.getByOffset("global_idx / 4")};
            let x_vec = ${B?"unpack4xI8(input)":"unpack4xU8(input)"};
            let x_value = ${Me===1?"x_vec[global_idx % 4]":"x_vec"};`:`let x_value = ${We.getByOffset("global_idx")};`};

          // Set scale input
          ${le?`let scale_value= ${$e.getByOffset("0")}`:de?`
            let scale_index = ${aA.indicesGet("output_indices","uniforms.axis")};
            let scale_value= ${$e.getByOffset("scale_index")};`:`
            var scale_indices: ${$e.type.indices} = output_indices;
            let index = ${$e.indicesGet("scale_indices","uniforms.axis")} / uniforms.block_size;
            ${$e.indicesSet("scale_indices","uniforms.axis","index")};
            let scale_value= ${$e.getByIndices("scale_indices")};`};

          // Set zero-point input
          ${eA?le?O?`
                let zero_point_input = ${eA.getByOffset("0")};
                let zero_point_vec =  ${B?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value= zero_point_vec[0]`:`let zero_point_value = ${eA.getByOffset("0")}`:de?O?`
                let zero_point_index = ${aA.indicesGet("output_indices","uniforms.axis")};
                let zero_point_input = ${eA.getByOffset("zero_point_index / 4")};
                let zero_point_vec =  ${B?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value = zero_point_vec[zero_point_index % 4]`:`
                let zero_point_index = ${aA.indicesGet("output_indices","uniforms.axis")};
                let zero_point_value = ${eA.getByOffset("zero_point_index")};`:O?`
                let zero_point_offset = ${$e.indicesToOffset("scale_indices")};
                let zero_point_input = ${eA.getByOffset("zero_point_offset / 4")};
                let zero_point_vec = ${B?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value = zero_point_vec[zero_point_offset % 4];`:`let zero_point_value = ${eA.getByIndices("scale_indices")};`:`let zero_point_value = ${O?B?"i32":"u32":We.type.value}(0);`};
      // Compute and write output
      ${aA.setByOffset("global_idx",`${aA.type.value}(x_value - zero_point_value) * scale_value`)};
      }`,getRunData:()=>({outputs:[{dims:E,dataType:v}],dispatchGroup:{x:Math.ceil(z/Me/64),y:1,z:1},programUniforms:ht})}},Po=(i,u)=>{Ql(i.inputs,u),i.compute(Tl(i.inputs,u))},ro=i=>Ze({axis:i.axis,blockSize:i.blockSize})}),Lt=Pe(()=>{dA(),Mt(),Yt(),P1=(i,u,h)=>{if(i===u||i<u&&h<0||i>u&&h>0)throw new Error("Range these inputs' contents are invalid.")},Pl=(i,u,h,w)=>{let B=Math.abs(Math.ceil((u-i)/h)),E=[B],v=B,z=[{type:12,data:v},{type:w,data:i},{type:w,data:h},..._A(E)];return{name:"Range",shaderCache:{hint:`${w}`},getShaderSource:O=>{let L=$A("output",w,E.length),ee=L.type.value,te=[{name:"outputSize",type:"u32"},{name:"start",type:ee},{name:"delta",type:ee}];return`
        ${O.registerUniforms(te).declareVariables(L)}
        ${O.mainStart()}
        ${O.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        output[global_idx] = uniforms.start + ${ee}(global_idx) * uniforms.delta;
      }`},getRunData:()=>({outputs:[{dims:E,dataType:w}],dispatchGroup:{x:Math.ceil(v/64)},programUniforms:z})}},zl=i=>{let u=0,h=0,w=0;i.inputs[0].dataType===6?(u=i.inputs[0].getInt32Array()[0],h=i.inputs[1].getInt32Array()[0],w=i.inputs[2].getInt32Array()[0]):i.inputs[0].dataType===1&&(u=i.inputs[0].getFloat32Array()[0],h=i.inputs[1].getFloat32Array()[0],w=i.inputs[2].getFloat32Array()[0]),K.webgpu.validateInputContent&&P1(u,h,w),i.compute(Pl(u,h,w,i.inputs[0].dataType),{inputs:[]})}}),Ht=Pe(()=>{Mt(),St(),Zr(),Yt(),zo=(i,u,h,w)=>{if(i!=="none"&&w!=="i32"&&w!=="u32"&&w!=="f32")throw new Error(`Input ${w} is not supported with reduction ${i}.`);let B=`{
                var oldValue = 0;
                loop {
                  let newValueF32 =`,E=`;
                  let newValue = bitcast<i32>(newValueF32);
                  let res = atomicCompareExchangeWeak(&${u}, oldValue, newValue);
                  if res.exchanged {
                    break;
                  }
                  oldValue = res.old_value;
                }
              }`;switch(i){case"none":return`${u}=${h};`;case"add":return w==="i32"||w==="u32"?`atomicAdd(&${u}, bitcast<${w}>(${h}));`:`
              ${B}bitcast<${w}>(oldValue) + (${h})${E}`;case"max":return w==="i32"||w==="u32"?`atomicMax(&${u}, bitcast<${w}>(${h}));`:`
                ${B}max(bitcast<f32>(oldValue), (${h}))${E}`;case"min":return w==="i32"||w==="u32"?`atomicMin(&${u}, bitcast<${w}>(${h}));`:`${B}min(bitcast<${w}>(oldValue), (${h}))${E}`;case"mul":return`${B}(bitcast<${w}>(oldValue) * (${h}))${E}`;default:throw new Error(`Reduction ${i} is not supported.`)}},Fl=(i,u)=>{let h=i[0].dims,w=i[1].dims,B=h,E=Math.ceil(Le.size(w)/1),v=w[w.length-1],z=Le.sizeFromDimension(h,v),O=[{type:12,data:E},{type:12,data:v},{type:12,data:z},..._A(i[1].dims,i[2].dims,B)];return{name:"ScatterND",shaderCache:{hint:`${u.cacheKey}_${u.reduction}`,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:B,dataType:i[0].dataType}],dispatchGroup:{x:Math.ceil(E/64)},programUniforms:O}),getShaderSource:L=>{let ee=pA("indices",i[1].dataType,i[1].dims.length),te=pA("updates",i[2].dataType,i[2].dims.length,1),T=u.reduction!=="none"&&u.reduction!==""?mn("output",i[0].dataType,B.length):$A("output",i[0].dataType,B.length,1);return`
      ${L.registerUniform("output_size","u32").registerUniform("last_index_dimension","u32").registerUniform("num_updates_elements","u32").declareVariables(ee,te,T)}
      ${L.mainStart()}
        ${L.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
  var data_offset = 0u;
  let indices_start = uniforms.last_index_dimension * global_idx;
  let indices_end = indices_start + uniforms.last_index_dimension;
  for (var i = indices_start; i < indices_end; i++) {
    var index = i32(indices[i].x);
    ${i[0].dims.length===1?`
    let element_count_dim = uniforms.output_strides;
    let dim_value = uniforms.output_shape;`:`
    let element_count_dim = uniforms.output_strides[i - indices_start];
    let dim_value = uniforms.output_shape[i - indices_start + uniforms.last_index_dimension];`}
    if (index >= 0) {
      if (index >= i32(dim_value)) {
        index = i32(dim_value - 1);
      }
    } else {
      if (index < -i32(dim_value)) {
        index = 0;
      } else {
        index += i32(dim_value);
      }
    }
    data_offset += u32((u32(index) * element_count_dim));
  }

  for (var i = 0u; i < uniforms.num_updates_elements; i++) {
    let value = updates[uniforms.num_updates_elements * global_idx + i];
    ${zo(u.reduction,"output[data_offset + i]","value",T.type.value)}
  }

      }`}}},Sl=i=>Ze({reduction:i.reduction}),Fo=(i,u)=>{i.compute(Fl(i.inputs,u),{inputs:[i.inputs[1],i.inputs[2]],outputs:[]})}}),lr=Pe(()=>{Mt(),St(),Zr(),Yt(),Nl=(i,u)=>{if(i.every(h=>h>0||(()=>{throw new Error("Resize requires scales input values to be positive")})),i.length>0){if(u.mode==="linear"){if(!(i.length===2||i.length===3||i.length===4&&i[0]===1&&i[1]===1||i.length===4&&i[0]===1&&i[3]===1||i.length===5&&i[0]===1&&i[1]===1))throw new Error(`For linear mode, Resize requires scales to be 2D, 3D, 4D with either two outermost or one innermost and
            one outermost scale values equal to 1, or 5D with two outermost scale values equal to 1`)}else if(u.mode==="cubic"&&!(i.length===2||i.length===4&&i[0]===1&&i[1]===1||i.length===4&&i[0]===1&&i[3]===1))throw new Error("Resize requires scales input size to be 2 or 4 for cubic mode")}},Ol=(i,u,h)=>{u.every(B=>B>=0&&B<h||(()=>{throw new Error("Resize requires axes input values to be positive and less than rank")}));let w=new Array(h).fill(1);return u.forEach((B,E)=>w[B]=i[E]),w},So=(i,u,h,w,B,E)=>{let[v,z,O]=h>10?[1,2,3]:[-1,i.length>1?1:-1,-1],L=i[0].dims.length;if(v>0&&i.length>v&&i[v].dims.length>0)i[v].getFloat32Array().forEach(ee=>E.push(ee));else if(u.coordinateTransformMode==="tf_crop_and_resize")throw new Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(z>0&&i.length>z&&i[z].dims.length===1&&i[z].dims[0]>0){if(i[z].getFloat32Array().forEach(ee=>w.push(ee)),w.length!==0&&w.length!==L&&h>=18&&w.length!==u.axes.length)throw new Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");Nl(w,u),u.axes.length>0&&Ol(w,u.axes,L).forEach((ee,te)=>w[te]=ee)}if(O>0&&i.length>O&&i[O].dims.length===1&&i[O].dims[0]>0&&(i[O].getBigInt64Array().forEach(ee=>B.push(Number(ee))),B.length!==0&&B.length!==L&&h>=18&&B.length!==u.axes.length))throw new Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(u.axes.length>0){if(w.length!==0&&w.length!==u.axes.length)throw new Error('Resize requires "scales" input size to be of axes rank when axes attributes is specified');if(B.length!==0&&B.length!==u.axes.length)throw new Error('Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified')}if(typeof w<"u"&&typeof B<"u"&&w.length>0&&B.length>L)throw new Error("Resize requires only of scales or sizes to be specified")},Ll=(i,u,h,w)=>`
  // The whole part and the fractional part are calculated separately due to inaccuracy of floating
  // point division. As an example, f32(21) / f32(7) may evaluate to 2.99... instead of 3, causing an
  // offset-by-one error later in floor().
  let big = (${i}) * (${u});
  let whole = ${w}(big / (${h}));
  let fract = ${w}(big % (${h})) / ${w}(${h});
  return whole + fract;
`,z1=(i,u)=>`fn getOriginalCoordinateFromResizedCoordinate(xResized: u32, xScale: f32, lengthResized: u32,
     lengthOriginal: u32, roiStart: f32, roiEnd: f32) -> ${u} { `+(()=>{switch(i){case"asymmetric":return`
          if (xScale < 1.0 || floor(xScale) != xScale) {
            return ${u}(xResized) / ${u}(xScale);
          } else {
            ${Ll("xResized","lengthOriginal","lengthResized",u)}
          }
        `;case"pytorch_half_pixel":return`if (lengthResized > 1) {
                    return (${u}(xResized) + 0.5) / ${u}(xScale) - 0.5;
                  } else {
                    return 0.0;
                  }`;case"tf_half_pixel_for_nn":return`return (${u}(xResized) + 0.5) / ${u}(xScale);`;case"align_corners":return`if (lengthResized == 1) {
                    return 0.0;
                  } else {
                    ${Ll("xResized","lengthOriginal - 1","lengthResized - 1",u)}
                  }`;case"tf_crop_and_resize":return`if (lengthResized > 1) {
                    return ${u}(roiStart) * ${u}(lengthOriginal - 1) +
                        (${u}(xResized) * ${u}(roiEnd - roiStart) * ${u}(lengthOriginal - 1)) /
                        ${u}(lengthResized - 1);
                  } else {
                    return 0.5 * ${u}(roiStart + roiEnd) * ${u}(lengthOriginal - 1);
                  }`;case"half_pixel_symmetric":return`const outputWidth = ${u}xScale * ${u}(lengthResized);
                  const adjustment = ${u}(lengthResized) / outputWidth;
                  const center = ${u}(lengthOriginal) / 2;
                  const offset = center * (1 - adjustment);
                  return offset + ((${u}(xResized) + 0.5) / ${u}(xScale)) - 0.5;`;case"half_pixel":return`return ((${u}(xResized) + 0.5) / ${u}(xScale)) - 0.5;`;default:throw new Error(`Coordinate transform mode ${i} is not supported`)}})()+"}",No=(i,u,h)=>`fn getNearestPixelFromOriginal(xOriginal: ${h}, isDownSample: bool) -> ${h} {`+(()=>{switch(i){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";default:if(u<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw new Error(`Nearest mode ${i} is not supported`)}})()+"}",Oo=(i,u,h)=>{let w=new Array(h).fill(0).concat(new Array(h).fill(1)),B=i.length===0?w:i.slice();return u.length>0?(u.forEach((E,v)=>{w[E]=B[v],w[v+h]=B[u.length+v]}),w):B},Yl=(i,u,h,w)=>{let B=[];if(h.length>0)if(w.length>0){if(i.forEach(E=>B.push(E)),Math.max(...w)>i.length)throw new Error("axes is out of bound");w.forEach((E,v)=>B[E]=h[v])}else h.forEach(E=>B.push(E));else{if(u.length===0)throw new Error("Resize requires either scales or sizes.");B=i.map((E,v)=>Math.round(E*u[v]))}return B},Hl=(i,u,h)=>{let w=(()=>{switch(h.keepAspectRatioPolicy){case"not_larger":return h.axes.length>0?Math.min(...h.axes.map(E=>u[E]),Number.MAX_VALUE):Math.min(...u,Number.MAX_VALUE);case"not_smaller":return h.axes.length>0?Math.max(...h.axes.map(E=>u[E]),Number.MIN_VALUE):Math.max(...u,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${h.keepAspectRatioPolicy} is not supported`)}})();u.fill(1,0,u.length);let B=i.slice();return h.axes.length>0?(h.axes.forEach(E=>u[E]=w),h.axes.forEach(E=>B[E]=Math.round(i[E]*u[E]))):(u.fill(w,0,u.length),B.forEach((E,v)=>B[v]=Math.round(E*u[v]))),B},Lo=(i,u,h,w,B)=>`
    fn calculateOriginalIndicesFromOutputIndices(output_indices: ${i.type.indices}) -> array<${i.type.value}, ${h.length}> {
      var original_indices: array<${i.type.value}, ${h.length}>;
      for (var i:u32 = 0; i < ${h.length}; i++) {
        var output_index = ${i.indicesGet("output_indices","i")};
        var scale = ${it("uniforms.scales","i",w)};
        var roi_low = ${it("uniforms.roi","i",B)};
        var roi_hi = ${it("uniforms.roi",`i + ${u.length}`,B)};
        if (scale == 1.0) {
          original_indices[i] = ${i.type.value}(output_index);
        } else {
          var input_shape_i = ${it("uniforms.input_shape","i",u.length)};
          var output_shape_i = ${it("uniforms.output_shape","i",h.length)};
          original_indices[i] = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                           input_shape_i, roi_low, roi_hi);
        }
      }
      return original_indices;
    }`,Rl=(i,u,h,w,B,E,v)=>`
    fn calculateInputIndicesFromOutputIndices(output_indices: ${u.type.indices}) -> ${i.type.indices} {
      var input_indices: ${i.type.indices};
      for (var i:u32 = 0; i < ${w.length}; i++) {
        var output_index = ${u.indicesGet("output_indices","i")};
        var input_index: u32;
        var scale = ${it("uniforms.scales","i",B)};
        if (scale == 1.0) {
          input_index = output_index;
        } else {
          var roi_low = ${it("uniforms.roi","i",E)};
          var roi_hi = ${it("uniforms.roi",`i + ${h.length}`,E)};
          var input_shape_i = ${it("uniforms.input_shape","i",h.length)};
          var output_shape_i = ${it("uniforms.output_shape","i",w.length)};
          var original_idx = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                        input_shape_i, roi_low, roi_hi);
          if (!${v} || (original_idx >= 0 && original_idx < ${u.type.value}(input_shape_i))) {
            if (original_idx < 0) {
              input_index = 0;
            } else if (original_idx > ${u.type.value}(input_shape_i - 1)) {
              input_index = input_shape_i - 1;
            } else {
              input_index = u32(getNearestPixelFromOriginal(original_idx, scale < 1));
            }
          } else {
            input_index = u32(original_idx);
          }
        }
        ${i.indicesSet("input_indices","i","input_index")}
      }
      return input_indices;
    }`,Wl=(i,u)=>`
    fn checkInputIndices(input_indices: ${i.type.indices}) -> bool {
      for (var i:u32 = 0; i < ${u.length}; i++) {
        var input_index = ${i.indicesGet("input_indices","i")};
        if (input_index < 0 || input_index >= ${it("uniforms.input_shape","i",u.length)}) {
          return false;
        }
      }
      return true;
    }`,no=(i,u,h,w)=>i.rank>w?`
    ${i.indicesSet("input_indices",u,"channel")};
    ${i.indicesSet("input_indices",h,"batch")};
`:"",Vl=(i,u,h,w,B)=>{let[E,v,z,O]=h.length===2?[-1,0,1,-1]:[0,2,3,1],L=i.type.value;return`
    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> ${L} {
      var input_indices: ${i.type.indices};
      ${i.indicesSet("input_indices",v,`max(0, min(row, ${h[v]} - 1))`)};
      ${i.indicesSet("input_indices",z,`max(0, min(col, ${h[z]} - 1))`)};
      ${no(i,O,E,2)}
      return ${i.getByIndices("input_indices")};
    }

    fn bilinearInterpolation(output_indices: ${u.type.indices}) -> ${L} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var row:${L} = originalIndices[${v}];
      var col:${L} = originalIndices[${z}];
      ${w?`if (row < 0 || row > (${h[v]} - 1) || col < 0 || col > (${h[z]} - 1)) {
        return ${B};
      }`:""};
      row = max(0, min(row, ${h[v]} - 1));
      col = max(0, min(col, ${h[z]} - 1));
      var row1: u32 = u32(row);
      var col1: u32 = u32(col);
      var row2: u32 = u32(row + 1);
      var col2: u32 = u32(col + 1);
      var channel: u32 = ${h.length>2?`u32(originalIndices[${O}])`:"0"};
      var batch: u32 =  ${h.length>2?`u32(originalIndices[${E}])`:"0"};
      var x11: ${L} = getInputValue(batch, channel, row1, col1);
      var x12: ${L} = getInputValue(batch, channel, row1, col2);
      var x21: ${L} = getInputValue(batch, channel, row2, col1);
      var x22: ${L} = getInputValue(batch, channel, row2, col2);
      var dx1: ${L} = abs(row - ${L}(row1));
      var dx2: ${L} = abs(${L}(row2) - row);
      var dy1: ${L} = abs(col - ${L}(col1));
      var dy2: ${L} = abs(${L}(col2) - col);
      if (row1 == row2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (col1 == col2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);
    }`},jl=(i,u,h,w,B,E,v,z,O,L)=>{let ee=h.length===2,[te,T]=ee?[0,1]:[2,3],le=i.type.value,de=we=>{let be=we===te?"row":"col";return`
      fn ${be}CubicInterpolation(input_indices: ${i.type.indices}, output_indices: ${u.type.indices}) -> ${le} {
        var output_index = ${u.indicesGet("output_indices",we)};
        var originalIdx: ${le} = getOriginalCoordinateFromResizedCoordinate(output_index, ${B[we]},
        ${w[we]}, ${h[we]}, ${E[we]}, ${E[we]} + ${h.length});
        var fractOriginalIdx: ${le} = originalIdx - floor(originalIdx);
        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);

        if (${z} && (originalIdx < 0 || originalIdx > (${h[we]} - 1))) {
          return ${O};
        }
        var data: array<${le}, 4> = array<${le}, 4>(0.0, 0.0, 0.0, 0.0);
        for (var i: i32 = -1; i < 3; i++) {
          var ${be}: ${le} = originalIdx + ${le}(i);
          if (${be} < 0 || ${be} >= ${h[we]}) {
            ${L?`coefs[i + 1] = 0.0;
                        continue;`:z?`return ${O};`:`${be} = max(0, min(${be}, ${h[we]} - 1));`};
          }
        var input_indices_copy: ${i.type.indices} = input_indices;
          ${i.indicesSet("input_indices_copy",we,`u32(${be})`)};
          data[i + 1] = ${we===te?i.getByIndices("input_indices_copy"):"rowCubicInterpolation(input_indices_copy, output_indices)"};
        }
        return cubicInterpolation1D(data, coefs);
      }`};return`
    ${de(te)};
    ${de(T)};
  fn getCubicInterpolationCoefs(s: ${le}) -> array<${le}, 4> {
    var absS = abs(s);
    var coeffs: array<${le}, 4> = array<${le}, 4>(0.0, 0.0, 0.0, 0.0);
    var oneMinusAbsS: ${le} = 1.0 - absS;
    var twoMinusAbsS: ${le} = 2.0 - absS;
    var onePlusAbsS: ${le} = 1.0 + absS;
    coeffs[0] = ((${v} * onePlusAbsS - 5 * ${v}) * onePlusAbsS + 8 * ${v}) * onePlusAbsS - 4 * ${v};
    coeffs[1] = ((${v} + 2) * absS - (${v} + 3)) * absS * absS + 1;
    coeffs[2] = ((${v} + 2) * oneMinusAbsS - (${v} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;
    coeffs[3] = ((${v} * twoMinusAbsS - 5 * ${v}) * twoMinusAbsS + 8 * ${v}) * twoMinusAbsS - 4 * ${v};
    return coeffs;
  }

  fn cubicInterpolation1D(x: array<${le}, 4>, coefs: array<${le}, 4>) -> ${le} {
    var coefsSum: ${le} = coefs[0] + coefs[1] + coefs[2] + coefs[3];
    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;
  }

  fn bicubicInterpolation(output_indices: ${u.type.indices}) -> ${le} {
    var input_indices: ${i.type.indices} = output_indices;
    return colCubicInterpolation(input_indices, output_indices);
  }
    `},Yo=(i,u,h,w,B)=>{let[E,v,z,O,L]=h.length===3?[-1,0,1,2,-1]:[0,2,3,4,1],ee=i.type.value;return`
    fn getInputValue(batch: u32, channel: u32, depth:u32, height: u32, width: u32) -> ${ee} {
      var input_indices: ${i.type.indices};
      ${i.indicesSet("input_indices",v,`max(0, min(depth, ${h[v]} - 1))`)};
      ${i.indicesSet("input_indices",z,`max(0, min(height, ${h[z]} - 1))`)};
      ${i.indicesSet("input_indices",O,`max(0, min(width, ${h[O]} - 1))`)};
      ${no(i,L,E,3)}
      return ${i.getByIndices("input_indices")};
    }

    fn trilinearInterpolation(output_indices: ${u.type.indices}) -> ${ee} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var depth:${ee} = originalIndices[${v}];
      var height:${ee} = originalIndices[${z}];
      var width:${ee} = originalIndices[${O}];
      ${w?`if (depth < 0 || depth > (${h[v]} - 1) || height < 0 || height > (${h[z]} - 1) || width < 0 || (width > ${h[O]} - 1)) {
      return ${B};
        }`:""};

    depth = max(0, min(depth, ${h[v]} - 1));
      height = max(0, min(height, ${h[z]} - 1));
      width = max(0, min(width, ${h[O]} - 1));
      var depth1: u32 = u32(depth);
      var height1: u32 = u32(height);
      var width1: u32 = u32(width);
      var depth2: u32 = u32(depth + 1);
      var height2: u32 = u32(height + 1);
      var width2: u32 = u32(width + 1);
      var channel: u32 = ${h.length>3?`u32(originalIndices[${L}])`:"0"};
      var batch: u32 =  ${h.length>3?`u32(originalIndices[${E}])`:"0"};

      var x111: ${ee} = getInputValue(batch, channel, depth1, height1, width1);
      var x112: ${ee} = getInputValue(batch, channel, depth1, height1, width2);
      var x121: ${ee} = getInputValue(batch, channel, depth1, height2, width1);
      var x122: ${ee} = getInputValue(batch, channel, depth1, height2, width2);
      var x211: ${ee} = getInputValue(batch, channel, depth2, height1, width1);
      var x212: ${ee} = getInputValue(batch, channel, depth2, height1, width2);
      var x221: ${ee} = getInputValue(batch, channel, depth2, height2, width1);
      var x222: ${ee} = getInputValue(batch, channel, depth2, height2, width2);
      var dx1: ${ee} = abs(depth - ${ee}(depth1));
      var dx2: ${ee} = abs(${ee}(depth2) - depth);
      var dy1: ${ee} = abs(height - ${ee}(height1));
      var dy2: ${ee} = abs(${ee}(height2) - height);
      var dz1: ${ee} = abs(width - ${ee}(width1));
      var dz2: ${ee} = abs(${ee}(width2) - width);
      if (depth1 == depth2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (height1 == height2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      if (width1 == width2) {
        dz1 = 0.5;
        dz2 = 0.5;
      }
      return (x111 * dx2 * dy2 * dz2 + x112 * dx2 * dy2 * dz1 + x121 * dx2 * dy1 *dz2 + x122 * dx2 * dy1 * dz1 +
              x211 * dx1 * dy2 * dz2 + x212 * dx1 * dy2 * dz1 + x221 * dx1 * dy1 *dz2 + x222 * dx1 * dy1 * dz1);
    }`},Ul=(i,u,h,w,B,E)=>{let v=i.dims,z=Oo(E,u.axes,v.length),O=Yl(v,w,B,u.axes),L=w.slice();w.length===0&&(L=v.map((Me,Fe)=>Me===0?1:O[Fe]/Me),u.keepAspectRatioPolicy!=="stretch"&&(O=Hl(v,L,u)));let ee=$A("output",i.dataType,O.length),te=pA("input",i.dataType,v.length),T=Le.size(O),le=v.length===O.length&&v.every((Me,Fe)=>Me===O[Fe]),de=u.coordinateTransformMode==="tf_crop_and_resize",we=u.extrapolationValue,be=te.type.value;return{name:"Resize",shaderCache:{hint:`${u.cacheKey}|${h}|${L.length>0?u.mode==="cubic"?L:L.length:""}|${B.length>0?B:""}|${z.length>0?z:""}|${le}|${u.mode==="nearest"?v.length:v}`,inputDependencies:["rank"]},getShaderSource:Me=>`
      ${le?"":`
      ${z1(u.coordinateTransformMode,be)};
      ${(()=>{switch(u.mode){case"nearest":return`
              ${Wl(te,v)};
              ${No(u.nearestMode,h,be)};
              ${Rl(te,ee,v,O,L.length,z.length,de)};
              `;case"linear":return`
              ${Lo(ee,v,O,L.length,z.length)};
              ${(()=>{if(v.length===2||v.length===4)return`${Vl(te,ee,v,de,we)}`;if(v.length===3||v.length===5)return`${Yo(te,ee,v,de,we)}`;throw Error("Linear mode only supports input dims 2, 3, 4 and 5 are supported in linear mode.")})()};
            `;case"cubic":return`
            ${(()=>{if(v.length===2||v.length===4)return`${jl(te,ee,v,O,L,z,u.cubicCoeffA,de,u.extrapolationValue,u.excludeOutside)}`;throw Error("Cubic mode only supports input dims 2 and 4 are supported in linear mode.")})()};
            `;default:throw Error("Invalid resize mode")}})()};
      `}
      ${Me.registerUniform("output_size","u32").registerUniform("scales","f32",L.length).registerUniform("roi","f32",z.length).declareVariables(te,ee)}
      ${Me.mainStart()}
        ${Me.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
        ${le?"output[global_idx] = input[global_idx];":`
        let output_indices = ${ee.offsetToIndices("global_idx")};
        var input_indices: ${te.type.indices};
        ${(()=>{switch(u.mode){case"nearest":return`input_indices = calculateInputIndicesFromOutputIndices(output_indices);
                if (checkInputIndices(input_indices)) {
                  output[global_idx] = ${te.getByIndices("input_indices")};
                } else {
                  output[global_idx] = ${u.extrapolationValue};
                }`;case"linear":return`output[global_idx] = ${v.length===2||v.length===4?"bilinearInterpolation":"trilinearInterpolation"}(output_indices);`;case"cubic":return"output[global_idx] = bicubicInterpolation(output_indices);";default:throw Error(`Unsupported resize mode: ${u.mode}`)}})()};
`}
      }`,getRunData:()=>({outputs:[{dims:O,dataType:i.dataType}],dispatchGroup:{x:Math.ceil(T/64)},programUniforms:[{type:12,data:T},{type:1,data:L},{type:1,data:z},..._A(v,O)]})}},Kl=i=>{let u=i.customDataBuffer;return new Uint32Array(u,u.byteOffset,1)[0]},Zl=(i,u)=>{let h=[],w=[],B=[],E=Kl(i);if(u.antialias!==0)throw Error("Only default value (0) for Antialias attribute is supported");So(i.inputs,u,E,h,w,B),i.compute(Ul(i.inputs[0],u,E,h,w,B),{inputs:[0]})},Xl=i=>{let u=i.antialias,h=i.axes,w=i.coordinateTransformMode,B=i.cubicCoeffA,E=i.excludeOutside!==0,v=i.extrapolationValue,z=i.keepAspectRatioPolicy,O=i.mode,L=i.nearestMode===""?"simple":i.nearestMode;return Ze({antialias:u,axes:h,coordinateTransformMode:w,cubicCoeffA:B,excludeOutside:E,extrapolationValue:v,keepAspectRatioPolicy:z,mode:O,nearestMode:L})}}),Sr=Pe(()=>{Mt(),St(),Zr(),Yt(),ql=(i,u)=>{let[h,w,B,E]=i,{numHeads:v,rotaryEmbeddingDim:z}=u;if(h.dims.length!==3&&h.dims.length!==4)throw new Error(`Input 'x' is expected to have 3 or 4 dimensions, got ${h.dims.length}`);if(!Le.areEqual(w.dims,[])&&!Le.areEqual(w.dims,[1])&&w.dims.length!==2)throw new Error(`Input 'position_ids' is expected to have 0, 1, or 2 dimensions, got ${w.dims.length}`);if(B.dims.length!==2)throw new Error(`Input 'cos_cache' is expected to have 2 dimensions, got ${B.dims.length}`);if(E.dims.length!==2)throw new Error(`Input 'sin_cache' is expected to have 2 dimensions, got ${E.dims.length}`);if(!Le.areEqual(B.dims,E.dims))throw new Error("Inputs 'cos_cache' and 'sin_cache' are expected to have the same shape");if(z>0&&v===0)throw new Error("num_heads must be provided if rotary_embedding_dim is specified");let O=h.dims[0],L=h.dims[h.dims.length-2],ee=B.dims[0],te=Le.sizeFromDimension(h.dims,1)/L,T=z===0?2*B.dims[1]:te/v;if(z>T)throw new Error("rotary_embedding_dim must be less than or equal to head_size");if(w.dims.length===2){if(O!==w.dims[0])throw new Error(`Input 'position_ids' dimension 0 should be of size batch_size, got ${w.dims[0]}`);if(L!==w.dims[1])throw new Error(`Input 'position_ids' dimension 1 should be of size sequence_length, got ${w.dims[1]}`)}if(T/2!==B.dims[1]&&z/2!==B.dims[1])throw new Error(`Input 'cos_cache' dimension 1 should be same as head_size / 2 or rotary_embedding_dim / 2, got ${B.dims[1]}`);if(L>ee)throw new Error("Updating cos_cache and sin_cache in RotaryEmbedding is not currently supported")},Jl=(i,u)=>{let{interleaved:h,numHeads:w,rotaryEmbeddingDim:B,scale:E}=u,v=i[0].dims[0],z=Le.sizeFromDimension(i[0].dims,1),O=i[0].dims[i[0].dims.length-2],L=z/O,ee=i[2].dims[1],te=B===0?2*ee:L/w,T=new Array(v,O,L/te,te-ee),le=Le.computeStrides(T),de=[{type:1,data:E},{type:12,data:T},{type:12,data:le},...i[0].dims.length===3?new Array({type:12,data:[z,L,te,1]}):[],...i[0].dims.length===4?new Array({type:12,data:[z,te,O*te,1]}):[],..._A(i[0].dims,i[1].dims,i[2].dims,i[3].dims,i[0].dims)];return{name:"RotaryEmbedding",shaderCache:{hint:Ze({interleaved:h}).cacheKey,inputDependencies:["rank","rank","rank","rank"]},getShaderSource:we=>{let be=pA("input",i[0].dataType,i[0].dims.length),Me=pA("position_ids",i[1].dataType,i[1].dims.length),Fe=pA("cos_cache",i[2].dataType,i[2].dims.length),We=pA("sin_cache",i[3].dataType,i[3].dims.length),$e=$A("output",i[0].dataType,i[0].dims.length);return we.registerUniforms([{name:"scale",type:"f32"},{name:"global_shape",type:"u32",length:T.length},{name:"global_strides",type:"u32",length:le.length},{name:"input_output_strides",type:"u32",length:le.length}]),`
        ${we.declareVariables(be,Me,Fe,We,$e)}

        ${we.mainStart(jt)}
          let half_rotary_emb_dim = uniforms.${Fe.name}_shape[1];
          let bsnh = global_idx / uniforms.global_strides % uniforms.global_shape;
          let size = uniforms.global_shape[0] * uniforms.global_strides[0];
          ${we.guardAgainstOutOfBoundsWorkgroupSizes("size")}

          if (bsnh[3] < half_rotary_emb_dim) {
            let position_ids_idx =
                ${Me.broadcastedIndicesToOffset("bsnh.xy",$A("",Me.type.tensor,2))};
            let position_id =
                u32(${Me.getByOffset("position_ids_idx")}) + select(0, bsnh[1], position_ids_idx == 0);
            let i = dot(bsnh, uniforms.input_output_strides) + select(0, bsnh[3], ${h});
            let j = i + select(half_rotary_emb_dim, 1, ${h});
            let re = ${be.getByOffset("i")} * ${Fe.get("position_id","bsnh[3]")} -
                ${be.getByOffset("j")} * ${We.get("position_id","bsnh[3]")};
            ${$e.setByOffset("i","re")}
            let im = ${be.getByOffset("i")} * ${We.get("position_id","bsnh[3]")} +
                ${be.getByOffset("j")} * ${Fe.get("position_id","bsnh[3]")};
            ${$e.setByOffset("j","im")}
          } else {
            let k = dot(bsnh, uniforms.input_output_strides) + half_rotary_emb_dim;
            ${$e.setByOffset("k",be.getByOffset("k"))}
          }
        }`},getRunData:()=>({outputs:[{dims:i[0].dims,dataType:i[0].dataType}],dispatchGroup:{x:Math.ceil(Le.size(T)/jt)},programUniforms:de})}},_l=(i,u)=>{ql(i.inputs,u),i.compute(Jl(i.inputs,u))}}),Lr=Pe(()=>{Mt(),St(),Yt(),$l=i=>{if(!i||i.length<3)throw new Error("layerNorm requires at least 3 inputs.");let u=i[0],h=i[1],w=i[2];if(u.dataType!==h.dataType||u.dataType!==w.dataType)throw new Error("All inputs must have the same data type");if(u.dims.length!==3&&u.dims.length!==2)throw new Error("Input must be 2D or 3D");if(h.dims.length!==3&&h.dims.length!==2)throw new Error("Skip must be 2D or 3D");let B=u.dims[u.dims.length-1],E=u.dims[u.dims.length-2];if(h.dims[h.dims.length-1]!==B)throw new Error("Skip must have the same hidden size as input");if(h.dims[h.dims.length-2]!==E)throw new Error("Skip must have the same sequence length as input");if(w.dims.length!==1)throw new Error("Gamma must be 1D");if(w.dims[w.dims.length-1]!==B)throw new Error("Gamma must have the same hidden size as input");if(i.length>3){let v=i[3];if(v.dims.length!==1)throw new Error("Beta must be 1D");if(v.dims[v.dims.length-1]!==B)throw new Error("Beta must have the same hidden size as input")}if(i.length>4){let v=i[4];if(v.dims.length!==1)throw new Error("Bias must be 1D");if(v.dims[v.dims.length-1]!==B)throw new Error("Bias must have the same hidden size as input")}},e1=(i,u,h,w)=>{let B=u.simplified,E=i[0].dims,v=Le.size(E),z=E,O=v,L=E.slice(-1)[0],ee=w?E.slice(0,-1).concat(1):[],te=!B&&i.length>3,T=i.length>4,le=w&&h>1,de=w&&h>2,we=h>3,be=64,Me=Zt(L),Fe=[{type:12,data:O},{type:12,data:Me},{type:12,data:L},{type:1,data:u.epsilon}],We=[{dims:z,dataType:i[0].dataType}];return h>1&&We.push({dims:ee,dataType:1}),h>2&&We.push({dims:ee,dataType:1}),h>3&&We.push({dims:E,dataType:i[0].dataType}),{name:"SkipLayerNormalization",shaderCache:{hint:`${Me};${le};${de};${we}`,inputDependencies:i.map(($e,eA)=>"type")},getShaderSource:$e=>{let eA=[pA("x",i[0].dataType,i[0].dims,Me),pA("skip",i[1].dataType,i[1].dims,Me),pA("gamma",i[2].dataType,i[2].dims,Me)];te&&eA.push(pA("beta",i[3].dataType,i[3].dims,Me)),T&&eA.push(pA("bias",i[4].dataType,i[4].dims,Me)),eA.push($A("output",i[0].dataType,z,Me)),le&&eA.push($A("mean_output",1,ee)),de&&eA.push($A("inv_std_output",1,ee)),we&&eA.push($A("input_skip_bias_sum",i[0].dataType,z,Me));let aA=zt(i[0].dataType),zA=zt(1,Me);return`

      ${$e.registerUniforms([{name:"output_size",type:"u32"},{name:"components",type:"u32"},{name:"hidden_size",type:"u32"},{name:"epsilon",type:"f32"}]).declareVariables(...eA)}
      var<workgroup> sum_shared : array<${zA}, 64>;
      var<workgroup> sum_squared_shared : array<${zA}, 64>;

      ${$e.mainStart([be,1,1])}
        let ix = local_id.x;
        let iy = global_id.x / 64;

        let hidden_size_vectorized: u32 = uniforms.hidden_size / uniforms.components;
        var stride = hidden_size_vectorized / 64;
        let offset = ix * stride + iy * hidden_size_vectorized;
        let offset1d = stride * ix;
        if (ix == 63) {
          stride = hidden_size_vectorized - stride * ix;
        }
        for (var i: u32 = 0; i < stride; i++) {
          let skip_value = skip[offset + i];
          let bias_value = ${T?"bias[offset1d + i]":aA+"(0.0)"};
          let input_value = x[offset + i];
          let value = input_value + skip_value + bias_value;
          ${we?"input_skip_bias_sum[offset + i] = value;":""}
          output[offset + i] = value;
          let f32_value = ${hn(aA,Me,"value")};
          sum_shared[ix] += f32_value;
          sum_squared_shared[ix] += f32_value * f32_value;
        }
        workgroupBarrier();

        var reduce_size : u32 = 64;
        for (var curr_size = reduce_size >> 1;  curr_size > 0; curr_size = reduce_size >> 1) {
          reduce_size = curr_size + (reduce_size & 1);
          if (ix < curr_size) {
            sum_shared[ix] += sum_shared[ix + reduce_size];
            sum_squared_shared[ix] += sum_squared_shared[ix + reduce_size];
          }
          workgroupBarrier();
        }

        let sum = sum_shared[0];
        let square_sum = sum_squared_shared[0];
        let mean = ${ir("sum",Me)} / f32(uniforms.hidden_size);
        let inv_std_dev = inverseSqrt(${ir("square_sum",Me)} / f32(uniforms.hidden_size) ${B?"":"- mean * mean"} + uniforms.epsilon);
        ${le?"mean_output[global_idx] = mean;":""}
        ${de?"inv_std_output[global_idx] = inv_std_dev;":""}

        for (var i: u32 = 0; i < stride; i++) {
          output[offset + i] = (output[offset + i] ${B?"":`- ${aA}(mean)`}) *
            ${aA}(inv_std_dev) * gamma[offset1d + i]
            ${te?"+ beta[offset1d + i]":""};
        }
      }`},getRunData:()=>({outputs:We,dispatchGroup:{x:Math.ceil(O/L)},programUniforms:Fe})}},Ho=(i,u)=>{$l(i.inputs);let h=[0];i.outputCount>1&&h.push(-3),i.outputCount>2&&h.push(-3),i.outputCount>3&&h.push(3),i.compute(e1(i.inputs,u,i.outputCount,!1),{outputs:h})}}),yr=Pe(()=>{Mt(),St(),Zr(),Yt(),A1=(i,u)=>{if(!i||i.length<1)throw new Error("too few inputs");if(u.axes.length!==0){if(u.axes.length!==u.starts.length||u.axes.length!==u.ends.length)throw new Error("axes, starts and ends must have the same length")}else if(u.starts.length!==u.ends.length)throw new Error("starts and ends must have the same length");i.slice(1).forEach((h,w)=>{if(i[w+1].dataType!==6&&i[w+1].dataType!==7)throw new Error(`Input ${w} must be an array of int32 or int64`)})},R0=(i,u)=>{let h=[];if(i.length>u)if(i[u].dataType===7)i[u].getBigInt64Array().forEach(w=>h.push(Number(w)));else{if(i[u].dataType!==6)throw new Error(`Input ${u} must be an array of int32 or int64`);i[u].getInt32Array().forEach(w=>h.push(Number(w)))}return h},Ro=(i,u)=>{if(i.length>1){let h=R0(i,1),w=R0(i,2),B=R0(i,3);return B.length===0&&(B=[...Array(i[0].dims.length).keys()]),Ze({starts:h,ends:w,axes:B})}return u},Wo=(i,u,h,w,B)=>{let E=i;return i<0&&(E+=h[w[u]]),B[u]<0?Math.max(0,Math.min(E,h[w[u]]-1)):Math.max(0,Math.min(E,h[w[u]]))},t1=(i,u,h)=>`fn calculateInputIndices(output_indices: ${u.type.indices}) -> ${i.type.indices} {
          var input_indices: ${i.type.indices};
          var carry = 0u;
          for (var i = ${h.length}; i >= 0; i--) {
            let input_shape_i = ${it("uniforms.input_shape","i",h.length)};
            let steps_i = ${it("uniforms.steps","i",h.length)};
            let signs_i = ${it("uniforms.signs","i",h.length)};
            let starts_i = ${it("uniforms.starts","i",h.length)};
            var output_index = ${u.indicesGet("output_indices","i")};
            var input_index = output_index * steps_i + starts_i + carry;
            carry = input_index / input_shape_i;
            input_index = input_index % input_shape_i;
            if (signs_i < 0) {
              input_index = input_shape_i - input_index - 1u + starts_i;
            }
            ${i.indicesSet("input_indices","i","input_index")};
          }
          return input_indices;
      }`,ur=(i,u)=>{let h=i[0].dims,w=Le.size(h),B=u.axes.length>0?Le.normalizeAxes(u.axes,h.length):[...Array(h.length).keys()],E=R0(i,4);E.forEach(be=>be!==0||(()=>{throw new Error("step cannot be 0")})),E.length===0&&(E=Array(B.length).fill(1));let v=u.starts.map((be,Me)=>Wo(be,Me,h,B,E)),z=u.ends.map((be,Me)=>Wo(be,Me,h,B,E));if(B.length!==v.length||B.length!==z.length)throw new Error("start, ends and axes should have the same number of elements");if(B.length!==h.length)for(let be=0;be<h.length;++be)B.includes(be)||(v.splice(be,0,0),z.splice(be,0,h[be]),E.splice(be,0,1));let O=E.map(be=>Math.sign(be));E.forEach((be,Me,Fe)=>{if(be<0){let We=(z[Me]-v[Me])/be,$e=v[Me],eA=$e+We*E[Me];v[Me]=eA,z[Me]=$e,Fe[Me]=-be}});let L=h.slice(0);B.forEach((be,Me)=>{L[be]=Math.ceil((z[be]-v[be])/E[be])});let ee={dims:L,dataType:i[0].dataType},te=$A("output",i[0].dataType,L.length),T=pA("input",i[0].dataType,i[0].dims.length),le=Le.size(L),de=[{name:"outputSize",type:"u32"},{name:"starts",type:"u32",length:v.length},{name:"signs",type:"i32",length:O.length},{name:"steps",type:"u32",length:E.length}],we=[{type:12,data:le},{type:12,data:v},{type:6,data:O},{type:12,data:E},..._A(i[0].dims,L)];return{name:"Slice",shaderCache:{hint:`${O.length}_${v.length}_${E.length}`,inputDependencies:["rank"]},getShaderSource:be=>`
      ${be.registerUniforms(de).declareVariables(T,te)}
        ${t1(T,te,h)}
        ${be.mainStart()}
          ${be.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
          let output_indices = ${te.offsetToIndices("global_idx")};
          let input_indices = calculateInputIndices(output_indices);
          ${te.setByOffset("global_idx",T.getByIndices("input_indices"))}
      }`,getRunData:()=>({outputs:[ee],dispatchGroup:{x:Math.ceil(w/64)},programUniforms:we})}},F1=(i,u)=>{A1(i.inputs,u);let h=Ro(i.inputs,u);i.compute(ur(i.inputs,h),{inputs:[0]})},S1=i=>{let u=i.starts,h=i.ends,w=i.axes;return Ze({starts:u,ends:h,axes:w})}}),In=Pe(()=>{Mt(),St(),Zr(),Os(),Yt(),N1=i=>{if(!i||i.length!==1)throw new Error("Softmax op requires 1 input.")},Vo=(i,u)=>{let h,w=i.inputs[0],B=w.dims,E=Le.size(B),v=B.length,z=Le.normalizeAxis(u.axis,v),O=z<B.length-1,L=[];O?(L=Array.from({length:v},(eA,aA)=>aA),L[z]=v-1,L[v-1]=z,h=i.compute(Qn(w,L),{inputs:[w],outputs:[-1]})[0]):h=w;let ee=h.dims,te=ee[v-1],T=E/te,le=Zt(te),de=te/le,we=64;T===1&&(we=256);let be=pA("x",h.dataType,h.dims,le),Me=$A("result",h.dataType,h.dims,le),Fe=be.type.value,We=zt(h.dataType)==="f32"?`var threadMax = ${Fe}(-3.402823e+38f);`:`var threadMax = ${Fe}(-65504.0h);`,$e=i.compute({name:"Softmax",shaderCache:{hint:`${le};${we}`,inputDependencies:["type"]},getRunData:()=>({outputs:[{dims:ee,dataType:h.dataType}],dispatchGroup:{x:T},programUniforms:[{type:6,data:de}]}),getShaderSource:eA=>`
      var<workgroup> rowMaxShared : ${Fe};
      var<workgroup> rowSumShared : ${Fe};
      var<workgroup> threadShared : array<${Fe}, ${we}>;

      fn getValue(row: i32, col: i32, row_stride: i32) -> ${Fe} {
        let index = row * row_stride + col;
        return x[index];
      }

      fn setValue(row: i32, col: i32, row_stride: i32, value: ${Fe}) {
        let index = row * row_stride + col;
        result[index] = value;
      }
      ${eA.registerUniform("packedCols","i32").declareVariables(be,Me)}
      ${eA.mainStart(we)}
        let gindex = i32(global_idx);
        let lindex = i32(local_idx);
        const wg = ${we};
        let row = gindex / wg;
        let cols = uniforms.packedCols;
        let row_stride : i32 = uniforms.packedCols;

        // find the rows max
        ${We}
        for (var col = lindex; col < cols; col += wg) {
          let value = getValue(row, col, row_stride);
          threadMax = max(threadMax, value);
        }
        if (lindex < cols) {
          threadShared[lindex] = threadMax;
        }
        workgroupBarrier();

        var reduceSize = min(cols, wg);
        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {
          reduceSize = currSize + (reduceSize & 1);
          if (lindex < currSize) {
            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowMaxShared = ${Fe}(${((aA,zA)=>zA===4?`max(max(${aA}.x, ${aA}.y), max(${aA}.z, ${aA}.w))`:zA===2?`max(${aA}.x, ${aA}.y)`:zA===3?`max(max(${aA}.x, ${aA}.y), ${aA}.z)`:aA)("threadShared[0]",le)});
        }
        workgroupBarrier();

        // find the rows sum
        var threadSum = ${Fe}(0.0);
        for (var col = lindex; col < cols; col += wg) {
          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);
          threadSum += subExp;
        }
        threadShared[lindex] = threadSum;
        workgroupBarrier();

        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {
          if (lindex < currSize) {
            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowSumShared = ${Fe}(${ir("threadShared[0]",le)});
        }
        workgroupBarrier();

        // calculate final value for each element in the row
        for (var col = lindex; col < cols; col += wg) {
          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;
          setValue(row, col, row_stride, value);
        }
      }`},{inputs:[h],outputs:[O?-1:0]})[0];O&&i.compute(Qn($e,L),{inputs:[$e]})},r1=(i,u)=>{N1(i.inputs),Vo(i,u)},n1=i=>Ze({axis:i.axis})}),cn=Pe(()=>{Mt(),St(),Yt(),jo=i=>Array.from(i.getBigInt64Array(),Number),a1=i=>{if(!i||i.length!==2)throw new Error("Tile requires 2 inputs.");if(i[0].dataType!==1&&i[0].dataType!==10&&i[0].dataType!==6&&i[0].dataType!==12)throw new Error("Tile only support float, float16, int32, and uint32 data types");if(i[1].dataType!==7)throw new Error("Tile `repeats` input should be of int64 data type");if(i[1].dims.length!==1)throw new Error("Tile `repeats` input should be 1-D");if(jo(i[1]).length!==i[0].dims.length)throw new Error("Tile `repeats` input should have same number of elements as rank of input data tensor")},Uo=(i,u)=>{let h=[];for(let w=0;w<i.length;++w)h.push(i[w]*u[w]);return h},Ko=(i,u)=>{let h=i[0].dims,w=u??jo(i[1]),B=Uo(h,w),E=Le.size(B),v=i[0].dataType,z=pA("input",v,h.length),O=$A("output",v,B.length);return{name:"Tile",shaderCache:{hint:`${w}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:B,dataType:i[0].dataType}],dispatchGroup:{x:Math.ceil(E/64)},programUniforms:[{type:12,data:E},..._A(i[0].dims,B)]}),getShaderSource:L=>`
      const inputShape = ${z.indices(...h)};
      ${L.registerUniform("output_size","u32").declareVariables(z,O)}
      ${L.mainStart()}
      ${L.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let output_indices = ${O.offsetToIndices("global_idx")};
      var input_indices: ${z.type.indices};
      for (var i = 0; i < ${h.length}; i++) {
        let input_dim_i = ${z.indicesGet("uniforms.input_shape","i")};
        let input_dim_value = ${O.indicesGet("output_indices","i")}  % input_dim_i;

        ${z.indicesSet("input_indices","i","input_dim_value")}
      }
      ${O.setByOffset("global_idx",z.getByIndices("input_indices"))}
    }`}},O1=i=>{a1(i.inputs),i.compute(Ko(i.inputs),{inputs:[0]})}}),gn=Pe(()=>{Mt(),St(),Yt(),s1=(i,u,h,w,B)=>{let E,v=$A("output_data",B,h.length,4),z=pA("a_data",u[1].dataType,u[1].dims.length,4),O=pA("b_data",u[2].dataType,u[2].dims.length,4),L=pA("c_data",u[0].dataType,u[0].dims.length,4),ee=(te,T,le)=>`select(${T}, ${te}, ${le})`;if(w){let te=(T,le,de="")=>{let we=`a_data[index_a${le}][component_a${le}]`,be=`b_data[index_b${le}][component_b${le}]`,Me=`bool(c_data[index_c${le}] & (0xffu << (component_c${le} * 8)))`;return`
            let output_indices${le} = ${v.offsetToIndices(`global_idx * 4u + ${le}u`)};
            let offset_a${le} = ${z.broadcastedIndicesToOffset(`output_indices${le}`,v)};
            let offset_b${le} = ${O.broadcastedIndicesToOffset(`output_indices${le}`,v)};
            let offset_c${le} = ${L.broadcastedIndicesToOffset(`output_indices${le}`,v)};
            let index_a${le} = offset_a${le} / 4u;
            let index_b${le} = offset_b${le} / 4u;
            let index_c${le} = offset_c${le} / 4u;
            let component_a${le} = offset_a${le} % 4u;
            let component_b${le} = offset_b${le} % 4u;
            let component_c${le} = offset_c${le} % 4u;
            ${T}[${le}] = ${de}(${ee(we,be,Me)});
          `};E=B===9?`
            var data = vec4<u32>(0);
            ${te("data",0,"u32")}
            ${te("data",1,"u32")}
            ${te("data",2,"u32")}
            ${te("data",3,"u32")}
            output_data[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:`
            ${te("output_data[global_idx]",0)}
            ${te("output_data[global_idx]",1)}
            ${te("output_data[global_idx]",2)}
            ${te("output_data[global_idx]",3)}
          `}else E=v.setByOffset("global_idx",ee(z.getByOffset("global_idx"),O.getByOffset("global_idx"),L.getByOffset("global_idx")));return`
        ${i.registerUniform("vec_size","u32").declareVariables(L,z,O,v)}
        ${i.mainStart()}
        ${i.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${E}
      }`},i1=i=>{let u=i[1].dims,h=i[2].dims,w=i[0].dims,B=i[1].dataType,E=!(Le.areEqual(u,h)&&Le.areEqual(h,w)),v=u,z=Le.size(u);if(E){let L=PA.calcShape(PA.calcShape(u,h,!1),w,!1);if(!L)throw new Error("Can't perform where op on the given tensors");v=L,z=Le.size(v)}let O=Math.ceil(z/4);return{name:"Where",shaderCache:{inputDependencies:["rank","rank","rank"]},getShaderSource:L=>s1(L,i,v,E,B),getRunData:()=>({outputs:[{dims:v,dataType:B}],dispatchGroup:{x:Math.ceil(z/64/4)},programUniforms:[{type:12,data:O},..._A(w,u,h,v)]})}},Zo=i=>{i.compute(i1(i.inputs))}}),en=Pe(()=>{U1(),r2(),K1(),Z1(),X1(),q1(),J1(),Ot(),Pn(),Ln(),Kn(),e0(),vc(),tc(),rc(),U(),ne(),Ce(),qe(),lA(),KA(),ZA(),WA(),rt(),dt(),oA(),Gt(),or(),Tt(),Lt(),Ht(),t2(),lr(),Sr(),Lr(),yr(),In(),wA(),cn(),Os(),n2(),gn(),L1=new Map([["Abs",[Qi]],["Acos",[da]],["Acosh",[E0]],["Add",[hr]],["ArgMax",[I0,js]],["ArgMin",[os,js]],["Asin",[tn]],["Asinh",[ka]],["Atan",[rn]],["Atanh",[xa]],["Attention",[w0]],["AveragePool",[Go,yl]],["BatchNormalization",[B0]],["BiasAdd",[y0]],["BiasSplitGelu",[Cn]],["Cast",[Ti,Ks]],["Ceil",[Mr]],["Clip",[Zs]],["Concat",[ds,z0]],["Conv",[Re,ce]],["ConvTranspose",[qt,At]],["Cos",[Gs]],["Cosh",[Pi]],["CumSum",[mr,Cr]],["DepthToSpace",[Kr,on]],["DequantizeLinear",[Po,ro]],["Div",[ji]],["Einsum",[hs,ms]],["Elu",[cs,nn]],["Equal",[za]],["Erf",[zi]],["Exp",[Fi]],["Expand",[ti]],["FastGelu",[B2]],["Floor",[Si]],["FusedConv",[Re,ce]],["Gather",[Co,E2]],["GatherElements",[wo,F2]],["GatherBlockQuantized",[T2,P2]],["GatherND",[G2,bo]],["Gelu",[Xs]],["Gemm",[O2,ko]],["GlobalAveragePool",[Qo,El]],["GlobalMaxPool",[Dl,Gl]],["Greater",[Ki]],["GreaterOrEqual",[Fa]],["GridSample",[j2,U2]],["GroupQueryAttention",[nl]],["HardSigmoid",[Wr,Js]],["InstanceNormalization",[sl]],["LayerNormalization",[ll]],["LeakyRelu",[fa,nn]],["Less",[P0]],["LessOrEqual",[ra]],["Log",[gs]],["MatMul",[cl]],["MatMulNBits",[dl,fl]],["MaxPool",[Ml,to]],["Mul",[us]],["MultiHeadAttention",[Ns,Z2]],["Neg",[G0]],["Not",[qs]],["Pad",[kl]],["Pow",[T0]],["QuickGelu",[Q0,nn]],["Range",[zl]],["Reciprocal",[Ni]],["ReduceMin",[Es]],["ReduceMean",[Ei]],["ReduceMax",[is]],["ReduceSum",[Nr]],["ReduceProd",[Mi]],["ReduceL1",[Vs]],["ReduceL2",[yn]],["ReduceLogSum",[b0]],["ReduceLogSumExp",[Nn]],["ReduceSumSquare",[C0]],["Relu",[Oi]],["Resize",[Zl,Xl]],["RotaryEmbedding",[_l]],["ScatterND",[Fo,Sl]],["Sigmoid",[va]],["Sin",[Li]],["Sinh",[_s]],["Slice",[F1,S1]],["SkipLayerNormalization",[Ho]],["Split",[el,Al]],["Sqrt",[Ds]],["Softmax",[r1,n1]],["Sub",[Ui]],["Tan",[On]],["Tanh",[Yi]],["ThresholdedRelu",[Ri,nn]],["Tile",[O1]],["Transpose",[Hs,Dt]],["Where",[Zo]]])}),aa=Pe(()=>{dA(),Cs(),Yt(),Y1=class{constructor(i){this.backend=i,this.repo=new Map,this.attributesBound=!1}getArtifact(i){return this.repo.get(i)}setArtifact(i,u){this.repo.set(i,u)}run(i,u,h,w,B){Oe(i.programInfo.name);let E=this.backend.device,v=this.backend.getComputePassEncoder();this.backend.writeTimestamp(2*this.backend.pendingDispatchNumber);let z=[];for(let L of u)z.push({binding:z.length,resource:{buffer:L.buffer}});for(let L of h)z.push({binding:z.length,resource:{buffer:L.buffer}});B&&z.push({binding:z.length,resource:B});let O=E.createBindGroup({layout:i.computePipeline.getBindGroupLayout(0),entries:z,label:i.programInfo.name});if(this.backend.sessionStatus==="capturing"){let L={kernelId:this.backend.currentKernelId,computePipeline:i.computePipeline,bindGroup:O,dispatchGroup:w};this.backend.capturedCommandList.get(this.backend.currentSessionId).push(L)}v.setPipeline(i.computePipeline),v.setBindGroup(0,O),v.dispatchWorkgroups(...w),this.backend.writeTimestamp(2*this.backend.pendingDispatchNumber+1),this.backend.pendingDispatchNumber++,(this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber||this.backend.queryType==="at-passes")&&this.backend.endComputePass(),this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber&&this.backend.flush(),AA(i.programInfo.name)}dispose(){}build(i,u){Oe(i.name);let h=this.backend.device,w=[];[{feature:"shader-f16",extension:"f16"},{feature:"subgroups",extension:"subgroups"},{feature:"subgroups-f16",extension:"subgroups_f16"}].forEach(L=>{h.features.has(L.feature)&&w.push(`enable ${L.extension};`)});let B=Fr(u,this.backend.device.limits),E=i.getShaderSource(B),v=`${w.join(`
`)}
${B.additionalImplementations}
${E}`,z=h.createShaderModule({code:v,label:i.name});Ft("verbose",()=>`[WebGPU] ${i.name} shader code: ${v}`);let O=h.createComputePipeline({compute:{module:z,entryPoint:"main"},layout:"auto",label:i.name});return AA(i.name),{programInfo:i,computePipeline:O,uniformVariablesInfo:B.variablesInfo}}normalizeDispatchGroupSize(i){let u=typeof i=="number"?i:i.x,h=typeof i=="number"?1:i.y||1,w=typeof i=="number"?1:i.z||1,B=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(u<=B&&h<=B&&w<=B)return[u,h,w];let E=u*h*w,v=Math.ceil(Math.sqrt(E));if(v>B){if(v=Math.ceil(Math.cbrt(E)),v>B)throw new Error("Total dispatch size exceeds WebGPU maximum.");return[v,v,v]}return[v,v,1]}}}),br=Pe(()=>{dA(),Mt(),Cs(),w1(),V1(),en(),aa(),o1=(i,u)=>{if(u.length!==i.length)throw new Error(`inputDependencies length ${u.length} is not equal to inputTensors length ${i.length}.`);let h=[];for(let w=0;w<i.length;++w){let B=i[w].dataType;switch(u[w]){case"none":h.push("");break;case"type":h.push(`${B}`);break;case"rank":{let E=i[w].dims.length;h.push(`${B};${E}`);break}case"dims":{let E=i[w].dims.join(",");h.push(`${B};${E}`);break}default:throw new Error(`unsupported input dependency: ${u[w]}`)}}return h.join("|")},l1=(i,u,h)=>{var B,E;let w=i.name;return(B=i.shaderCache)!=null&&B.hint&&(w+="["+i.shaderCache.hint+"]"),w+=":"+h+`:${o1(u,((E=i.shaderCache)==null?void 0:E.inputDependencies)??new Array(u.length).fill("dims"))}`,w},c1=class{constructor(i){i&&(this.architecture=i.architecture,this.vendor=i.vendor)}isArchitecture(i){return this.architecture===i}isVendor(i){return this.vendor===i}},g1=class{constructor(i){this.subgroupsSupported=i.features.has("subgroups"),this.subgroupsF16Supported=i.features.has("subgroups");let u=i.limits;this.subgroupsSupported&&u.minSubgroupSize&&u.maxSubgroupSize?this.subgroupSizeRange=[u.minSubgroupSize,u.maxSubgroupSize]:this.subgroupSizeRange=void 0}},u1=class{constructor(){this.currentSessionId=null,this.currentKernelId=null,this.commandEncoder=null,this.computePassEncoder=null,this.maxDispatchNumber=16,this.pendingDispatchNumber=0,this.pendingKernels=[],this.pendingQueries=new Map,this.sessionStatus="default",this.capturedCommandList=new Map,this.capturedPendingKernels=new Map,this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(this.currentKernelId===null)throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let i=this.kernelCustomData.get(this.currentKernelId);return i||(i={},this.kernelCustomData.set(this.currentKernelId,i)),i}async initialize(i,u){this.env=i;let h=[],w={requiredLimits:{maxComputeWorkgroupStorageSize:u.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:u.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:u.limits.maxStorageBufferBindingSize,maxBufferSize:u.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:u.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:u.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:u.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:u.limits.maxComputeWorkgroupSizeZ},requiredFeatures:h},B=E=>u.features.has(E)&&h.push(E)&&!0;B("chromium-experimental-timestamp-query-inside-passes")||B("timestamp-query"),B("shader-f16"),B("subgroups")&&B("subgroups-f16"),this.device=await u.requestDevice(w),this.deviceInfo=new g1(this.device),this.adapterInfo=new c1(u.info||await u.requestAdapterInfo()),this.gpuDataManager=Se(this),this.programManager=new Y1(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,Da(i.logLevel,!!i.debug),this.device.onuncapturederror=E=>{E.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${E.error.message}`)},Object.defineProperty(this.env.webgpu,"device",{value:this.device,writable:!1,enumerable:!0,configurable:!1}),Object.defineProperty(this.env.webgpu,"adapter",{value:u,writable:!1,enumerable:!0,configurable:!1}),this.setQueryType()}dispose(){typeof this.querySet<"u"&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){let i=this.getCommandEncoder(),u={};this.queryType==="at-passes"&&(u.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:2*this.pendingDispatchNumber,endOfPassWriteIndex:2*this.pendingDispatchNumber+1}),this.computePassEncoder=i.beginComputePass(u)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){if(!this.commandEncoder)return;let i;Oe(),this.endComputePass(),this.queryType!=="none"&&(this.commandEncoder.resolveQuerySet(this.querySet,0,2*this.pendingDispatchNumber,this.queryResolveBuffer,0),i=this.device.createBuffer({size:2*this.pendingDispatchNumber*8,usage:GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST}),this.pendingQueries.set(i,this.pendingKernels),this.pendingKernels=[],this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,i,0,2*this.pendingDispatchNumber*8)),this.device.queue.submit([this.commandEncoder.finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0,this.queryType!=="none"&&i.mapAsync(GPUMapMode.READ).then(()=>{var w;let u=new BigUint64Array(i.getMappedRange()),h=this.pendingQueries.get(i);for(let B=0;B<u.length/2;B++){let E=h[B],v=E.kernelId,z=this.kernels.get(v),O=z.kernelType,L=z.kernelName,ee=E.programName,te=E.inputTensorViews,T=E.outputTensorViews,le=u[2*B],de=u[2*B+1];typeof this.queryTimeBase>"u"&&(this.queryTimeBase=le);let we=Number(le-this.queryTimeBase),be=Number(de-this.queryTimeBase);if(!Number.isSafeInteger(we)||!Number.isSafeInteger(be))throw new RangeError("incorrect timestamp range");if((w=this.env.webgpu.profiling)!=null&&w.ondata)this.env.webgpu.profiling.ondata({version:1,inputsMetadata:te.map(Me=>({dims:Me.dims,dataType:ca(Me.dataType)})),outputsMetadata:T.map(Me=>({dims:Me.dims,dataType:ca(Me.dataType)})),kernelId:v,kernelType:O,kernelName:L,programName:ee,startTime:we,endTime:be});else{let Me="";te.forEach((We,$e)=>{Me+=`input[${$e}]: [${We.dims}] | ${ca(We.dataType)}, `});let Fe="";T.forEach((We,$e)=>{Fe+=`output[${$e}]: [${We.dims}] | ${ca(We.dataType)}, `}),console.log(`[profiling] kernel "${v}|${O}|${L}|${ee}" ${Me}${Fe}execution time: ${be-we} ns`)}Ye("GPU",`${ee}::${le}::${de}`)}i.unmap(),this.pendingQueries.delete(i)}),AA()}run(i,u,h,w,B,E){Oe(i.name);let v=[];for(let Fe=0;Fe<u.length;++Fe){let We=u[Fe].data;if(We===0)continue;let $e=this.gpuDataManager.get(We);if(!$e)throw new Error(`no GPU data for input: ${We}`);v.push($e)}let{outputs:z,dispatchGroup:O,programUniforms:L}=i.getRunData(u),ee=h.length===0?z.map((Fe,We)=>We):h;if(ee.length!==z.length)throw new Error(`Output size ${ee.length} must be equal to ${z.length}.`);let te,T=[],le=[];for(let Fe=0;Fe<z.length;++Fe){if(!Number.isInteger(ee[Fe])||ee[Fe]<-3||ee[Fe]>=E)throw new Error(`Invalid output index: ${ee[Fe]}`);if(ee[Fe]===-3)continue;let We=ee[Fe]===-1,$e=ee[Fe]===-2,eA=We||$e?B(z[Fe].dataType,z[Fe].dims):w(ee[Fe],z[Fe].dataType,z[Fe].dims);if(T.push(eA),eA.data===0)continue;let aA=this.gpuDataManager.get(eA.data);if(!aA)throw new Error(`no GPU data for output: ${eA.data}`);if(We&&this.temporaryData.push(aA),$e){let zA=this.kernelPersistentData.get(this.currentKernelId);zA||(zA=[],this.kernelPersistentData.set(this.currentKernelId,zA)),zA.push(aA)}le.push(aA)}if(v.length!==u.length||le.length!==T.length){if(le.length===0)return AA(i.name),T;throw new Error(`Program ${i.name} has zero-sized tensor(s) in inputs or outputs. This is not supported now.`)}if(L){let Fe=0,We=[];L.forEach(zA=>{let jA=typeof zA.data=="number"?[zA.data]:zA.data;if(jA.length===0)return;let ht,mt,Jt=zA.type===10?2:4;zA.type===10?(mt=jA.length>4?16:jA.length>2?8:jA.length*Jt,ht=jA.length>4?16:Jt*jA.length):(mt=jA.length<=2?jA.length*Jt:16,ht=16),Fe=Math.ceil(Fe/mt)*mt,We.push(Fe);let Ct=zA.type===10?8:4;Fe+=jA.length>4?Math.ceil(jA.length/Ct)*ht:jA.length*Jt});let $e=16;Fe=Math.ceil(Fe/$e)*$e;let eA=new ArrayBuffer(Fe);L.forEach((zA,jA)=>{let ht=We[jA],mt=typeof zA.data=="number"?[zA.data]:zA.data;if(zA.type===6)new Int32Array(eA,ht,mt.length).set(mt);else if(zA.type===12)new Uint32Array(eA,ht,mt.length).set(mt);else if(zA.type===10)new Uint16Array(eA,ht,mt.length).set(mt);else{if(zA.type!==1)throw new Error(`Unsupported uniform type: ${ca(zA.type)}`);new Float32Array(eA,ht,mt.length).set(mt)}});let aA=this.gpuDataManager.create(Fe,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(aA.buffer,0,eA,0,Fe),this.gpuDataManager.release(aA.id),te={offset:0,size:Fe,buffer:aA.buffer}}let de=this.programManager.normalizeDispatchGroupSize(O),we=de[1]===1&&de[2]===1,be=l1(i,u,we),Me=this.programManager.getArtifact(be);if(Me||(Me=this.programManager.build(i,de),this.programManager.setArtifact(be,Me),Ft("info",()=>`[artifact] key: ${be}, programName: ${i.name}`)),L&&Me.uniformVariablesInfo){if(L.length!==Me.uniformVariablesInfo.length)throw new Error(`Uniform variables count mismatch: expect ${Me.uniformVariablesInfo.length}, got ${L.length} in program "${Me.programInfo.name}".`);for(let Fe=0;Fe<L.length;Fe++){let We=L[Fe],$e=We.type,eA=typeof We.data=="number"?1:We.data.length,[aA,zA]=Me.uniformVariablesInfo[Fe];if($e!==aA||eA!==zA)throw new Error(`Uniform variable ${Fe} mismatch: expect type ${aA} with size ${zA}, got type ${$e} with size ${eA} in program "${Me.programInfo.name}".`)}}if(Ft("info",()=>`[ProgramManager] run "${i.name}" (key=${be}) with ${de[0]}x${de[1]}x${de[2]}`),this.queryType!=="none"||this.sessionStatus==="capturing"){let Fe={kernelId:this.currentKernelId,programName:Me.programInfo.name,inputTensorViews:u,outputTensorViews:T};this.pendingKernels.push(Fe),this.sessionStatus==="capturing"&&this.capturedPendingKernels.get(this.currentSessionId).push(Fe)}return this.programManager.run(Me,v,le,de,te),AA(i.name),T}upload(i,u){this.gpuDataManager.upload(i,u)}memcpy(i,u){this.gpuDataManager.memcpy(i,u)}async download(i,u){await this.gpuDataManager.download(i,u)}alloc(i){return this.gpuDataManager.create(i).id}free(i){return this.gpuDataManager.release(i)}createKernel(i,u,h,w){let B=L1.get(i);if(!B)throw new Error(`kernel not implemented: ${i}`);let E={kernelType:i,kernelName:w,kernelEntry:B[0],attributes:[B[1],h]};this.kernels.set(u,E)}releaseKernel(i){let u=this.kernelPersistentData.get(i);if(u){for(let h of u)this.gpuDataManager.release(h.id);this.kernelPersistentData.delete(i)}this.kernelCustomData.delete(i),this.kernels.delete(i)}computeKernel(i,u,h){let w=this.kernels.get(i);if(!w)throw new Error(`kernel not created: ${i}`);let B=w.kernelType,E=w.kernelName,v=w.kernelEntry,z=w.attributes;if(this.currentKernelId!==null)throw new Error(`kernel "[${B}] ${E}" is not allowed to be called recursively`);this.currentKernelId=i,z[0]&&(z[1]=z[0](z[1]),z[0]=void 0),Ft("info",()=>`[WebGPU] Start to run kernel "[${B}] ${E}"...`);let O=this.env.debug;this.temporaryData=[];try{return O&&this.device.pushErrorScope("validation"),v(u,z[1]),0}catch(L){return h.push(Promise.resolve(`[WebGPU] Kernel "[${B}] ${E}" failed. ${L}`)),1}finally{O&&h.push(this.device.popErrorScope().then(L=>L?`GPU validation error for kernel "[${B}] ${E}": ${L.message}`:null));for(let L of this.temporaryData)this.gpuDataManager.release(L.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(i,u,h,w){let B=this.sessionExternalDataMapping.get(i);B||(B=new Map,this.sessionExternalDataMapping.set(i,B));let E=B.get(u),v=this.gpuDataManager.registerExternalBuffer(h,w,E);return B.set(u,[v,h]),v}unregisterBuffers(i){let u=this.sessionExternalDataMapping.get(i);u&&(u.forEach(h=>this.gpuDataManager.unregisterExternalBuffer(h[0])),this.sessionExternalDataMapping.delete(i))}getBuffer(i){let u=this.gpuDataManager.get(i);if(!u)throw new Error(`no GPU data for buffer: ${i}`);return u.buffer}createDownloader(i,u,h){return async()=>{let w=await re(this,i,u);return xn(w.buffer,h)}}writeTimestamp(i){this.queryType==="inside-passes"&&this.computePassEncoder.writeTimestamp(this.querySet,i)}setQueryType(){var i;this.queryType="none",(((i=this.env.webgpu.profiling)==null?void 0:i.mode)==="default"||(typeof this.env.trace>"u"?this.env.wasm.trace:this.env.trace))&&(this.device.features.has("chromium-experimental-timestamp-query-inside-passes")?this.queryType="inside-passes":this.device.features.has("timestamp-query")&&(this.queryType="at-passes"),this.queryType!=="none"&&typeof this.querySet>"u"&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:2*this.maxDispatchNumber}),this.queryResolveBuffer=this.device.createBuffer({size:2*this.maxDispatchNumber*8,usage:GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE})))}captureBegin(){Ft("info","captureBegin"),this.capturedCommandList.get(this.currentSessionId)||this.capturedCommandList.set(this.currentSessionId,[]),this.capturedPendingKernels.get(this.currentSessionId)||this.capturedPendingKernels.set(this.currentSessionId,[]),this.flush(),this.sessionStatus="capturing"}captureEnd(){Ft("info","captureEnd"),this.flush(),this.sessionStatus="default"}replay(){Ft("info","replay"),this.sessionStatus="replaying";let i=this.capturedCommandList.get(this.currentSessionId),u=this.capturedPendingKernels.get(this.currentSessionId),h=i.length;this.pendingKernels=[];for(let w=0;w<h;w++){let B=this.getComputePassEncoder(),E=i[w];this.writeTimestamp(2*this.pendingDispatchNumber),B.setPipeline(E.computePipeline),B.setBindGroup(0,E.bindGroup),B.dispatchWorkgroups(...E.dispatchGroup),this.writeTimestamp(2*this.pendingDispatchNumber+1),this.pendingDispatchNumber++,this.queryType!=="none"&&this.pendingKernels.push(u[w]),(this.pendingDispatchNumber>=this.maxDispatchNumber||this.queryType==="at-passes")&&this.endComputePass(),this.pendingDispatchNumber>=this.maxDispatchNumber&&this.flush()}this.flush(),this.sessionStatus="default"}onCreateSession(){this.gpuDataManager.onCreateSession()}onReleaseSession(i){this.unregisterBuffers(i),this.capturedCommandList.has(i)&&this.capturedCommandList.delete(i),this.capturedPendingKernels.has(i)&&this.capturedPendingKernels.delete(i),this.gpuDataManager.onReleaseSession(i)}onRunStart(i){this.currentSessionId=i,this.setQueryType()}}}),Zn=Pe(()=>{Cs(),d1=1,Xo=()=>d1++,f1=new Map([["float32",32],["float16",16],["int32",32],["uint32",32],["int64",64],["uint64",64],["int8",8],["uint8",8],["int4",4],["uint4",4]]),qo=(i,u)=>{let h=f1.get(i);if(!h)throw new Error("Unsupported data type.");return u.length>0?Math.ceil(u.reduce((w,B)=>w*B)*h/8):0},Jo=class{constructor(i){this.sessionId=i.sessionId,this.mlContext=i.context,this.mlTensor=i.tensor,this.dataType=i.dataType,this.tensorShape=i.shape}get tensor(){return this.mlTensor}get type(){return this.dataType}get shape(){return this.tensorShape}get byteLength(){return qo(this.dataType,this.tensorShape)}destroy(){Ft("verbose",()=>"[WebNN] TensorWrapper.destroy"),this.mlTensor.destroy()}write(i){this.mlContext.writeTensor(this.mlTensor,i)}async read(i){return i?this.mlContext.readTensor(this.mlTensor,i):this.mlContext.readTensor(this.mlTensor)}canReuseTensor(i,u,h){return this.mlContext===i&&this.dataType===u&&this.tensorShape.length===h.length&&this.tensorShape.every((w,B)=>w===h[B])}},_o=class{constructor(i,u){this.tensorManager=i,this.wrapper=u}get tensorWrapper(){return this.wrapper}releaseTensor(){this.tensorWrapper&&(this.tensorManager.releaseTensor(this.tensorWrapper),this.wrapper=void 0)}async ensureTensor(i,u,h,w){if(this.wrapper){if(this.wrapper.canReuseTensor(i,u,h))return this.wrapper.tensor;if(w){if(this.wrapper.byteLength!==qo(u,h))throw new Error("Unable to copy data to tensor with different size.");this.activeUpload=new Uint8Array(await this.wrapper.read())}this.tensorManager.releaseTensor(this.wrapper)}let B=typeof MLTensorUsage>"u"?void 0:MLTensorUsage.READ|MLTensorUsage.WRITE;return this.wrapper=await this.tensorManager.getCachedTensor(u,h,B,!0,!0),w&&this.activeUpload&&(this.wrapper.write(this.activeUpload),this.activeUpload=void 0),this.wrapper.tensor}upload(i){if(this.wrapper){if(i.byteLength===this.wrapper.byteLength)return void this.wrapper.write(i);Ft("verbose",()=>"Data size does not match tensor size. Releasing tensor."),this.releaseTensor()}this.activeUpload?this.activeUpload.set(i):this.activeUpload=new Uint8Array(i)}async download(i){if(this.activeUpload)return i?void(i instanceof ArrayBuffer?new Uint8Array(i).set(this.activeUpload):new Uint8Array(i.buffer,i.byteOffset,i.byteLength).set(this.activeUpload)):this.activeUpload.buffer;if(!this.wrapper)throw new Error("Tensor has not been created.");return i?this.wrapper.read(i):this.wrapper.read()}},p1=class{constructor(i){this.backend=i,this.tensorTrackersById=new Map,this.freeTensors=[],this.externalTensors=new Set}reserveTensorId(){let i=Xo();return this.tensorTrackersById.set(i,new _o(this)),i}releaseTensorId(i){let u=this.tensorTrackersById.get(i);u&&(this.tensorTrackersById.delete(i),u.tensorWrapper&&this.releaseTensor(u.tensorWrapper))}async ensureTensor(i,u,h,w){Ft("verbose",()=>`[WebNN] TensorManager.ensureTensor {tensorId: ${i}, dataType: ${u}, shape: ${h}, copyOld: ${w}}`);let B=this.tensorTrackersById.get(i);if(!B)throw new Error("Tensor not found.");return B.ensureTensor(this.backend.currentContext,u,h,w)}upload(i,u){let h=this.tensorTrackersById.get(i);if(!h)throw new Error("Tensor not found.");h.upload(u)}async download(i,u){Ft("verbose",()=>`[WebNN] TensorManager.download {tensorId: ${i}, dstBuffer: ${u==null?void 0:u.byteLength}}`);let h=this.tensorTrackersById.get(i);if(!h)throw new Error("Tensor not found.");return h.download(u)}releaseTensorsForSession(i){for(let u of this.freeTensors)u.sessionId===i&&u.destroy();this.freeTensors=this.freeTensors.filter(u=>u.sessionId!==i)}registerTensor(i,u,h,w){let B=Xo(),E=new Jo({sessionId:this.backend.currentSessionId,context:i,tensor:u,dataType:h,shape:w});return this.tensorTrackersById.set(B,new _o(this,E)),this.externalTensors.add(E),B}async getCachedTensor(i,u,h,w,B){let E=this.backend.currentSessionId,v=this.backend.currentContext;for(let[O,L]of this.freeTensors.entries())if(L.canReuseTensor(v,i,u)){Ft("verbose",()=>`[WebNN] Reusing tensor {dataType: ${i}, shape: ${u}}`);let ee=this.freeTensors.splice(O,1)[0];return ee.sessionId=E,ee}Ft("verbose",()=>`[WebNN] MLContext.createTensor {dataType: ${i}, shape: ${u}}`);let z=await v.createTensor({dataType:i,shape:u,dimensions:u,usage:h,writable:w,readable:B});return new Jo({sessionId:E,context:v,tensor:z,dataType:i,shape:u})}releaseTensor(i){this.externalTensors.has(i)&&this.externalTensors.delete(i),this.freeTensors.push(i)}},H1=(...i)=>new p1(...i)}),oi=Pe(()=>{Mt(),si(),w1(),Zn(),Cs(),$o=new Map([[1,"float32"],[10,"float16"],[6,"int32"],[12,"uint32"],[7,"int64"],[13,"uint64"],[22,"int4"],[21,"uint4"],[3,"int8"],[2,"uint8"],[9,"uint8"]]),h1=(i,u)=>{if(i===u)return!0;if(i===void 0||u===void 0)return!1;let h=Object.keys(i).sort(),w=Object.keys(u).sort();return h.length===w.length&&h.every((B,E)=>B===w[E]&&i[B]===u[B])},m1=class{constructor(i){this.tensorManager=H1(this),this.mlContextBySessionId=new Map,this.sessionIdsByMLContext=new Map,this.mlContextCache=[],Da(i.logLevel,!!i.debug)}get currentSessionId(){if(this.activeSessionId===void 0)throw new Error("No active session");return this.activeSessionId}onRunStart(i){this.activeSessionId=i}async createMLContext(i){if(i instanceof GPUDevice){let h=this.mlContextCache.findIndex(w=>w.gpuDevice===i);if(h!==-1)return this.mlContextCache[h].mlContext;{let w=await navigator.ml.createContext(i);return this.mlContextCache.push({gpuDevice:i,mlContext:w}),w}}if(i===void 0){let h=this.mlContextCache.findIndex(w=>w.options===void 0&&w.gpuDevice===void 0);if(h!==-1)return this.mlContextCache[h].mlContext;{let w=await navigator.ml.createContext();return this.mlContextCache.push({mlContext:w}),w}}let u=this.mlContextCache.findIndex(h=>h1(h.options,i));if(u!==-1)return this.mlContextCache[u].mlContext;{let h=await navigator.ml.createContext(i);return this.mlContextCache.push({options:i,mlContext:h}),h}}get currentContext(){let i=this.getMLContext(this.currentSessionId);if(!i)throw new Error(`No MLContext found for session ${this.currentSessionId}`);return i}registerMLContext(i,u){this.mlContextBySessionId.set(i,u);let h=this.sessionIdsByMLContext.get(u);h||(h=new Set,this.sessionIdsByMLContext.set(u,h)),h.add(i)}onReleaseSession(i){let u=this.mlContextBySessionId.get(i);if(!u)return;this.tensorManager.releaseTensorsForSession(i),this.mlContextBySessionId.delete(i);let h=this.sessionIdsByMLContext.get(u);if(h.delete(i),h.size===0){this.sessionIdsByMLContext.delete(u);let w=this.mlContextCache.findIndex(B=>B.mlContext===u);w!==-1&&this.mlContextCache.splice(w,1)}}getMLContext(i){return this.mlContextBySessionId.get(i)}reserveTensorId(){return this.tensorManager.reserveTensorId()}releaseTensorId(i){Ft("verbose",()=>`[WebNN] releaseTensorId {tensorId: ${i}}`),this.tensorManager.releaseTensorId(i)}async ensureTensor(i,u,h,w){let B=$o.get(u);if(!B)throw new Error(`Unsupported ONNX data type: ${u}`);return this.tensorManager.ensureTensor(i,B,h,w)}uploadTensor(i,u){if(!zr().shouldTransferToMLTensor)throw new Error("Trying to upload to a MLTensor while shouldTransferToMLTensor is false");Ft("verbose",()=>`[WebNN] uploadTensor {tensorId: ${i}, data: ${u.byteLength}}`),this.tensorManager.upload(i,u)}async downloadTensor(i,u){return this.tensorManager.download(i,u)}createMLTensorDownloader(i,u){return async()=>{let h=await this.tensorManager.download(i);return xn(h,u)}}registerMLTensor(i,u,h){let w=$o.get(u);if(!w)throw new Error(`Unsupported ONNX data type: ${u}`);let B=this.tensorManager.registerTensor(this.currentContext,i,w,h);return Ft("verbose",()=>`[WebNN] registerMLTensor {tensor: ${i}, dataType: ${w}, dimensions: ${h}} -> {tensorId: ${B}}`),B}registerMLConstant(i,u,h,w,B,E){if(!E)throw new Error("External mounted files are not available.");let v=i;i.startsWith("./")&&(v=i.substring(2));let z=E.get(v);if(!z)throw new Error(`File with name ${v} not found in preloaded files.`);if(u+h>z.byteLength)throw new Error("Out of bounds: data offset and length exceed the external file data size.");let O,L=z.slice(u,u+h).buffer;switch(B.dataType){case"float32":O=new Float32Array(L);break;case"float16":O=new Uint16Array(L);break;case"int32":O=new Int32Array(L);break;case"uint32":O=new Uint32Array(L);break;case"int64":O=new BigInt64Array(L);break;case"uint64":O=new BigUint64Array(L);break;case"int8":O=new Int8Array(L);break;case"int4":case"uint4":case"uint8":O=new Uint8Array(L);break;default:throw new Error(`Unsupported data type: ${B.dataType} in creating WebNN Constant from external data.`)}return Ft("verbose",()=>`[WebNN] registerMLConstant {dataType: ${B.dataType}, shape: ${B.shape}}}`),w.constant(B,O)}flush(){}}}),A0={};xA(A0,{init:()=>k1});var li,W0,k1,nc,Qr,un,sa,ci,Ls,V0,ao,so,io,x1,oo,$a,ia,t0,r0,gi,o2,B1,l2,ya,Wn,mg,Cg,bg,Ig,wg,kg,xg,Bg,yc,vg,yg,Ef=Pe(()=>{Mt(),br(),Cs(),St(),oi(),li=class cd{constructor(u,h,w,B){this.module=u,this.dataType=h,this.data=w,this.dims=B}getFloat32Array(){if(this.dataType!==1)throw new Error("Invalid data type");let u=Le.size(this.dims);return u===0?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,u)}getBigInt64Array(){if(this.dataType!==7)throw new Error("Invalid data type");let u=Le.size(this.dims);return u===0?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,u)}getInt32Array(){if(this.dataType!==6)throw new Error("Invalid data type");let u=Le.size(this.dims);return u===0?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,u)}getUint16Array(){if(this.dataType!==10&&this.dataType!==4)throw new Error("Invalid data type");let u=Le.size(this.dims);return u===0?new Uint16Array:new Uint16Array(this.module.HEAP8.buffer,this.data,u)}reshape(u){if(Le.size(u)!==Le.size(this.dims))throw new Error("Invalid new shape");return new cd(this.module,this.dataType,this.data,u)}},W0=class{constructor(i,u,h){this.module=i,this.backend=u,this.customDataOffset=0,this.customDataSize=0,this.adapterInfo=u.adapterInfo,this.deviceInfo=u.deviceInfo;let w=i.PTR_SIZE,B=h/i.PTR_SIZE,E=w===4?"i32":"i64";this.opKernelContext=Number(i.getValue(w*B++,E));let v=Number(i.getValue(w*B++,E));this.outputCount=Number(i.getValue(w*B++,E)),this.customDataOffset=Number(i.getValue(w*B++,"*")),this.customDataSize=Number(i.getValue(w*B++,E));let z=[];for(let O=0;O<v;O++){let L=Number(i.getValue(w*B++,E)),ee=Number(i.getValue(w*B++,"*")),te=Number(i.getValue(w*B++,E)),T=[];for(let le=0;le<te;le++)T.push(Number(i.getValue(w*B++,E)));z.push(new li(i,L,ee,T))}this.inputs=z}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}compute(i,u){var B;let h=((B=u==null?void 0:u.inputs)==null?void 0:B.map(E=>typeof E=="number"?this.inputs[E]:E))??this.inputs,w=(u==null?void 0:u.outputs)??[];return this.backend.run(i,h,w,(E,v,z)=>new li(this.module,v,this.output(E,z),z),(E,v)=>{let z=Ia(E,v);if(!z)throw new Error(`Unsupported data type: ${E}`);let O=z>0?this.backend.gpuDataManager.create(z).id:0;return new li(this.module,E,O,v)},this.outputCount)}output(i,u){let h=this.module.stackSave();try{let w=this.module.PTR_SIZE,B=w===4?"i32":"i64",E=this.module.stackAlloc((1+u.length)*w);this.module.setValue(E,u.length,B);for(let v=0;v<u.length;v++)this.module.setValue(E+w*(v+1),u[v],B);return this.module._JsepOutput(this.opKernelContext,i,E)}catch(w){throw new Error(`Failed to generate kernel's output[${i}] with dims [${u}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${w}`)}finally{this.module.stackRestore(h)}}},k1=async(i,u,h,w)=>{let B=u.jsepInit;if(!B)throw new Error("Failed to initialize JSEP. The WebAssembly module is not built with JSEP support.");if(i==="webgpu"){let E=new u1;await E.initialize(h,w),B("webgpu",[E,v=>E.alloc(Number(v)),v=>E.free(v),(v,z,O,L=!1)=>{if(L)Ft("verbose",()=>`[WebGPU] jsepCopyGpuToGpu: src=${Number(v)}, dst=${Number(z)}, size=${Number(O)}`),E.memcpy(Number(v),Number(z));else{Ft("verbose",()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${Number(v)}, gpuDataId=${Number(z)}, size=${Number(O)}`);let ee=u.HEAPU8.subarray(Number(v>>>0),Number(v>>>0)+Number(O));E.upload(Number(z),ee)}},async(v,z,O)=>{Ft("verbose",()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${v}, dataOffset=${z}, size=${O}`),await E.download(Number(v),()=>u.HEAPU8.subarray(Number(z)>>>0,Number(z+O)>>>0))},(v,z,O)=>E.createKernel(v,Number(z),O,u.UTF8ToString(u._JsepGetNodeName(Number(z)))),v=>E.releaseKernel(v),(v,z,O,L)=>{Ft("verbose",()=>`[WebGPU] jsepRun: sessionHandle=${O}, kernel=${v}, contextDataOffset=${z}`);let ee=new W0(u,E,Number(z));return E.computeKernel(Number(v),ee,L)},()=>E.captureBegin(),()=>E.captureEnd(),()=>E.replay()])}else{let E=new m1(h);B("webnn",[E,()=>E.reserveTensorId(),v=>E.releaseTensorId(v),async(v,z,O,L)=>E.ensureTensor(v,z,O,L),(v,z)=>{E.uploadTensor(v,z)},async(v,z)=>E.downloadTensor(v,z)])}}}),Eg=Pe(()=>{b1(),W1(),Mt(),si(),C1(),I1(),nc=(i,u)=>{zr()._OrtInit(i,u)!==0&&Xt("Can't initialize onnxruntime.")},Qr=async i=>{nc(i.wasm.numThreads,ea(i.logLevel))},un=async(i,u)=>{{let h=(Ef(),sA(A0)).init;if(u==="webgpu"){if(typeof navigator>"u"||!navigator.gpu)throw new Error("WebGPU is not supported in current environment");let w=i.webgpu.adapter;if(w){if(typeof w.limits!="object"||typeof w.features!="object"||typeof w.requestDevice!="function")throw new Error("Invalid GPU adapter set in `env.webgpu.adapter`. It must be a GPUAdapter object.")}else{let B=i.webgpu.powerPreference;if(B!==void 0&&B!=="low-power"&&B!=="high-performance")throw new Error(`Invalid powerPreference setting: "${B}"`);let E=i.webgpu.forceFallbackAdapter;if(E!==void 0&&typeof E!="boolean")throw new Error(`Invalid forceFallbackAdapter setting: "${E}"`);if(w=await navigator.gpu.requestAdapter({powerPreference:B,forceFallbackAdapter:E}),!w)throw new Error('Failed to get GPU adapter. You may need to enable flag "--enable-unsafe-webgpu" if you are using Chrome.')}await h("webgpu",zr(),i,w)}if(u==="webnn"){if(typeof navigator>"u"||!navigator.ml)throw new Error("WebNN is not supported in current environment");await h("webnn",zr(),i)}}},sa=new Map,ci=i=>{let u=zr(),h=u.stackSave();try{let w=u.PTR_SIZE,B=u.stackAlloc(2*w);u._OrtGetInputOutputCount(i,B,B+w)!==0&&Xt("Can't get session input/output count.");let E=w===4?"i32":"i64";return[Number(u.getValue(B,E)),Number(u.getValue(B+w,E))]}finally{u.stackRestore(h)}},Ls=i=>{let u=zr(),h=u._malloc(i.byteLength);if(h===0)throw new Error(`Can't create a session. failed to allocate a buffer of size ${i.byteLength}.`);return u.HEAPU8.set(i,h),[h,i.byteLength]},V0=async(i,u)=>{var te,T,le;let h,w,B=zr();Array.isArray(i)?[h,w]=i:i.buffer===B.HEAPU8.buffer?[h,w]=[i.byteOffset,i.byteLength]:[h,w]=Ls(i);let E=0,v=0,z=0,O=[],L=[],ee=[];try{if([v,O]=xs(u),(u==null?void 0:u.externalData)&&B.mountExternalData){let eA=[];for(let aA of u.externalData){let zA=typeof aA=="string"?aA:aA.path;eA.push(Ha(typeof aA=="string"?aA:aA.data).then(jA=>{B.mountExternalData(zA,jA)}))}await Promise.all(eA)}for(let eA of(u==null?void 0:u.executionProviders)??[])if((typeof eA=="string"?eA:eA.name)==="webnn"){if(B.shouldTransferToMLTensor=!1,typeof eA!="string"){let aA=eA,zA=aA==null?void 0:aA.context,jA=aA==null?void 0:aA.gpuDevice,ht=aA==null?void 0:aA.deviceType,mt=aA==null?void 0:aA.powerPreference;B.currentContext=zA||(jA?await B.jsepCreateMLContext(jA):await B.jsepCreateMLContext({deviceType:ht,powerPreference:mt}))}else B.currentContext=await B.jsepCreateMLContext();break}E=await B._OrtCreateSession(h,w,v),E===0&&Xt("Can't create a session."),(te=B.jsepOnCreateSession)==null||te.call(B),B.currentContext&&(B.jsepRegisterMLContext(E,B.currentContext),B.currentContext=void 0,B.shouldTransferToMLTensor=!0);let[de,we]=ci(E),be=!!(u!=null&&u.enableGraphCapture),Me=[],Fe=[],We=[];for(let eA=0;eA<de;eA++){let aA=B._OrtGetInputName(E,eA);aA===0&&Xt("Can't get an input name."),L.push(aA),Me.push(B.UTF8ToString(aA))}for(let eA=0;eA<we;eA++){let aA=B._OrtGetOutputName(E,eA);aA===0&&Xt("Can't get an output name."),ee.push(aA);let zA=B.UTF8ToString(aA);Fe.push(zA);{if(be&&(u==null?void 0:u.preferredOutputLocation)===void 0){We.push("gpu-buffer");continue}let jA=typeof(u==null?void 0:u.preferredOutputLocation)=="string"?u.preferredOutputLocation:((T=u==null?void 0:u.preferredOutputLocation)==null?void 0:T[zA])??"cpu";if(jA!=="cpu"&&jA!=="cpu-pinned"&&jA!=="gpu-buffer"&&jA!=="ml-tensor")throw new Error(`Not supported preferred output location: ${jA}.`);if(be&&jA!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${jA}. Only 'gpu-buffer' location is supported when enableGraphCapture is true.`);We.push(jA)}}let $e=null;return We.some(eA=>eA==="gpu-buffer"||eA==="ml-tensor")&&(z=B._OrtCreateBinding(E),z===0&&Xt("Can't create IO binding."),$e={handle:z,outputPreferredLocations:We,outputPreferredLocationsEncoded:We.map(eA=>Ya(eA))}),sa.set(E,[E,L,ee,$e,be,!1]),[E,Me,Fe]}catch(de){throw L.forEach(we=>B._OrtFree(we)),ee.forEach(we=>B._OrtFree(we)),z!==0&&B._OrtReleaseBinding(z)!==0&&Xt("Can't release IO binding."),E!==0&&B._OrtReleaseSession(E)!==0&&Xt("Can't release session."),de}finally{B._free(h),v!==0&&B._OrtReleaseSessionOptions(v)!==0&&Xt("Can't release session options."),O.forEach(de=>B._free(de)),(le=B.unmountExternalData)==null||le.call(B)}},ao=i=>{var O;let u=zr(),h=sa.get(i);if(!h)throw new Error(`cannot release session. invalid session id: ${i}`);let[w,B,E,v,z]=h;v&&(z&&u._OrtClearBoundOutputs(v.handle)!==0&&Xt("Can't clear bound outputs."),u._OrtReleaseBinding(v.handle)!==0&&Xt("Can't release IO binding.")),(O=u.jsepOnReleaseSession)==null||O.call(u,i),B.forEach(L=>u._OrtFree(L)),E.forEach(L=>u._OrtFree(L)),u._OrtReleaseSession(w)!==0&&Xt("Can't release session."),sa.delete(i)},so=(i,u,h,w,B,E=!1)=>{if(!i)return void u.push(0);let v,z,O=zr(),L=O.PTR_SIZE,ee=i[0],te=i[1],T=i[3];if(ee==="string"&&(T==="gpu-buffer"||T==="ml-tensor"))throw new Error("String tensor is not supported on GPU.");if(E&&T!=="gpu-buffer")throw new Error(`External buffer must be provided for input/output index ${B} when enableGraphCapture is true.`);if(T==="gpu-buffer"){let we=i[2].gpuBuffer;z=Ia(qr(ee),te);let be=O.jsepRegisterBuffer;if(!be)throw new Error('Tensor location "gpu-buffer" is not supported without using WebGPU.');v=be(w,B,we,z)}else if(T==="ml-tensor"){let we=i[2].mlTensor;z=Ia(qr(ee),te);let be=O.jsepRegisterMLTensor;if(!be)throw new Error('Tensor location "ml-tensor" is not supported without using WebNN.');v=be(we,qr(ee),te)}else{let we=i[2];if(Array.isArray(we)){z=L*we.length,v=O._malloc(z),h.push(v);for(let be=0;be<we.length;be++){if(typeof we[be]!="string")throw new TypeError(`tensor data at index ${be} is not a string`);O.setValue(v+be*L,jr(we[be],h),"*")}}else z=we.byteLength,v=O._malloc(z),h.push(v),O.HEAPU8.set(new Uint8Array(we.buffer,we.byteOffset,z),v)}let le=O.stackSave(),de=O.stackAlloc(4*te.length);try{te.forEach((be,Me)=>O.setValue(de+Me*L,be,L===4?"i32":"i64"));let we=O._OrtCreateTensor(qr(ee),v,z,de,te.length,Ya(T));we===0&&Xt(`Can't create tensor for input/output. session=${w}, index=${B}.`),u.push(we)}finally{O.stackRestore(le)}},io=async(i,u,h,w,B,E)=>{var Jt,Ct;let v=zr(),z=v.PTR_SIZE,O=sa.get(i);if(!O)throw new Error(`cannot run inference. invalid session id: ${i}`);let L=O[0],ee=O[1],te=O[2],T=O[3],le=O[4],de=O[5],we=u.length,be=w.length,Me=0,Fe=[],We=[],$e=[],eA=[],aA=v.stackSave(),zA=v.stackAlloc(we*z),jA=v.stackAlloc(we*z),ht=v.stackAlloc(be*z),mt=v.stackAlloc(be*z);try{(Jt=v.jsepOnRunStart)==null||Jt.call(v,L),[Me,Fe]=$n(E);for(let iA=0;iA<we;iA++)so(h[iA],We,eA,i,u[iA],le);for(let iA=0;iA<be;iA++)so(B[iA],$e,eA,i,we+w[iA],le);for(let iA=0;iA<we;iA++)v.setValue(zA+iA*z,We[iA],"*"),v.setValue(jA+iA*z,ee[u[iA]],"*");for(let iA=0;iA<be;iA++)v.setValue(ht+iA*z,$e[iA],"*"),v.setValue(mt+iA*z,te[w[iA]],"*");if(T&&!de){let{handle:iA,outputPreferredLocations:gt,outputPreferredLocationsEncoded:at}=T;if(ee.length!==we)throw new Error(`input count from feeds (${we}) is expected to be always equal to model's input count (${ee.length}).`);for(let ot=0;ot<we;ot++){let sr=u[ot];await v._OrtBindInput(iA,ee[sr],We[ot])!==0&&Xt(`Can't bind input[${ot}] for session=${i}.`)}for(let ot=0;ot<be;ot++){let sr=w[ot];(Ct=B[ot])!=null&&Ct[3]?v._OrtBindOutput(iA,te[sr],$e[ot],0)!==0&&Xt(`Can't bind pre-allocated output[${ot}] for session=${i}.`):v._OrtBindOutput(iA,te[sr],0,at[sr])!==0&&Xt(`Can't bind output[${ot}] to ${gt[ot]} for session=${i}.`)}sa.set(i,[L,ee,te,T,le,!0])}let Pt;Pt=T?await v._OrtRunWithBinding(L,T.handle,be,ht,Me):await v._OrtRun(L,jA,zA,we,mt,be,ht,Me),Pt!==0&&Xt("failed to call OrtRun().");let Qt=[];for(let iA=0;iA<be;iA++){let gt=Number(v.getValue(ht+iA*z,"*"));if(gt===$e[iA]){Qt.push(B[iA]);continue}let at,ot=v.stackSave(),sr=v.stackAlloc(4*z),dn=!1,Xn=0;try{v._OrtGetTensorData(gt,sr,sr+z,sr+2*z,sr+3*z)!==0&&Xt(`Can't access output tensor data on index ${iA}.`);let ui=z===4?"i32":"i64",n0=Number(v.getValue(sr,ui));Xn=v.getValue(sr+z,"*");let lo=v.getValue(sr+2*z,"*"),bs=Number(v.getValue(sr+3*z,ui)),di=[];for(let kr=0;kr<bs;kr++)di.push(Number(v.getValue(lo+kr*z,ui)));v._OrtFree(lo)!==0&&Xt("Can't free memory for tensor dims.");let fi=di.reduce((kr,Ea)=>kr*Ea,1);at=ca(n0);let Is=T==null?void 0:T.outputPreferredLocations[w[iA]];if(at==="string"){if(Is==="gpu-buffer"||Is==="ml-tensor")throw new Error("String tensor is not supported on GPU.");let kr=[];for(let Ea=0;Ea<fi;Ea++){let a0=v.getValue(Xn+Ea*z,"*"),Gc=v.getValue(Xn+(Ea+1)*z,"*"),co=Ea===fi-1?void 0:Gc-a0;kr.push(v.UTF8ToString(a0,co))}Qt.push([at,di,kr,"cpu"])}else if(Is==="gpu-buffer"&&fi>0){let kr=v.jsepGetBuffer;if(!kr)throw new Error('preferredLocation "gpu-buffer" is not supported without using WebGPU.');let Ea=kr(Xn),a0=Ia(n0,fi);if(a0===void 0||!Ma(at))throw new Error(`Unsupported data type: ${at}`);dn=!0,Qt.push([at,di,{gpuBuffer:Ea,download:v.jsepCreateDownloader(Ea,a0,at),dispose:()=>{v._OrtReleaseTensor(gt)!==0&&Xt("Can't release tensor.")}},"gpu-buffer"])}else if(Is==="ml-tensor"&&fi>0){let kr=v.jsepEnsureTensor;if(!kr)throw new Error('preferredLocation "ml-tensor" is not supported without using WebNN.');if(Ia(n0,fi)===void 0||!Br(at))throw new Error(`Unsupported data type: ${at}`);let Ea=await kr(Xn,n0,di,!1);dn=!0,Qt.push([at,di,{mlTensor:Ea,download:v.jsepCreateMLTensorDownloader(Xn,at),dispose:()=>{v.jsepReleaseTensorId(Xn),v._OrtReleaseTensor(gt)}},"ml-tensor"])}else{let kr=new(rs(at))(fi);new Uint8Array(kr.buffer,kr.byteOffset,kr.byteLength).set(v.HEAPU8.subarray(Xn,Xn+kr.byteLength)),Qt.push([at,di,kr,"cpu"])}}finally{v.stackRestore(ot),at==="string"&&Xn&&v._free(Xn),dn||v._OrtReleaseTensor(gt)}}return T&&!le&&(v._OrtClearBoundOutputs(T.handle)!==0&&Xt("Can't clear bound outputs."),sa.set(i,[L,ee,te,T,le,!1])),Qt}finally{v.stackRestore(aA),We.forEach(Pt=>v._OrtReleaseTensor(Pt)),$e.forEach(Pt=>v._OrtReleaseTensor(Pt)),eA.forEach(Pt=>v._free(Pt)),Me!==0&&v._OrtReleaseRunOptions(Me),Fe.forEach(Pt=>v._free(Pt))}},x1=i=>{let u=zr(),h=sa.get(i);if(!h)throw new Error("invalid session id");let w=h[0],B=u._OrtEndProfiling(w);B===0&&Xt("Can't get an profile file name."),u._OrtFree(B)},oo=i=>{let u=[];for(let h of i){let w=h[2];!Array.isArray(w)&&"buffer"in w&&u.push(w.buffer)}return u}}),Mg=Pe(()=>{dA(),Eg(),si(),e2(),$a=()=>!!K.wasm.proxy&&typeof document<"u",t0=!1,r0=!1,gi=!1,l2=new Map,ya=(i,u)=>{let h=l2.get(i);h?h.push(u):l2.set(i,[u])},Wn=()=>{if(t0||!r0||gi||!ia)throw new Error("worker not ready")},mg=i=>{switch(i.data.type){case"init-wasm":t0=!1,i.data.err?(gi=!0,B1[1](i.data.err)):(r0=!0,B1[0]()),o2&&(URL.revokeObjectURL(o2),o2=void 0);break;case"init-ep":case"copy-from":case"create":case"release":case"run":case"end-profiling":{let u=l2.get(i.data.type);i.data.err?u.shift()[1](i.data.err):u.shift()[0](i.data.out);break}}},Cg=async()=>{if(!r0){if(t0)throw new Error("multiple calls to 'initWasm()' detected.");if(gi)throw new Error("previous call to 'initWasm()' failed.");if(t0=!0,$a())return new Promise((i,u)=>{ia==null||ia.terminate(),Kt().then(([h,w])=>{var B;try{(ia=w).onerror=v=>u(v),ia.onmessage=mg,B1=[i,u];let E={type:"init-wasm",in:K};!E.in.wasm.wasmPaths&&(h||(B=import.meta.url)!=null&&B.startsWith("file:"))&&(E.in.wasm.wasmPaths={wasm:new URL(d("./node_modules/onnxruntime-web/dist/ort-wasm-simd-threaded.jsep.wasm"),d.b).href}),ia.postMessage(E),o2=h}catch(E){u(E)}},u)});try{await Dn(K.wasm),await Qr(K),r0=!0}catch(i){throw gi=!0,i}finally{t0=!1}}},bg=async i=>{if($a())return Wn(),new Promise((u,h)=>{ya("init-ep",[u,h]);let w={type:"init-ep",in:{epName:i,env:K}};ia.postMessage(w)});await un(K,i)},Ig=async i=>$a()?(Wn(),new Promise((u,h)=>{ya("copy-from",[u,h]);let w={type:"copy-from",in:{buffer:i}};ia.postMessage(w,[i.buffer])})):Ls(i),wg=async(i,u)=>{if($a()){if(u!=null&&u.preferredOutputLocation)throw new Error('session option "preferredOutputLocation" is not supported for proxy.');return Wn(),new Promise((h,w)=>{ya("create",[h,w]);let B={type:"create",in:{model:i,options:{...u}}},E=[];i instanceof Uint8Array&&E.push(i.buffer),ia.postMessage(B,E)})}return V0(i,u)},kg=async i=>{if($a())return Wn(),new Promise((u,h)=>{ya("release",[u,h]);let w={type:"release",in:i};ia.postMessage(w)});ao(i)},xg=async(i,u,h,w,B,E)=>{if($a()){if(h.some(v=>v[3]!=="cpu"))throw new Error("input tensor on GPU is not supported for proxy.");if(B.some(v=>v))throw new Error("pre-allocated output tensor is not supported for proxy.");return Wn(),new Promise((v,z)=>{ya("run",[v,z]);let O=h,L={type:"run",in:{sessionId:i,inputIndices:u,inputs:O,outputIndices:w,options:E}};ia.postMessage(L,oo(O))})}return io(i,u,h,w,B,E)},Bg=async i=>{if($a())return Wn(),new Promise((u,h)=>{ya("end-profiling",[u,h]);let w={type:"end-profiling",in:i};ia.postMessage(w)});x1(i)}}),Mf=Pe(()=>{dA(),Mg(),Mt(),bA(),I1(),yc=(i,u)=>{switch(i.location){case"cpu":return[i.type,i.dims,i.data,"cpu"];case"gpu-buffer":return[i.type,i.dims,{gpuBuffer:i.gpuBuffer},"gpu-buffer"];case"ml-tensor":return[i.type,i.dims,{mlTensor:i.mlTensor},"ml-tensor"];default:throw new Error(`invalid data location: ${i.location} for ${u()}`)}},vg=i=>{switch(i[3]){case"cpu":return new F(i[0],i[2],i[1]);case"gpu-buffer":{let u=i[0];if(!Ma(u))throw new Error(`not supported data type: ${u} for deserializing GPU tensor`);let{gpuBuffer:h,download:w,dispose:B}=i[2];return F.fromGpuBuffer(h,{dataType:u,dims:i[1],download:w,dispose:B})}case"ml-tensor":{let u=i[0];if(!Br(u))throw new Error(`not supported data type: ${u} for deserializing MLTensor tensor`);let{mlTensor:h,download:w,dispose:B}=i[2];return F.fromMLTensor(h,{dataType:u,dims:i[1],download:w,dispose:B})}default:throw new Error(`invalid data location: ${i[3]}`)}},yg=class{async fetchModelAndCopyToWasmMemory(i){return Ig(await Ha(i))}async loadModel(i,u){let h;Oe(),h=typeof i=="string"?await this.fetchModelAndCopyToWasmMemory(i):i,[this.sessionId,this.inputNames,this.outputNames]=await wg(h,u),AA()}async dispose(){return kg(this.sessionId)}async run(i,u,h){Oe();let w=[],B=[];Object.entries(i).forEach(te=>{let T=te[0],le=te[1],de=this.inputNames.indexOf(T);if(de===-1)throw new Error(`invalid input '${T}'`);w.push(le),B.push(de)});let E=[],v=[];Object.entries(u).forEach(te=>{let T=te[0],le=te[1],de=this.outputNames.indexOf(T);if(de===-1)throw new Error(`invalid output '${T}'`);E.push(le),v.push(de)});let z=w.map((te,T)=>yc(te,()=>`input "${this.inputNames[B[T]]}"`)),O=E.map((te,T)=>te?yc(te,()=>`output "${this.outputNames[v[T]]}"`):null),L=await xg(this.sessionId,B,z,v,O,h),ee={};for(let te=0;te<L.length;te++)ee[this.outputNames[v[te]]]=E[te]??vg(L[te]);return AA(),ee}startProfiling(){}endProfiling(){Bg(this.sessionId)}}}),Gg={};xA(Gg,{OnnxruntimeWebAssemblyBackend:()=>Mc,initializeFlags:()=>Ec,wasmBackend:()=>Dg});var Ec,Mc,Dg,Gf=Pe(()=>{dA(),Mg(),Mf(),Ec=()=>{if((typeof K.wasm.initTimeout!="number"||K.wasm.initTimeout<0)&&(K.wasm.initTimeout=0),K.wasm.simd===!1&&console.warn('Deprecated property "env.wasm.simd" is set to false. non-SIMD build is no longer provided, and this setting will be ignored.'),typeof K.wasm.proxy!="boolean"&&(K.wasm.proxy=!1),typeof K.wasm.trace!="boolean"&&(K.wasm.trace=!1),typeof K.wasm.numThreads!="number"||!Number.isInteger(K.wasm.numThreads)||K.wasm.numThreads<=0)if(typeof self<"u"&&!self.crossOriginIsolated)K.wasm.numThreads=1;else{let i=typeof navigator>"u"?Ke("node:os").cpus().length:navigator.hardwareConcurrency;K.wasm.numThreads=Math.min(4,Math.ceil((i||1)/2))}},Mc=class{async init(i){Ec(),await Cg(),await bg(i)}async createInferenceSessionHandler(i,u){let h=new yg;return await h.loadModel(i,u),Promise.resolve(h)}},Dg=new Mc});dA(),dA(),dA();var Df=_e;{let i=(Gf(),sA(Gg)).wasmBackend;H("webgpu",i,5),H("webnn",i,5),H("cpu",i,10),H("wasm",i,10)}Object.defineProperty(K.versions,"web",{value:"1.21.0-dev.20250206-d981b153d3",enumerable:!0})},"./src/backends/onnx.js":(x,C,d)=>{var k;d.r(C),d.d(C,{Tensor:()=>W.Tensor,createInferenceSession:()=>Ee,deviceToExecutionProviders:()=>me,isONNXProxy:()=>ve,isONNXTensor:()=>se});var Q=d("./src/env.js"),H=d("?2ce3"),S=d("./node_modules/onnxruntime-web/dist/ort.bundle.min.mjs?3a96"),W=d("./node_modules/onnxruntime-common/dist/esm/index.js");const Z=Object.freeze({auto:null,gpu:null,cpu:"cpu",wasm:"wasm",webgpu:"webgpu",cuda:"cuda",dml:"dml",webnn:{name:"webnn",deviceType:"cpu"},"webnn-npu":{name:"webnn",deviceType:"npu"},"webnn-gpu":{name:"webnn",deviceType:"gpu"},"webnn-cpu":{name:"webnn",deviceType:"cpu"}}),R=[];let N,K;const V=Symbol.for("onnxruntime");if(V in globalThis)K=globalThis[V];else if(Q.apis.IS_NODE_ENV){switch(K=H??(k||(k=d.t(H,2))),process.platform){case"win32":R.push("dml");break;case"linux":process.arch==="x64"&&R.push("cuda")}R.push("cpu"),N=["cpu"]}else K=S,Q.apis.IS_WEBNN_AVAILABLE&&R.push("webnn-npu","webnn-gpu","webnn-cpu","webnn"),Q.apis.IS_WEBGPU_AVAILABLE&&R.push("webgpu"),R.push("wasm"),N=["wasm"];const Ae=K.InferenceSession;function me(g=null){if(!g)return N;switch(g){case"auto":return R;case"gpu":return R.filter(b=>["webgpu","cuda","dml","webnn-gpu"].includes(b))}if(R.includes(g))return[Z[g]??g];throw new Error(`Unsupported device: "${g}". Should be one of: ${R.join(", ")}.`)}let Be=null;async function Ee(g,b,e){Be&&await Be;const l=Ae.create(g,b);Be??(Be=l);const M=await l;return M.config=e,M}function se(g){return g instanceof K.Tensor}const ie=K==null?void 0:K.env;function ve(){var g;return(g=ie==null?void 0:ie.wasm)==null?void 0:g.proxy}ie!=null&&ie.wasm&&(ie.wasm.wasmPaths=`https://cdn.jsdelivr.net/npm/@huggingface/transformers@${Q.env.version}/dist/`,ie.wasm.proxy=!1,typeof crossOriginIsolated<"u"&&crossOriginIsolated||(ie.wasm.numThreads=1)),ie!=null&&ie.webgpu&&(ie.webgpu.powerPreference="high-performance"),Q.env.backends.onnx=ie},"./src/base/feature_extraction_utils.js":(x,C,d)=>{d.r(C),d.d(C,{FeatureExtractor:()=>S,validate_audio_inputs:()=>W});var k=d("./src/utils/constants.js"),Q=d("./src/utils/generic.js"),H=d("./src/utils/hub.js");class S extends Q.Callable{constructor(R){super(),this.config=R}static async from_pretrained(R,N){return new this(await(0,H.getModelJSON)(R,k.FEATURE_EXTRACTOR_NAME,!0,N))}}function W(Z,R){var N;if(!(Z instanceof Float32Array||Z instanceof Float64Array))throw new Error(`${R} expects input to be a Float32Array or a Float64Array, but got ${((N=Z==null?void 0:Z.constructor)==null?void 0:N.name)??typeof Z} instead. If using the feature extractor directly, remember to use \`read_audio(url, sampling_rate)\` to obtain the raw audio data of the file/url.`)}},"./src/base/image_processors_utils.js":(x,C,d)=>{d.r(C),d.d(C,{ImageProcessor:()=>ve,center_to_corners_format:()=>K,post_process_instance_segmentation:()=>ie,post_process_object_detection:()=>V,post_process_panoptic_segmentation:()=>se,post_process_semantic_segmentation:()=>Ae});var k=d("./src/utils/generic.js"),Q=d("./src/utils/tensor.js"),H=d("./src/utils/maths.js");d("./src/utils/image.js");var S=d("./src/utils/core.js"),W=d("./src/utils/hub.js"),Z=d("./src/utils/constants.js");function R(g,b,e=0,l=null){const M=g/b;let ue=(0,H.bankers_round)(M)*b;return l!==null&&ue>l&&(ue=Math.floor(M)*b),ue<e&&(ue=Math.ceil(M)*b),ue}function N([g,b],e){return[Math.max(Math.floor(g/e),1)*e,Math.max(Math.floor(b/e),1)*e]}function K([g,b,e,l]){return[g-e/2,b-l/2,g+e/2,b+l/2]}function V(g,b=.5,e=null,l=!1){const M=g.logits,ue=g.pred_boxes,[D,F,Ye]=M.dims;if(e!==null&&e.length!==D)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let Ne=[];for(let Oe=0;Oe<D;++Oe){let AA=e!==null?e[Oe]:null,tA={boxes:[],classes:[],scores:[]},BA=M[Oe],DA=ue[Oe];for(let Ge=0;Ge<F;++Ge){let ke,ze=BA[Ge],Ke=[];if(l){ke=ze.sigmoid().data;for(let Pe=0;Pe<ke.length;++Pe)ke[Pe]>b&&Ke.push(Pe)}else{let Pe=(0,H.max)(ze.data)[1];if(Pe===Ye-1||(ke=(0,H.softmax)(ze.data),ke[Pe]<b))continue;Ke.push(Pe)}for(const Pe of Ke){let xA=DA[Ge].data;xA=K(xA),AA!==null&&(xA=xA.map((sA,cA)=>sA*AA[(cA+1)%2])),tA.boxes.push(xA),tA.classes.push(Pe),tA.scores.push(ke[Pe])}}Ne.push(tA)}return Ne}function Ae(g,b=null){const e=g.logits,l=e.dims[0];if(b!==null&&b.length!==l)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");const M=[];for(let ue=0;ue<l;++ue){const D=b!==null?b[ue]:null;let F=e[ue];D!==null&&(F=(0,Q.interpolate)(F,D,"bilinear",!1));const[Ye,Ne]=D??F.dims.slice(-2),Oe=new Q.Tensor("int32",new Int32Array(Ye*Ne),[Ye,Ne]),AA=F[0].data,tA=Oe.data;for(let Ge=1;Ge<F.dims[0];++Ge){const ke=F[Ge].data;for(let ze=0;ze<ke.length;++ze)ke[ze]>AA[ze]&&(AA[ze]=ke[ze],tA[ze]=Ge)}const BA=new Array(F.dims[0]);for(let Ge=0;Ge<tA.length;++Ge){const ke=tA[Ge];BA[ke]=ke}const DA=BA.filter(Ge=>Ge!==void 0);M.push({segmentation:Oe,labels:DA})}return M}function me(g,b,e,l){const M=[],ue=[],D=[];for(let F=0;F<g.dims[0];++F){const Ye=g[F],Ne=b[F],Oe=(0,H.max)(Ye.data)[1];if(Oe===l)continue;const AA=(0,H.softmax)(Ye.data)[Oe];AA>e&&(M.push(Ne),ue.push(AA),D.push(Oe))}return[M,ue,D]}function Be(g,b,e,l=.5,M=.8){const ue=[];let D=0,F=0;const Ye=b[e].data;for(let Oe=0;Oe<g.length;++Oe)g[Oe]===e&&(ue.push(Oe),++D),Ye[Oe]>=l&&++F;let Ne=D>0&&F>0;return Ne&&(Ne=D/F>M),[Ne,ue]}function Ee(g,b,e,l,M,ue=null,D=null){const[F,Ye]=D??g[0].dims,Ne=new Q.Tensor("int32",new Int32Array(F*Ye),[F,Ye]),Oe=[];if(D!==null)for(let Ge=0;Ge<g.length;++Ge)g[Ge]=(0,Q.interpolate)(g[Ge],D,"bilinear",!1);const AA=new Int32Array(g[0].data.length),tA=new Float32Array(g[0].data.length);for(let Ge=0;Ge<g.length;++Ge){let ke=b[Ge];const ze=g[Ge].data;for(let Ke=0;Ke<ze.length;++Ke)ze[Ke]*=ke,ze[Ke]>tA[Ke]&&(AA[Ke]=Ge,tA[Ke]=ze[Ke])}let BA=0;const DA=Ne.data;for(let Ge=0;Ge<e.length;++Ge){const ke=e[Ge],[ze,Ke]=Be(AA,g,Ge,l,M);if(ze){++BA;for(const Pe of Ke)DA[Pe]=BA;Oe.push({id:BA,label_id:ke,score:b[Ge]})}}return[Ne,Oe]}function se(g,b=.5,e=.5,l=.8,M=null,ue=null){M===null&&(console.warn("`label_ids_to_fuse` unset. No instance will be fused."),M=new Set);const D=g.class_queries_logits??g.logits,F=(g.masks_queries_logits??g.pred_masks).sigmoid();let[Ye,Ne,Oe]=D.dims;if(Oe-=1,ue!==null&&ue.length!==Ye)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let AA=[];for(let tA=0;tA<Ye;++tA){let BA=ue!==null?ue[tA]:null,DA=D[tA],Ge=F[tA],[ke,ze,Ke]=me(DA,Ge,b,Oe);if(Ke.length===0){let[sA,cA]=BA??Ge.dims.slice(-2),yA=new Q.Tensor("int32",new Int32Array(sA*cA).fill(-1),[sA,cA]);AA.push({segmentation:yA,segments_info:[]});continue}let[Pe,xA]=Ee(ke,ze,Ke,e,l,M,BA);AA.push({segmentation:Pe,segments_info:xA})}return AA}function ie(g,b=.5,e=null){throw new Error("`post_process_instance_segmentation` is not yet implemented.")}class ve extends k.Callable{constructor(b){super(),this.image_mean=b.image_mean??b.mean,this.image_std=b.image_std??b.std,this.resample=b.resample??2,this.do_rescale=b.do_rescale??!0,this.rescale_factor=b.rescale_factor??1/255,this.do_normalize=b.do_normalize,this.do_thumbnail=b.do_thumbnail,this.size=b.size??b.image_size,this.do_resize=b.do_resize??this.size!==void 0,this.size_divisibility=b.size_divisibility??b.size_divisor,this.do_center_crop=b.do_center_crop,this.crop_size=b.crop_size,this.do_convert_rgb=b.do_convert_rgb??!0,this.do_crop_margin=b.do_crop_margin,this.pad_size=b.pad_size,this.do_pad=b.do_pad,this.do_pad&&!this.pad_size&&this.size&&this.size.width!==void 0&&this.size.height!==void 0&&(this.pad_size=this.size),this.do_flip_channel_order=b.do_flip_channel_order??!1,this.config=b}async thumbnail(b,e,l=2){const M=b.height,ue=b.width,D=e.height,F=e.width;let Ye=Math.min(M,D),Ne=Math.min(ue,F);return Ye===M&&Ne===ue?b:(M>ue?Ne=Math.floor(ue*Ye/M):ue>M&&(Ye=Math.floor(M*Ne/ue)),await b.resize(Ne,Ye,{resample:l}))}async crop_margin(b,e=200){const l=b.clone().grayscale(),M=(0,H.min)(l.data)[0],ue=(0,H.max)(l.data)[0]-M;if(ue===0)return b;const D=e/255;let F=l.width,Ye=l.height,Ne=0,Oe=0;const AA=l.data;for(let tA=0;tA<l.height;++tA){const BA=tA*l.width;for(let DA=0;DA<l.width;++DA)(AA[BA+DA]-M)/ue<D&&(F=Math.min(F,DA),Ye=Math.min(Ye,tA),Ne=Math.max(Ne,DA),Oe=Math.max(Oe,tA))}return b=await b.crop([F,Ye,Ne,Oe])}pad_image(b,e,l,{mode:M="constant",center:ue=!1,constant_values:D=0}={}){const[F,Ye,Ne]=e;let Oe,AA;if(typeof l=="number"?(Oe=l,AA=l):l==="square"?Oe=AA=Math.max(F,Ye):(Oe=l.width,AA=l.height),Oe!==Ye||AA!==F){const tA=new Float32Array(Oe*AA*Ne);if(Array.isArray(D))for(let Ge=0;Ge<tA.length;++Ge)tA[Ge]=D[Ge%Ne];else D!==0&&tA.fill(D);const[BA,DA]=ue?[Math.floor((Oe-Ye)/2),Math.floor((AA-F)/2)]:[0,0];for(let Ge=0;Ge<F;++Ge){const ke=(Ge+DA)*Oe,ze=Ge*Ye;for(let Ke=0;Ke<Ye;++Ke){const Pe=(ke+Ke+BA)*Ne,xA=(ze+Ke)*Ne;for(let sA=0;sA<Ne;++sA)tA[Pe+sA]=b[xA+sA]}}if(M==="symmetric"){if(ue)throw new Error("`center` padding is not supported when `mode` is set to `symmetric`.");const Ge=F-1,ke=Ye-1;for(let ze=0;ze<AA;++ze){const Ke=ze*Oe,Pe=(0,S.calculateReflectOffset)(ze,Ge)*Ye;for(let xA=0;xA<Oe;++xA){if(ze<F&&xA<Ye)continue;const sA=(Ke+xA)*Ne,cA=(Pe+(0,S.calculateReflectOffset)(xA,ke))*Ne;for(let yA=0;yA<Ne;++yA)tA[sA+yA]=b[cA+yA]}}}b=tA,e=[AA,Oe,Ne]}return[b,e]}rescale(b){for(let e=0;e<b.length;++e)b[e]=this.rescale_factor*b[e]}get_resize_output_image_size(b,e){const[l,M]=b.size;let ue,D;if(this.do_thumbnail){const{height:F,width:Ye}=e;ue=Math.min(F,Ye)}else Number.isInteger(e)?(ue=e,D=this.config.max_size??ue):e!==void 0&&(ue=e.shortest_edge,D=e.longest_edge);if(ue!==void 0||D!==void 0){const F=ue===void 0?1:Math.max(ue/l,ue/M),Ye=l*F,Ne=M*F,Oe=D===void 0?1:Math.min(D/Ye,D/Ne);let AA=Math.floor(Number((Ye*Oe).toFixed(2))),tA=Math.floor(Number((Ne*Oe).toFixed(2)));return this.size_divisibility!==void 0&&([AA,tA]=N([AA,tA],this.size_divisibility)),[AA,tA]}if(e!==void 0&&e.width!==void 0&&e.height!==void 0){let F=e.width,Ye=e.height;if(this.config.keep_aspect_ratio&&this.config.ensure_multiple_of){let Ne=Ye/M,Oe=F/l;Math.abs(1-Oe)<Math.abs(1-Ne)?Ne=Oe:Oe=Ne,Ye=R(Ne*M,this.config.ensure_multiple_of),F=R(Oe*l,this.config.ensure_multiple_of)}return[F,Ye]}if(this.size_divisibility!==void 0)return N([l,M],this.size_divisibility);if(e.min_pixels!==void 0&&e.max_pixels!==void 0){const{min_pixels:F,max_pixels:Ye}=e;return function(Ne,Oe,AA=28,tA=3136,BA=1003520){if(Ne<AA||Oe<AA)throw new Error(`height:${Ne} or width:${Oe} must be larger than factor:${AA}`);if(Math.max(Ne,Oe)/Math.min(Ne,Oe)>200)throw new Error("absolute aspect ratio must be smaller than 200, got "+Math.max(Ne,Oe)/Math.min(Ne,Oe));let DA=Math.round(Ne/AA)*AA,Ge=Math.round(Oe/AA)*AA;if(DA*Ge>BA){const ke=Math.sqrt(Ne*Oe/BA);DA=Math.floor(Ne/ke/AA)*AA,Ge=Math.floor(Oe/ke/AA)*AA}else if(DA*Ge<tA){const ke=Math.sqrt(tA/(Ne*Oe));DA=Math.ceil(Ne*ke/AA)*AA,Ge=Math.ceil(Oe*ke/AA)*AA}return[DA,Ge]}(M,l,this.config.patch_size*this.config.merge_size,F,Ye)}throw new Error(`Could not resize image due to unsupported \`this.size\` option in config: ${JSON.stringify(e)}`)}async resize(b){const[e,l]=this.get_resize_output_image_size(b,this.size);return await b.resize(e,l,{resample:this.resample})}async preprocess(b,{do_normalize:e=null,do_pad:l=null,do_convert_rgb:M=null,do_convert_grayscale:ue=null,do_flip_channel_order:D=null}={}){this.do_crop_margin&&(b=await this.crop_margin(b));const[F,Ye]=b.size;if(M??this.do_convert_rgb?b=b.rgb():ue&&(b=b.grayscale()),this.do_resize&&(b=await this.resize(b)),this.do_thumbnail&&(b=await this.thumbnail(b,this.size,this.resample)),this.do_center_crop){let tA,BA;Number.isInteger(this.crop_size)?(tA=this.crop_size,BA=this.crop_size):(tA=this.crop_size.width,BA=this.crop_size.height),b=await b.center_crop(tA,BA)}const Ne=[b.height,b.width];let Oe=Float32Array.from(b.data),AA=[b.height,b.width,b.channels];if(this.do_rescale&&this.rescale(Oe),e??this.do_normalize){let tA=this.image_mean;Array.isArray(this.image_mean)||(tA=new Array(b.channels).fill(tA));let BA=this.image_std;if(Array.isArray(this.image_std)||(BA=new Array(b.channels).fill(tA)),tA.length!==b.channels||BA.length!==b.channels)throw new Error(`When set to arrays, the length of \`image_mean\` (${tA.length}) and \`image_std\` (${BA.length}) must match the number of channels in the image (${b.channels}).`);for(let DA=0;DA<Oe.length;DA+=b.channels)for(let Ge=0;Ge<b.channels;++Ge)Oe[DA+Ge]=(Oe[DA+Ge]-tA[Ge])/BA[Ge]}if(l??this.do_pad){if(this.pad_size)[Oe,AA]=this.pad_image(Oe,[b.height,b.width,b.channels],this.pad_size);else if(this.size_divisibility){const[tA,BA]=N([AA[1],AA[0]],this.size_divisibility);[Oe,AA]=this.pad_image(Oe,AA,{width:tA,height:BA})}}if(D??this.do_flip_channel_order){if(AA[2]!==3)throw new Error("Flipping channel order is only supported for RGB images.");for(let tA=0;tA<Oe.length;tA+=3){const BA=Oe[tA];Oe[tA]=Oe[tA+2],Oe[tA+2]=BA}}return{original_size:[Ye,F],reshaped_input_size:Ne,pixel_values:new Q.Tensor("float32",Oe,AA).permute(2,0,1)}}async _call(b,...e){Array.isArray(b)||(b=[b]);const l=await Promise.all(b.map(ue=>this.preprocess(ue)));return{pixel_values:(0,Q.stack)(l.map(ue=>ue.pixel_values),0),original_sizes:l.map(ue=>ue.original_size),reshaped_input_sizes:l.map(ue=>ue.reshaped_input_size)}}static async from_pretrained(b,e){return new this(await(0,W.getModelJSON)(b,Z.IMAGE_PROCESSOR_NAME,!0,e))}}},"./src/base/processing_utils.js":(x,C,d)=>{d.r(C),d.d(C,{Processor:()=>S});var k=d("./src/utils/constants.js"),Q=d("./src/utils/generic.js"),H=d("./src/utils/hub.js");class S extends Q.Callable{constructor(Z,R){super(),this.config=Z,this.components=R}get image_processor(){return this.components.image_processor}get tokenizer(){return this.components.tokenizer}get feature_extractor(){return this.components.feature_extractor}apply_chat_template(Z,R={}){if(!this.tokenizer)throw new Error("Unable to apply chat template without a tokenizer.");return this.tokenizer.apply_chat_template(Z,{tokenize:!1,...R})}batch_decode(...Z){if(!this.tokenizer)throw new Error("Unable to decode without a tokenizer.");return this.tokenizer.batch_decode(...Z)}decode(...Z){if(!this.tokenizer)throw new Error("Unable to decode without a tokenizer.");return this.tokenizer.decode(...Z)}async _call(Z,...R){for(const N of[this.image_processor,this.feature_extractor,this.tokenizer])if(N)return N(Z,...R);throw new Error("No image processor, feature extractor, or tokenizer found.")}static async from_pretrained(Z,R){const[N,K]=await Promise.all([this.uses_processor_config?(0,H.getModelJSON)(Z,k.PROCESSOR_NAME,!0,R):{},Promise.all(this.classes.filter(V=>V in this).map(async V=>{const Ae=await this[V].from_pretrained(Z,R);return[V.replace(/_class$/,""),Ae]})).then(Object.fromEntries)]);return new this(N,K)}}Ve(S,"classes",["image_processor_class","tokenizer_class","feature_extractor_class"]),Ve(S,"uses_processor_config",!1)},"./src/configs.js":(x,C,d)=>{d.r(C),d.d(C,{AutoConfig:()=>Z,PretrainedConfig:()=>W,getKeyValueShapes:()=>S});var k=d("./src/utils/core.js"),Q=d("./src/utils/hub.js");function H(R){const N={};let K={};switch(R.model_type){case"llava":case"paligemma":case"florence2":case"llava_onevision":case"idefics3":K=H(R.text_config);break;case"moondream1":K=H(R.phi_config);break;case"musicgen":K=H(R.decoder);break;case"multi_modality":K=H(R.language_config);break;case"gpt2":case"gptj":case"jais":case"codegen":case"gpt_bigcode":N.num_heads="n_head",N.num_layers="n_layer",N.hidden_size="n_embd";break;case"gpt_neox":case"stablelm":case"opt":case"falcon":N.num_heads="num_attention_heads",N.num_layers="num_hidden_layers",N.hidden_size="hidden_size";break;case"llama":case"olmo":case"olmo2":case"mobilellm":case"granite":case"cohere":case"mistral":case"starcoder2":case"qwen2":case"qwen2_vl":case"phi":case"phi3":case"phi3_v":N.num_heads="num_key_value_heads",N.num_layers="num_hidden_layers",N.hidden_size="hidden_size",N.num_attention_heads="num_attention_heads";break;case"gemma":case"gemma2":case"glm":case"helium":N.num_heads="num_key_value_heads",N.num_layers="num_hidden_layers",N.dim_kv="head_dim";break;case"openelm":N.num_heads="num_kv_heads",N.num_layers="num_transformer_layers",N.dim_kv="head_dim";break;case"gpt_neo":case"donut-swin":N.num_heads="num_heads",N.num_layers="num_layers",N.hidden_size="hidden_size";break;case"bloom":N.num_heads="n_head",N.num_layers="n_layer",N.hidden_size="hidden_size";break;case"mpt":N.num_heads="n_heads",N.num_layers="n_layers",N.hidden_size="d_model";break;case"exaone":N.num_heads="num_key_value_heads",N.num_layers="num_layers",N.dim_kv="head_dim",N.num_attention_heads="num_attention_heads";break;case"t5":case"mt5":case"longt5":N.num_decoder_layers="num_decoder_layers",N.num_decoder_heads="num_heads",N.decoder_dim_kv="d_kv",N.num_encoder_layers="num_layers",N.num_encoder_heads="num_heads",N.encoder_dim_kv="d_kv";break;case"bart":case"mbart":case"marian":case"whisper":case"m2m_100":case"blenderbot":case"blenderbot-small":case"florence2_language":N.num_decoder_layers="decoder_layers",N.num_decoder_heads="decoder_attention_heads",N.decoder_hidden_size="d_model",N.num_encoder_layers="encoder_layers",N.num_encoder_heads="encoder_attention_heads",N.encoder_hidden_size="d_model";break;case"speecht5":N.num_decoder_layers="decoder_layers",N.num_decoder_heads="decoder_attention_heads",N.decoder_hidden_size="hidden_size",N.num_encoder_layers="encoder_layers",N.num_encoder_heads="encoder_attention_heads",N.encoder_hidden_size="hidden_size";break;case"trocr":N.num_encoder_layers=N.num_decoder_layers="decoder_layers",N.num_encoder_heads=N.num_decoder_heads="decoder_attention_heads",N.encoder_hidden_size=N.decoder_hidden_size="d_model";break;case"musicgen_decoder":N.num_encoder_layers=N.num_decoder_layers="num_hidden_layers",N.num_encoder_heads=N.num_decoder_heads="num_attention_heads",N.encoder_hidden_size=N.decoder_hidden_size="hidden_size";break;case"moonshine":N.num_decoder_layers="decoder_num_hidden_layers",N.num_decoder_heads="decoder_num_key_value_heads",N.num_encoder_layers="encoder_num_hidden_layers",N.num_encoder_heads="encoder_num_key_value_heads",N.encoder_hidden_size=N.decoder_hidden_size="hidden_size";break;case"vision-encoder-decoder":const Ae=H(R.decoder),me="num_decoder_layers"in Ae,Be=(0,k.pick)(R,["model_type","is_encoder_decoder"]);return me?(Be.num_decoder_layers=Ae.num_decoder_layers,Be.num_decoder_heads=Ae.num_decoder_heads,Be.decoder_hidden_size=Ae.decoder_hidden_size,Be.num_encoder_layers=Ae.num_encoder_layers,Be.num_encoder_heads=Ae.num_encoder_heads,Be.encoder_hidden_size=Ae.encoder_hidden_size):(Be.num_layers=Ae.num_layers,Be.num_heads=Ae.num_heads,Be.hidden_size=Ae.hidden_size),Be}const V={...K,...(0,k.pick)(R,["model_type","multi_query","is_encoder_decoder"])};for(const Ae in N)V[Ae]=R[N[Ae]];return V}function S(R,{prefix:N="past_key_values",batch_size:K=1}={}){const V={},Ae=R.normalized_config;if(Ae.is_encoder_decoder&&"num_encoder_heads"in Ae&&"num_decoder_heads"in Ae){const me=Ae.encoder_dim_kv??Ae.encoder_hidden_size/Ae.num_encoder_heads,Be=Ae.decoder_dim_kv??Ae.decoder_hidden_size/Ae.num_decoder_heads,Ee=[K,Ae.num_encoder_heads,0,me],se=[K,Ae.num_decoder_heads,0,Be];for(let ie=0;ie<Ae.num_decoder_layers;++ie)V[`${N}.${ie}.encoder.key`]=Ee,V[`${N}.${ie}.encoder.value`]=Ee,V[`${N}.${ie}.decoder.key`]=se,V[`${N}.${ie}.decoder.value`]=se}else{const me=Ae.num_heads,Be=Ae.num_layers,Ee=Ae.dim_kv??Ae.hidden_size/(Ae.num_attention_heads??me);if(Ae.model_type==="falcon"){const se=[K*me,0,Ee];for(let ie=0;ie<Be;++ie)V[`${N}.${ie}.key`]=se,V[`${N}.${ie}.value`]=se}else if(Ae.multi_query){const se=[K*me,0,2*Ee];for(let ie=0;ie<Be;++ie)V[`${N}.${ie}.key_value`]=se}else if(Ae.model_type==="bloom"){const se=[K*me,Ee,0],ie=[K*me,0,Ee];for(let ve=0;ve<Be;++ve)V[`${N}.${ve}.key`]=se,V[`${N}.${ve}.value`]=ie}else if(Ae.model_type==="openelm")for(let se=0;se<Be;++se){const ie=[K,me[se],0,Ee];V[`${N}.${se}.key`]=ie,V[`${N}.${se}.value`]=ie}else{const se=[K,me,0,Ee];for(let ie=0;ie<Be;++ie)V[`${N}.${ie}.key`]=se,V[`${N}.${ie}.value`]=se}}return V}class W{constructor(N){Ve(this,"model_type",null);Ve(this,"is_encoder_decoder",!1);Ve(this,"max_position_embeddings");Ve(this,"transformers.js_config");Object.assign(this,N),this.normalized_config=H(this)}static async from_pretrained(N,{progress_callback:K=null,config:V=null,cache_dir:Ae=null,local_files_only:me=!1,revision:Be="main"}={}){!V||V instanceof W||(V=new W(V));const Ee=V??await async function(se,ie){return await(0,Q.getModelJSON)(se,"config.json",!0,ie)}(N,{progress_callback:K,config:V,cache_dir:Ae,local_files_only:me,revision:Be});return new this(Ee)}}class Z{static async from_pretrained(...N){return W.from_pretrained(...N)}}},"./src/env.js":(x,C,d)=>{var e,l;d.r(C),d.d(C,{apis:()=>Be,env:()=>g});var k=d("?569f"),Q=d("?3f59"),H=d("?154a");const S=typeof window<"u"&&window.document!==void 0,W=typeof self<"u"&&((e=self.constructor)==null?void 0:e.name)==="DedicatedWorkerGlobalScope",Z=typeof self<"u"&&"caches"in self,R=typeof navigator<"u"&&"gpu"in navigator,N=typeof navigator<"u"&&"ml"in navigator,K=typeof process<"u",V=K&&((l=process==null?void 0:process.release)==null?void 0:l.name)==="node",Ae=!b(k),me=!b(Q),Be=Object.freeze({IS_BROWSER_ENV:S,IS_WEBWORKER_ENV:W,IS_WEB_CACHE_AVAILABLE:Z,IS_WEBGPU_AVAILABLE:R,IS_WEBNN_AVAILABLE:N,IS_PROCESS_AVAILABLE:K,IS_NODE_ENV:V,IS_FS_AVAILABLE:Ae,IS_PATH_AVAILABLE:me}),Ee=Ae&&me;let se="./";if(Ee){const M=Object(import.meta).url;M?se=Q.dirname(Q.dirname(H.fileURLToPath(M))):typeof __dirname<"u"&&(se=Q.dirname(__dirname))}const ie=Ee?Q.join(se,"/.cache/"):null,ve="/models/",g={version:"3.3.3",backends:{onnx:{}},allowRemoteModels:!0,remoteHost:"https://huggingface.co/",remotePathTemplate:"{model}/resolve/{revision}/",allowLocalModels:!(S||W),localModelPath:Ee?Q.join(se,ve):ve,useFS:Ae,useBrowserCache:Z,useFSCache:Ae,cacheDir:ie,useCustomCache:!1,customCache:null};function b(M){return Object.keys(M).length===0}},"./src/generation/configuration_utils.js":(x,C,d)=>{d.r(C),d.d(C,{GenerationConfig:()=>Q});var k=d("./src/utils/core.js");class Q{constructor(S){Ve(this,"max_length",20);Ve(this,"max_new_tokens",null);Ve(this,"min_length",0);Ve(this,"min_new_tokens",null);Ve(this,"early_stopping",!1);Ve(this,"max_time",null);Ve(this,"do_sample",!1);Ve(this,"num_beams",1);Ve(this,"num_beam_groups",1);Ve(this,"penalty_alpha",null);Ve(this,"use_cache",!0);Ve(this,"temperature",1);Ve(this,"top_k",50);Ve(this,"top_p",1);Ve(this,"typical_p",1);Ve(this,"epsilon_cutoff",0);Ve(this,"eta_cutoff",0);Ve(this,"diversity_penalty",0);Ve(this,"repetition_penalty",1);Ve(this,"encoder_repetition_penalty",1);Ve(this,"length_penalty",1);Ve(this,"no_repeat_ngram_size",0);Ve(this,"bad_words_ids",null);Ve(this,"force_words_ids",null);Ve(this,"renormalize_logits",!1);Ve(this,"constraints",null);Ve(this,"forced_bos_token_id",null);Ve(this,"forced_eos_token_id",null);Ve(this,"remove_invalid_values",!1);Ve(this,"exponential_decay_length_penalty",null);Ve(this,"suppress_tokens",null);Ve(this,"streamer",null);Ve(this,"begin_suppress_tokens",null);Ve(this,"forced_decoder_ids",null);Ve(this,"guidance_scale",null);Ve(this,"num_return_sequences",1);Ve(this,"output_attentions",!1);Ve(this,"output_hidden_states",!1);Ve(this,"output_scores",!1);Ve(this,"return_dict_in_generate",!1);Ve(this,"pad_token_id",null);Ve(this,"bos_token_id",null);Ve(this,"eos_token_id",null);Ve(this,"encoder_no_repeat_ngram_size",0);Ve(this,"decoder_start_token_id",null);Ve(this,"generation_kwargs",{});Object.assign(this,(0,k.pick)(S,Object.getOwnPropertyNames(this)))}}},"./src/generation/logits_process.js":(x,C,d)=>{d.r(C),d.d(C,{ClassifierFreeGuidanceLogitsProcessor:()=>se,ForcedBOSTokenLogitsProcessor:()=>Z,ForcedEOSTokenLogitsProcessor:()=>R,LogitsProcessor:()=>H,LogitsProcessorList:()=>W,LogitsWarper:()=>S,MinLengthLogitsProcessor:()=>me,MinNewTokensLengthLogitsProcessor:()=>Be,NoBadWordsLogitsProcessor:()=>Ee,NoRepeatNGramLogitsProcessor:()=>V,RepetitionPenaltyLogitsProcessor:()=>Ae,SuppressTokensAtBeginLogitsProcessor:()=>N,TemperatureLogitsWarper:()=>ie,TopKLogitsWarper:()=>g,TopPLogitsWarper:()=>ve,WhisperTimeStampLogitsProcessor:()=>K});var k=d("./src/utils/generic.js");d("./src/utils/tensor.js");var Q=d("./src/utils/maths.js");class H extends k.Callable{_call(e,l){throw Error("`_call` should be implemented in a subclass")}}class S extends k.Callable{_call(e,l){throw Error("`_call` should be implemented in a subclass")}}class W extends k.Callable{constructor(){super(),this.processors=[]}push(e){this.processors.push(e)}extend(e){this.processors.push(...e)}_call(e,l){let M=l;for(const ue of this.processors)M=ue(e,M);return M}[Symbol.iterator](){return this.processors.values()}}class Z extends H{constructor(e){super(),this.bos_token_id=e}_call(e,l){for(let M=0;M<e.length;++M)if(e[M].length===1){const ue=l[M].data;ue.fill(-1/0),ue[this.bos_token_id]=0}return l}}class R extends H{constructor(e,l){super(),this.max_length=e,this.eos_token_id=Array.isArray(l)?l:[l]}_call(e,l){for(let M=0;M<e.length;++M)if(e[M].length===this.max_length-1){const ue=l[M].data;ue.fill(-1/0);for(const D of this.eos_token_id)ue[D]=0}return l}}class N extends H{constructor(e,l){super(),this.begin_suppress_tokens=e,this.begin_index=l}_call(e,l){for(let M=0;M<e.length;++M)if(e[M].length===this.begin_index){const ue=l[M].data;for(const D of this.begin_suppress_tokens)ue[D]=-1/0}return l}}class K extends H{constructor(e,l){super(),this.eos_token_id=Array.isArray(e.eos_token_id)?e.eos_token_id[0]:e.eos_token_id,this.no_timestamps_token_id=e.no_timestamps_token_id,this.timestamp_begin=this.no_timestamps_token_id+1,this.begin_index=l.length,l.at(-1)===this.no_timestamps_token_id&&(this.begin_index-=1),this.max_initial_timestamp_index=e.max_initial_timestamp_index}_call(e,l){for(let M=0;M<e.length;++M){const ue=l[M].data;if(ue[this.no_timestamps_token_id]=-1/0,e[M].length===this.begin_index-1){ue.fill(-1/0),ue[this.timestamp_begin]=0;continue}const D=e[M].slice(this.begin_index),F=D.length>=1&&D[D.length-1]>=this.timestamp_begin,Ye=D.length<2||D[D.length-2]>=this.timestamp_begin;if(F&&(Ye?ue.subarray(this.timestamp_begin).fill(-1/0):ue.subarray(0,this.eos_token_id).fill(-1/0)),e[M].length===this.begin_index&&this.max_initial_timestamp_index!==null){const AA=this.timestamp_begin+this.max_initial_timestamp_index;ue.subarray(AA+1).fill(-1/0)}const Ne=(0,Q.log_softmax)(ue);Math.log(Ne.subarray(this.timestamp_begin).map(Math.exp).reduce((AA,tA)=>AA+tA))>(0,Q.max)(Ne.subarray(0,this.timestamp_begin))[0]&&ue.subarray(0,this.timestamp_begin).fill(-1/0)}return l}}class V extends H{constructor(e){super(),this.no_repeat_ngram_size=e}getNgrams(e){const l=e.length,M=[];for(let D=0;D<l+1-this.no_repeat_ngram_size;++D){const F=[];for(let Ye=0;Ye<this.no_repeat_ngram_size;++Ye)F.push(e[D+Ye]);M.push(F.map(Number))}const ue=new Map;for(const D of M){const F=D.slice(0,D.length-1),Ye=JSON.stringify(F),Ne=ue.get(Ye)??[];Ne.push(D[D.length-1]),ue.set(Ye,Ne)}return ue}getGeneratedNgrams(e,l){const M=l.slice(l.length+1-this.no_repeat_ngram_size,l.length);return e.get(JSON.stringify(M.map(Number)))??[]}calcBannedNgramTokens(e){const l=[];if(e.length+1<this.no_repeat_ngram_size)return l;{const M=this.getNgrams(e);return this.getGeneratedNgrams(M,e)}}_call(e,l){for(let M=0;M<e.length;++M){const ue=l[M].data,D=this.calcBannedNgramTokens(e[M]);for(const F of D)ue[F]=-1/0}return l}}class Ae extends H{constructor(e){super(),this.penalty=e}_call(e,l){for(let M=0;M<e.length;++M){const ue=l[M].data;for(const D of new Set(e[M])){const F=Number(D);ue[F]<0?ue[F]*=this.penalty:ue[F]/=this.penalty}}return l}}class me extends H{constructor(e,l){super(),this.min_length=e,this.eos_token_id=Array.isArray(l)?l:[l]}_call(e,l){for(let M=0;M<e.length;++M)if(e[M].length<this.min_length){const ue=l[M].data;for(const D of this.eos_token_id)ue[D]=-1/0}return l}}class Be extends H{constructor(e,l,M){super(),this.prompt_length_to_skip=e,this.min_new_tokens=l,this.eos_token_id=Array.isArray(M)?M:[M]}_call(e,l){for(let M=0;M<e.length;++M)if(e[M].length-this.prompt_length_to_skip<this.min_new_tokens){const ue=l[M].data;for(const D of this.eos_token_id)ue[D]=-1/0}return l}}class Ee extends H{constructor(e,l){super(),this.bad_words_ids=e,this.eos_token_id=Array.isArray(l)?l:[l]}_call(e,l){for(let M=0;M<e.length;++M){const ue=l[M].data,D=e[M];for(const F of this.bad_words_ids){let Ye=!0;for(let Ne=1;Ne<=F.length-1&&F.length<D.length;++Ne)if(F.at(-Ne-1)!=D.at(-Ne)){Ye=!1;break}Ye&&(ue[F.at(-1)]=-1/0)}}return l}}class se extends H{constructor(e){if(super(),e<=1)throw new Error(`Require guidance scale >1 to use the classifier free guidance processor, got guidance scale ${e}.`);this.guidance_scale=e}_call(e,l){if(l.dims[0]!==2*e.length)throw new Error(`Logits should have twice the batch size of the input ids, the first half of batches corresponding to the conditional inputs, and the second half of batches corresponding to the unconditional inputs. Got batch size ${l.dims[0]} for the logits and ${e.length} for the input ids.`);const M=e.length,ue=l.slice([0,M],null),D=l.slice([M,l.dims[0]],null);for(let F=0;F<D.data.length;++F)D.data[F]+=(ue.data[F]-D.data[F])*this.guidance_scale;return D}}class ie extends S{constructor(e){super(),this.temperature=e}_call(e,l){const M=l.data;for(let ue=0;ue<M.length;++ue)M[ue]/=this.temperature;return l}}class ve extends S{constructor(e,{filter_value:l=-1/0,min_tokens_to_keep:M=1}={}){if(super(),e<0||e>1)throw new Error(`\`top_p\` must be a float > 0 and < 1, but is ${e}`);if(!Number.isInteger(M)||M<1)throw new Error(`\`min_tokens_to_keep\` must be a positive integer, but is ${M}`);this.top_p=e,this.filter_value=l,this.min_tokens_to_keep=M}}class g extends S{constructor(e,{filter_value:l=-1/0,min_tokens_to_keep:M=1}={}){if(super(),!Number.isInteger(e)||e<0)throw new Error(`\`top_k\` must be a positive integer, but is ${e}`);this.top_k=Math.max(e,M),this.filter_value=l}}},"./src/generation/logits_sampler.js":(x,C,d)=>{d.r(C),d.d(C,{LogitsSampler:()=>S});var k=d("./src/utils/generic.js"),Q=d("./src/utils/tensor.js"),H=d("./src/utils/maths.js");d("./src/generation/configuration_utils.js");class S extends k.Callable{constructor(K){super(),this.generation_config=K}async _call(K){return this.sample(K)}async sample(K){throw Error("sample should be implemented in subclasses.")}getLogits(K,V){let Ae=K.dims.at(-1),me=K.data;if(V===-1)me=me.slice(-Ae);else{let Be=V*Ae;me=me.slice(Be,Be+Ae)}return me}randomSelect(K){let V=0;for(let me=0;me<K.length;++me)V+=K[me];let Ae=Math.random()*V;for(let me=0;me<K.length;++me)if(Ae-=K[me],Ae<=0)return me;return 0}static getSampler(K){if(K.do_sample)return new Z(K);if(K.num_beams>1)return new R(K);if(K.num_return_sequences>1)throw Error(`num_return_sequences has to be 1 when doing greedy search, but is ${K.num_return_sequences}.`);return new W(K)}}class W extends S{async sample(K){const V=(0,H.max)(K.data)[1];return[[BigInt(V),0]]}}class Z extends S{async sample(K){let V=K.dims.at(-1);this.generation_config.top_k>0&&(V=Math.min(this.generation_config.top_k,V));const[Ae,me]=await(0,Q.topk)(K,V),Be=(0,H.softmax)(Ae.data);return Array.from({length:this.generation_config.num_beams},()=>{const Ee=this.randomSelect(Be);return[me.data[Ee],Math.log(Be[Ee])]})}}class R extends S{async sample(K){let V=K.dims.at(-1);this.generation_config.top_k>0&&(V=Math.min(this.generation_config.top_k,V));const[Ae,me]=await(0,Q.topk)(K,V),Be=(0,H.softmax)(Ae.data);return Array.from({length:this.generation_config.num_beams},(Ee,se)=>[me.data[se],Math.log(Be[se])])}}},"./src/generation/stopping_criteria.js":(x,C,d)=>{d.r(C),d.d(C,{EosTokenCriteria:()=>W,InterruptableStoppingCriteria:()=>Z,MaxLengthCriteria:()=>S,StoppingCriteria:()=>Q,StoppingCriteriaList:()=>H});var k=d("./src/utils/generic.js");class Q extends k.Callable{_call(N,K){throw Error("StoppingCriteria needs to be subclassed")}}class H extends k.Callable{constructor(){super(),this.criteria=[]}push(N){this.criteria.push(N)}extend(N){N instanceof H?N=N.criteria:N instanceof Q&&(N=[N]),this.criteria.push(...N)}_call(N,K){const V=new Array(N.length).fill(!1);for(const Ae of this.criteria){const me=Ae(N,K);for(let Be=0;Be<V.length;++Be)V[Be]||(V[Be]=me[Be])}return V}[Symbol.iterator](){return this.criteria.values()}}class S extends Q{constructor(N,K=null){super(),this.max_length=N,this.max_position_embeddings=K}_call(N){return N.map(K=>K.length>=this.max_length)}}class W extends Q{constructor(N){super(),Array.isArray(N)||(N=[N]),this.eos_token_id=N}_call(N,K){return N.map(V=>{const Ae=V.at(-1);return this.eos_token_id.some(me=>Ae==me)})}}class Z extends Q{constructor(){super(),this.interrupted=!1}interrupt(){this.interrupted=!0}reset(){this.interrupted=!1}_call(N,K){return new Array(N.length).fill(this.interrupted)}}},"./src/generation/streamers.js":(x,C,d)=>{d.r(C),d.d(C,{BaseStreamer:()=>S,TextStreamer:()=>Z,WhisperTextStreamer:()=>R});var k=d("./src/utils/core.js"),Q=d("./src/tokenizers.js"),H=d("./src/env.js");class S{put(K){throw Error("Not implemented")}end(){throw Error("Not implemented")}}const W=H.apis.IS_PROCESS_AVAILABLE?N=>process.stdout.write(N):N=>console.log(N);class Z extends S{constructor(K,{skip_prompt:V=!1,callback_function:Ae=null,token_callback_function:me=null,skip_special_tokens:Be=!0,decode_kwargs:Ee={},...se}={}){super(),this.tokenizer=K,this.skip_prompt=V,this.callback_function=Ae??W,this.token_callback_function=me,this.decode_kwargs={skip_special_tokens:Be,...Ee,...se},this.token_cache=[],this.print_len=0,this.next_tokens_are_prompt=!0}put(K){var Be;if(K.length>1)throw Error("TextStreamer only supports batch size of 1");if(this.skip_prompt&&this.next_tokens_are_prompt)return void(this.next_tokens_are_prompt=!1);const V=K[0];(Be=this.token_callback_function)==null||Be.call(this,V),this.token_cache=(0,k.mergeArrays)(this.token_cache,V);const Ae=this.tokenizer.decode(this.token_cache,this.decode_kwargs);let me;Ae.endsWith(`
`)?(me=Ae.slice(this.print_len),this.token_cache=[],this.print_len=0):Ae.length>0&&(0,Q.is_chinese_char)(Ae.charCodeAt(Ae.length-1))?(me=Ae.slice(this.print_len),this.print_len+=me.length):(me=Ae.slice(this.print_len,Ae.lastIndexOf(" ")+1),this.print_len+=me.length),this.on_finalized_text(me,!1)}end(){let K;this.token_cache.length>0?(K=this.tokenizer.decode(this.token_cache,this.decode_kwargs).slice(this.print_len),this.token_cache=[],this.print_len=0):K="",this.next_tokens_are_prompt=!0,this.on_finalized_text(K,!0)}on_finalized_text(K,V){var Ae,me;K.length>0&&((Ae=this.callback_function)==null||Ae.call(this,K)),V&&this.callback_function===W&&H.apis.IS_PROCESS_AVAILABLE&&((me=this.callback_function)==null||me.call(this,`
`))}}class R extends Z{constructor(K,{skip_prompt:V=!1,callback_function:Ae=null,token_callback_function:me=null,on_chunk_start:Be=null,on_chunk_end:Ee=null,on_finalize:se=null,time_precision:ie=.02,skip_special_tokens:ve=!0,decode_kwargs:g={}}={}){super(K,{skip_prompt:V,skip_special_tokens:ve,callback_function:Ae,token_callback_function:me,decode_kwargs:g}),this.timestamp_begin=K.timestamp_begin,this.on_chunk_start=Be,this.on_chunk_end=Ee,this.on_finalize=se,this.time_precision=ie,this.waiting_for_timestamp=!1}put(K){var Ae,me;if(K.length>1)throw Error("WhisperTextStreamer only supports batch size of 1");const V=K[0];if(V.length===1){const Be=Number(V[0])-this.timestamp_begin;if(Be>=0){const Ee=Be*this.time_precision;this.waiting_for_timestamp?(Ae=this.on_chunk_end)==null||Ae.call(this,Ee):(me=this.on_chunk_start)==null||me.call(this,Ee),this.waiting_for_timestamp=!this.waiting_for_timestamp,K=[[]]}}return super.put(K)}end(){var K;super.end(),(K=this.on_finalize)==null||K.call(this)}}},"./src/models.js":(x,C,d)=>{d.r(C),d.d(C,{ASTForAudioClassification:()=>Ws,ASTModel:()=>bi,ASTPreTrainedModel:()=>Tn,AlbertForMaskedLM:()=>YA,AlbertForQuestionAnswering:()=>Le,AlbertForSequenceClassification:()=>PA,AlbertModel:()=>uA,AlbertPreTrainedModel:()=>Ze,AutoModel:()=>b1,AutoModelForAudioClassification:()=>X1,AutoModelForAudioFrameClassification:()=>J1,AutoModelForCTC:()=>n2,AutoModelForCausalLM:()=>V1,AutoModelForDepthEstimation:()=>s2,AutoModelForDocumentQuestionAnswering:()=>ii,AutoModelForImageClassification:()=>Os,AutoModelForImageFeatureExtraction:()=>ec,AutoModelForImageMatting:()=>a2,AutoModelForImageSegmentation:()=>j1,AutoModelForImageToImage:()=>_1,AutoModelForMaskGeneration:()=>Z1,AutoModelForMaskedLM:()=>Zr,AutoModelForNormalEstimation:()=>i2,AutoModelForObjectDetection:()=>r2,AutoModelForPoseEstimation:()=>$1,AutoModelForQuestionAnswering:()=>St,AutoModelForSemanticSegmentation:()=>t2,AutoModelForSeq2SeqLM:()=>I1,AutoModelForSequenceClassification:()=>W1,AutoModelForSpeechSeq2Seq:()=>Cs,AutoModelForTextToSpectrogram:()=>w1,AutoModelForTextToWaveform:()=>A2,AutoModelForTokenClassification:()=>Mt,AutoModelForUniversalSegmentation:()=>U1,AutoModelForVision2Seq:()=>Yt,AutoModelForXVector:()=>q1,AutoModelForZeroShotObjectDetection:()=>K1,BartForConditionalGeneration:()=>ir,BartForSequenceClassification:()=>it,BartModel:()=>hn,BartPretrainedModel:()=>Bn,BaseModelOutput:()=>MA,BeitForImageClassification:()=>ye,BeitModel:()=>he,BeitPreTrainedModel:()=>ce,BertForMaskedLM:()=>q,BertForQuestionAnswering:()=>J,BertForSequenceClassification:()=>HA,BertForTokenClassification:()=>ge,BertModel:()=>OA,BertPreTrainedModel:()=>LA,BlenderbotForConditionalGeneration:()=>wr,BlenderbotModel:()=>Fr,BlenderbotPreTrainedModel:()=>Ur,BlenderbotSmallForConditionalGeneration:()=>as,BlenderbotSmallModel:()=>vr,BlenderbotSmallPreTrainedModel:()=>Ut,BloomForCausalLM:()=>P0,BloomModel:()=>Ki,BloomPreTrainedModel:()=>Ui,CLIPModel:()=>UA,CLIPPreTrainedModel:()=>Za,CLIPSegForImageSegmentation:()=>Aa,CLIPSegModel:()=>RA,CLIPSegPreTrainedModel:()=>ls,CLIPTextModel:()=>Ei,CLIPTextModelWithProjection:()=>Vs,CLIPVisionModel:()=>yn,CLIPVisionModelWithProjection:()=>Nn,CamembertForMaskedLM:()=>Jn,CamembertForQuestionAnswering:()=>Yr,CamembertForSequenceClassification:()=>_n,CamembertForTokenClassification:()=>la,CamembertModel:()=>oa,CamembertPreTrainedModel:()=>zn,CausalLMOutput:()=>e0,CausalLMOutputWithPast:()=>vc,ChineseCLIPModel:()=>b0,ChineseCLIPPreTrainedModel:()=>C0,ClapAudioModelWithProjection:()=>Ql,ClapModel:()=>Gl,ClapPreTrainedModel:()=>to,ClapTextModelWithProjection:()=>Dl,CodeGenForCausalLM:()=>xa,CodeGenModel:()=>rn,CodeGenPreTrainedModel:()=>ka,CohereForCausalLM:()=>Qs,CohereModel:()=>On,CoherePreTrainedModel:()=>Ds,ConvBertForMaskedLM:()=>Pr,ConvBertForQuestionAnswering:()=>Yn,ConvBertForSequenceClassification:()=>wt,ConvBertForTokenClassification:()=>qn,ConvBertModel:()=>$t,ConvBertPreTrainedModel:()=>Vr,ConvNextForImageClassification:()=>F2,ConvNextModel:()=>z2,ConvNextPreTrainedModel:()=>Io,ConvNextV2ForImageClassification:()=>N2,ConvNextV2Model:()=>S2,ConvNextV2PreTrainedModel:()=>wo,DPTForDepthEstimation:()=>_i,DPTModel:()=>Ss,DPTPreTrainedModel:()=>ms,DebertaForMaskedLM:()=>zr,DebertaForQuestionAnswering:()=>Xt,DebertaForSequenceClassification:()=>jr,DebertaForTokenClassification:()=>Ca,DebertaModel:()=>Dn,DebertaPreTrainedModel:()=>yt,DebertaV2ForMaskedLM:()=>ks,DebertaV2ForQuestionAnswering:()=>xs,DebertaV2ForSequenceClassification:()=>As,DebertaV2ForTokenClassification:()=>ts,DebertaV2Model:()=>ba,DebertaV2PreTrainedModel:()=>$n,DecisionTransformerModel:()=>Xl,DecisionTransformerPreTrainedModel:()=>Zl,DeiTForImageClassification:()=>Dr,DeiTModel:()=>Gr,DeiTPreTrainedModel:()=>Cr,DepthAnythingForDepthEstimation:()=>O0,DepthAnythingPreTrainedModel:()=>N0,DepthProForDepthEstimation:()=>E2,DepthProPreTrainedModel:()=>y2,DetrForObjectDetection:()=>Xe,DetrForSegmentation:()=>nA,DetrModel:()=>Re,DetrObjectDetectionOutput:()=>fA,DetrPreTrainedModel:()=>De,DetrSegmentationOutput:()=>GA,Dinov2ForImageClassification:()=>Ja,Dinov2Model:()=>O2,Dinov2PreTrainedModel:()=>ko,Dinov2WithRegistersForImageClassification:()=>ni,Dinov2WithRegistersModel:()=>ri,Dinov2WithRegistersPreTrainedModel:()=>_a,DistilBertForMaskedLM:()=>Ma,DistilBertForQuestionAnswering:()=>ea,DistilBertForSequenceClassification:()=>Ia,DistilBertForTokenClassification:()=>rs,DistilBertModel:()=>ca,DistilBertPreTrainedModel:()=>qr,DonutSwinModel:()=>P2,DonutSwinPreTrainedModel:()=>T2,EfficientNetForImageClassification:()=>Ol,EfficientNetModel:()=>Nl,EfficientNetPreTrainedModel:()=>Fo,ElectraForMaskedLM:()=>et,ElectraForQuestionAnswering:()=>Vn,ElectraForSequenceClassification:()=>FA,ElectraForTokenClassification:()=>Kt,ElectraModel:()=>qA,ElectraPreTrainedModel:()=>kn,EsmForMaskedLM:()=>Ha,EsmForSequenceClassification:()=>Bs,EsmForTokenClassification:()=>Ra,EsmModel:()=>Ya,EsmPreTrainedModel:()=>Br,ExaoneForCausalLM:()=>Fi,ExaoneModel:()=>zi,ExaonePreTrainedModel:()=>Ba,FalconForCausalLM:()=>Ml,FalconModel:()=>To,FalconPreTrainedModel:()=>Qo,FastViTForImageClassification:()=>r,FastViTModel:()=>t,FastViTPreTrainedModel:()=>A,Florence2ForConditionalGeneration:()=>ki,Florence2PreTrainedModel:()=>ua,GLPNForDepthEstimation:()=>Q2,GLPNModel:()=>D2,GLPNPreTrainedModel:()=>bo,GPT2LMHeadModel:()=>wa,GPT2Model:()=>Ms,GPT2PreTrainedModel:()=>Gi,GPTBigCodeForCausalLM:()=>tn,GPTBigCodeModel:()=>E0,GPTBigCodePreTrainedModel:()=>da,GPTJForCausalLM:()=>Qi,GPTJModel:()=>Wt,GPTJPreTrainedModel:()=>kt,GPTNeoForCausalLM:()=>B0,GPTNeoModel:()=>x0,GPTNeoPreTrainedModel:()=>Us,GPTNeoXForCausalLM:()=>y0,GPTNeoXModel:()=>v0,GPTNeoXPreTrainedModel:()=>Rr,Gemma2ForCausalLM:()=>gs,Gemma2Model:()=>Ri,Gemma2PreTrainedModel:()=>$s,GemmaForCausalLM:()=>Hi,GemmaModel:()=>ta,GemmaPreTrainedModel:()=>Yi,GlmForCausalLM:()=>cs,GlmModel:()=>nn,GlmPreTrainedModel:()=>Pi,GraniteForCausalLM:()=>_s,GraniteModel:()=>Li,GranitePreTrainedModel:()=>Wr,GroundingDinoForObjectDetection:()=>Y2,GroundingDinoPreTrainedModel:()=>L2,GroupViTModel:()=>pt,GroupViTPreTrainedModel:()=>ps,HeliumForCausalLM:()=>Gs,HeliumModel:()=>Mr,HeliumPreTrainedModel:()=>Zs,HieraForImageClassification:()=>on,HieraModel:()=>Kr,HieraPreTrainedModel:()=>Or,HubertForCTC:()=>fl,HubertForSequenceClassification:()=>pl,HubertModel:()=>dl,HubertPreTrainedModel:()=>T1,IJepaForImageClassification:()=>Xi,IJepaModel:()=>Xa,IJepaPreTrainedModel:()=>Na,Idefics3ForConditionalGeneration:()=>vi,Idefics3PreTrainedModel:()=>Bi,ImageMattingOutput:()=>tc,JAISLMHeadModel:()=>k0,JAISModel:()=>w0,JAISPreTrainedModel:()=>Di,JinaCLIPModel:()=>os,JinaCLIPPreTrainedModel:()=>Pa,JinaCLIPTextModel:()=>I0,JinaCLIPVisionModel:()=>js,LlamaForCausalLM:()=>M0,LlamaModel:()=>Ti,LlamaPreTrainedModel:()=>Ks,LlavaForConditionalGeneration:()=>ys,LlavaOnevisionForConditionalGeneration:()=>vn,LlavaPreTrainedModel:()=>vs,LongT5ForConditionalGeneration:()=>zt,LongT5Model:()=>er,LongT5PreTrainedModel:()=>jt,M2M100ForConditionalGeneration:()=>L0,M2M100Model:()=>X2,M2M100PreTrainedModel:()=>_0,MBartForCausalLM:()=>Hr,MBartForConditionalGeneration:()=>$A,MBartForSequenceClassification:()=>mn,MBartModel:()=>pA,MBartPreTrainedModel:()=>pr,MPNetForMaskedLM:()=>Qa,MPNetForQuestionAnswering:()=>Ta,MPNetForSequenceClassification:()=>Va,MPNetForTokenClassification:()=>ga,MPNetModel:()=>ns,MPNetPreTrainedModel:()=>xn,MT5ForConditionalGeneration:()=>Zt,MT5Model:()=>_A,MT5PreTrainedModel:()=>VA,MarianMTModel:()=>Z2,MarianModel:()=>K2,MarianPreTrainedModel:()=>Rn,MaskFormerForInstanceSegmentation:()=>G2,MaskFormerModel:()=>M2,MaskFormerPreTrainedModel:()=>Co,MaskedLMOutput:()=>Ln,MgpstrForSceneTextRecognition:()=>e1,MgpstrModelOutput:()=>_l,MgpstrPreTrainedModel:()=>$l,MistralForCausalLM:()=>yl,MistralModel:()=>Mo,MistralPreTrainedModel:()=>Ao,MobileBertForMaskedLM:()=>Da,MobileBertForQuestionAnswering:()=>Ft,MobileBertForSequenceClassification:()=>xt,MobileBertModel:()=>Wa,MobileBertPreTrainedModel:()=>Ga,MobileLLMForCausalLM:()=>fa,MobileLLMModel:()=>Xs,MobileLLMPreTrainedModel:()=>Si,MobileNetV1ForImageClassification:()=>Hl,MobileNetV1Model:()=>Yl,MobileNetV1PreTrainedModel:()=>Oo,MobileNetV2ForImageClassification:()=>Wl,MobileNetV2Model:()=>Rl,MobileNetV2PreTrainedModel:()=>Lo,MobileNetV3ForImageClassification:()=>jl,MobileNetV3Model:()=>Vl,MobileNetV3PreTrainedModel:()=>no,MobileNetV4ForImageClassification:()=>Kl,MobileNetV4Model:()=>Ul,MobileNetV4PreTrainedModel:()=>Yo,MobileViTForImageClassification:()=>c,MobileViTModel:()=>o,MobileViTPreTrainedModel:()=>s,MobileViTV2ForImageClassification:()=>p,MobileViTV2Model:()=>m,MobileViTV2PreTrainedModel:()=>f,ModelOutput:()=>mA,ModernBertForMaskedLM:()=>_e,ModernBertForSequenceClassification:()=>dA,ModernBertForTokenClassification:()=>bA,ModernBertModel:()=>Te,ModernBertPreTrainedModel:()=>fe,Moondream1ForConditionalGeneration:()=>Ua,MoonshineForConditionalGeneration:()=>Sn,MoonshineModel:()=>J0,MoonshinePreTrainedModel:()=>wi,MptForCausalLM:()=>Zi,MptModel:()=>ra,MptPreTrainedModel:()=>Fa,MultiModalityCausalLM:()=>Jl,MultiModalityPreTrainedModel:()=>ql,MusicgenForCausalLM:()=>z1,MusicgenForConditionalGeneration:()=>No,MusicgenModel:()=>Ll,MusicgenPreTrainedModel:()=>So,NomicBertModel:()=>XA,NomicBertPreTrainedModel:()=>NA,OPTForCausalLM:()=>ar,OPTModel:()=>_r,OPTPreTrainedModel:()=>Ps,Olmo2ForCausalLM:()=>Js,Olmo2Model:()=>va,Olmo2PreTrainedModel:()=>Oi,OlmoForCausalLM:()=>Ni,OlmoModel:()=>G0,OlmoPreTrainedModel:()=>qs,OpenELMForCausalLM:()=>Q0,OpenELMModel:()=>D0,OpenELMPreTrainedModel:()=>Wi,OwlViTForObjectDetection:()=>P,OwlViTModel:()=>y,OwlViTPreTrainedModel:()=>I,Owlv2ForObjectDetection:()=>_,Owlv2Model:()=>X,Owlv2PreTrainedModel:()=>Y,PaliGemmaForConditionalGeneration:()=>Ka,PaliGemmaPreTrainedModel:()=>xi,PatchTSMixerForPrediction:()=>t1,PatchTSMixerModel:()=>Wo,PatchTSMixerPreTrainedModel:()=>Ro,PatchTSTForPrediction:()=>R0,PatchTSTModel:()=>A1,PatchTSTPreTrainedModel:()=>Ho,Phi3ForCausalLM:()=>T0,Phi3Model:()=>us,Phi3PreTrainedModel:()=>za,Phi3VForCausalLM:()=>QA,Phi3VPreTrainedModel:()=>yi,PhiForCausalLM:()=>ji,PhiModel:()=>hr,PhiPreTrainedModel:()=>Un,PreTrainedModel:()=>Qe,PretrainedMixin:()=>ur,PvtForImageClassification:()=>zs,PvtModel:()=>fs,PvtPreTrainedModel:()=>qi,PyAnnoteForAudioFrameClassification:()=>Al,PyAnnoteModel:()=>el,PyAnnotePreTrainedModel:()=>$0,QuestionAnsweringModelOutput:()=>Kn,Qwen2ForCausalLM:()=>Cn,Qwen2Model:()=>Ts,Qwen2PreTrainedModel:()=>an,Qwen2VLForConditionalGeneration:()=>ei,Qwen2VLPreTrainedModel:()=>Vi,RTDetrForObjectDetection:()=>ct,RTDetrModel:()=>At,RTDetrObjectDetectionOutput:()=>bt,RTDetrPreTrainedModel:()=>SA,ResNetForImageClassification:()=>En,ResNetModel:()=>ln,ResNetPreTrainedModel:()=>$r,RoFormerForMaskedLM:()=>tt,RoFormerForQuestionAnswering:()=>Ar,RoFormerForSequenceClassification:()=>nt,RoFormerForTokenClassification:()=>It,RoFormerModel:()=>st,RoFormerPreTrainedModel:()=>TA,RobertaForMaskedLM:()=>Qn,RobertaForQuestionAnswering:()=>An,RobertaForSequenceClassification:()=>Hs,RobertaForTokenClassification:()=>Dt,RobertaModel:()=>Ys,RobertaPreTrainedModel:()=>Hn,SamImageSegmentationOutput:()=>U2,SamModel:()=>j2,SamPreTrainedModel:()=>V2,SapiensForDepthEstimation:()=>B2,SapiensForNormalEstimation:()=>v2,SapiensForSemanticSegmentation:()=>x2,SapiensPreTrainedModel:()=>ti,SegformerForImageClassification:()=>Pl,SegformerForSemanticSegmentation:()=>zl,SegformerModel:()=>P1,SegformerPreTrainedModel:()=>ro,Seq2SeqLMOutput:()=>Bc,SequenceClassifierOutput:()=>Ot,SiglipModel:()=>Es,SiglipPreTrainedModel:()=>is,SiglipTextModel:()=>Mi,SiglipVisionModel:()=>Nr,SpeechT5ForSpeechToText:()=>vo,SpeechT5ForTextToSpeech:()=>yo,SpeechT5HifiGan:()=>Eo,SpeechT5Model:()=>xl,SpeechT5PreTrainedModel:()=>ai,SqueezeBertForMaskedLM:()=>xe,SqueezeBertForQuestionAnswering:()=>je,SqueezeBertForSequenceClassification:()=>Se,SqueezeBertModel:()=>re,SqueezeBertPreTrainedModel:()=>rA,StableLmForCausalLM:()=>Sl,StableLmModel:()=>Fl,StableLmPreTrainedModel:()=>zo,Starcoder2ForCausalLM:()=>El,Starcoder2Model:()=>Do,Starcoder2PreTrainedModel:()=>Go,StyleTextToSpeech2Model:()=>kl,StyleTextToSpeech2PreTrainedModel:()=>wl,Swin2SRForImageSuperResolution:()=>hs,Swin2SRModel:()=>Fs,Swin2SRPreTrainedModel:()=>Oa,SwinForImageClassification:()=>ha,SwinModel:()=>pa,SwinPreTrainedModel:()=>na,T5ForConditionalGeneration:()=>fr,T5Model:()=>Bt,T5PreTrainedModel:()=>vA,TableTransformerForObjectDetection:()=>tr,TableTransformerModel:()=>qt,TableTransformerObjectDetectionOutput:()=>mr,TableTransformerPreTrainedModel:()=>Nt,TokenClassifierOutput:()=>Pn,TrOCRForCausalLM:()=>vl,TrOCRPreTrainedModel:()=>Bl,UniSpeechForCTC:()=>Bo,UniSpeechForSequenceClassification:()=>al,UniSpeechModel:()=>nl,UniSpeechPreTrainedModel:()=>Y0,UniSpeechSatForAudioFrameClassification:()=>ll,UniSpeechSatForCTC:()=>il,UniSpeechSatForSequenceClassification:()=>ol,UniSpeechSatModel:()=>sl,UniSpeechSatPreTrainedModel:()=>H0,ViTForImageClassification:()=>Sa,ViTMAEModel:()=>Ji,ViTMAEPreTrainedModel:()=>sn,ViTMSNForImageClassification:()=>S0,ViTMSNModel:()=>qa,ViTMSNPreTrainedModel:()=>Ai,ViTModel:()=>z0,ViTPreTrainedModel:()=>ds,VisionEncoderDecoderModel:()=>nr,VitMatteForImageMatting:()=>a,VitMattePreTrainedModel:()=>n,VitPoseForPoseEstimation:()=>F0,VitPosePreTrainedModel:()=>bn,VitsModel:()=>Po,VitsModelOutput:()=>rc,VitsPreTrainedModel:()=>Tl,Wav2Vec2BertForCTC:()=>gl,Wav2Vec2BertForSequenceClassification:()=>ul,Wav2Vec2BertModel:()=>cl,Wav2Vec2BertPreTrainedModel:()=>eo,Wav2Vec2ForAudioFrameClassification:()=>$2,Wav2Vec2ForCTC:()=>J2,Wav2Vec2ForSequenceClassification:()=>_2,Wav2Vec2Model:()=>q2,Wav2Vec2PreTrainedModel:()=>Ns,WavLMForAudioFrameClassification:()=>Il,WavLMForCTC:()=>ml,WavLMForSequenceClassification:()=>Cl,WavLMForXVector:()=>bl,WavLMModel:()=>hl,WavLMPreTrainedModel:()=>$i,WeSpeakerResNetModel:()=>rl,WeSpeakerResNetPreTrainedModel:()=>tl,WhisperForConditionalGeneration:()=>m0,WhisperModel:()=>h0,WhisperPreTrainedModel:()=>Ii,XLMForQuestionAnswering:()=>ss,XLMForSequenceClassification:()=>d0,XLMForTokenClassification:()=>f0,XLMModel:()=>g0,XLMPreTrainedModel:()=>jn,XLMRobertaForMaskedLM:()=>Rs,XLMRobertaForQuestionAnswering:()=>JA,XLMRobertaForSequenceClassification:()=>Fn,XLMRobertaForTokenClassification:()=>Jr,XLMRobertaModel:()=>p0,XLMRobertaPreTrainedModel:()=>ja,XLMWithLMHeadModel:()=>u0,XVectorOutput:()=>Ac,YolosForObjectDetection:()=>R2,YolosModel:()=>H2,YolosObjectDetectionOutput:()=>W2,YolosPreTrainedModel:()=>xo});var k=d("./src/configs.js"),Q=d("./src/backends/onnx.js"),H=d("./src/utils/dtypes.js"),S=d("./src/utils/generic.js"),W=d("./src/utils/core.js"),Z=d("./src/utils/hub.js"),R=d("./src/utils/constants.js"),N=d("./src/generation/logits_process.js"),K=d("./src/generation/configuration_utils.js"),V=d("./src/utils/tensor.js"),Ae=d("./src/utils/image.js"),me=d("./src/utils/maths.js"),Be=d("./src/generation/stopping_criteria.js"),Ee=d("./src/generation/logits_sampler.js"),se=d("./src/env.js"),ie=d("./src/models/whisper/generation_whisper.js"),ve=d("./src/models/whisper/common_whisper.js");const g=0,b=1,e=2,l=3,M=4,ue=5,D=6,F=7,Ye=8,Ne=9,Oe=new Map,AA=new Map,tA=new Map;async function BA(U,ne,Ce){return Object.fromEntries(await Promise.all(Object.keys(ne).map(async qe=>{const{buffer:lA,session_options:oA,session_config:wA}=await async function(KA,ZA,WA){var aa;const rt=((aa=WA.config)==null?void 0:aa["transformers.js_config"])??{};let dt=WA.device??rt.device;dt&&typeof dt!="string"&&(dt.hasOwnProperty(ZA)?dt=dt[ZA]:(console.warn(`device not specified for "${ZA}". Using the default device.`),dt=null));const Gt=dt??(se.apis.IS_NODE_ENV?"cpu":"wasm"),or=(0,Q.deviceToExecutionProviders)(Gt);let Tt=WA.dtype??rt.dtype;if(typeof Tt!="string"&&(Tt&&Tt.hasOwnProperty(ZA)?Tt=Tt[ZA]:(Tt=H.DEFAULT_DEVICE_DTYPE_MAPPING[Gt]??H.DATA_TYPES.fp32,console.warn(`dtype not specified for "${ZA}". Using the default dtype (${Tt}) for this device (${Gt}).`))),Tt===H.DATA_TYPES.auto){let br=rt.dtype;typeof br!="string"&&(br=br[ZA]),Tt=br&&br!==H.DATA_TYPES.auto&&H.DATA_TYPES.hasOwnProperty(br)?br:H.DEFAULT_DEVICE_DTYPE_MAPPING[Gt]??H.DATA_TYPES.fp32}const Lt=Tt;if(!H.DEFAULT_DTYPE_SUFFIX_MAPPING.hasOwnProperty(Lt))throw new Error(`Invalid dtype: ${Lt}. Should be one of: ${Object.keys(H.DATA_TYPES).join(", ")}`);if(Lt===H.DATA_TYPES.fp16&&Gt==="webgpu"&&!await(0,H.isWebGpuFp16Supported)())throw new Error(`The device (${Gt}) does not support fp16.`);const Ht=rt.kv_cache_dtype?typeof rt.kv_cache_dtype=="string"?rt.kv_cache_dtype:rt.kv_cache_dtype[Lt]??"float32":void 0;if(Ht&&!["float32","float16"].includes(Ht))throw new Error(`Invalid kv_cache_dtype: ${Ht}. Should be one of: float32, float16`);const lr={dtype:Lt,kv_cache_dtype:Ht},Sr=H.DEFAULT_DTYPE_SUFFIX_MAPPING[Lt],Lr=`${WA.subfolder??""}/${ZA}${Sr}.onnx`,yr={...WA.session_options};yr.executionProviders??(yr.executionProviders=or);const In=rt.free_dimension_overrides;In?yr.freeDimensionOverrides??(yr.freeDimensionOverrides=In):Gt.startsWith("webnn")&&!yr.freeDimensionOverrides&&console.warn('WebNN does not currently support dynamic shapes and requires `free_dimension_overrides` to be set in config.json as a field within "transformers.js_config". When `free_dimension_overrides` is not set, you may experience significant performance degradation.');const cn=(0,Z.getModelFile)(KA,Lr,!0,WA),gn=WA.use_external_data_format??rt.use_external_data_format;let en=[];if(gn&&(gn===!0||typeof gn=="object"&&gn.hasOwnProperty(ZA)&&gn[ZA]===!0)){if(se.apis.IS_NODE_ENV)throw new Error("External data format is not yet supported in Node.js");const br=`${ZA}${Sr}.onnx_data`,Zn=`${WA.subfolder??""}/${br}`;en.push(new Promise(async(oi,A0)=>{const li=await(0,Z.getModelFile)(KA,Zn,!0,WA);oi({path:br,data:li})}))}else yr.externalData!==void 0&&(en=yr.externalData.map(async br=>{if(typeof br.data=="string"){const Zn=await(0,Z.getModelFile)(KA,br.data,!0,WA);return{...br,data:Zn}}return br}));if(en.length>0&&(yr.externalData=await Promise.all(en)),Gt==="webgpu"){const br=(0,k.getKeyValueShapes)(WA.config,{prefix:"present"});if(Object.keys(br).length>0&&!(0,Q.isONNXProxy)()){const Zn={};for(const oi in br)Zn[oi]="gpu-buffer";yr.preferredOutputLocation=Zn}}return{buffer:await cn,session_options:yr,session_config:lr}}(U,ne[qe],Ce);return[qe,await(0,Q.createInferenceSession)(lA,oA,wA)]})))}async function DA(U,ne,Ce){return Object.fromEntries(await Promise.all(Object.keys(ne).map(async qe=>[qe,await(0,Z.getModelJSON)(U,ne[qe],!1,Ce)])))}async function Ge(U,ne){const Ce=function(qe,lA){const oA=Object.create(null),wA=[];for(const WA of qe.inputNames){const rt=lA[WA];rt instanceof V.Tensor?oA[WA]=(0,Q.isONNXProxy)()?rt.clone():rt:wA.push(WA)}if(wA.length>0)throw new Error(`An error occurred during model execution: "Missing the following inputs: ${wA.join(", ")}.`);const KA=Object.keys(lA).length,ZA=qe.inputNames.length;if(KA>ZA){let WA=Object.keys(lA).filter(rt=>!qe.inputNames.includes(rt));console.warn(`WARNING: Too many inputs were provided (${KA} > ${ZA}). The following inputs will be ignored: "${WA.join(", ")}".`)}return oA}(U,ne);try{const qe=Object.fromEntries(Object.entries(Ce).map(([oA,wA])=>[oA,wA.ort_tensor]));let lA=await U.run(qe);return lA=ke(lA),lA}catch(qe){const lA=Object.fromEntries(Object.entries(Ce).map(([oA,{type:wA,dims:KA,data:ZA}])=>[oA,{type:wA,dims:KA,data:ZA}]));throw console.error(`An error occurred during model execution: "${qe}".`),console.error("Inputs given to model:",lA),qe}}function ke(U){for(let ne in U)(0,Q.isONNXTensor)(U[ne])?U[ne]=new V.Tensor(U[ne]):typeof U[ne]=="object"&&ke(U[ne]);return U}function ze(U){if(U instanceof V.Tensor)return U;if(U.length===0)throw Error("items must be non-empty");if(Array.isArray(U[0])){if(U.some(ne=>ne.length!==U[0].length))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=True' and/or 'truncation=True' to have batched tensors with the same length.");return new V.Tensor("int64",BigInt64Array.from(U.flat().map(ne=>BigInt(ne))),[U.length,U[0].length])}return new V.Tensor("int64",BigInt64Array.from(U.map(ne=>BigInt(ne))),[1,U.length])}function Ke(U){return new V.Tensor("bool",[U],[1])}async function Pe(U,ne){let{encoder_outputs:Ce,input_ids:qe,decoder_input_ids:lA,...oA}=ne;if(!Ce){const wA=(0,W.pick)(ne,U.sessions.model.inputNames);Ce=(await xA(U,wA)).last_hidden_state}return oA.input_ids=lA,oA.encoder_hidden_states=Ce,U.sessions.decoder_model_merged.inputNames.includes("encoder_attention_mask")&&(oA.encoder_attention_mask=ne.attention_mask),await sA(U,oA,!0)}async function xA(U,ne){const Ce=U.sessions.model,qe=(0,W.pick)(ne,Ce.inputNames);if(Ce.inputNames.includes("inputs_embeds")&&!qe.inputs_embeds){if(!ne.input_ids)throw new Error("Both `input_ids` and `inputs_embeds` are missing in the model inputs.");qe.inputs_embeds=await U.encode_text({input_ids:ne.input_ids})}if(Ce.inputNames.includes("token_type_ids")&&!qe.token_type_ids){if(!qe.input_ids)throw new Error("Both `input_ids` and `token_type_ids` are missing in the model inputs.");qe.token_type_ids=(0,V.zeros_like)(qe.input_ids)}if(Ce.inputNames.includes("pixel_mask")&&!qe.pixel_mask){if(!qe.pixel_values)throw new Error("Both `pixel_values` and `pixel_mask` are missing in the model inputs.");const lA=qe.pixel_values.dims;qe.pixel_mask=(0,V.ones)([lA[0],lA[2],lA[3]])}return await Ge(Ce,qe)}async function sA(U,ne,Ce=!1){const qe=U.sessions[Ce?"decoder_model_merged":"model"],{past_key_values:lA,...oA}=ne;if(qe.inputNames.includes("use_cache_branch")&&(oA.use_cache_branch=Ke(!!lA)),qe.inputNames.includes("position_ids")&&oA.attention_mask&&!oA.position_ids){const KA=U.config.model_type==="paligemma"?1:0;oA.position_ids=function(ZA,WA=null,rt=0){const{input_ids:dt,inputs_embeds:Gt,attention_mask:or}=ZA,{data:Tt,dims:Lt}=gA(or,rt);let Ht=new V.Tensor("int64",Tt,Lt);if(WA){const lr=-(dt??Gt).dims.at(1);Ht=Ht.slice(null,[lr,null])}return Ht}(oA,lA,KA)}U.addPastKeyValues(oA,lA);const wA=(0,W.pick)(oA,qe.inputNames);return await Ge(qe,wA)}function cA({image_token_id:U,inputs_embeds:ne,image_features:Ce,input_ids:qe,attention_mask:lA}){const oA=qe.tolist().map(WA=>WA.reduce((rt,dt,Gt)=>(dt==U&&rt.push(Gt),rt),[])),wA=oA.reduce((WA,rt)=>WA+rt.length,0),KA=Ce.dims[0];if(wA!==KA)throw new Error(`Image features and image tokens do not match: tokens: ${wA}, features ${KA}`);let ZA=0;for(let WA=0;WA<oA.length;++WA){const rt=oA[WA],dt=ne[WA];for(let Gt=0;Gt<rt.length;++Gt)dt[rt[Gt]].data.set(Ce[ZA++].data)}return{inputs_embeds:ne,attention_mask:lA}}async function yA(U,{input_ids:ne=null,attention_mask:Ce=null,pixel_values:qe=null,position_ids:lA=null,inputs_embeds:oA=null,past_key_values:wA=null,generation_config:KA=null,logits_processor:ZA=null,...WA}){if(!oA){if(oA=await U.encode_text({input_ids:ne,...WA}),qe&&ne.dims[1]!==1){const rt=await U.encode_image({pixel_values:qe,...WA});({inputs_embeds:oA,attention_mask:Ce}=U._merge_input_ids_with_image_features({image_features:rt,inputs_embeds:oA,input_ids:ne,attention_mask:Ce}))}else if(wA&&qe&&ne.dims[1]===1){const rt=ne.dims[1],dt=Object.values(wA)[0].dims.at(-2);Ce=(0,V.cat)([(0,V.ones)([ne.dims[0],dt]),Ce.slice(null,[Ce.dims[1]-rt,Ce.dims[1]])],1)}}if(!lA&&U.config.model_type==="qwen2_vl"){const{image_grid_thw:rt,video_grid_thw:dt}=WA;[lA]=U.get_rope_index(ne,rt,dt,Ce)}return await sA(U,{inputs_embeds:oA,past_key_values:wA,attention_mask:Ce,position_ids:lA,generation_config:KA,logits_processor:ZA},!0)}function gA(U,ne=0){const[Ce,qe]=U.dims,lA=U.data,oA=new BigInt64Array(lA.length);for(let wA=0;wA<Ce;++wA){const KA=wA*qe;let ZA=BigInt(ne);for(let WA=0;WA<qe;++WA){const rt=KA+WA;lA[rt]===0n?oA[rt]=BigInt(1):(oA[rt]=ZA,ZA+=lA[rt])}}return{data:oA,dims:U.dims}}function He(U,ne,Ce,qe){if(Ce.past_key_values){const lA=Object.values(Ce.past_key_values)[0].dims.at(-2),{input_ids:oA,attention_mask:wA}=Ce;if(!(wA&&wA.dims[1]>oA.dims[1])){if(lA<oA.dims[1])Ce.input_ids=oA.slice(null,[lA,null]);else if(U.config.image_token_index!=null&&oA.data.some(KA=>KA==U.config.image_token_index)){const KA=U.config.num_image_tokens;if(!KA)throw new Error("`num_image_tokens` is missing in the model configuration.");const ZA=oA.dims[1]-(lA-KA);Ce.input_ids=oA.slice(null,[-ZA,null]),Ce.attention_mask=(0,V.ones)([1,lA+ZA])}}}return Ce}function Je(U,ne,Ce,qe){return Ce.past_key_values&&(ne=ne.map(lA=>[lA.at(-1)])),{...Ce,decoder_input_ids:ze(ne)}}function hA(U,...ne){return U.config.is_encoder_decoder?Je(U,...ne):He(U,...ne)}function IA(U,ne,Ce,qe){const lA=!!Ce.past_key_values;return qe.guidance_scale!==null&&qe.guidance_scale>1&&(lA?Ce.input_ids=(0,V.cat)([Ce.input_ids,Ce.input_ids],0):(Ce.input_ids=(0,V.cat)([Ce.input_ids,(0,V.full_like)(Ce.input_ids,BigInt(qe.pad_token_id))],0),Ce.attention_mask=(0,V.cat)([Ce.attention_mask,(0,V.full_like)(Ce.attention_mask,0n)],0))),!lA&&Ce.pixel_values||(Ce.pixel_values=(0,V.full)([0,0,3,384,384],1)),lA&&(Ce.images_seq_mask=new V.Tensor("bool",new Array(0+1).fill(!0).fill(!1,0,1),[1,0+1]),Ce.images_emb_mask=new V.Tensor("bool",new Array(0).fill(!1),[1,1,0])),Ce}class Qe extends S.Callable{constructor(Ce,qe,lA){super();Ve(this,"main_input_name","input_ids");Ve(this,"forward_params",["input_ids","attention_mask"]);this.config=Ce,this.sessions=qe,this.configs=lA;const oA=tA.get(this.constructor),wA=Oe.get(oA);switch(this.can_generate=!1,this._forward=null,this._prepare_inputs_for_generation=null,wA){case M:this.can_generate=!0,this._forward=sA,this._prepare_inputs_for_generation=He;break;case e:case l:case F:this.can_generate=!0,this._forward=Pe,this._prepare_inputs_for_generation=Je;break;case b:this._forward=Pe;break;case D:this.can_generate=!0,this._forward=yA,this._prepare_inputs_for_generation=hA;break;case Ne:this.can_generate=!0,this._prepare_inputs_for_generation=hA;break;case Ye:this.can_generate=!0,this._prepare_inputs_for_generation=IA;break;default:this._forward=xA}this.can_generate&&this.forward_params.push("past_key_values"),this.custom_config=this.config["transformers.js_config"]??{}}async dispose(){var qe;const Ce=[];for(const lA of Object.values(this.sessions))(qe=lA==null?void 0:lA.handler)!=null&&qe.dispose&&Ce.push(lA.handler.dispose());return await Promise.all(Ce)}static async from_pretrained(Ce,{progress_callback:qe=null,config:lA=null,cache_dir:oA=null,local_files_only:wA=!1,revision:KA="main",model_file_name:ZA=null,subfolder:WA="onnx",device:rt=null,dtype:dt=null,use_external_data_format:Gt=null,session_options:or={}}={}){let Tt={progress_callback:qe,config:lA,cache_dir:oA,local_files_only:wA,revision:KA,model_file_name:ZA,subfolder:WA,device:rt,dtype:dt,use_external_data_format:Gt,session_options:or};const Lt=tA.get(this),Ht=Oe.get(Lt);let lr;if(lA=Tt.config=await k.AutoConfig.from_pretrained(Ce,Tt),Ht===M)lr=await Promise.all([BA(Ce,{model:Tt.model_file_name??"model"},Tt),DA(Ce,{generation_config:"generation_config.json"},Tt)]);else if(Ht===e||Ht===l)lr=await Promise.all([BA(Ce,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},Tt),DA(Ce,{generation_config:"generation_config.json"},Tt)]);else if(Ht===ue)lr=await Promise.all([BA(Ce,{model:"vision_encoder",prompt_encoder_mask_decoder:"prompt_encoder_mask_decoder"},Tt)]);else if(Ht===b)lr=await Promise.all([BA(Ce,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},Tt)]);else if(Ht===D){const Sr={embed_tokens:"embed_tokens",vision_encoder:"vision_encoder",decoder_model_merged:"decoder_model_merged"};lA.is_encoder_decoder&&(Sr.model="encoder_model"),lr=await Promise.all([BA(Ce,Sr,Tt),DA(Ce,{generation_config:"generation_config.json"},Tt)])}else if(Ht===F)lr=await Promise.all([BA(Ce,{model:"text_encoder",decoder_model_merged:"decoder_model_merged",encodec_decode:"encodec_decode"},Tt),DA(Ce,{generation_config:"generation_config.json"},Tt)]);else if(Ht===Ye)lr=await Promise.all([BA(Ce,{prepare_inputs_embeds:"prepare_inputs_embeds",model:"language_model",lm_head:"lm_head",gen_head:"gen_head",gen_img_embeds:"gen_img_embeds",image_decode:"image_decode"},Tt),DA(Ce,{generation_config:"generation_config.json"},Tt)]);else if(Ht===Ne)lr=await Promise.all([BA(Ce,{prepare_inputs_embeds:"prepare_inputs_embeds",model:"model",vision_encoder:"vision_encoder"},Tt),DA(Ce,{generation_config:"generation_config.json"},Tt)]);else{if(Ht!==g){const Sr=Lt??(lA==null?void 0:lA.model_type);Sr!=="custom"&&console.warn(`Model type for '${Sr}' not found, assuming encoder-only architecture. Please report this at ${R.GITHUB_ISSUE_URL}.`)}lr=await Promise.all([BA(Ce,{model:Tt.model_file_name??"model"},Tt)])}return new this(lA,...lr)}async _call(Ce){return await this.forward(Ce)}async forward(Ce){return await this._forward(this,Ce)}get generation_config(){var Ce;return((Ce=this.configs)==null?void 0:Ce.generation_config)??null}_get_logits_warper(Ce){const qe=new N.LogitsProcessorList;return Ce.temperature!==null&&Ce.temperature!==1&&qe.push(new N.TemperatureLogitsWarper(Ce.temperature)),Ce.top_k!==null&&Ce.top_k!==0&&qe.push(new N.TopKLogitsWarper(Ce.top_k)),Ce.top_p!==null&&Ce.top_p<1&&qe.push(new N.TopPLogitsWarper(Ce.top_p)),qe}_get_logits_processor(Ce,qe,lA=null){const oA=new N.LogitsProcessorList;if(Ce.repetition_penalty!==null&&Ce.repetition_penalty!==1&&oA.push(new N.RepetitionPenaltyLogitsProcessor(Ce.repetition_penalty)),Ce.no_repeat_ngram_size!==null&&Ce.no_repeat_ngram_size>0&&oA.push(new N.NoRepeatNGramLogitsProcessor(Ce.no_repeat_ngram_size)),Ce.bad_words_ids!==null&&oA.push(new N.NoBadWordsLogitsProcessor(Ce.bad_words_ids,Ce.eos_token_id)),Ce.min_length!==null&&Ce.eos_token_id!==null&&Ce.min_length>0&&oA.push(new N.MinLengthLogitsProcessor(Ce.min_length,Ce.eos_token_id)),Ce.min_new_tokens!==null&&Ce.eos_token_id!==null&&Ce.min_new_tokens>0&&oA.push(new N.MinNewTokensLengthLogitsProcessor(qe,Ce.min_new_tokens,Ce.eos_token_id)),Ce.forced_bos_token_id!==null&&oA.push(new N.ForcedBOSTokenLogitsProcessor(Ce.forced_bos_token_id)),Ce.forced_eos_token_id!==null&&oA.push(new N.ForcedEOSTokenLogitsProcessor(Ce.max_length,Ce.forced_eos_token_id)),Ce.begin_suppress_tokens!==null){const wA=qe>1||Ce.forced_bos_token_id===null?qe:qe+1;oA.push(new N.SuppressTokensAtBeginLogitsProcessor(Ce.begin_suppress_tokens,wA))}return Ce.guidance_scale!==null&&Ce.guidance_scale>1&&oA.push(new N.ClassifierFreeGuidanceLogitsProcessor(Ce.guidance_scale)),lA!==null&&oA.extend(lA),oA}_prepare_generation_config(Ce,qe,lA=K.GenerationConfig){const oA={...this.config};for(const KA of["decoder","generator","text_config"])KA in oA&&Object.assign(oA,oA[KA]);const wA=new lA(oA);return Object.assign(wA,this.generation_config??{}),Ce&&Object.assign(wA,Ce),qe&&Object.assign(wA,(0,W.pick)(qe,Object.getOwnPropertyNames(wA))),wA}_get_stopping_criteria(Ce,qe=null){const lA=new Be.StoppingCriteriaList;return Ce.max_length!==null&&lA.push(new Be.MaxLengthCriteria(Ce.max_length,this.config.max_position_embeddings??null)),Ce.eos_token_id!==null&&lA.push(new Be.EosTokenCriteria(Ce.eos_token_id)),qe&&lA.extend(qe),lA}_validate_model_class(){if(!this.can_generate){const Ce=[Ko,Zo,Uo,Vo],qe=tA.get(this.constructor),lA=new Set,oA=this.config.model_type;for(const KA of Ce){const ZA=KA.get(oA);ZA&&lA.add(ZA[0])}let wA=`The current model class (${qe}) is not compatible with \`.generate()\`, as it doesn't have a language model head.`;throw lA.size>0&&(wA+=` Please use the following class instead: ${[...lA].join(", ")}`),Error(wA)}}prepare_inputs_for_generation(...Ce){return this._prepare_inputs_for_generation(this,...Ce)}_update_model_kwargs_for_generation({generated_input_ids:Ce,outputs:qe,model_inputs:lA,is_encoder_decoder:oA}){return lA.past_key_values=this.getPastKeyValues(qe,lA.past_key_values),lA.input_ids=new V.Tensor("int64",Ce.flat(),[Ce.length,1]),oA||(lA.attention_mask=(0,V.cat)([lA.attention_mask,(0,V.ones)([lA.attention_mask.dims[0],1])],1)),lA.position_ids=null,lA}_prepare_model_inputs({inputs:Ce,bos_token_id:qe,model_kwargs:lA}){const oA=(0,W.pick)(lA,this.forward_params),wA=this.main_input_name;if(wA in oA){if(Ce)throw new Error("`inputs`: {inputs}` were passed alongside {input_name} which is not allowed. Make sure to either pass {inputs} or {input_name}=...")}else oA[wA]=Ce;return{inputs_tensor:oA[wA],model_inputs:oA,model_input_name:wA}}async _prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:Ce,model_inputs:qe,model_input_name:lA,generation_config:oA}){if(this.sessions.model.inputNames.includes("inputs_embeds")&&!qe.inputs_embeds&&"_prepare_inputs_embeds"in this){const{input_ids:KA,pixel_values:ZA,attention_mask:WA,...rt}=qe,dt=await this._prepare_inputs_embeds(qe);qe={...rt,...(0,W.pick)(dt,["inputs_embeds","attention_mask"])}}let{last_hidden_state:wA}=await xA(this,qe);if(oA.guidance_scale!==null&&oA.guidance_scale>1)wA=(0,V.cat)([wA,(0,V.full_like)(wA,0)],0),"attention_mask"in qe&&(qe.attention_mask=(0,V.cat)([qe.attention_mask,(0,V.zeros_like)(qe.attention_mask)],0));else if(qe.decoder_input_ids){const KA=ze(qe.decoder_input_ids).dims[0];if(KA!==wA.dims[0]){if(wA.dims[0]!==1)throw new Error(`The encoder outputs have a different batch size (${wA.dims[0]}) than the decoder inputs (${KA}).`);wA=(0,V.cat)(Array.from({length:KA},()=>wA),0)}}return qe.encoder_outputs=wA,qe}_prepare_decoder_input_ids_for_generation({batch_size:Ce,model_input_name:qe,model_kwargs:lA,decoder_start_token_id:oA,bos_token_id:wA,generation_config:KA}){let{decoder_input_ids:ZA,...WA}=lA;if(!(ZA instanceof V.Tensor)){if(ZA)Array.isArray(ZA[0])||(ZA=Array.from({length:Ce},()=>ZA));else if(oA??(oA=wA),this.config.model_type==="musicgen")ZA=Array.from({length:Ce*this.config.decoder.num_codebooks},()=>[oA]);else if(Array.isArray(oA)){if(oA.length!==Ce)throw new Error(`\`decoder_start_token_id\` expcted to have length ${Ce} but got ${oA.length}`);ZA=oA}else ZA=Array.from({length:Ce},()=>[oA]);ZA=ze(ZA)}return lA.decoder_attention_mask=(0,V.ones_like)(ZA),{input_ids:ZA,model_inputs:WA}}async generate({inputs:Ce=null,generation_config:qe=null,logits_processor:lA=null,stopping_criteria:oA=null,streamer:wA=null,...KA}){this._validate_model_class(),qe=this._prepare_generation_config(qe,KA);let{inputs_tensor:ZA,model_inputs:WA,model_input_name:rt}=this._prepare_model_inputs({inputs:Ce,model_kwargs:KA});const dt=this.config.is_encoder_decoder;let Gt;dt&&("encoder_outputs"in WA||(WA=await this._prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:ZA,model_inputs:WA,model_input_name:rt,generation_config:qe}))),dt?{input_ids:Gt,model_inputs:WA}=this._prepare_decoder_input_ids_for_generation({batch_size:WA[rt].dims.at(0),model_input_name:rt,model_kwargs:WA,decoder_start_token_id:qe.decoder_start_token_id,bos_token_id:qe.bos_token_id,generation_config:qe}):Gt=WA[rt];let or=Gt.dims.at(-1);qe.max_new_tokens!==null&&(qe.max_length=or+qe.max_new_tokens);const Tt=this._get_logits_processor(qe,or,lA),Lt=this._get_stopping_criteria(qe,oA),Ht=WA[rt].dims.at(0),lr=Ee.LogitsSampler.getSampler(qe),Sr=new Array(Ht).fill(0),Lr=Gt.tolist();let yr;wA&&wA.put(Lr);let In={};for(;;){if(WA=this.prepare_inputs_for_generation(Lr,WA,qe),yr=await this.forward(WA),qe.output_attentions&&qe.return_dict_in_generate){const br=this.getAttentions(yr);for(const Zn in br)Zn in In||(In[Zn]=[]),In[Zn].push(br[Zn])}const en=Tt(Lr,yr.logits.slice(null,-1,null)),aa=[];for(let br=0;br<en.dims.at(0);++br){const Zn=en[br],oi=await lr(Zn);for(const[A0,li]of oi){const W0=BigInt(A0);Sr[br]+=li,Lr[br].push(W0),aa.push([W0]);break}}if(wA&&wA.put(aa),Lt(Lr).every(br=>br))break;WA=this._update_model_kwargs_for_generation({generated_input_ids:aa,outputs:yr,model_inputs:WA,is_encoder_decoder:dt})}wA&&wA.end();const cn=this.getPastKeyValues(yr,WA.past_key_values,!0),gn=new V.Tensor("int64",Lr.flat(),[Lr.length,Lr[0].length]);if(qe.return_dict_in_generate)return{sequences:gn,past_key_values:cn,...In};for(const en of Object.values(yr))en.location==="gpu-buffer"&&en.dispose();return gn}getPastKeyValues(Ce,qe,lA=!1){const oA=Object.create(null);for(const wA in Ce)if(wA.startsWith("present")){const KA=wA.replace("present","past_key_values"),ZA=wA.includes("encoder");if(oA[KA]=ZA&&qe?qe[KA]:Ce[wA],qe&&(!ZA||lA)){const WA=qe[KA];WA.location==="gpu-buffer"&&WA.dispose()}}return oA}getAttentions(Ce){const qe={};for(const lA of["cross_attentions","encoder_attentions","decoder_attentions"])for(const oA in Ce)oA.startsWith(lA)&&(lA in qe||(qe[lA]=[]),qe[lA].push(Ce[oA]));return qe}addPastKeyValues(Ce,qe){var lA,oA,wA;if(qe)Object.assign(Ce,qe);else{const KA=this.sessions.decoder_model_merged??this.sessions.model,ZA=((lA=KA==null?void 0:KA.config)==null?void 0:lA.kv_cache_dtype)??"float32",WA=ZA==="float16"?new Uint16Array:[],rt=((wA=(oA=Ce[this.main_input_name]??Ce.attention_mask)==null?void 0:oA.dims)==null?void 0:wA[0])??1,dt=(0,k.getKeyValueShapes)(this.config,{batch_size:rt});for(const Gt in dt)Ce[Gt]=new V.Tensor(ZA,WA,dt[Gt])}}async encode_image({pixel_values:Ce}){const qe=(await Ge(this.sessions.vision_encoder,{pixel_values:Ce})).image_features;return this.config.num_image_tokens||(console.warn(`The number of image tokens was not set in the model configuration. Setting it to the number of features detected by the vision encoder (${qe.dims[1]}).`),this.config.num_image_tokens=qe.dims[1]),qe}async encode_text({input_ids:Ce}){return(await Ge(this.sessions.embed_tokens,{input_ids:Ce})).inputs_embeds}}class mA{}class MA extends mA{constructor({last_hidden_state:ne,hidden_states:Ce=null,attentions:qe=null}){super(),this.last_hidden_state=ne,this.hidden_states=Ce,this.attentions=qe}}class LA extends Qe{}class OA extends LA{}class q extends LA{async _call(ne){return new Ln(await super._call(ne))}}class HA extends LA{async _call(ne){return new Ot(await super._call(ne))}}class ge extends LA{async _call(ne){return new Pn(await super._call(ne))}}class J extends LA{async _call(ne){return new Kn(await super._call(ne))}}class fe extends Qe{}class Te extends fe{}class _e extends fe{async _call(ne){return new Ln(await super._call(ne))}}class dA extends fe{async _call(ne){return new Ot(await super._call(ne))}}class bA extends fe{async _call(ne){return new Pn(await super._call(ne))}}class NA extends Qe{}class XA extends NA{}class TA extends Qe{}class st extends TA{}class tt extends TA{async _call(ne){return new Ln(await super._call(ne))}}class nt extends TA{async _call(ne){return new Ot(await super._call(ne))}}class It extends TA{async _call(ne){return new Pn(await super._call(ne))}}class Ar extends TA{async _call(ne){return new Kn(await super._call(ne))}}class Vr extends Qe{}class $t extends Vr{}class Pr extends Vr{async _call(ne){return new Ln(await super._call(ne))}}class wt extends Vr{async _call(ne){return new Ot(await super._call(ne))}}class qn extends Vr{async _call(ne){return new Pn(await super._call(ne))}}class Yn extends Vr{async _call(ne){return new Kn(await super._call(ne))}}class kn extends Qe{}class qA extends kn{}class et extends kn{async _call(ne){return new Ln(await super._call(ne))}}class FA extends kn{async _call(ne){return new Ot(await super._call(ne))}}class Kt extends kn{async _call(ne){return new Pn(await super._call(ne))}}class Vn extends kn{async _call(ne){return new Kn(await super._call(ne))}}class zn extends Qe{}class oa extends zn{}class Jn extends zn{async _call(ne){return new Ln(await super._call(ne))}}class _n extends zn{async _call(ne){return new Ot(await super._call(ne))}}class la extends zn{async _call(ne){return new Pn(await super._call(ne))}}class Yr extends zn{async _call(ne){return new Kn(await super._call(ne))}}class yt extends Qe{}class Dn extends yt{}class zr extends yt{async _call(ne){return new Ln(await super._call(ne))}}class jr extends yt{async _call(ne){return new Ot(await super._call(ne))}}class Ca extends yt{async _call(ne){return new Pn(await super._call(ne))}}class Xt extends yt{async _call(ne){return new Kn(await super._call(ne))}}class $n extends Qe{}class ba extends $n{}class ks extends $n{async _call(ne){return new Ln(await super._call(ne))}}class As extends $n{async _call(ne){return new Ot(await super._call(ne))}}class ts extends $n{async _call(ne){return new Pn(await super._call(ne))}}class xs extends $n{async _call(ne){return new Kn(await super._call(ne))}}class qr extends Qe{}class ca extends qr{}class Ia extends qr{async _call(ne){return new Ot(await super._call(ne))}}class rs extends qr{async _call(ne){return new Pn(await super._call(ne))}}class ea extends qr{async _call(ne){return new Kn(await super._call(ne))}}class Ma extends qr{async _call(ne){return new Ln(await super._call(ne))}}class Br extends Qe{}class Ya extends Br{}class Ha extends Br{async _call(ne){return new Ln(await super._call(ne))}}class Bs extends Br{async _call(ne){return new Ot(await super._call(ne))}}class Ra extends Br{async _call(ne){return new Pn(await super._call(ne))}}class Ga extends Qe{}class Wa extends Ga{}class Da extends Ga{async _call(ne){return new Ln(await super._call(ne))}}class xt extends Ga{async _call(ne){return new Ot(await super._call(ne))}}class Ft extends Ga{async _call(ne){return new Kn(await super._call(ne))}}class xn extends Qe{}class ns extends xn{}class Qa extends xn{async _call(ne){return new Ln(await super._call(ne))}}class Va extends xn{async _call(ne){return new Ot(await super._call(ne))}}class ga extends xn{async _call(ne){return new Pn(await super._call(ne))}}class Ta extends xn{async _call(ne){return new Kn(await super._call(ne))}}class rA extends Qe{}class re extends rA{}class xe extends rA{async _call(ne){return new Ln(await super._call(ne))}}class Se extends rA{async _call(ne){return new Ot(await super._call(ne))}}class je extends rA{async _call(ne){return new Kn(await super._call(ne))}}class Ze extends Qe{}class uA extends Ze{}class PA extends Ze{async _call(ne){return new Ot(await super._call(ne))}}class Le extends Ze{async _call(ne){return new Kn(await super._call(ne))}}class YA extends Ze{async _call(ne){return new Ln(await super._call(ne))}}class vA extends Qe{constructor(){super(...arguments);Ve(this,"forward_params",["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"])}}class Bt extends vA{}class fr extends vA{}class jt extends Qe{}class er extends jt{}class zt extends jt{}class VA extends Qe{}class _A extends VA{}class Zt extends VA{}class Bn extends Qe{}class hn extends Bn{}class ir extends Bn{}class it extends Bn{async _call(ne){return new Ot(await super._call(ne))}}class pr extends Qe{}class pA extends pr{}class $A extends pr{}class mn extends pr{async _call(ne){return new Ot(await super._call(ne))}}class Hr extends pr{}class Ur extends Qe{}class Fr extends Ur{}class wr extends Ur{}class Ut extends Qe{}class vr extends Ut{}class as extends Ut{}class Hn extends Qe{}class Ys extends Hn{}class Qn extends Hn{async _call(ne){return new Ln(await super._call(ne))}}class Hs extends Hn{async _call(ne){return new Ot(await super._call(ne))}}class Dt extends Hn{async _call(ne){return new Pn(await super._call(ne))}}class An extends Hn{async _call(ne){return new Kn(await super._call(ne))}}class jn extends Qe{}class g0 extends jn{}class u0 extends jn{async _call(ne){return new Ln(await super._call(ne))}}class d0 extends jn{async _call(ne){return new Ot(await super._call(ne))}}class f0 extends jn{async _call(ne){return new Pn(await super._call(ne))}}class ss extends jn{async _call(ne){return new Kn(await super._call(ne))}}class ja extends Qe{}class p0 extends ja{}class Rs extends ja{async _call(ne){return new Ln(await super._call(ne))}}class Fn extends ja{async _call(ne){return new Ot(await super._call(ne))}}class Jr extends ja{async _call(ne){return new Pn(await super._call(ne))}}class JA extends ja{async _call(ne){return new Kn(await super._call(ne))}}class Tn extends Qe{}class bi extends Tn{}class Ws extends Tn{}class Ii extends Qe{constructor(){super(...arguments);Ve(this,"requires_attention_mask",!1);Ve(this,"main_input_name","input_features");Ve(this,"forward_params",["input_features","attention_mask","decoder_input_ids","decoder_attention_mask","past_key_values"])}}class h0 extends Ii{}class m0 extends Ii{_prepare_generation_config(ne,Ce){return super._prepare_generation_config(ne,Ce,ie.WhisperGenerationConfig)}_retrieve_init_tokens(ne){const Ce=[ne.decoder_start_token_id];let qe=ne.language;const lA=ne.task;if(ne.is_multilingual){qe||(console.warn("No language specified - defaulting to English (en)."),qe="en");const oA=`<|${(0,ve.whisper_language_to_code)(qe)}|>`;Ce.push(ne.lang_to_id[oA]),Ce.push(ne.task_to_id[lA??"transcribe"])}else if(qe||lA)throw new Error("Cannot specify `task` or `language` for an English-only model. If the model is intended to be multilingual, pass `is_multilingual=true` to generate, or update the generation config.");return!ne.return_timestamps&&ne.no_timestamps_token_id&&Ce.at(-1)!==ne.no_timestamps_token_id?Ce.push(ne.no_timestamps_token_id):ne.return_timestamps&&Ce.at(-1)===ne.no_timestamps_token_id&&(console.warn("<|notimestamps|> prompt token is removed from generation_config since `return_timestamps` is set to `true`."),Ce.pop()),Ce.filter(oA=>oA!=null)}async generate({inputs:ne=null,generation_config:Ce=null,logits_processor:qe=null,stopping_criteria:lA=null,...oA}){Ce=this._prepare_generation_config(Ce,oA);const wA=oA.decoder_input_ids??this._retrieve_init_tokens(Ce);if(Ce.return_timestamps&&(qe??(qe=new N.LogitsProcessorList),qe.push(new N.WhisperTimeStampLogitsProcessor(Ce,wA))),Ce.begin_suppress_tokens&&(qe??(qe=new N.LogitsProcessorList),qe.push(new N.SuppressTokensAtBeginLogitsProcessor(Ce.begin_suppress_tokens,wA.length))),Ce.return_token_timestamps){if(!Ce.alignment_heads)throw new Error("Model generation config has no `alignment_heads`, token-level timestamps not available. See https://gist.github.com/hollance/42e32852f24243b748ae6bc1f985b13a on how to add this property to the generation config.");Ce.task==="translate"&&console.warn("Token-level timestamps may not be reliable for task 'translate'."),Ce.output_attentions=!0,Ce.return_dict_in_generate=!0}const KA=await super.generate({inputs:ne,generation_config:Ce,logits_processor:qe,decoder_input_ids:wA,...oA});return Ce.return_token_timestamps&&(KA.token_timestamps=this._extract_token_timestamps(KA,Ce.alignment_heads,Ce.num_frames)),KA}_extract_token_timestamps(ne,Ce,qe=null,lA=.02){if(!ne.cross_attentions)throw new Error("Model outputs must contain cross attentions to extract timestamps. This is most likely because the model was not exported with `output_attentions=True`.");qe==null&&console.warn("`num_frames` has not been set, meaning the entire audio will be analyzed. This may lead to inaccurate token-level timestamps for short audios (< 30 seconds).");let oA=this.config.median_filter_width;oA===void 0&&(console.warn("Model config has no `median_filter_width`, using default value of 7."),oA=7);const wA=ne.cross_attentions,KA=Array.from({length:this.config.decoder_layers},(Lt,Ht)=>(0,V.cat)(wA.map(lr=>lr[Ht]),2)),ZA=(0,V.stack)(Ce.map(([Lt,Ht])=>{if(Lt>=KA.length)throw new Error(`Layer index ${Lt} is out of bounds for cross attentions (length ${KA.length}).`);return qe?KA[Lt].slice(null,Ht,null,[0,qe]):KA[Lt].slice(null,Ht)})).transpose(1,0,2,3),[WA,rt]=(0,V.std_mean)(ZA,-2,0,!0),dt=ZA.clone();for(let Lt=0;Lt<dt.dims[0];++Lt){const Ht=dt[Lt];for(let lr=0;lr<Ht.dims[0];++lr){const Sr=Ht[lr],Lr=WA[Lt][lr][0].data,yr=rt[Lt][lr][0].data;for(let In=0;In<Sr.dims[0];++In){let cn=Sr[In].data;for(let gn=0;gn<cn.length;++gn)cn[gn]=(cn[gn]-yr[gn])/Lr[gn];cn.set((0,me.medianFilter)(cn,oA))}}}const Gt=[(0,V.mean)(dt,1)],or=ne.sequences.dims,Tt=new V.Tensor("float32",new Float32Array(or[0]*or[1]),or);for(let Lt=0;Lt<or[0];++Lt){const Ht=Gt[Lt].neg().squeeze_(0),[lr,Sr]=(0,me.dynamic_time_warping)(Ht.tolist()),Lr=Array.from({length:lr.length-1},(cn,gn)=>lr[gn+1]-lr[gn]),yr=(0,W.mergeArrays)([1],Lr).map(cn=>!!cn),In=[];for(let cn=0;cn<yr.length;++cn)yr[cn]&&In.push(Sr[cn]*lA);Tt[Lt].data.set(In,1)}return Tt}}class wi extends Qe{constructor(){super(...arguments);Ve(this,"requires_attention_mask",!1);Ve(this,"main_input_name","input_values");Ve(this,"forward_params",["input_values","decoder_input_ids","past_key_values"])}}class J0 extends wi{}class Sn extends wi{}class nr extends Qe{constructor(){super(...arguments);Ve(this,"main_input_name","pixel_values");Ve(this,"forward_params",["pixel_values","decoder_input_ids","encoder_hidden_states","past_key_values"])}}class vs extends Qe{constructor(){super(...arguments);Ve(this,"forward_params",["input_ids","attention_mask","pixel_values","position_ids","past_key_values"])}}class ys extends vs{_merge_input_ids_with_image_features({inputs_embeds:ne,image_features:Ce,input_ids:qe,attention_mask:lA}){const oA=this.config.image_token_index,wA=qe.tolist().map(dt=>dt.findIndex(Gt=>Gt==oA)),KA=wA.every(dt=>dt===-1),ZA=wA.every(dt=>dt!==-1);if(!KA&&!ZA)throw new Error("Every input should contain either 0 or 1 image token.");if(KA)return{inputs_embeds:ne,attention_mask:lA};const WA=[],rt=[];for(let dt=0;dt<wA.length;++dt){const Gt=wA[dt],or=ne[dt],Tt=Ce[dt],Lt=lA[dt];WA.push((0,V.cat)([or.slice([0,Gt]),Tt,or.slice([Gt+1,or.dims[0]])],0)),rt.push((0,V.cat)([Lt.slice([0,Gt]),(0,V.ones)([Tt.dims[0]]),Lt.slice([Gt+1,Lt.dims[0]])],0))}return{inputs_embeds:(0,V.stack)(WA,0),attention_mask:(0,V.stack)(rt,0)}}}class vn extends ys{}class Ua extends ys{}class ua extends Qe{constructor(){super(...arguments);Ve(this,"forward_params",["input_ids","inputs_embeds","attention_mask","pixel_values","encoder_outputs","decoder_input_ids","decoder_inputs_embeds","decoder_attention_mask","past_key_values"]);Ve(this,"main_input_name","inputs_embeds")}}class ki extends ua{_merge_input_ids_with_image_features({inputs_embeds:ne,image_features:Ce,input_ids:qe,attention_mask:lA}){return{inputs_embeds:(0,V.cat)([Ce,ne],1),attention_mask:(0,V.cat)([(0,V.ones)(Ce.dims.slice(0,2)),lA],1)}}async _prepare_inputs_embeds({input_ids:ne,pixel_values:Ce,inputs_embeds:qe,attention_mask:lA}){if(!ne&&!Ce)throw new Error("Either `input_ids` or `pixel_values` should be provided.");let oA,wA;return ne&&(oA=await this.encode_text({input_ids:ne})),Ce&&(wA=await this.encode_image({pixel_values:Ce})),oA&&wA?{inputs_embeds:qe,attention_mask:lA}=this._merge_input_ids_with_image_features({inputs_embeds:oA,image_features:wA,input_ids:ne,attention_mask:lA}):qe=oA||wA,{inputs_embeds:qe,attention_mask:lA}}async forward({input_ids:ne,pixel_values:Ce,attention_mask:qe,decoder_input_ids:lA,decoder_attention_mask:oA,encoder_outputs:wA,past_key_values:KA,inputs_embeds:ZA,decoder_inputs_embeds:WA}){if(ZA||({inputs_embeds:ZA,attention_mask:qe}=await this._prepare_inputs_embeds({input_ids:ne,pixel_values:Ce,inputs_embeds:ZA,attention_mask:qe})),!wA){let{last_hidden_state:dt}=await xA(this,{inputs_embeds:ZA,attention_mask:qe});wA=dt}if(!WA){if(!lA)throw new Error("Either `decoder_input_ids` or `decoder_inputs_embeds` should be provided.");WA=await this.encode_text({input_ids:lA})}return await sA(this,{inputs_embeds:WA,attention_mask:oA,encoder_attention_mask:qe,encoder_hidden_states:wA,past_key_values:KA},!0)}}class xi extends Qe{constructor(){super(...arguments);Ve(this,"forward_params",["input_ids","attention_mask","pixel_values","position_ids","past_key_values"])}}class Ka extends xi{_merge_input_ids_with_image_features(ne){const Ce=ne.image_features.dims.at(-1),qe=ne.image_features.view(-1,Ce);return cA({image_token_id:this.config.image_token_index,...ne,image_features:qe})}}class Bi extends Qe{constructor(){super(...arguments);Ve(this,"forward_params",["input_ids","attention_mask","pixel_values","pixel_attention_mask","position_ids","past_key_values"])}}class vi extends Bi{async encode_image({pixel_values:ne,pixel_attention_mask:Ce}){return(await Ge(this.sessions.vision_encoder,{pixel_values:ne,pixel_attention_mask:Ce})).image_features}_merge_input_ids_with_image_features(ne){const Ce=ne.image_features.dims.at(-1),qe=ne.image_features.view(-1,Ce);return cA({image_token_id:this.config.image_token_id,...ne,image_features:qe})}}class yi extends Qe{constructor(){super(...arguments);Ve(this,"forward_params",["input_ids","inputs_embeds","attention_mask","position_ids","pixel_values","image_sizes","past_key_values"])}}class QA extends yi{async forward({input_ids:ne=null,attention_mask:Ce=null,pixel_values:qe=null,image_sizes:lA=null,position_ids:oA=null,inputs_embeds:wA=null,past_key_values:KA=null,generation_config:ZA=null,logits_processor:WA=null,...rt}){if(!wA){let dt;if(qe&&ne.dims[1]!==1){if(!lA)throw new Error("`image_sizes` must be provided when `pixel_values` is provided.");({image_features:dt}=await Ge(this.sessions.vision_encoder,{pixel_values:qe,image_sizes:lA}))}else{const Gt=this.config.normalized_config.hidden_size;dt=new V.Tensor("float32",[],[0,Gt])}({inputs_embeds:wA}=await Ge(this.sessions.prepare_inputs_embeds,{input_ids:ne,image_features:dt}))}return await sA(this,{inputs_embeds:wA,past_key_values:KA,attention_mask:Ce,position_ids:oA,generation_config:ZA,logits_processor:WA},!1)}}class Za extends Qe{}class UA extends Za{}class Ei extends Za{static async from_pretrained(ne,Ce={}){return super.from_pretrained(ne,{...Ce,model_file_name:Ce.model_file_name??"text_model"})}}class Vs extends Za{static async from_pretrained(ne,Ce={}){return super.from_pretrained(ne,{...Ce,model_file_name:Ce.model_file_name??"text_model"})}}class yn extends Za{static async from_pretrained(ne,Ce={}){return super.from_pretrained(ne,{...Ce,model_file_name:Ce.model_file_name??"vision_model"})}}class Nn extends Za{static async from_pretrained(ne,Ce={}){return super.from_pretrained(ne,{...Ce,model_file_name:Ce.model_file_name??"vision_model"})}}class is extends Qe{}class Es extends is{}class Mi extends is{static async from_pretrained(ne,Ce={}){return super.from_pretrained(ne,{...Ce,model_file_name:Ce.model_file_name??"text_model"})}}class Nr extends Za{static async from_pretrained(ne,Ce={}){return super.from_pretrained(ne,{...Ce,model_file_name:Ce.model_file_name??"vision_model"})}}class C0 extends Qe{}class b0 extends C0{}class Pa extends Qe{}class os extends Pa{async forward(ne){const Ce=!ne.input_ids,qe=!ne.pixel_values;if(Ce&&qe)throw new Error("Either `input_ids` or `pixel_values` should be provided.");if(Ce&&(ne.input_ids=(0,V.ones)([ne.pixel_values.dims[0],1])),qe){const{image_size:WA}=this.config.vision_config;ne.pixel_values=(0,V.full)([0,3,WA,WA],0)}const{text_embeddings:lA,image_embeddings:oA,l2norm_text_embeddings:wA,l2norm_image_embeddings:KA}=await super.forward(ne),ZA={};return Ce||(ZA.text_embeddings=lA,ZA.l2norm_text_embeddings=wA),qe||(ZA.image_embeddings=oA,ZA.l2norm_image_embeddings=KA),ZA}}class I0 extends Pa{static async from_pretrained(ne,Ce={}){return super.from_pretrained(ne,{...Ce,model_file_name:Ce.model_file_name??"text_model"})}}class js extends Pa{static async from_pretrained(ne,Ce={}){return super.from_pretrained(ne,{...Ce,model_file_name:Ce.model_file_name??"vision_model"})}}class ls extends Qe{}class RA extends ls{}class Aa extends ls{}class Gi extends Qe{}class Ms extends Gi{}class wa extends Gi{}class Di extends Qe{}class w0 extends Di{}class k0 extends Di{}class Us extends Qe{}class x0 extends Us{}class B0 extends Us{}class Rr extends Qe{}class v0 extends Rr{}class y0 extends Rr{}class kt extends Qe{}class Wt extends kt{}class Qi extends kt{}class da extends Qe{}class E0 extends da{}class tn extends da{}class ka extends Qe{}class rn extends ka{}class xa extends ka{}class Ks extends Qe{}class Ti extends Ks{}class M0 extends Ks{}class Zs extends Qe{}class Mr extends Zs{}class Gs extends Zs{}class Pi extends Qe{}class nn extends Pi{}class cs extends Pi{}class Ba extends Qe{}class zi extends Ba{}class Fi extends Ba{}class Si extends Qe{}class Xs extends Si{}class fa extends Si{}class qs extends Qe{}class G0 extends qs{}class Ni extends qs{}class Oi extends Qe{}class va extends Oi{}class Js extends Oi{}class Wr extends Qe{}class Li extends Wr{}class _s extends Wr{}class Ds extends Qe{}class On extends Ds{}class Qs extends Ds{}class Yi extends Qe{}class ta extends Yi{}class Hi extends Yi{}class $s extends Qe{}class Ri extends $s{}class gs extends $s{}class Wi extends Qe{}class D0 extends Wi{}class Q0 extends Wi{}class an extends Qe{}class Ts extends an{}class Cn extends an{}class Vi extends Qe{constructor(){super(...arguments);Ve(this,"forward_params",["input_ids","attention_mask","position_ids","past_key_values","pixel_values","image_grid_thw"])}}class ei extends Vi{get_rope_index(ne,Ce,qe,lA){const{vision_config:oA,image_token_id:wA,video_token_id:KA,vision_start_token_id:ZA}=this.config,WA=oA.spatial_merge_size??2,rt=[];if(Ce||qe){let dt=ne.tolist();lA||(lA=(0,V.ones_like)(ne));const Gt=lA.tolist(),or=Array.from({length:3},Sr=>Array.from({length:ne.dims[0]},Lr=>Array.from({length:ne.dims[1]},yr=>1))),Tt=Ce?Ce.tolist():[],Lt=qe?qe.tolist():[];let Ht=0,lr=0;for(let Sr=0;Sr<dt.length;++Sr){const Lr=dt[Sr].filter((Qr,un)=>Gt[Sr][un]==1),yr=Lr.reduce((Qr,un,sa)=>(un==ZA&&Qr.push(sa),Qr),[]),In=yr.map(Qr=>Lr[Qr+1]),cn=In.filter(Qr=>Qr==wA).length,gn=In.filter(Qr=>Qr==KA).length;let en=[],aa=0,br=cn,Zn=gn;for(let Qr=0;Qr<In.length;++Qr){const un=Lr.findIndex((ya,Wn)=>Wn>aa&&ya==wA),sa=Lr.findIndex((ya,Wn)=>Wn>aa&&ya==KA),ci=br>0&&un!==-1?un:Lr.length+1,Ls=Zn>0&&sa!==-1?sa:Lr.length+1;let V0,ao,so,io;ci<Ls?([ao,so,io]=Tt[Ht],++Ht,--br,V0=ci):([ao,so,io]=Lt[lr],++lr,--Zn,V0=Ls);const[x1,oo,$a]=[Number(ao),Math.floor(Number(so)/WA),Math.floor(Number(io)/WA)],ia=V0-aa,t0=en.length>0?(0,me.max)(en.at(-1))[0]+1:0;en.push(Array.from({length:3*ia},(ya,Wn)=>t0+Wn%ia));const r0=ia+t0,gi=x1*oo*$a,o2=Array.from({length:gi},(ya,Wn)=>r0+Math.floor(Wn/(oo*$a))),B1=Array.from({length:gi},(ya,Wn)=>r0+Math.floor(Wn/$a)%oo),l2=Array.from({length:gi},(ya,Wn)=>r0+Wn%$a);en.push([o2,B1,l2].flat()),aa=V0+gi}if(aa<Lr.length){const Qr=en.length>0?(0,me.max)(en.at(-1))[0]+1:0,un=Lr.length-aa;en.push(Array.from({length:3*un},(sa,ci)=>Qr+ci%un))}const oi=en.reduce((Qr,un)=>Qr+un.length,0),A0=new Array(oi);let li=0;for(let Qr=0;Qr<3;++Qr)for(let un=0;un<en.length;++un){const sa=en[un],ci=sa.length/3;for(let Ls=Qr*ci;Ls<(Qr+1)*ci;++Ls)A0[li++]=sa[Ls]}let W0=0;const k1=Gt[Sr];for(let Qr=0;Qr<k1.length;++Qr)if(k1[Qr]==1){for(let un=0;un<3;++un)or[un][Sr][Qr]=A0[un*oi/3+W0];++W0}const nc=(0,me.max)(A0)[0];rt.push(nc+1-dt[Sr].length)}return[new V.Tensor("int64",or.flat(1/0),[3,ne.dims[0],ne.dims[1]]),new V.Tensor("int64",rt,[rt.length,1])]}if(lA){const{data:dt,dims:Gt}=gA(lA),or=BigInt64Array.from({length:3*dt.length},(Lt,Ht)=>dt[Ht%dt.length]),Tt=Array.from({length:Gt[0]},(Lt,Ht)=>(0,me.max)(dt.subarray(Gt[1]*Ht,Gt[1]*(Ht+1)))[0]+1n+BigInt(Gt[1]));return[new V.Tensor("int64",or,[3,...Gt]),new V.Tensor("int64",Tt,[Tt.length,1])]}{const[dt,Gt]=ne.dims,or=BigInt64Array.from({length:3*dt*Gt},(Tt,Lt)=>BigInt(Math.floor(Lt%Gt/dt)));return[new V.Tensor("int64",or,[3,...ne.dims]),(0,V.zeros)([dt,1])]}}async encode_image({pixel_values:ne,image_grid_thw:Ce}){return(await Ge(this.sessions.vision_encoder,{pixel_values:ne,grid_thw:Ce})).image_features}_merge_input_ids_with_image_features(ne){return cA({image_token_id:this.config.image_token_id,...ne})}prepare_inputs_for_generation(ne,Ce,qe){if(Ce.attention_mask&&!Ce.position_ids)if(Ce.past_key_values){Ce.pixel_values=null;const lA=BigInt(Object.values(Ce.past_key_values)[0].dims.at(-2)),oA=Ce.rope_deltas.map(wA=>lA+wA);Ce.position_ids=(0,V.stack)([oA,oA,oA],0)}else[Ce.position_ids,Ce.rope_deltas]=this.get_rope_index(Ce.input_ids,Ce.image_grid_thw,Ce.video_grid_thw,Ce.attention_mask);return Ce}}class Un extends Qe{}class hr extends Un{}class ji extends Un{}class za extends Qe{}class us extends za{}class T0 extends za{}class Ui extends Qe{}class Ki extends Ui{}class P0 extends Ui{}class Fa extends Qe{}class ra extends Fa{}class Zi extends Fa{}class Ps extends Qe{}class _r extends Ps{}class ar extends Ps{}class ds extends Qe{}class z0 extends ds{}class Sa extends ds{async _call(ne){return new Ot(await super._call(ne))}}class Na extends Qe{}class Xa extends Na{}class Xi extends Na{async _call(ne){return new Ot(await super._call(ne))}}class bn extends Qe{}class F0 extends bn{}class qi extends Qe{}class fs extends qi{}class zs extends qi{async _call(ne){return new Ot(await super._call(ne))}}class sn extends Qe{}class Ji extends sn{}class Ai extends Qe{}class qa extends Ai{}class S0 extends Ai{async _call(ne){return new Ot(await super._call(ne))}}class ps extends Qe{}class pt extends ps{}class A extends Qe{}class t extends A{}class r extends A{async _call(ne){return new Ot(await super._call(ne))}}class n extends Qe{}class a extends n{async _call(ne){return new tc(await super._call(ne))}}class s extends Qe{}class o extends s{}class c extends s{async _call(ne){return new Ot(await super._call(ne))}}class f extends Qe{}class m extends f{}class p extends f{async _call(ne){return new Ot(await super._call(ne))}}class I extends Qe{}class y extends I{}class P extends I{}class Y extends Qe{}class X extends Y{}class _ extends Y{}class ce extends Qe{}class he extends ce{}class ye extends ce{async _call(ne){return new Ot(await super._call(ne))}}class De extends Qe{}class Re extends De{}class Xe extends De{async _call(ne){return new fA(await super._call(ne))}}class nA extends De{async _call(ne){return new GA(await super._call(ne))}}class fA extends mA{constructor({logits:ne,pred_boxes:Ce}){super(),this.logits=ne,this.pred_boxes=Ce}}class GA extends mA{constructor({logits:ne,pred_boxes:Ce,pred_masks:qe}){super(),this.logits=ne,this.pred_boxes=Ce,this.pred_masks=qe}}class SA extends Qe{}class At extends SA{}class ct extends SA{async _call(ne){return new bt(await super._call(ne))}}class bt extends mA{constructor({logits:ne,pred_boxes:Ce}){super(),this.logits=ne,this.pred_boxes=Ce}}class Nt extends Qe{}class qt extends Nt{}class tr extends Nt{async _call(ne){return new mr(await super._call(ne))}}class mr extends fA{}class Cr extends Qe{}class Gr extends Cr{}class Dr extends Cr{async _call(ne){return new Ot(await super._call(ne))}}class Or extends Qe{}class Kr extends Or{}class on extends Or{async _call(ne){return new Ot(await super._call(ne))}}class $r extends Qe{}class ln extends $r{}class En extends $r{async _call(ne){return new Ot(await super._call(ne))}}class na extends Qe{}class pa extends na{}class ha extends na{async _call(ne){return new Ot(await super._call(ne))}}class Oa extends Qe{}class Fs extends Oa{}class hs extends Oa{}class ms extends Qe{}class Ss extends ms{}class _i extends ms{}class N0 extends Qe{}class O0 extends N0{}class ti extends Qe{}class x2 extends ti{}class B2 extends ti{}class v2 extends ti{}class y2 extends Qe{}class E2 extends y2{}class Co extends Qe{}class M2 extends Co{}class G2 extends Co{}class bo extends Qe{}class D2 extends bo{}class Q2 extends bo{}class T2 extends Qe{}class P2 extends T2{}class Io extends Qe{}class z2 extends Io{}class F2 extends Io{async _call(ne){return new Ot(await super._call(ne))}}class wo extends Qe{}class S2 extends wo{}class N2 extends wo{async _call(ne){return new Ot(await super._call(ne))}}class ko extends Qe{}class O2 extends ko{}class Ja extends ko{async _call(ne){return new Ot(await super._call(ne))}}class _a extends Qe{}class ri extends _a{}class ni extends _a{async _call(ne){return new Ot(await super._call(ne))}}class L2 extends Qe{}class Y2 extends L2{}class xo extends Qe{}class H2 extends xo{}class R2 extends xo{async _call(ne){return new W2(await super._call(ne))}}class W2 extends mA{constructor({logits:ne,pred_boxes:Ce}){super(),this.logits=ne,this.pred_boxes=Ce}}class V2 extends Qe{}class j2 extends V2{async get_image_embeddings({pixel_values:ne}){return await xA(this,{pixel_values:ne})}async forward(ne){if(ne.image_embeddings&&ne.image_positional_embeddings||(ne={...ne,...await this.get_image_embeddings(ne)}),!ne.input_labels&&ne.input_points){const qe=ne.input_points.dims.slice(0,-1),lA=qe.reduce((oA,wA)=>oA*wA,1);ne.input_labels=new V.Tensor("int64",new BigInt64Array(lA).fill(1n),qe)}const Ce={image_embeddings:ne.image_embeddings,image_positional_embeddings:ne.image_positional_embeddings};return ne.input_points&&(Ce.input_points=ne.input_points),ne.input_labels&&(Ce.input_labels=ne.input_labels),ne.input_boxes&&(Ce.input_boxes=ne.input_boxes),await Ge(this.sessions.prompt_encoder_mask_decoder,Ce)}async _call(ne){return new U2(await super._call(ne))}}class U2 extends mA{constructor({iou_scores:ne,pred_masks:Ce}){super(),this.iou_scores=ne,this.pred_masks=Ce}}class Rn extends Qe{}class K2 extends Rn{}class Z2 extends Rn{}class _0 extends Qe{}class X2 extends _0{}class L0 extends _0{}class Ns extends Qe{}class q2 extends Ns{}class J2 extends Ns{async _call(ne){return new e0(await super._call(ne))}}class _2 extends Ns{async _call(ne){return new Ot(await super._call(ne))}}class $2 extends Ns{async _call(ne){return new Pn(await super._call(ne))}}class $0 extends Qe{}class el extends $0{}class Al extends $0{async _call(ne){return new Pn(await super._call(ne))}}class tl extends Qe{}class rl extends tl{}class Y0 extends Qe{}class nl extends Y0{}class Bo extends Y0{async _call(ne){return new e0(await super._call(ne))}}class al extends Y0{async _call(ne){return new Ot(await super._call(ne))}}class H0 extends Qe{}class sl extends H0{}class il extends H0{async _call(ne){return new e0(await super._call(ne))}}class ol extends H0{async _call(ne){return new Ot(await super._call(ne))}}class ll extends H0{async _call(ne){return new Pn(await super._call(ne))}}class eo extends Qe{}class cl extends eo{}class gl extends eo{async _call(ne){return new e0(await super._call(ne))}}class ul extends eo{async _call(ne){return new Ot(await super._call(ne))}}class T1 extends Qe{}class dl extends Ns{}class fl extends Ns{async _call(ne){return new e0(await super._call(ne))}}class pl extends Ns{async _call(ne){return new Ot(await super._call(ne))}}class $i extends Qe{}class hl extends $i{}class ml extends $i{async _call(ne){return new e0(await super._call(ne))}}class Cl extends $i{async _call(ne){return new Ot(await super._call(ne))}}class bl extends $i{async _call(ne){return new Ac(await super._call(ne))}}class Il extends $i{async _call(ne){return new Pn(await super._call(ne))}}class wl extends Qe{}class kl extends wl{}class ai extends Qe{}class xl extends ai{}class vo extends ai{}class yo extends ai{async generate_speech(ne,Ce,{threshold:qe=.5,minlenratio:lA=0,maxlenratio:oA=20,vocoder:wA=null}={}){const KA={input_ids:ne},{encoder_outputs:ZA,encoder_attention_mask:WA}=await xA(this,KA),rt=ZA.dims[1]/this.config.reduction_factor,dt=Math.floor(rt*oA),Gt=Math.floor(rt*lA),or=this.config.num_mel_bins;let Tt=[],Lt=null,Ht=null,lr=0;for(;;){++lr;const yr=Ke(!!Ht);let In;In=Ht?Ht.output_sequence_out:new V.Tensor("float32",new Float32Array(or),[1,1,or]);let cn={use_cache_branch:yr,output_sequence:In,encoder_attention_mask:WA,speaker_embeddings:Ce,encoder_hidden_states:ZA};this.addPastKeyValues(cn,Lt),Ht=await Ge(this.sessions.decoder_model_merged,cn),Lt=this.getPastKeyValues(Ht,Lt);const{prob:gn,spectrum:en}=Ht;if(Tt.push(en),lr>=Gt&&(Array.from(gn.data).filter(aa=>aa>=qe).length>0||lr>=dt))break}const Sr=(0,V.cat)(Tt),{waveform:Lr}=await Ge(wA.sessions.model,{spectrogram:Sr});return{spectrogram:Sr,waveform:Lr}}}class Eo extends Qe{constructor(){super(...arguments);Ve(this,"main_input_name","spectrogram")}}class Bl extends Qe{}class vl extends Bl{}class Ao extends Qe{}class Mo extends Ao{}class yl extends Ao{}class Go extends Qe{}class Do extends Go{}class El extends Go{}class Qo extends Qe{}class To extends Qo{}class Ml extends Qo{}class to extends Qe{}class Gl extends to{}class Dl extends to{static async from_pretrained(ne,Ce={}){return super.from_pretrained(ne,{...Ce,model_file_name:Ce.model_file_name??"text_model"})}}class Ql extends to{static async from_pretrained(ne,Ce={}){return super.from_pretrained(ne,{...Ce,model_file_name:Ce.model_file_name??"audio_model"})}}class Tl extends Qe{}class Po extends Tl{async _call(ne){return new rc(await super._call(ne))}}class ro extends Qe{}class P1 extends ro{}class Pl extends ro{}class zl extends ro{}class zo extends Qe{}class Fl extends zo{}class Sl extends zo{}class Fo extends Qe{}class Nl extends Fo{}class Ol extends Fo{async _call(ne){return new Ot(await super._call(ne))}}class So extends Qe{}class Ll extends So{}class z1 extends So{}class No extends Qe{constructor(){super(...arguments);Ve(this,"forward_params",["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"])}_apply_and_filter_by_delay_pattern_mask(Ce){const[qe,lA]=Ce.dims,oA=this.config.decoder.num_codebooks,wA=lA-oA;let KA=0;for(let rt=0;rt<Ce.size;++rt){if(Ce.data[rt]===this.config.decoder.pad_token_id)continue;const dt=rt%lA-Math.floor(rt/lA)%oA;dt>0&&dt<=wA&&(Ce.data[KA++]=Ce.data[rt])}const ZA=Math.floor(qe/oA),WA=KA/(ZA*oA);return new V.Tensor(Ce.type,Ce.data.slice(0,KA),[ZA,oA,WA])}prepare_inputs_for_generation(Ce,qe,lA){let oA=structuredClone(Ce);for(let wA=0;wA<oA.length;++wA)for(let KA=0;KA<oA[wA].length;++KA)wA%this.config.decoder.num_codebooks>=KA&&(oA[wA][KA]=BigInt(this.config.decoder.pad_token_id));return lA.guidance_scale!==null&&lA.guidance_scale>1&&(oA=oA.concat(oA)),super.prepare_inputs_for_generation(oA,qe,lA)}async generate(Ce){const qe=await super.generate(Ce),lA=this._apply_and_filter_by_delay_pattern_mask(qe).unsqueeze_(0),{audio_values:oA}=await Ge(this.sessions.encodec_decode,{audio_codes:lA});return oA}}class Oo extends Qe{}class Yl extends Oo{}class Hl extends Oo{async _call(ne){return new Ot(await super._call(ne))}}class Lo extends Qe{}class Rl extends Lo{}class Wl extends Lo{async _call(ne){return new Ot(await super._call(ne))}}class no extends Qe{}class Vl extends no{}class jl extends no{async _call(ne){return new Ot(await super._call(ne))}}class Yo extends Qe{}class Ul extends Yo{}class Kl extends Yo{async _call(ne){return new Ot(await super._call(ne))}}class Zl extends Qe{}class Xl extends Zl{}class ql extends Qe{}class Jl extends ql{constructor(...Ce){super(...Ce);Ve(this,"forward_params",["input_ids","pixel_values","images_seq_mask","images_emb_mask","attention_mask","position_ids","past_key_values"]);this._generation_mode="text"}async forward(Ce){const qe=this._generation_mode??"text";let lA;if(qe!=="text"&&Ce.past_key_values){const WA=this.sessions.gen_img_embeds,rt=(0,W.pick)({image_ids:Ce.input_ids},WA.inputNames);lA=await Ge(WA,rt)}else{const WA=this.sessions.prepare_inputs_embeds,rt=(0,W.pick)(Ce,WA.inputNames);lA=await Ge(WA,rt)}const oA={...Ce,...lA},wA=await sA(this,oA),KA=this.sessions[qe==="text"?"lm_head":"gen_head"];if(!KA)throw new Error(`Unable to find "${KA}" generation head`);const ZA=await Ge(KA,(0,W.pick)(wA,KA.inputNames));return{...lA,...wA,...ZA}}async generate(Ce){return this._generation_mode="text",super.generate(Ce)}async generate_images(Ce){this._generation_mode="image";const qe=(Ce.inputs??Ce[this.main_input_name]).dims[1],lA=(await super.generate(Ce)).slice(null,[qe,null]),oA=this.sessions.image_decode,{decoded_image:wA}=await Ge(oA,{generated_tokens:lA}),KA=wA.add_(1).mul_(127.5).clamp_(0,255).to("uint8"),ZA=[];for(const WA of KA){const rt=Ae.RawImage.fromTensor(WA);ZA.push(rt)}return ZA}}class _l extends mA{constructor({char_logits:ne,bpe_logits:Ce,wp_logits:qe}){super(),this.char_logits=ne,this.bpe_logits=Ce,this.wp_logits=qe}get logits(){return[this.char_logits,this.bpe_logits,this.wp_logits]}}class $l extends Qe{}class e1 extends $l{async _call(ne){return new _l(await super._call(ne))}}class Ho extends Qe{}class A1 extends Ho{}class R0 extends Ho{}class Ro extends Qe{}class Wo extends Ro{}class t1 extends Ro{}class ur{static async from_pretrained(ne,{progress_callback:Ce=null,config:qe=null,cache_dir:lA=null,local_files_only:oA=!1,revision:wA="main",model_file_name:KA=null,subfolder:ZA="onnx",device:WA=null,dtype:rt=null,use_external_data_format:dt=null,session_options:Gt={}}={}){const or={progress_callback:Ce,config:qe,cache_dir:lA,local_files_only:oA,revision:wA,model_file_name:KA,subfolder:ZA,device:WA,dtype:rt,use_external_data_format:dt,session_options:Gt};if(or.config=await k.AutoConfig.from_pretrained(ne,or),!this.MODEL_CLASS_MAPPINGS)throw new Error("`MODEL_CLASS_MAPPINGS` not implemented for this type of `AutoClass`: "+this.name);for(const Tt of this.MODEL_CLASS_MAPPINGS){const Lt=Tt.get(or.config.model_type);if(Lt)return await Lt[1].from_pretrained(ne,or)}if(this.BASE_IF_FAIL)return console.warn(`Unknown model class "${or.config.model_type}", attempting to construct from base class.`),await Qe.from_pretrained(ne,or);throw Error(`Unsupported model type: ${or.config.model_type}`)}}Ve(ur,"MODEL_CLASS_MAPPINGS",null),Ve(ur,"BASE_IF_FAIL",!1);const F1=new Map([["bert",["BertModel",OA]],["modernbert",["ModernBertModel",Te]],["nomic_bert",["NomicBertModel",XA]],["roformer",["RoFormerModel",st]],["electra",["ElectraModel",qA]],["esm",["EsmModel",Ya]],["convbert",["ConvBertModel",$t]],["camembert",["CamembertModel",oa]],["deberta",["DebertaModel",Dn]],["deberta-v2",["DebertaV2Model",ba]],["mpnet",["MPNetModel",ns]],["albert",["AlbertModel",uA]],["distilbert",["DistilBertModel",ca]],["roberta",["RobertaModel",Ys]],["xlm",["XLMModel",g0]],["xlm-roberta",["XLMRobertaModel",p0]],["clap",["ClapModel",Gl]],["clip",["CLIPModel",UA]],["clipseg",["CLIPSegModel",RA]],["chinese_clip",["ChineseCLIPModel",b0]],["siglip",["SiglipModel",Es]],["jina_clip",["JinaCLIPModel",os]],["mobilebert",["MobileBertModel",Wa]],["squeezebert",["SqueezeBertModel",re]],["wav2vec2",["Wav2Vec2Model",q2]],["wav2vec2-bert",["Wav2Vec2BertModel",cl]],["unispeech",["UniSpeechModel",nl]],["unispeech-sat",["UniSpeechSatModel",sl]],["hubert",["HubertModel",dl]],["wavlm",["WavLMModel",hl]],["audio-spectrogram-transformer",["ASTModel",bi]],["vits",["VitsModel",Po]],["pyannote",["PyAnnoteModel",el]],["wespeaker-resnet",["WeSpeakerResNetModel",rl]],["detr",["DetrModel",Re]],["rt_detr",["RTDetrModel",At]],["table-transformer",["TableTransformerModel",qt]],["vit",["ViTModel",z0]],["ijepa",["IJepaModel",Xa]],["pvt",["PvtModel",fs]],["vit_msn",["ViTMSNModel",qa]],["vit_mae",["ViTMAEModel",Ji]],["groupvit",["GroupViTModel",pt]],["fastvit",["FastViTModel",t]],["mobilevit",["MobileViTModel",o]],["mobilevitv2",["MobileViTV2Model",m]],["owlvit",["OwlViTModel",y]],["owlv2",["Owlv2Model",X]],["beit",["BeitModel",he]],["deit",["DeiTModel",Gr]],["hiera",["HieraModel",Kr]],["convnext",["ConvNextModel",z2]],["convnextv2",["ConvNextV2Model",S2]],["dinov2",["Dinov2Model",O2]],["dinov2_with_registers",["Dinov2WithRegistersModel",ri]],["resnet",["ResNetModel",ln]],["swin",["SwinModel",pa]],["swin2sr",["Swin2SRModel",Fs]],["donut-swin",["DonutSwinModel",P2]],["yolos",["YolosModel",H2]],["dpt",["DPTModel",Ss]],["glpn",["GLPNModel",D2]],["hifigan",["SpeechT5HifiGan",Eo]],["efficientnet",["EfficientNetModel",Nl]],["decision_transformer",["DecisionTransformerModel",Xl]],["patchtst",["PatchTSTForPrediction",A1]],["patchtsmixer",["PatchTSMixerForPrediction",Wo]],["mobilenet_v1",["MobileNetV1Model",Yl]],["mobilenet_v2",["MobileNetV2Model",Rl]],["mobilenet_v3",["MobileNetV3Model",Vl]],["mobilenet_v4",["MobileNetV4Model",Ul]],["maskformer",["MaskFormerModel",M2]],["mgp-str",["MgpstrForSceneTextRecognition",e1]],["style_text_to_speech_2",["StyleTextToSpeech2Model",kl]]]),S1=new Map([["t5",["T5Model",Bt]],["longt5",["LongT5Model",er]],["mt5",["MT5Model",_A]],["bart",["BartModel",hn]],["mbart",["MBartModel",pA]],["marian",["MarianModel",K2]],["whisper",["WhisperModel",h0]],["m2m_100",["M2M100Model",X2]],["blenderbot",["BlenderbotModel",Fr]],["blenderbot-small",["BlenderbotSmallModel",vr]]]),N1=new Map([["bloom",["BloomModel",Ki]],["jais",["JAISModel",w0]],["gpt2",["GPT2Model",Ms]],["gptj",["GPTJModel",Wt]],["gpt_bigcode",["GPTBigCodeModel",E0]],["gpt_neo",["GPTNeoModel",x0]],["gpt_neox",["GPTNeoXModel",v0]],["codegen",["CodeGenModel",rn]],["llama",["LlamaModel",Ti]],["exaone",["ExaoneModel",zi]],["olmo",["OlmoModel",G0]],["olmo2",["Olmo2Model",va]],["mobilellm",["MobileLLMModel",Xs]],["granite",["GraniteModel",Li]],["cohere",["CohereModel",On]],["gemma",["GemmaModel",ta]],["gemma2",["Gemma2Model",Ri]],["helium",["HeliumModel",Mr]],["glm",["GlmModel",nn]],["openelm",["OpenELMModel",D0]],["qwen2",["Qwen2Model",Ts]],["phi",["PhiModel",hr]],["phi3",["Phi3Model",us]],["mpt",["MptModel",ra]],["opt",["OPTModel",_r]],["mistral",["MistralModel",Mo]],["starcoder2",["Starcoder2Model",Do]],["falcon",["FalconModel",To]],["stablelm",["StableLmModel",Fl]]]),Vo=new Map([["speecht5",["SpeechT5ForSpeechToText",vo]],["whisper",["WhisperForConditionalGeneration",m0]],["moonshine",["MoonshineForConditionalGeneration",Sn]]]),r1=new Map([["speecht5",["SpeechT5ForTextToSpeech",yo]]]),n1=new Map([["vits",["VitsModel",Po]],["musicgen",["MusicgenForConditionalGeneration",No]]]),jo=new Map([["bert",["BertForSequenceClassification",HA]],["modernbert",["ModernBertForSequenceClassification",dA]],["roformer",["RoFormerForSequenceClassification",nt]],["electra",["ElectraForSequenceClassification",FA]],["esm",["EsmForSequenceClassification",Bs]],["convbert",["ConvBertForSequenceClassification",wt]],["camembert",["CamembertForSequenceClassification",_n]],["deberta",["DebertaForSequenceClassification",jr]],["deberta-v2",["DebertaV2ForSequenceClassification",As]],["mpnet",["MPNetForSequenceClassification",Va]],["albert",["AlbertForSequenceClassification",PA]],["distilbert",["DistilBertForSequenceClassification",Ia]],["roberta",["RobertaForSequenceClassification",Hs]],["xlm",["XLMForSequenceClassification",d0]],["xlm-roberta",["XLMRobertaForSequenceClassification",Fn]],["bart",["BartForSequenceClassification",it]],["mbart",["MBartForSequenceClassification",mn]],["mobilebert",["MobileBertForSequenceClassification",xt]],["squeezebert",["SqueezeBertForSequenceClassification",Se]]]),a1=new Map([["bert",["BertForTokenClassification",ge]],["modernbert",["ModernBertForTokenClassification",bA]],["roformer",["RoFormerForTokenClassification",It]],["electra",["ElectraForTokenClassification",Kt]],["esm",["EsmForTokenClassification",Ra]],["convbert",["ConvBertForTokenClassification",qn]],["camembert",["CamembertForTokenClassification",la]],["deberta",["DebertaForTokenClassification",Ca]],["deberta-v2",["DebertaV2ForTokenClassification",ts]],["mpnet",["MPNetForTokenClassification",ga]],["distilbert",["DistilBertForTokenClassification",rs]],["roberta",["RobertaForTokenClassification",Dt]],["xlm",["XLMForTokenClassification",f0]],["xlm-roberta",["XLMRobertaForTokenClassification",Jr]]]),Uo=new Map([["t5",["T5ForConditionalGeneration",fr]],["longt5",["LongT5ForConditionalGeneration",zt]],["mt5",["MT5ForConditionalGeneration",Zt]],["bart",["BartForConditionalGeneration",ir]],["mbart",["MBartForConditionalGeneration",$A]],["marian",["MarianMTModel",Z2]],["m2m_100",["M2M100ForConditionalGeneration",L0]],["blenderbot",["BlenderbotForConditionalGeneration",wr]],["blenderbot-small",["BlenderbotSmallForConditionalGeneration",as]]]),Ko=new Map([["bloom",["BloomForCausalLM",P0]],["gpt2",["GPT2LMHeadModel",wa]],["jais",["JAISLMHeadModel",k0]],["gptj",["GPTJForCausalLM",Qi]],["gpt_bigcode",["GPTBigCodeForCausalLM",tn]],["gpt_neo",["GPTNeoForCausalLM",B0]],["gpt_neox",["GPTNeoXForCausalLM",y0]],["codegen",["CodeGenForCausalLM",xa]],["llama",["LlamaForCausalLM",M0]],["exaone",["ExaoneForCausalLM",Fi]],["olmo",["OlmoForCausalLM",Ni]],["olmo2",["Olmo2ForCausalLM",Js]],["mobilellm",["MobileLLMForCausalLM",fa]],["granite",["GraniteForCausalLM",_s]],["cohere",["CohereForCausalLM",Qs]],["gemma",["GemmaForCausalLM",Hi]],["gemma2",["Gemma2ForCausalLM",gs]],["helium",["HeliumForCausalLM",Gs]],["glm",["GlmForCausalLM",cs]],["openelm",["OpenELMForCausalLM",Q0]],["qwen2",["Qwen2ForCausalLM",Cn]],["phi",["PhiForCausalLM",ji]],["phi3",["Phi3ForCausalLM",T0]],["mpt",["MptForCausalLM",Zi]],["opt",["OPTForCausalLM",ar]],["mbart",["MBartForCausalLM",Hr]],["mistral",["MistralForCausalLM",yl]],["starcoder2",["Starcoder2ForCausalLM",El]],["falcon",["FalconForCausalLM",Ml]],["trocr",["TrOCRForCausalLM",vl]],["stablelm",["StableLmForCausalLM",Sl]],["phi3_v",["Phi3VForCausalLM",QA]]]),O1=new Map([["multi_modality",["MultiModalityCausalLM",Jl]]]),s1=new Map([["bert",["BertForMaskedLM",q]],["modernbert",["ModernBertForMaskedLM",_e]],["roformer",["RoFormerForMaskedLM",tt]],["electra",["ElectraForMaskedLM",et]],["esm",["EsmForMaskedLM",Ha]],["convbert",["ConvBertForMaskedLM",Pr]],["camembert",["CamembertForMaskedLM",Jn]],["deberta",["DebertaForMaskedLM",zr]],["deberta-v2",["DebertaV2ForMaskedLM",ks]],["mpnet",["MPNetForMaskedLM",Qa]],["albert",["AlbertForMaskedLM",YA]],["distilbert",["DistilBertForMaskedLM",Ma]],["roberta",["RobertaForMaskedLM",Qn]],["xlm",["XLMWithLMHeadModel",u0]],["xlm-roberta",["XLMRobertaForMaskedLM",Rs]],["mobilebert",["MobileBertForMaskedLM",Da]],["squeezebert",["SqueezeBertForMaskedLM",xe]]]),i1=new Map([["bert",["BertForQuestionAnswering",J]],["roformer",["RoFormerForQuestionAnswering",Ar]],["electra",["ElectraForQuestionAnswering",Vn]],["convbert",["ConvBertForQuestionAnswering",Yn]],["camembert",["CamembertForQuestionAnswering",Yr]],["deberta",["DebertaForQuestionAnswering",Xt]],["deberta-v2",["DebertaV2ForQuestionAnswering",xs]],["mpnet",["MPNetForQuestionAnswering",Ta]],["albert",["AlbertForQuestionAnswering",Le]],["distilbert",["DistilBertForQuestionAnswering",ea]],["roberta",["RobertaForQuestionAnswering",An]],["xlm",["XLMForQuestionAnswering",ss]],["xlm-roberta",["XLMRobertaForQuestionAnswering",JA]],["mobilebert",["MobileBertForQuestionAnswering",Ft]],["squeezebert",["SqueezeBertForQuestionAnswering",je]]]),Zo=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",nr]],["idefics3",["Idefics3ForConditionalGeneration",vi]]]),L1=new Map([["llava",["LlavaForConditionalGeneration",ys]],["llava_onevision",["LlavaOnevisionForConditionalGeneration",vn]],["moondream1",["Moondream1ForConditionalGeneration",Ua]],["florence2",["Florence2ForConditionalGeneration",ki]],["qwen2-vl",["Qwen2VLForConditionalGeneration",ei]],["idefics3",["Idefics3ForConditionalGeneration",vi]],["paligemma",["PaliGemmaForConditionalGeneration",Ka]]]),Y1=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",nr]]]),o1=new Map([["vit",["ViTForImageClassification",Sa]],["ijepa",["IJepaForImageClassification",Xi]],["pvt",["PvtForImageClassification",zs]],["vit_msn",["ViTMSNForImageClassification",S0]],["fastvit",["FastViTForImageClassification",r]],["mobilevit",["MobileViTForImageClassification",c]],["mobilevitv2",["MobileViTV2ForImageClassification",p]],["beit",["BeitForImageClassification",ye]],["deit",["DeiTForImageClassification",Dr]],["hiera",["HieraForImageClassification",on]],["convnext",["ConvNextForImageClassification",F2]],["convnextv2",["ConvNextV2ForImageClassification",N2]],["dinov2",["Dinov2ForImageClassification",Ja]],["dinov2_with_registers",["Dinov2WithRegistersForImageClassification",ni]],["resnet",["ResNetForImageClassification",En]],["swin",["SwinForImageClassification",ha]],["segformer",["SegformerForImageClassification",Pl]],["efficientnet",["EfficientNetForImageClassification",Ol]],["mobilenet_v1",["MobileNetV1ForImageClassification",Hl]],["mobilenet_v2",["MobileNetV2ForImageClassification",Wl]],["mobilenet_v3",["MobileNetV3ForImageClassification",jl]],["mobilenet_v4",["MobileNetV4ForImageClassification",Kl]]]),l1=new Map([["detr",["DetrForObjectDetection",Xe]],["rt_detr",["RTDetrForObjectDetection",ct]],["table-transformer",["TableTransformerForObjectDetection",tr]],["yolos",["YolosForObjectDetection",R2]]]),c1=new Map([["owlvit",["OwlViTForObjectDetection",P]],["owlv2",["Owlv2ForObjectDetection",_]],["grounding-dino",["GroundingDinoForObjectDetection",Y2]]]),g1=new Map([["detr",["DetrForSegmentation",nA]],["clipseg",["CLIPSegForImageSegmentation",Aa]]]),u1=new Map([["segformer",["SegformerForSemanticSegmentation",zl]],["sapiens",["SapiensForSemanticSegmentation",x2]]]),d1=new Map([["detr",["DetrForSegmentation",nA]],["maskformer",["MaskFormerForInstanceSegmentation",G2]]]),Xo=new Map([["sam",["SamModel",j2]]]),f1=new Map([["wav2vec2",["Wav2Vec2ForCTC",J2]],["wav2vec2-bert",["Wav2Vec2BertForCTC",gl]],["unispeech",["UniSpeechForCTC",Bo]],["unispeech-sat",["UniSpeechSatForCTC",il]],["wavlm",["WavLMForCTC",ml]],["hubert",["HubertForCTC",fl]]]),qo=new Map([["wav2vec2",["Wav2Vec2ForSequenceClassification",_2]],["wav2vec2-bert",["Wav2Vec2BertForSequenceClassification",ul]],["unispeech",["UniSpeechForSequenceClassification",al]],["unispeech-sat",["UniSpeechSatForSequenceClassification",ol]],["wavlm",["WavLMForSequenceClassification",Cl]],["hubert",["HubertForSequenceClassification",pl]],["audio-spectrogram-transformer",["ASTForAudioClassification",Ws]]]),Jo=new Map([["wavlm",["WavLMForXVector",bl]]]),_o=new Map([["unispeech-sat",["UniSpeechSatForAudioFrameClassification",ll]],["wavlm",["WavLMForAudioFrameClassification",Il]],["wav2vec2",["Wav2Vec2ForAudioFrameClassification",$2]],["pyannote",["PyAnnoteForAudioFrameClassification",Al]]]),p1=new Map([["vitmatte",["VitMatteForImageMatting",a]]]),H1=new Map([["patchtst",["PatchTSTForPrediction",R0]],["patchtsmixer",["PatchTSMixerForPrediction",t1]]]),$o=new Map([["swin2sr",["Swin2SRForImageSuperResolution",hs]]]),h1=new Map([["dpt",["DPTForDepthEstimation",_i]],["depth_anything",["DepthAnythingForDepthEstimation",O0]],["glpn",["GLPNForDepthEstimation",Q2]],["sapiens",["SapiensForDepthEstimation",B2]],["depth_pro",["DepthProForDepthEstimation",E2]]]),m1=new Map([["sapiens",["SapiensForNormalEstimation",v2]]]),R1=new Map([["vitpose",["VitPoseForPoseEstimation",F0]]]),e2=new Map([["clip",["CLIPVisionModelWithProjection",Nn]],["siglip",["SiglipVisionModel",Nr]],["jina_clip",["JinaCLIPVisionModel",js]]]),si=[[F1,g],[S1,b],[N1,M],[jo,g],[a1,g],[Uo,e],[Vo,e],[Ko,M],[O1,Ye],[s1,g],[i1,g],[Zo,l],[L1,D],[o1,g],[g1,g],[d1,g],[u1,g],[p1,g],[H1,g],[$o,g],[h1,g],[m1,g],[R1,g],[l1,g],[c1,g],[Xo,ue],[f1,g],[qo,g],[r1,e],[n1,g],[Jo,g],[_o,g],[e2,g]];for(const[U,ne]of si)for(const[Ce,qe]of U.values())Oe.set(Ce,ne),tA.set(qe,Ce),AA.set(Ce,qe);const C1=[["MusicgenForConditionalGeneration",No,F],["Phi3VForCausalLM",QA,Ne],["CLIPTextModelWithProjection",Vs,g],["SiglipTextModel",Mi,g],["JinaCLIPTextModel",I0,g],["ClapTextModelWithProjection",Dl,g],["ClapAudioModelWithProjection",Ql,g]];for(const[U,ne,Ce]of C1)Oe.set(U,Ce),tA.set(ne,U),AA.set(U,ne);class b1 extends ur{}Ve(b1,"MODEL_CLASS_MAPPINGS",si.map(ne=>ne[0])),Ve(b1,"BASE_IF_FAIL",!0);class W1 extends ur{}Ve(W1,"MODEL_CLASS_MAPPINGS",[jo]);class Mt extends ur{}Ve(Mt,"MODEL_CLASS_MAPPINGS",[a1]);class I1 extends ur{}Ve(I1,"MODEL_CLASS_MAPPINGS",[Uo]);class Cs extends ur{}Ve(Cs,"MODEL_CLASS_MAPPINGS",[Vo]);class w1 extends ur{}Ve(w1,"MODEL_CLASS_MAPPINGS",[r1]);class A2 extends ur{}Ve(A2,"MODEL_CLASS_MAPPINGS",[n1]);class V1 extends ur{}Ve(V1,"MODEL_CLASS_MAPPINGS",[Ko]);class Zr extends ur{}Ve(Zr,"MODEL_CLASS_MAPPINGS",[s1]);class St extends ur{}Ve(St,"MODEL_CLASS_MAPPINGS",[i1]);class Yt extends ur{}Ve(Yt,"MODEL_CLASS_MAPPINGS",[Zo]);class Os extends ur{}Ve(Os,"MODEL_CLASS_MAPPINGS",[o1]);class j1 extends ur{}Ve(j1,"MODEL_CLASS_MAPPINGS",[g1]);class t2 extends ur{}Ve(t2,"MODEL_CLASS_MAPPINGS",[u1]);class U1 extends ur{}Ve(U1,"MODEL_CLASS_MAPPINGS",[d1]);class r2 extends ur{}Ve(r2,"MODEL_CLASS_MAPPINGS",[l1]);class K1 extends ur{}Ve(K1,"MODEL_CLASS_MAPPINGS",[c1]);class Z1 extends ur{}Ve(Z1,"MODEL_CLASS_MAPPINGS",[Xo]);class n2 extends ur{}Ve(n2,"MODEL_CLASS_MAPPINGS",[f1]);class X1 extends ur{}Ve(X1,"MODEL_CLASS_MAPPINGS",[qo]);class q1 extends ur{}Ve(q1,"MODEL_CLASS_MAPPINGS",[Jo]);class J1 extends ur{}Ve(J1,"MODEL_CLASS_MAPPINGS",[_o]);class ii extends ur{}Ve(ii,"MODEL_CLASS_MAPPINGS",[Y1]);class a2 extends ur{}Ve(a2,"MODEL_CLASS_MAPPINGS",[p1]);class _1 extends ur{}Ve(_1,"MODEL_CLASS_MAPPINGS",[$o]);class s2 extends ur{}Ve(s2,"MODEL_CLASS_MAPPINGS",[h1]);class i2 extends ur{}Ve(i2,"MODEL_CLASS_MAPPINGS",[m1]);class $1 extends ur{}Ve($1,"MODEL_CLASS_MAPPINGS",[R1]);class ec extends ur{}Ve(ec,"MODEL_CLASS_MAPPINGS",[e2]);class Bc extends mA{constructor({logits:ne,past_key_values:Ce,encoder_outputs:qe,decoder_attentions:lA=null,cross_attentions:oA=null}){super(),this.logits=ne,this.past_key_values=Ce,this.encoder_outputs=qe,this.decoder_attentions=lA,this.cross_attentions=oA}}class Ot extends mA{constructor({logits:ne,...Ce}){super(),this.logits=ne;const qe=Object.values(Ce);qe.length>0&&(this.attentions=qe)}}class Ac extends mA{constructor({logits:ne,embeddings:Ce}){super(),this.logits=ne,this.embeddings=Ce}}class Pn extends mA{constructor({logits:ne}){super(),this.logits=ne}}class Ln extends mA{constructor({logits:ne}){super(),this.logits=ne}}class Kn extends mA{constructor({start_logits:ne,end_logits:Ce}){super(),this.start_logits=ne,this.end_logits=Ce}}class e0 extends mA{constructor({logits:ne}){super(),this.logits=ne}}class vc extends mA{constructor({logits:ne,past_key_values:Ce}){super(),this.logits=ne,this.past_key_values=Ce}}class tc extends mA{constructor({alphas:ne}){super(),this.alphas=ne}}class rc extends mA{constructor({waveform:ne,spectrogram:Ce}){super(),this.waveform=ne,this.spectrogram=Ce}}},"./src/models/audio_spectrogram_transformer/feature_extraction_audio_spectrogram_transformer.js":(x,C,d)=>{d.r(C),d.d(C,{ASTFeatureExtractor:()=>H});var k=d("./src/base/feature_extraction_utils.js");d("./src/utils/tensor.js");var Q=d("./src/utils/audio.js");class H extends k.FeatureExtractor{constructor(W){super(W);const Z=this.config.sampling_rate,R=(0,Q.mel_filter_bank)(256,this.config.num_mel_bins,20,Math.floor(Z/2),Z,null,"kaldi",!0);for(let N=0;N<R.length;++N)R[N].push(0);this.mel_filters=R,this.window=(0,Q.window_function)(400,"hann",{periodic:!1}),this.mean=this.config.mean,this.std=this.config.std}async _extract_fbank_features(W,Z){return(0,Q.spectrogram)(W,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,max_num_frames:Z,transpose:!0})}async _call(W){(0,k.validate_audio_inputs)(W,"ASTFeatureExtractor");const Z=await this._extract_fbank_features(W,this.config.max_length);if(this.config.do_normalize){const R=2*this.std,N=Z.data;for(let K=0;K<N.length;++K)N[K]=(N[K]-this.mean)/R}return{input_values:Z.unsqueeze_(0)}}}},"./src/models/auto/feature_extraction_auto.js":(x,C,d)=>{d.r(C),d.d(C,{AutoFeatureExtractor:()=>S});var k=d("./src/utils/constants.js"),Q=d("./src/utils/hub.js");d("./src/base/feature_extraction_utils.js");var H=d("./src/models/feature_extractors.js");class S{static async from_pretrained(Z,R={}){const N=await(0,Q.getModelJSON)(Z,k.FEATURE_EXTRACTOR_NAME,!0,R),K=N.feature_extractor_type,V=H[K];if(!V)throw new Error(`Unknown feature_extractor_type: '${K}'. Please report this at ${k.GITHUB_ISSUE_URL}.`);return new V(N)}}},"./src/models/auto/image_processing_auto.js":(x,C,d)=>{d.r(C),d.d(C,{AutoImageProcessor:()=>W});var k=d("./src/utils/constants.js"),Q=d("./src/utils/hub.js"),H=d("./src/base/image_processors_utils.js"),S=d("./src/models/image_processors.js");class W{static async from_pretrained(R,N={}){const K=await(0,Q.getModelJSON)(R,k.IMAGE_PROCESSOR_NAME,!0,N),V=K.image_processor_type??K.feature_extractor_type;let Ae=S[V];return Ae||(V!==void 0&&console.warn(`Image processor type '${V}' not found, assuming base ImageProcessor. Please report this at ${k.GITHUB_ISSUE_URL}.`),Ae=H.ImageProcessor),new Ae(K)}}},"./src/models/auto/processing_auto.js":(x,C,d)=>{d.r(C),d.d(C,{AutoProcessor:()=>R});var k=d("./src/utils/constants.js"),Q=d("./src/utils/hub.js"),H=d("./src/base/processing_utils.js"),S=d("./src/models/processors.js"),W=d("./src/models/image_processors.js"),Z=d("./src/models/feature_extractors.js");class R{static async from_pretrained(K,V={}){const Ae=await(0,Q.getModelJSON)(K,k.IMAGE_PROCESSOR_NAME,!0,V),{image_processor_type:me,feature_extractor_type:Be,processor_class:Ee}=Ae;if(Ee&&S[Ee])return S[Ee].from_pretrained(K,V);if(!me&&!Be)throw new Error("No `image_processor_type` or `feature_extractor_type` found in the config.");const se={};if(me){const ie=W[me];if(!ie)throw new Error(`Unknown image_processor_type: '${me}'.`);se.image_processor=new ie(Ae)}if(Be){const ie=W[Be];if(ie)se.image_processor=new ie(Ae);else{const ve=Z[Be];if(!ve)throw new Error(`Unknown feature_extractor_type: '${Be}'.`);se.feature_extractor=new ve(Ae)}}return new H.Processor({},se)}}},"./src/models/beit/image_processing_beit.js":(x,C,d)=>{d.r(C),d.d(C,{BeitFeatureExtractor:()=>Q});var k=d("./src/base/image_processors_utils.js");class Q extends k.ImageProcessor{}},"./src/models/bit/image_processing_bit.js":(x,C,d)=>{d.r(C),d.d(C,{BitImageProcessor:()=>Q});var k=d("./src/base/image_processors_utils.js");class Q extends k.ImageProcessor{}},"./src/models/chinese_clip/image_processing_chinese_clip.js":(x,C,d)=>{d.r(C),d.d(C,{ChineseCLIPFeatureExtractor:()=>Q});var k=d("./src/base/image_processors_utils.js");class Q extends k.ImageProcessor{}},"./src/models/clap/feature_extraction_clap.js":(x,C,d)=>{d.r(C),d.d(C,{ClapFeatureExtractor:()=>H});var k=d("./src/base/feature_extraction_utils.js");d("./src/utils/tensor.js");var Q=d("./src/utils/audio.js");class H extends k.FeatureExtractor{constructor(W){super(W),this.mel_filters=(0,Q.mel_filter_bank)(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,null,"htk"),this.mel_filters_slaney=(0,Q.mel_filter_bank)(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,"slaney","slaney"),this.window=(0,Q.window_function)(this.config.fft_window_size,"hann")}async _get_input_mel(W,Z,R,N){let K;const V=W.length-Z;if(V>0){if(R!=="rand_trunc")throw new Error(`Truncation strategy "${R}" not implemented`);{const Ae=Math.floor(Math.random()*(V+1));W=W.subarray(Ae,Ae+Z),K=await this._extract_fbank_features(W,this.mel_filters_slaney,this.config.nb_max_samples)}}else{if(V<0){let Ae=new Float64Array(Z);if(Ae.set(W),N==="repeat")for(let me=W.length;me<Z;me+=W.length)Ae.set(W.subarray(0,Math.min(W.length,Z-me)),me);else if(N==="repeatpad")for(let me=W.length;me<-V;me+=W.length)Ae.set(W,me);W=Ae}if(R==="fusion")throw new Error(`Truncation strategy "${R}" not implemented`);K=await this._extract_fbank_features(W,this.mel_filters_slaney,this.config.nb_max_samples)}return K.unsqueeze_(0)}async _extract_fbank_features(W,Z,R=null){return(0,Q.spectrogram)(W,this.window,this.config.fft_window_size,this.config.hop_length,{power:2,mel_filters:Z,log_mel:"dB",max_num_frames:R,do_pad:!1,transpose:!0})}async _call(W,{max_length:Z=null}={}){return(0,k.validate_audio_inputs)(W,"ClapFeatureExtractor"),{input_features:(await this._get_input_mel(W,Z??this.config.nb_max_samples,this.config.truncation,this.config.padding)).unsqueeze_(0)}}}},"./src/models/clip/image_processing_clip.js":(x,C,d)=>{d.r(C),d.d(C,{CLIPFeatureExtractor:()=>H,CLIPImageProcessor:()=>Q});var k=d("./src/base/image_processors_utils.js");class Q extends k.ImageProcessor{}class H extends Q{}},"./src/models/convnext/image_processing_convnext.js":(x,C,d)=>{d.r(C),d.d(C,{ConvNextFeatureExtractor:()=>H,ConvNextImageProcessor:()=>Q});var k=d("./src/base/image_processors_utils.js");class Q extends k.ImageProcessor{constructor(W){super(W),this.crop_pct=this.config.crop_pct??.875}async resize(W){var R;const Z=(R=this.size)==null?void 0:R.shortest_edge;if(Z===void 0)throw new Error("Size dictionary must contain 'shortest_edge' key.");if(Z<384){const N=Math.floor(Z/this.crop_pct),[K,V]=this.get_resize_output_image_size(W,{shortest_edge:N});W=await W.resize(K,V,{resample:this.resample}),W=await W.center_crop(Z,Z)}else W=await W.resize(Z,Z,{resample:this.resample});return W}}class H extends Q{}},"./src/models/deit/image_processing_deit.js":(x,C,d)=>{d.r(C),d.d(C,{DeiTFeatureExtractor:()=>H,DeiTImageProcessor:()=>Q});var k=d("./src/base/image_processors_utils.js");class Q extends k.ImageProcessor{}class H extends Q{}},"./src/models/detr/image_processing_detr.js":(x,C,d)=>{d.r(C),d.d(C,{DetrFeatureExtractor:()=>S,DetrImageProcessor:()=>H});var k=d("./src/base/image_processors_utils.js"),Q=d("./src/utils/tensor.js");class H extends k.ImageProcessor{async _call(Z){const R=await super._call(Z),N=[R.pixel_values.dims[0],64,64],K=(0,Q.full)(N,1n);return{...R,pixel_mask:K}}post_process_object_detection(...Z){return(0,k.post_process_object_detection)(...Z)}post_process_panoptic_segmentation(...Z){return(0,k.post_process_panoptic_segmentation)(...Z)}post_process_instance_segmentation(...Z){return(0,k.post_process_instance_segmentation)(...Z)}}class S extends H{}},"./src/models/donut/image_processing_donut.js":(x,C,d)=>{d.r(C),d.d(C,{DonutFeatureExtractor:()=>H,DonutImageProcessor:()=>Q});var k=d("./src/base/image_processors_utils.js");class Q extends k.ImageProcessor{pad_image(W,Z,R,N={}){const[K,V,Ae]=Z;let me=this.image_mean;Array.isArray(this.image_mean)||(me=new Array(Ae).fill(me));let Be=this.image_std;Array.isArray(Be)||(Be=new Array(Ae).fill(me));const Ee=me.map((se,ie)=>-se/Be[ie]);return super.pad_image(W,Z,R,{center:!0,constant_values:Ee,...N})}}class H extends Q{}},"./src/models/dpt/image_processing_dpt.js":(x,C,d)=>{d.r(C),d.d(C,{DPTFeatureExtractor:()=>H,DPTImageProcessor:()=>Q});var k=d("./src/base/image_processors_utils.js");class Q extends k.ImageProcessor{}class H extends Q{}},"./src/models/efficientnet/image_processing_efficientnet.js":(x,C,d)=>{d.r(C),d.d(C,{EfficientNetImageProcessor:()=>Q});var k=d("./src/base/image_processors_utils.js");class Q extends k.ImageProcessor{constructor(S){super(S),this.include_top=this.config.include_top??!0,this.include_top&&(this.image_std=this.image_std.map(W=>W*W))}}},"./src/models/feature_extractors.js":(x,C,d)=>{d.r(C),d.d(C,{ASTFeatureExtractor:()=>k.ASTFeatureExtractor,ClapFeatureExtractor:()=>Q.ClapFeatureExtractor,ImageFeatureExtractor:()=>V.ImageProcessor,MoonshineFeatureExtractor:()=>H.MoonshineFeatureExtractor,PyAnnoteFeatureExtractor:()=>S.PyAnnoteFeatureExtractor,SeamlessM4TFeatureExtractor:()=>W.SeamlessM4TFeatureExtractor,SpeechT5FeatureExtractor:()=>Z.SpeechT5FeatureExtractor,Wav2Vec2FeatureExtractor:()=>R.Wav2Vec2FeatureExtractor,WeSpeakerFeatureExtractor:()=>N.WeSpeakerFeatureExtractor,WhisperFeatureExtractor:()=>K.WhisperFeatureExtractor});var k=d("./src/models/audio_spectrogram_transformer/feature_extraction_audio_spectrogram_transformer.js"),Q=d("./src/models/clap/feature_extraction_clap.js"),H=d("./src/models/moonshine/feature_extraction_moonshine.js"),S=d("./src/models/pyannote/feature_extraction_pyannote.js"),W=d("./src/models/seamless_m4t/feature_extraction_seamless_m4t.js"),Z=d("./src/models/speecht5/feature_extraction_speecht5.js"),R=d("./src/models/wav2vec2/feature_extraction_wav2vec2.js"),N=d("./src/models/wespeaker/feature_extraction_wespeaker.js"),K=d("./src/models/whisper/feature_extraction_whisper.js"),V=d("./src/base/image_processors_utils.js")},"./src/models/florence2/processing_florence2.js":(x,C,d)=>{d.r(C),d.d(C,{Florence2Processor:()=>S});var k=d("./src/base/processing_utils.js"),Q=d("./src/models/auto/image_processing_auto.js"),H=d("./src/tokenizers.js");class S extends k.Processor{constructor(Z,R){super(Z,R);const{tasks_answer_post_processing_type:N,task_prompts_without_inputs:K,task_prompts_with_input:V}=this.image_processor.config;this.tasks_answer_post_processing_type=new Map(Object.entries(N??{})),this.task_prompts_without_inputs=new Map(Object.entries(K??{})),this.task_prompts_with_input=new Map(Object.entries(V??{})),this.regexes={quad_boxes:/(.+?)<loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)>/gm,bboxes:/([^<]+)?<loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)>/gm},this.size_per_bin=1e3}construct_prompts(Z){typeof Z=="string"&&(Z=[Z]);const R=[];for(const N of Z)if(this.task_prompts_without_inputs.has(N))R.push(this.task_prompts_without_inputs.get(N));else{for(const[K,V]of this.task_prompts_with_input)if(N.includes(K)){R.push(V.replaceAll("{input}",N).replaceAll(K,""));break}R.length!==Z.length&&R.push(N)}return R}post_process_generation(Z,R,N){const K=this.tasks_answer_post_processing_type.get(R)??"pure_text";let V;switch(Z=Z.replaceAll("<s>","").replaceAll("</s>",""),K){case"pure_text":V=Z;break;case"description_with_bboxes":case"bboxes":case"phrase_grounding":case"ocr":const Ae=K==="ocr"?"quad_boxes":"bboxes",me=Z.matchAll(this.regexes[Ae]),Be=[],Ee=[];for(const[se,ie,...ve]of me)Be.push(ie?ie.trim():Be.at(-1)??""),Ee.push(ve.map((g,b)=>(Number(g)+.5)/this.size_per_bin*N[b%2]));V={labels:Be,[Ae]:Ee};break;default:throw new Error(`Task "${R}" (of type "${K}") not yet implemented.`)}return{[R]:V}}async _call(Z,R=null,N={}){if(!Z&&!R)throw new Error("Either text or images must be provided");return{...await this.image_processor(Z,N),...R?this.tokenizer(R,N):{}}}}Ve(S,"tokenizer_class",H.AutoTokenizer),Ve(S,"image_processor_class",Q.AutoImageProcessor)},"./src/models/glpn/image_processing_glpn.js":(x,C,d)=>{d.r(C),d.d(C,{GLPNFeatureExtractor:()=>Q});var k=d("./src/base/image_processors_utils.js");class Q extends k.ImageProcessor{}},"./src/models/grounding_dino/image_processing_grounding_dino.js":(x,C,d)=>{d.r(C),d.d(C,{GroundingDinoImageProcessor:()=>H});var k=d("./src/base/image_processors_utils.js"),Q=d("./src/utils/tensor.js");class H extends k.ImageProcessor{async _call(W){const Z=await super._call(W),R=Z.pixel_values.dims,N=(0,Q.ones)([R[0],R[2],R[3]]);return{...Z,pixel_mask:N}}}},"./src/models/grounding_dino/processing_grounding_dino.js":(x,C,d)=>{d.r(C),d.d(C,{GroundingDinoProcessor:()=>Z});var k=d("./src/base/processing_utils.js"),Q=d("./src/models/auto/image_processing_auto.js"),H=d("./src/tokenizers.js"),S=d("./src/base/image_processors_utils.js");function W(R,N){const K=R.dims.at(-1)-1,V=R.tolist();V.fill(!1,0,1),V.fill(!1,K);const Ae=N.tolist();return V.map((me,Be)=>me?Be:null).filter(me=>me!==null).map(me=>Ae[me])}class Z extends k.Processor{async _call(N,K,V={}){const Ae=N?await this.image_processor(N,V):{};return{...K?this.tokenizer(K,V):{},...Ae}}post_process_grounded_object_detection(N,K,{box_threshold:V=.25,text_threshold:Ae=.25,target_sizes:me=null}={}){const{logits:Be,pred_boxes:Ee}=N,se=Be.dims[0];if(me!==null&&me.length!==se)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");const ie=Be.dims.at(1),ve=Be.sigmoid(),g=ve.max(-1).tolist(),b=Ee.tolist().map(l=>l.map(M=>(0,S.center_to_corners_format)(M))),e=[];for(let l=0;l<se;++l){const M=me!==null?me[l]:null;M!==null&&(b[l]=b[l].map(Ne=>Ne.map((Oe,AA)=>Oe*M[(AA+1)%2])));const ue=g[l],D=[],F=[],Ye=[];for(let Ne=0;Ne<ie;++Ne){const Oe=ue[Ne];if(Oe<=V)continue;const AA=b[l][Ne],tA=ve[l][Ne];D.push(Oe),Ye.push(AA);const BA=W(tA.gt(Ae),K[l]);F.push(BA)}e.push({scores:D,boxes:Ye,labels:this.batch_decode(F)})}return e}}Ve(Z,"tokenizer_class",H.AutoTokenizer),Ve(Z,"image_processor_class",Q.AutoImageProcessor)},"./src/models/idefics3/image_processing_idefics3.js":(x,C,d)=>{d.r(C),d.d(C,{Idefics3ImageProcessor:()=>H});var k=d("./src/base/image_processors_utils.js"),Q=d("./src/utils/tensor.js");class H extends k.ImageProcessor{constructor(W){super(W),this.do_image_splitting=W.do_image_splitting??!0,this.max_image_size=W.max_image_size}get_resize_for_vision_encoder(W,Z){let[R,N]=W.dims.slice(-2);const K=N/R;return N>=R?(N=Math.ceil(N/Z)*Z,R=Math.floor(N/K),R=Math.ceil(R/Z)*Z):(R=Math.ceil(R/Z)*Z,N=Math.floor(R*K),N=Math.ceil(N/Z)*Z),{height:R,width:N}}async _call(W,{do_image_splitting:Z=null,return_row_col_info:R=!1}={}){let N;if(Array.isArray(W)){if(W.length===0||!W[0])throw new Error("No images provided.");N=Array.isArray(W[0])?W:[W]}else N=[[W]];let K=[],V=[],Ae=[];const me=[],Be=[];for(const l of N){let M=await Promise.all(l.map(F=>this.preprocess(F)));me.push(...M.map(F=>F.original_size)),Be.push(...M.map(F=>F.reshaped_input_size)),M.forEach(F=>F.pixel_values.unsqueeze_(0));const{longest_edge:ue}=this.max_image_size;let D;if(Z??this.do_image_splitting){let F=new Array(M.length),Ye=new Array(M.length);D=await Promise.all(M.map(async(Ne,Oe)=>{const AA=this.get_resize_for_vision_encoder(Ne.pixel_values,ue),tA=await(0,Q.interpolate_4d)(Ne.pixel_values,{size:[AA.height,AA.width]}),{frames:BA,num_splits_h:DA,num_splits_w:Ge}=await this.split_image(tA,this.max_image_size);return F[Oe]=DA,Ye[Oe]=Ge,(0,Q.cat)(BA,0)})),V.push(F),Ae.push(Ye)}else{const F=[ue,ue];D=await Promise.all(M.map(Ye=>(0,Q.interpolate_4d)(Ye.pixel_values,{size:F}))),V.push(new Array(M.length).fill(0)),Ae.push(new Array(M.length).fill(0))}K.push((0,Q.cat)(D,0))}const Ee=K.length,[se,ie,ve,g]=K[0].dims;let b,e;if(Ee===1)b=K[0].unsqueeze_(0),e=(0,Q.full)([Ee,se,ve,g],!0);else{const l=Math.max(...K.map(D=>D.dims.at(0)));e=(0,Q.full)([Ee,l,ve,g],!0);const M=e.data,ue=l*ve*g;for(let D=0;D<Ee;++D){const F=K[D].dims[0];if(F<l){K[D]=(0,Q.cat)([K[D],(0,Q.full)([l-F,ie,ve,g],0)],0);const Ye=D*ue+F*ve*g,Ne=(D+1)*ue;M.fill(!1,Ye,Ne)}}b=(0,Q.stack)(K,0)}return{pixel_values:b,pixel_attention_mask:e,original_sizes:me,reshaped_input_sizes:Be,...R?{rows:V,cols:Ae}:{}}}async split_image(W,{longest_edge:Z}){const R=Z,N=Z,K=[],[V,Ae]=W.dims.slice(-2);let me=0,Be=0;if(V>R||Ae>N){me=Math.ceil(V/R),Be=Math.ceil(Ae/N);const Ee=Math.ceil(V/me),se=Math.ceil(Ae/Be);for(let g=0;g<me;++g)for(let b=0;b<Be;++b){let e,l,M,ue;g===me-1?(l=V-Ee,ue=V):(l=g*Ee,ue=(g+1)*Ee),b===Be-1?(e=Ae-se,M=Ae):(e=b*se,M=(b+1)*se);const D=[l,e],F=[ue,M],Ye=await(0,Q.slice)(W,D,F,[2,3]);K.push(Ye)}const ie=R,ve=N;V===ie&&Ae===ve||(W=await(0,Q.interpolate_4d)(W,{size:[ie,ve]}))}return K.push(W),{frames:K,num_splits_h:me,num_splits_w:Be}}}},"./src/models/idefics3/processing_idefics3.js":(x,C,d)=>{d.r(C),d.d(C,{Idefics3Processor:()=>Z});var k=d("./src/base/processing_utils.js"),Q=d("./src/models/auto/image_processing_auto.js"),H=d("./src/tokenizers.js");d("./src/utils/image.js");var S=d("./src/utils/core.js");function W(R,N,K,V,Ae,me){return R===0&&N===0?function(Be,Ee,se,ie){return`${Ee}${ie}`+se.repeat(Be)+`${Ee}`}(K,V,Ae,me):function(Be,Ee,se,ie,ve,g){let b="";for(let e=0;e<Ee;++e){for(let l=0;l<se;++l)b+=ie+`<row_${e+1}_col_${l+1}>`+ve.repeat(Be);b+=`
`}return b+=`
${ie}${g}`+ve.repeat(Be)+`${ie}`,b}(K,R,N,V,Ae,me)}class Z extends k.Processor{constructor(){super(...arguments);Ve(this,"fake_image_token","<fake_token_around_image>");Ve(this,"image_token","<image>");Ve(this,"global_img_token","<global-img>")}async _call(K,V=null,Ae={}){let me;Ae.return_row_col_info??(Ae.return_row_col_info=!0),V&&(me=await this.image_processor(V,Ae)),Array.isArray(K)||(K=[K]);const Be=me.rows??[new Array(K.length).fill(0)],Ee=me.cols??[new Array(K.length).fill(0)],se=this.config.image_seq_len,ie=[],ve=[];for(let g=0;g<K.length;++g){const b=K[g],e=Be[g],l=Ee[g];ie.push((0,S.count)(b,this.image_token));const M=e.map((F,Ye)=>W(F,l[Ye],se,this.fake_image_token,this.image_token,this.global_img_token)),ue=b.split(this.image_token);if(ue.length===0)throw new Error("The image token should be present in the text.");let D=ue[0];for(let F=0;F<M.length;++F)D+=M[F]+ue[F+1];ve.push(D)}return{...this.tokenizer(ve),...me}}}Ve(Z,"image_processor_class",Q.AutoImageProcessor),Ve(Z,"tokenizer_class",H.AutoTokenizer),Ve(Z,"uses_processor_config",!0)},"./src/models/image_processors.js":(x,C,d)=>{d.r(C),d.d(C,{BeitFeatureExtractor:()=>k.BeitFeatureExtractor,BitImageProcessor:()=>Q.BitImageProcessor,CLIPFeatureExtractor:()=>S.CLIPFeatureExtractor,CLIPImageProcessor:()=>S.CLIPImageProcessor,ChineseCLIPFeatureExtractor:()=>H.ChineseCLIPFeatureExtractor,ConvNextFeatureExtractor:()=>W.ConvNextFeatureExtractor,ConvNextImageProcessor:()=>W.ConvNextImageProcessor,DPTFeatureExtractor:()=>K.DPTFeatureExtractor,DPTImageProcessor:()=>K.DPTImageProcessor,DeiTFeatureExtractor:()=>Z.DeiTFeatureExtractor,DeiTImageProcessor:()=>Z.DeiTImageProcessor,DetrFeatureExtractor:()=>R.DetrFeatureExtractor,DetrImageProcessor:()=>R.DetrImageProcessor,DonutFeatureExtractor:()=>N.DonutFeatureExtractor,DonutImageProcessor:()=>N.DonutImageProcessor,EfficientNetImageProcessor:()=>V.EfficientNetImageProcessor,GLPNFeatureExtractor:()=>Ae.GLPNFeatureExtractor,GroundingDinoImageProcessor:()=>me.GroundingDinoImageProcessor,Idefics3ImageProcessor:()=>Be.Idefics3ImageProcessor,JinaCLIPImageProcessor:()=>se.JinaCLIPImageProcessor,LlavaOnevisionImageProcessor:()=>ie.LlavaOnevisionImageProcessor,Mask2FormerImageProcessor:()=>ve.Mask2FormerImageProcessor,MaskFormerFeatureExtractor:()=>g.MaskFormerFeatureExtractor,MaskFormerImageProcessor:()=>g.MaskFormerImageProcessor,MobileNetV1FeatureExtractor:()=>b.MobileNetV1FeatureExtractor,MobileNetV1ImageProcessor:()=>b.MobileNetV1ImageProcessor,MobileNetV2FeatureExtractor:()=>e.MobileNetV2FeatureExtractor,MobileNetV2ImageProcessor:()=>e.MobileNetV2ImageProcessor,MobileNetV3FeatureExtractor:()=>l.MobileNetV3FeatureExtractor,MobileNetV3ImageProcessor:()=>l.MobileNetV3ImageProcessor,MobileNetV4FeatureExtractor:()=>M.MobileNetV4FeatureExtractor,MobileNetV4ImageProcessor:()=>M.MobileNetV4ImageProcessor,MobileViTFeatureExtractor:()=>ue.MobileViTFeatureExtractor,MobileViTImageProcessor:()=>ue.MobileViTImageProcessor,NougatImageProcessor:()=>D.NougatImageProcessor,OwlViTFeatureExtractor:()=>Ye.OwlViTFeatureExtractor,OwlViTImageProcessor:()=>Ye.OwlViTImageProcessor,Owlv2ImageProcessor:()=>F.Owlv2ImageProcessor,Phi3VImageProcessor:()=>Ne.Phi3VImageProcessor,PvtImageProcessor:()=>Oe.PvtImageProcessor,Qwen2VLImageProcessor:()=>AA.Qwen2VLImageProcessor,RTDetrImageProcessor:()=>tA.RTDetrImageProcessor,SamImageProcessor:()=>BA.SamImageProcessor,SegformerFeatureExtractor:()=>DA.SegformerFeatureExtractor,SegformerImageProcessor:()=>DA.SegformerImageProcessor,SiglipImageProcessor:()=>Ge.SiglipImageProcessor,Swin2SRImageProcessor:()=>ke.Swin2SRImageProcessor,VLMImageProcessor:()=>Ee.VLMImageProcessor,ViTFeatureExtractor:()=>ze.ViTFeatureExtractor,ViTImageProcessor:()=>ze.ViTImageProcessor,VitMatteImageProcessor:()=>Ke.VitMatteImageProcessor,VitPoseImageProcessor:()=>Pe.VitPoseImageProcessor,YolosFeatureExtractor:()=>xA.YolosFeatureExtractor,YolosImageProcessor:()=>xA.YolosImageProcessor});var k=d("./src/models/beit/image_processing_beit.js"),Q=d("./src/models/bit/image_processing_bit.js"),H=d("./src/models/chinese_clip/image_processing_chinese_clip.js"),S=d("./src/models/clip/image_processing_clip.js"),W=d("./src/models/convnext/image_processing_convnext.js"),Z=d("./src/models/deit/image_processing_deit.js"),R=d("./src/models/detr/image_processing_detr.js"),N=d("./src/models/donut/image_processing_donut.js"),K=d("./src/models/dpt/image_processing_dpt.js"),V=d("./src/models/efficientnet/image_processing_efficientnet.js"),Ae=d("./src/models/glpn/image_processing_glpn.js"),me=d("./src/models/grounding_dino/image_processing_grounding_dino.js"),Be=d("./src/models/idefics3/image_processing_idefics3.js"),Ee=d("./src/models/janus/image_processing_janus.js"),se=d("./src/models/jina_clip/image_processing_jina_clip.js"),ie=d("./src/models/llava_onevision/image_processing_llava_onevision.js"),ve=d("./src/models/mask2former/image_processing_mask2former.js"),g=d("./src/models/maskformer/image_processing_maskformer.js"),b=d("./src/models/mobilenet_v1/image_processing_mobilenet_v1.js"),e=d("./src/models/mobilenet_v2/image_processing_mobilenet_v2.js"),l=d("./src/models/mobilenet_v3/image_processing_mobilenet_v3.js"),M=d("./src/models/mobilenet_v4/image_processing_mobilenet_v4.js"),ue=d("./src/models/mobilevit/image_processing_mobilevit.js"),D=d("./src/models/nougat/image_processing_nougat.js"),F=d("./src/models/owlv2/image_processing_owlv2.js"),Ye=d("./src/models/owlvit/image_processing_owlvit.js"),Ne=d("./src/models/phi3_v/image_processing_phi3_v.js"),Oe=d("./src/models/pvt/image_processing_pvt.js"),AA=d("./src/models/qwen2_vl/image_processing_qwen2_vl.js"),tA=d("./src/models/rt_detr/image_processing_rt_detr.js"),BA=d("./src/models/sam/image_processing_sam.js"),DA=d("./src/models/segformer/image_processing_segformer.js"),Ge=d("./src/models/siglip/image_processing_siglip.js"),ke=d("./src/models/swin2sr/image_processing_swin2sr.js"),ze=d("./src/models/vit/image_processing_vit.js"),Ke=d("./src/models/vitmatte/image_processing_vitmatte.js"),Pe=d("./src/models/vitpose/image_processing_vitpose.js"),xA=d("./src/models/yolos/image_processing_yolos.js")},"./src/models/janus/image_processing_janus.js":(x,C,d)=>{d.r(C),d.d(C,{VLMImageProcessor:()=>Q});var k=d("./src/base/image_processors_utils.js");class Q extends k.ImageProcessor{constructor(S){super({do_pad:!0,pad_size:{width:S.image_size,height:S.image_size},...S}),this.constant_values=this.config.background_color.map(W=>W*this.rescale_factor)}pad_image(S,W,Z,R){return super.pad_image(S,W,Z,{constant_values:this.constant_values,center:!0,...R})}}},"./src/models/janus/processing_janus.js":(x,C,d)=>{d.r(C),d.d(C,{VLChatProcessor:()=>R});var k=d("./src/base/processing_utils.js"),Q=d("./src/models/auto/image_processing_auto.js"),H=d("./src/tokenizers.js"),S=d("./src/utils/core.js"),W=d("./src/utils/tensor.js"),Z=d("./src/utils/image.js");class R extends k.Processor{constructor(K,V){super(K,V),this.image_tag=this.config.image_tag,this.image_start_tag=this.config.image_start_tag,this.image_end_tag=this.config.image_end_tag,this.num_image_tokens=this.config.num_image_tokens}async _call(K,{images:V=null,chat_template:Ae="default"}={}){V?Array.isArray(V)||(V=[V]):V=await Promise.all(K.filter(ue=>ue.images).flatMap(ue=>ue.images).map(ue=>Z.RawImage.read(ue)));const me=this.tokenizer,Be=ue=>me.encode(ue,{add_special_tokens:!1}),Ee=me.apply_chat_template(K,{tokenize:!1,add_generation_prompt:!0,chat_template:Ae}).split(this.image_tag),se=Ee.length-1;if(V.length!==se)throw new Error(`Number of images provided (${V.length}) does not match number of "${this.image_tag}" image tags (${se})`);const[ie,ve,g]=me.model.convert_tokens_to_ids([this.image_tag,this.image_start_tag,this.image_end_tag]);let b=Be(Ee[0]),e=new Array(b.length).fill(!1);for(let ue=1;ue<Ee.length;++ue){const D=new Array(this.num_image_tokens).fill(ie),F=Be(Ee[ue]);b=(0,S.mergeArrays)(b,[ve],D,[g],F);const Ye=new Array(this.num_image_tokens).fill(!0);e=(0,S.mergeArrays)(e,[!1],Ye,[!1],new Array(F.length).fill(!1))}const l=[1,b.length],M={input_ids:new W.Tensor("int64",b,l),attention_mask:new W.Tensor("int64",new Array(b.length).fill(1),l),images_seq_mask:new W.Tensor("bool",e,l),images_emb_mask:new W.Tensor("bool",new Array(se*this.num_image_tokens).fill(!0),[1,se,this.num_image_tokens])};if(V&&V.length>0){const ue=await this.image_processor(V);return ue.pixel_values.unsqueeze_(0),{...M,...ue}}return M}}Ve(R,"image_processor_class",Q.AutoImageProcessor),Ve(R,"tokenizer_class",H.AutoTokenizer),Ve(R,"uses_processor_config",!0)},"./src/models/jina_clip/image_processing_jina_clip.js":(x,C,d)=>{d.r(C),d.d(C,{JinaCLIPImageProcessor:()=>Q});var k=d("./src/base/image_processors_utils.js");class Q extends k.ImageProcessor{constructor(S){const{resize_mode:W,fill_color:Z,interpolation:R,size:N,...K}=S;super({...K,size:W==="squash"?{width:N,height:N}:W==="shortest"?{shortest_edge:N}:{longest_edge:N},resample:R==="bicubic"?3:2,do_center_crop:!0,crop_size:N,do_normalize:!0})}}},"./src/models/jina_clip/processing_jina_clip.js":(x,C,d)=>{d.r(C),d.d(C,{JinaCLIPProcessor:()=>S});var k=d("./src/base/processing_utils.js"),Q=d("./src/models/auto/image_processing_auto.js"),H=d("./src/tokenizers.js");class S extends k.Processor{async _call(Z=null,R=null,N={}){if(!Z&&!R)throw new Error("Either text or images must be provided");return{...Z?this.tokenizer(Z,N):{},...R?await this.image_processor(R,N):{}}}}Ve(S,"tokenizer_class",H.AutoTokenizer),Ve(S,"image_processor_class",Q.AutoImageProcessor)},"./src/models/llava_onevision/image_processing_llava_onevision.js":(x,C,d)=>{d.r(C),d.d(C,{LlavaOnevisionImageProcessor:()=>Q});var k=d("./src/base/image_processors_utils.js");class Q extends k.ImageProcessor{}},"./src/models/mask2former/image_processing_mask2former.js":(x,C,d)=>{d.r(C),d.d(C,{Mask2FormerImageProcessor:()=>Q});var k=d("./src/models/maskformer/image_processing_maskformer.js");class Q extends k.MaskFormerImageProcessor{}},"./src/models/maskformer/image_processing_maskformer.js":(x,C,d)=>{d.r(C),d.d(C,{MaskFormerFeatureExtractor:()=>H,MaskFormerImageProcessor:()=>Q});var k=d("./src/base/image_processors_utils.js");class Q extends k.ImageProcessor{post_process_panoptic_segmentation(...W){return(0,k.post_process_panoptic_segmentation)(...W)}post_process_instance_segmentation(...W){return(0,k.post_process_instance_segmentation)(...W)}}class H extends Q{}},"./src/models/mgp_str/processing_mgp_str.js":(x,C,d)=>{d.r(C),d.d(C,{MgpstrProcessor:()=>Z});var k=d("./src/base/processing_utils.js"),Q=d("./src/models/auto/image_processing_auto.js"),H=d("./src/tokenizers.js"),S=d("./src/utils/maths.js");const W={char:["char_decode",1],bpe:["bpe_decode",2],wp:["wp_decode",102]};class Z extends k.Processor{get char_tokenizer(){return this.components.char_tokenizer}get bpe_tokenizer(){return this.components.bpe_tokenizer}get wp_tokenizer(){return this.components.wp_tokenizer}_decode_helper(N,K){if(!W.hasOwnProperty(K))throw new Error(`Format ${K} is not supported.`);const[V,Ae]=W[K],me=this[V].bind(this),[Be,Ee]=N.dims,se=[],ie=[],ve=N.tolist();for(let g=0;g<Be;++g){const b=ve[g],e=[],l=[];for(let ue=1;ue<Ee;++ue){const[D,F]=(0,S.max)((0,S.softmax)(b[ue]));if(l.push(D),F==Ae)break;e.push(F)}const M=l.length>0?l.reduce((ue,D)=>ue*D,1):0;ie.push(e),se.push(M)}return[me(ie),se]}char_decode(N){return this.char_tokenizer.batch_decode(N).map(K=>K.replaceAll(" ",""))}bpe_decode(N){return this.bpe_tokenizer.batch_decode(N)}wp_decode(N){return this.wp_tokenizer.batch_decode(N).map(K=>K.replaceAll(" ",""))}batch_decode([N,K,V]){const[Ae,me]=this._decode_helper(N,"char"),[Be,Ee]=this._decode_helper(K,"bpe"),[se,ie]=this._decode_helper(V,"wp"),ve=[],g=[];for(let b=0;b<Ae.length;++b){const[e,l]=(0,S.max)([me[b],Ee[b],ie[b]]);ve.push([Ae[b],Be[b],se[b]][l]),g.push(e)}return{generated_text:ve,scores:g,char_preds:Ae,bpe_preds:Be,wp_preds:se}}static async from_pretrained(...N){const K=await super.from_pretrained(...N),V=await H.AutoTokenizer.from_pretrained("Xenova/gpt2"),Ae=await H.AutoTokenizer.from_pretrained("Xenova/bert-base-uncased");return K.components={image_processor:K.image_processor,char_tokenizer:K.tokenizer,bpe_tokenizer:V,wp_tokenizer:Ae},K}async _call(N,K=null){const V=await this.image_processor(N);return K&&(V.labels=this.tokenizer(K).input_ids),V}}Ve(Z,"tokenizer_class",H.AutoTokenizer),Ve(Z,"image_processor_class",Q.AutoImageProcessor)},"./src/models/mobilenet_v1/image_processing_mobilenet_v1.js":(x,C,d)=>{d.r(C),d.d(C,{MobileNetV1FeatureExtractor:()=>H,MobileNetV1ImageProcessor:()=>Q});var k=d("./src/base/image_processors_utils.js");class Q extends k.ImageProcessor{}class H extends Q{}},"./src/models/mobilenet_v2/image_processing_mobilenet_v2.js":(x,C,d)=>{d.r(C),d.d(C,{MobileNetV2FeatureExtractor:()=>H,MobileNetV2ImageProcessor:()=>Q});var k=d("./src/base/image_processors_utils.js");class Q extends k.ImageProcessor{}class H extends Q{}},"./src/models/mobilenet_v3/image_processing_mobilenet_v3.js":(x,C,d)=>{d.r(C),d.d(C,{MobileNetV3FeatureExtractor:()=>H,MobileNetV3ImageProcessor:()=>Q});var k=d("./src/base/image_processors_utils.js");class Q extends k.ImageProcessor{}class H extends Q{}},"./src/models/mobilenet_v4/image_processing_mobilenet_v4.js":(x,C,d)=>{d.r(C),d.d(C,{MobileNetV4FeatureExtractor:()=>H,MobileNetV4ImageProcessor:()=>Q});var k=d("./src/base/image_processors_utils.js");class Q extends k.ImageProcessor{}class H extends Q{}},"./src/models/mobilevit/image_processing_mobilevit.js":(x,C,d)=>{d.r(C),d.d(C,{MobileViTFeatureExtractor:()=>H,MobileViTImageProcessor:()=>Q});var k=d("./src/base/image_processors_utils.js");class Q extends k.ImageProcessor{}class H extends Q{}},"./src/models/moonshine/feature_extraction_moonshine.js":(x,C,d)=>{d.r(C),d.d(C,{MoonshineFeatureExtractor:()=>H});var k=d("./src/base/feature_extraction_utils.js"),Q=d("./src/utils/tensor.js");class H extends k.FeatureExtractor{async _call(W){(0,k.validate_audio_inputs)(W,"MoonshineFeatureExtractor"),W instanceof Float64Array&&(W=new Float32Array(W));const Z=[1,W.length];return{input_values:new Q.Tensor("float32",W,Z)}}}},"./src/models/moonshine/processing_moonshine.js":(x,C,d)=>{d.r(C),d.d(C,{MoonshineProcessor:()=>S});var k=d("./src/models/auto/feature_extraction_auto.js"),Q=d("./src/tokenizers.js"),H=d("./src/base/processing_utils.js");class S extends H.Processor{async _call(Z){return await this.feature_extractor(Z)}}Ve(S,"tokenizer_class",Q.AutoTokenizer),Ve(S,"feature_extractor_class",k.AutoFeatureExtractor)},"./src/models/nougat/image_processing_nougat.js":(x,C,d)=>{d.r(C),d.d(C,{NougatImageProcessor:()=>Q});var k=d("./src/models/donut/image_processing_donut.js");class Q extends k.DonutImageProcessor{}},"./src/models/owlv2/image_processing_owlv2.js":(x,C,d)=>{d.r(C),d.d(C,{Owlv2ImageProcessor:()=>Q});var k=d("./src/models/owlvit/image_processing_owlvit.js");class Q extends k.OwlViTImageProcessor{}},"./src/models/owlvit/image_processing_owlvit.js":(x,C,d)=>{d.r(C),d.d(C,{OwlViTFeatureExtractor:()=>H,OwlViTImageProcessor:()=>Q});var k=d("./src/base/image_processors_utils.js");class Q extends k.ImageProcessor{post_process_object_detection(...W){return(0,k.post_process_object_detection)(...W)}}class H extends Q{}},"./src/models/owlvit/processing_owlvit.js":(x,C,d)=>{d.r(C),d.d(C,{OwlViTProcessor:()=>S});var k=d("./src/base/processing_utils.js"),Q=d("./src/models/auto/image_processing_auto.js"),H=d("./src/tokenizers.js");class S extends k.Processor{}Ve(S,"tokenizer_class",H.AutoTokenizer),Ve(S,"image_processor_class",Q.AutoImageProcessor)},"./src/models/paligemma/processing_paligemma.js":(x,C,d)=>{d.r(C),d.d(C,{PaliGemmaProcessor:()=>W});var k=d("./src/base/processing_utils.js"),Q=d("./src/models/auto/image_processing_auto.js"),H=d("./src/tokenizers.js");const S="<image>";class W extends k.Processor{async _call(R,N=null,K={}){N||(console.warn("You are using PaliGemma without a text prefix. It will perform as a picture-captioning model."),N=""),Array.isArray(R)||(R=[R]),Array.isArray(N)||(N=[N]);const V=this.tokenizer.bos_token,Ae=this.image_processor.config.image_seq_length;let me;N.some(Ee=>Ee.includes(S))?me=N.map(Ee=>{const se=Ee.replaceAll(S,S.repeat(Ae)),ie=se.lastIndexOf(S),ve=ie===-1?0:ie+7;return se.slice(0,ve)+V+se.slice(ve)+`
`}):(console.warn("You are passing both `text` and `images` to `PaliGemmaProcessor`. The processor expects special image tokens in the text, as many tokens as there are images per each text. It is recommended to add `<image>` tokens in the very beginning of your text. For this call, we will infer how many images each text has and add special tokens."),me=N.map(Ee=>function(se,ie,ve,g,b){return`${g.repeat(ve*b)}${ie}${se}
`}(Ee,V,Ae,S,R.length)));const Be=this.tokenizer(me,K);return{...await this.image_processor(R,K),...Be}}}Ve(W,"tokenizer_class",H.AutoTokenizer),Ve(W,"image_processor_class",Q.AutoImageProcessor),Ve(W,"uses_processor_config",!1)},"./src/models/phi3_v/image_processing_phi3_v.js":(x,C,d)=>{d.r(C),d.d(C,{Phi3VImageProcessor:()=>N});var k=d("./src/base/image_processors_utils.js"),Q=d("./src/utils/tensor.js");const H=336,S=[2,3],{ceil:W,floor:Z,sqrt:R}=Math;class N extends k.ImageProcessor{constructor(V){super({...V,do_normalize:!0,do_pad:!0,pad_size:"custom",do_convert_rgb:!0,do_resize:!0}),this._num_crops=V.num_crops}calc_num_image_tokens_from_image_size(V,Ae){const{num_img_tokens:me}=this.config;return Z((Z(Ae/H)*Z(V/H)+1)*me+1+(Z(Ae/H)+1)*R(me))}get_resize_output_image_size(V,Ae){const me=this._num_crops,[Be,Ee]=V.size;let se=Be/Ee,ie=1;for(;ie*Math.ceil(ie/se)<=me;)ie+=1;ie-=1;const ve=Math.floor(336*ie);return[ve,Math.floor(ve/se)]}pad_image(V,Ae,me,Be={}){const[Ee,se]=Ae,ie=H*W(Ee/H),ve=H*W(se/H),g=[1,1,1].map((b,e)=>(b-this.image_mean[e])/this.image_std[e]);return super.pad_image(V,Ae,{width:ve,height:ie},{center:!0,constant_values:g,...Be})}async _call(V,{num_crops:Ae=null}={}){if(this._num_crops=Ae??(Ae=this.config.num_crops),Ae<4||R(Ae)%1!=0)throw new Error("num_crops must be a square number >= 4");Array.isArray(V)||(V=[V]);const me=V.length,Be=await Promise.all(V.map(b=>this.preprocess(b))),Ee=Be.map(b=>b.original_size),se=Be.map(b=>b.reshaped_input_size),ie=[];for(const{pixel_values:b}of Be){b.unsqueeze_(0);const[e,l]=b.dims.slice(-2),M=await(0,Q.interpolate_4d)(b,{size:[H,H],mode:"bicubic"});if(Ae>0){const ue=[],D=R(Ae),F=Z(l/D),Ye=Z(e/D);for(let Oe=0;Oe<D;++Oe)for(let AA=0;AA<D;++AA){let tA,BA,DA,Ge;Oe===D-1?(BA=e-Ye,Ge=e):(BA=Oe*Ye,Ge=(Oe+1)*Ye),AA===D-1?(tA=l-F,DA=l):(tA=AA*F,DA=(AA+1)*F);const ke=[BA,tA],ze=[Ge,DA],Ke=await(0,Q.slice)(b,ke,ze,S);ue.push(Ke)}const Ne=await(0,Q.interpolate_4d)((0,Q.cat)(ue,0),{size:[H,H],mode:"bicubic"});ie.push((0,Q.cat)([M,Ne],0))}else ie.push(M)}const ve=(0,Q.stack)(ie,0),g=se.map(b=>b.map(e=>H*W(e/H)));return{pixel_values:ve,original_sizes:Ee,reshaped_input_sizes:se,image_sizes:new Q.Tensor("int64",g.flat(),[me,2]),num_img_tokens:g.map(([b,e])=>this.calc_num_image_tokens_from_image_size(e,b))}}}},"./src/models/phi3_v/processing_phi3_v.js":(x,C,d)=>{d.r(C),d.d(C,{Phi3VProcessor:()=>Z});var k=d("./src/base/processing_utils.js"),Q=d("./src/models/auto/image_processing_auto.js"),H=d("./src/tokenizers.js");d("./src/utils/image.js");const S="<|image|>",W=/<\|image_\d+\|>/g;class Z extends k.Processor{async _call(N,K=null,{padding:V=!0,truncation:Ae=!0,num_crops:me=null}={}){let Be,Ee;if(Array.isArray(N)||(N=[N]),K){Ee=await this.image_processor(K,{num_crops:me});const{num_img_tokens:se}=Ee,ie=N.map((g,b)=>g.split(W).join(S.repeat(se[b])));Be=this.tokenizer(ie,{padding:V,truncation:Ae});const ve=this.tokenizer.model.convert_tokens_to_ids([S])[0];Be.input_ids.map_(g=>g==ve?-g:g)}else Be=this.tokenizer(N);return{...Be,...Ee}}}Ve(Z,"image_processor_class",Q.AutoImageProcessor),Ve(Z,"tokenizer_class",H.AutoTokenizer)},"./src/models/processors.js":(x,C,d)=>{d.r(C),d.d(C,{Florence2Processor:()=>k.Florence2Processor,GroundingDinoProcessor:()=>Q.GroundingDinoProcessor,Idefics3Processor:()=>H.Idefics3Processor,JinaCLIPProcessor:()=>W.JinaCLIPProcessor,MgpstrProcessor:()=>Z.MgpstrProcessor,MoonshineProcessor:()=>R.MoonshineProcessor,OwlViTProcessor:()=>N.OwlViTProcessor,PaliGemmaProcessor:()=>V.PaliGemmaProcessor,Phi3VProcessor:()=>K.Phi3VProcessor,PyAnnoteProcessor:()=>Ae.PyAnnoteProcessor,Qwen2VLProcessor:()=>me.Qwen2VLProcessor,SamProcessor:()=>Be.SamProcessor,SpeechT5Processor:()=>Ee.SpeechT5Processor,VLChatProcessor:()=>S.VLChatProcessor,Wav2Vec2Processor:()=>se.Wav2Vec2Processor,Wav2Vec2ProcessorWithLM:()=>ie.Wav2Vec2ProcessorWithLM,WhisperProcessor:()=>ve.WhisperProcessor});var k=d("./src/models/florence2/processing_florence2.js"),Q=d("./src/models/grounding_dino/processing_grounding_dino.js"),H=d("./src/models/idefics3/processing_idefics3.js"),S=d("./src/models/janus/processing_janus.js"),W=d("./src/models/jina_clip/processing_jina_clip.js"),Z=d("./src/models/mgp_str/processing_mgp_str.js"),R=d("./src/models/moonshine/processing_moonshine.js"),N=d("./src/models/owlvit/processing_owlvit.js"),K=d("./src/models/phi3_v/processing_phi3_v.js"),V=d("./src/models/paligemma/processing_paligemma.js"),Ae=d("./src/models/pyannote/processing_pyannote.js"),me=d("./src/models/qwen2_vl/processing_qwen2_vl.js"),Be=d("./src/models/sam/processing_sam.js"),Ee=d("./src/models/speecht5/processing_speecht5.js"),se=d("./src/models/wav2vec2/processing_wav2vec2.js"),ie=d("./src/models/wav2vec2_with_lm/processing_wav2vec2_with_lm.js"),ve=d("./src/models/whisper/processing_whisper.js")},"./src/models/pvt/image_processing_pvt.js":(x,C,d)=>{d.r(C),d.d(C,{PvtImageProcessor:()=>Q});var k=d("./src/base/image_processors_utils.js");class Q extends k.ImageProcessor{}},"./src/models/pyannote/feature_extraction_pyannote.js":(x,C,d)=>{d.r(C),d.d(C,{PyAnnoteFeatureExtractor:()=>S});var k=d("./src/base/feature_extraction_utils.js"),Q=d("./src/utils/tensor.js"),H=d("./src/utils/maths.js");class S extends k.FeatureExtractor{async _call(Z){(0,k.validate_audio_inputs)(Z,"PyAnnoteFeatureExtractor"),Z instanceof Float64Array&&(Z=new Float32Array(Z));const R=[1,1,Z.length];return{input_values:new Q.Tensor("float32",Z,R)}}samples_to_frames(Z){return(Z-this.config.offset)/this.config.step}post_process_speaker_diarization(Z,R){const N=R/this.samples_to_frames(R)/this.config.sampling_rate,K=[];for(const V of Z.tolist()){const Ae=[];let me=-1;for(let Be=0;Be<V.length;++Be){const Ee=(0,H.softmax)(V[Be]),[se,ie]=(0,H.max)(Ee),[ve,g]=[Be,Be+1];ie!==me?(me=ie,Ae.push({id:ie,start:ve,end:g,score:se})):(Ae.at(-1).end=g,Ae.at(-1).score+=se)}K.push(Ae.map(({id:Be,start:Ee,end:se,score:ie})=>({id:Be,start:Ee*N,end:se*N,confidence:ie/(se-Ee)})))}return K}}},"./src/models/pyannote/processing_pyannote.js":(x,C,d)=>{d.r(C),d.d(C,{PyAnnoteProcessor:()=>H});var k=d("./src/base/processing_utils.js"),Q=d("./src/models/pyannote/feature_extraction_pyannote.js");class H extends k.Processor{async _call(W){return await this.feature_extractor(W)}post_process_speaker_diarization(...W){return this.feature_extractor.post_process_speaker_diarization(...W)}get sampling_rate(){return this.feature_extractor.config.sampling_rate}}Ve(H,"feature_extractor_class",Q.PyAnnoteFeatureExtractor)},"./src/models/qwen2_vl/image_processing_qwen2_vl.js":(x,C,d)=>{d.r(C),d.d(C,{Qwen2VLImageProcessor:()=>H});var k=d("./src/base/image_processors_utils.js"),Q=d("./src/utils/tensor.js");class H extends k.ImageProcessor{async _call(W,...Z){const{pixel_values:R,original_sizes:N,reshaped_input_sizes:K}=await super._call(W,...Z);let V=R;const{temporal_patch_size:Ae,merge_size:me,patch_size:Be}=this.config;V.dims[0]===1&&(V=(0,Q.cat)(Array.from({length:Ae},()=>V),0));const Ee=V.dims[0]/Ae,se=V.dims[1],ie=Math.floor(V.dims[2]/Be),ve=Math.floor(V.dims[3]/Be);return{pixel_values:V.view(Ee,Ae,se,Math.floor(ie/me),me,Be,Math.floor(ve/me),me,Be).permute(0,3,6,4,7,2,1,5,8).view(Ee*ie*ve,se*Ae*Be*Be),image_grid_thw:new Q.Tensor("int64",[Ee,ie,ve],[1,3]),original_sizes:N,reshaped_input_sizes:K}}}},"./src/models/qwen2_vl/processing_qwen2_vl.js":(x,C,d)=>{d.r(C),d.d(C,{Qwen2VLProcessor:()=>S});var k=d("./src/base/processing_utils.js"),Q=d("./src/models/auto/image_processing_auto.js"),H=d("./src/tokenizers.js");d("./src/utils/image.js");class S extends k.Processor{async _call(Z,R=null,...N){let K,V;if(Array.isArray(Z)||(Z=[Z]),R&&(K=await this.image_processor(R),V=K.image_grid_thw),V){let Ae=this.image_processor.config.merge_size**2,me=0;const Be=V.tolist();Z=Z.map(Ee=>{for(;Ee.includes("<|image_pad|>");){const se=Number(Be[me++].reduce((ie,ve)=>ie*ve,1n));Ee=Ee.replace("<|image_pad|>","<|placeholder|>".repeat(Math.floor(se/Ae)))}return Ee.replaceAll("<|placeholder|>","<|image_pad|>")})}return{...this.tokenizer(Z),...K}}}Ve(S,"image_processor_class",Q.AutoImageProcessor),Ve(S,"tokenizer_class",H.AutoTokenizer)},"./src/models/rt_detr/image_processing_rt_detr.js":(x,C,d)=>{d.r(C),d.d(C,{RTDetrImageProcessor:()=>Q});var k=d("./src/base/image_processors_utils.js");class Q extends k.ImageProcessor{post_process_object_detection(...S){return(0,k.post_process_object_detection)(...S)}}},"./src/models/sam/image_processing_sam.js":(x,C,d)=>{d.r(C),d.d(C,{SamImageProcessor:()=>S});var k=d("./src/base/image_processors_utils.js"),Q=d("./src/utils/core.js"),H=d("./src/utils/tensor.js");class S extends k.ImageProcessor{reshape_input_points(Z,R,N,K=!1){Z=structuredClone(Z);let V=(0,Q.calculateDimensions)(Z);if(V.length===3)K||(V=[1,...V]),Z=[Z];else if(V.length!==4)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");for(let Ae=0;Ae<Z.length;++Ae){let me=R[Ae],Be=N[Ae],Ee=[Be[0]/me[0],Be[1]/me[1]];for(let se=0;se<Z[Ae].length;++se)for(let ie=0;ie<Z[Ae][se].length;++ie)for(let ve=0;ve<Z[Ae][se][ie].length;++ve)Z[Ae][se][ie][ve]*=Ee[ve%2]}return new H.Tensor("float32",Float32Array.from(Z.flat(1/0)),V)}add_input_labels(Z,R){let N=(0,Q.calculateDimensions)(Z);if(N.length===2)N=[1,...N],Z=[Z];else if(N.length!==3)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");if(N.some((K,V)=>K!==R.dims[V]))throw Error(`The first ${N.length} dimensions of 'input_points' and 'input_labels' must be the same.`);return new H.Tensor("int64",Z.flat(1/0).map(BigInt),N)}async _call(Z,{input_points:R=null,input_labels:N=null,input_boxes:K=null}={}){const V=await super._call(Z);if(R&&(V.input_points=this.reshape_input_points(R,V.original_sizes,V.reshaped_input_sizes)),N){if(!V.input_points)throw Error("`input_points` must be provided if `input_labels` are provided.");V.input_labels=this.add_input_labels(N,V.input_points)}return K&&(V.input_boxes=this.reshape_input_points(K,V.original_sizes,V.reshaped_input_sizes,!0)),V}async post_process_masks(Z,R,N,{mask_threshold:K=0,binarize:V=!0,pad_size:Ae=null}={}){const me=[],Be=[(Ae=Ae??this.pad_size).height,Ae.width];for(let Ee=0;Ee<R.length;++Ee){const se=R[Ee],ie=N[Ee];let ve=await(0,H.interpolate_4d)(Z[Ee],{mode:"bilinear",size:Be});if(ve=ve.slice(null,null,[0,ie[0]],[0,ie[1]]),ve=await(0,H.interpolate_4d)(ve,{mode:"bilinear",size:se}),V){const g=ve.data,b=new Uint8Array(g.length);for(let e=0;e<g.length;++e)g[e]>K&&(b[e]=1);ve=new H.Tensor("bool",b,ve.dims)}me.push(ve)}return me}generate_crop_boxes(Z,R,{crop_n_layers:N=0,overlap_ratio:K=512/1500,points_per_crop:V=32,crop_n_points_downscale_factor:Ae=1}={}){}}},"./src/models/sam/processing_sam.js":(x,C,d)=>{d.r(C),d.d(C,{SamProcessor:()=>H});var k=d("./src/base/processing_utils.js"),Q=d("./src/models/auto/image_processing_auto.js");class H extends k.Processor{async _call(...W){return await this.image_processor(...W)}post_process_masks(...W){return this.image_processor.post_process_masks(...W)}reshape_input_points(...W){return this.image_processor.reshape_input_points(...W)}}Ve(H,"image_processor_class",Q.AutoImageProcessor)},"./src/models/seamless_m4t/feature_extraction_seamless_m4t.js":(x,C,d)=>{d.r(C),d.d(C,{SeamlessM4TFeatureExtractor:()=>S});var k=d("./src/base/feature_extraction_utils.js"),Q=d("./src/utils/tensor.js"),H=d("./src/utils/audio.js");class S extends k.FeatureExtractor{constructor(Z){super(Z);const R=this.config.sampling_rate,N=(0,H.mel_filter_bank)(256,this.config.num_mel_bins,20,Math.floor(R/2),R,null,"kaldi",!0);for(let K=0;K<N.length;++K)N[K].push(0);this.mel_filters=N,this.window=(0,H.window_function)(400,"povey",{periodic:!1})}async _extract_fbank_features(Z,R){return Z=Z.map(N=>32768*N),(0,H.spectrogram)(Z,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,max_num_frames:R,transpose:!0})}async _call(Z,{padding:R=!0,pad_to_multiple_of:N=2,do_normalize_per_mel_bins:K=!0,return_attention_mask:V=!0}={}){(0,k.validate_audio_inputs)(Z,"SeamlessM4TFeatureExtractor");let Ae,me=await this._extract_fbank_features(Z,this.config.max_length);if(K){const[g,b]=me.dims,e=me.data;for(let l=0;l<b;++l){let M=0;for(let Ye=0;Ye<g;++Ye)M+=e[Ye*b+l];const ue=M/g;let D=0;for(let Ye=0;Ye<g;++Ye)D+=(e[Ye*b+l]-ue)**2;D/=g-1;const F=Math.sqrt(D+1e-7);for(let Ye=0;Ye<g;++Ye){const Ne=Ye*b+l;e[Ne]=(e[Ne]-ue)/F}}}if(R){const[g,b]=me.dims,e=me.data,l=g%N;if(l>0){const M=new Float32Array(b*(g+l));M.set(e),M.fill(this.config.padding_value,e.length);const ue=g+l;me=new Q.Tensor(me.type,M,[ue,b]),V&&(Ae=new Q.Tensor("int64",new BigInt64Array(ue),[1,ue]),Ae.data.fill(1n,0,g))}}const[Be,Ee]=me.dims,se=this.config.stride;if(Be%se!==0)throw new Error(`The number of frames (${Be}) must be a multiple of the stride (${se}).`);const ie=me.view(1,Math.floor(Be/se),Ee*se),ve={input_features:ie};if(V){const g=ie.dims[1],b=new BigInt64Array(g);if(Ae){const e=Ae.data;for(let l=1,M=0;l<Be;l+=se,++M)b[M]=e[l]}else b.fill(1n);ve.attention_mask=new Q.Tensor("int64",b,[1,g])}return ve}}},"./src/models/segformer/image_processing_segformer.js":(x,C,d)=>{d.r(C),d.d(C,{SegformerFeatureExtractor:()=>H,SegformerImageProcessor:()=>Q});var k=d("./src/base/image_processors_utils.js");class Q extends k.ImageProcessor{post_process_semantic_segmentation(...W){return(0,k.post_process_semantic_segmentation)(...W)}}class H extends Q{}},"./src/models/siglip/image_processing_siglip.js":(x,C,d)=>{d.r(C),d.d(C,{SiglipImageProcessor:()=>Q});var k=d("./src/base/image_processors_utils.js");class Q extends k.ImageProcessor{}},"./src/models/speecht5/feature_extraction_speecht5.js":(x,C,d)=>{d.r(C),d.d(C,{SpeechT5FeatureExtractor:()=>Q});var k=d("./src/base/feature_extraction_utils.js");class Q extends k.FeatureExtractor{}},"./src/models/speecht5/processing_speecht5.js":(x,C,d)=>{d.r(C),d.d(C,{SpeechT5Processor:()=>S});var k=d("./src/base/processing_utils.js"),Q=d("./src/tokenizers.js"),H=d("./src/models/auto/feature_extraction_auto.js");class S extends k.Processor{async _call(Z){return await this.feature_extractor(Z)}}Ve(S,"tokenizer_class",Q.AutoTokenizer),Ve(S,"feature_extractor_class",H.AutoFeatureExtractor)},"./src/models/swin2sr/image_processing_swin2sr.js":(x,C,d)=>{d.r(C),d.d(C,{Swin2SRImageProcessor:()=>Q});var k=d("./src/base/image_processors_utils.js");class Q extends k.ImageProcessor{pad_image(S,W,Z,R={}){const[N,K,V]=W;return super.pad_image(S,W,{width:K+(Z-K%Z)%Z,height:N+(Z-N%Z)%Z},{mode:"symmetric",center:!1,constant_values:-1,...R})}}},"./src/models/vit/image_processing_vit.js":(x,C,d)=>{d.r(C),d.d(C,{ViTFeatureExtractor:()=>H,ViTImageProcessor:()=>Q});var k=d("./src/base/image_processors_utils.js");class Q extends k.ImageProcessor{}class H extends Q{}},"./src/models/vitmatte/image_processing_vitmatte.js":(x,C,d)=>{d.r(C),d.d(C,{VitMatteImageProcessor:()=>H});var k=d("./src/base/image_processors_utils.js"),Q=d("./src/utils/tensor.js");class H extends k.ImageProcessor{async _call(W,Z){Array.isArray(W)||(W=[W]),Array.isArray(Z)||(Z=[Z]);const R=await Promise.all(W.map(V=>this.preprocess(V))),N=await Promise.all(Z.map(V=>this.preprocess(V,{do_normalize:!1,do_convert_rgb:!1,do_convert_grayscale:!0})));return{pixel_values:(0,Q.stack)(R.map((V,Ae)=>(0,Q.cat)([V.pixel_values,N[Ae].pixel_values],0)),0),original_sizes:R.map(V=>V.original_size),reshaped_input_sizes:R.map(V=>V.reshaped_input_size)}}}},"./src/models/vitpose/image_processing_vitpose.js":(x,C,d)=>{d.r(C),d.d(C,{VitPoseImageProcessor:()=>Q});var k=d("./src/base/image_processors_utils.js");class Q extends k.ImageProcessor{post_process_pose_estimation(S,W,{threshold:Z=null}={}){const R=S.tolist(),[N,K,V,Ae]=S.dims,me=[];for(let Be=0;Be<N;++Be){const Ee=R[Be],se=W[Be],ie=[];for(let ve=0;ve<se.length;++ve){const g=se[ve],b=[],e=[],l=[],M=g.at(-2)/Ae,ue=g.at(-1)/V;for(let D=0;D<Ee.length;++D){let[F,Ye]=[0,0],Ne=0,Oe=-1/0;const AA=Ee[D];for(let BA=0;BA<AA.length;++BA){const DA=AA[BA];for(let Ge=0;Ge<DA.length;++Ge){const ke=DA[Ge];Ne+=ke,Oe=Math.max(Oe,ke),F+=(Ge+.5)*ke,Ye+=BA*ke}}if(Z!=null&&Oe<Z)continue;const tA=[M*F/Ne,ue*Ye/Ne];b.push(tA),l.push(D),e.push(Oe)}ie.push({bbox:g,scores:e,labels:l,keypoints:b})}me.push(ie)}return me}}},"./src/models/wav2vec2/feature_extraction_wav2vec2.js":(x,C,d)=>{d.r(C),d.d(C,{Wav2Vec2FeatureExtractor:()=>H});var k=d("./src/base/feature_extraction_utils.js"),Q=d("./src/utils/tensor.js");class H extends k.FeatureExtractor{_zero_mean_unit_var_norm(W){const Z=W.reduce((K,V)=>K+V,0),R=Z/W.length,N=W.reduce((K,V)=>K+(V-R)**2,0)/W.length;return W.map(K=>(K-R)/Math.sqrt(N+1e-7))}async _call(W){(0,k.validate_audio_inputs)(W,"Wav2Vec2FeatureExtractor"),W instanceof Float64Array&&(W=new Float32Array(W));let Z=W;this.config.do_normalize&&(Z=this._zero_mean_unit_var_norm(Z));const R=[1,Z.length];return{input_values:new Q.Tensor("float32",Z,R),attention_mask:new Q.Tensor("int64",new BigInt64Array(Z.length).fill(1n),R)}}}},"./src/models/wav2vec2/processing_wav2vec2.js":(x,C,d)=>{d.r(C),d.d(C,{Wav2Vec2Processor:()=>S});var k=d("./src/tokenizers.js"),Q=d("./src/models/auto/feature_extraction_auto.js"),H=d("./src/base/processing_utils.js");class S extends H.Processor{async _call(Z){return await this.feature_extractor(Z)}}Ve(S,"tokenizer_class",k.AutoTokenizer),Ve(S,"feature_extractor_class",Q.AutoFeatureExtractor)},"./src/models/wav2vec2_with_lm/processing_wav2vec2_with_lm.js":(x,C,d)=>{d.r(C),d.d(C,{Wav2Vec2ProcessorWithLM:()=>S});var k=d("./src/tokenizers.js"),Q=d("./src/models/auto/feature_extraction_auto.js"),H=d("./src/base/processing_utils.js");class S extends H.Processor{async _call(Z){return await this.feature_extractor(Z)}}Ve(S,"tokenizer_class",k.AutoTokenizer),Ve(S,"feature_extractor_class",Q.AutoFeatureExtractor)},"./src/models/wespeaker/feature_extraction_wespeaker.js":(x,C,d)=>{d.r(C),d.d(C,{WeSpeakerFeatureExtractor:()=>H});var k=d("./src/base/feature_extraction_utils.js");d("./src/utils/tensor.js");var Q=d("./src/utils/audio.js");class H extends k.FeatureExtractor{constructor(W){super(W);const Z=this.config.sampling_rate,R=(0,Q.mel_filter_bank)(256,this.config.num_mel_bins,20,Math.floor(Z/2),Z,null,"kaldi",!0);for(let N=0;N<R.length;++N)R[N].push(0);this.mel_filters=R,this.window=(0,Q.window_function)(400,"hamming",{periodic:!1}),this.min_num_frames=this.config.min_num_frames}async _extract_fbank_features(W){return W=W.map(Z=>32768*Z),(0,Q.spectrogram)(W,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,transpose:!0,min_num_frames:this.min_num_frames})}async _call(W){(0,k.validate_audio_inputs)(W,"WeSpeakerFeatureExtractor");const Z=(await this._extract_fbank_features(W)).unsqueeze_(0);if(this.config.fbank_centering_span===null){const R=Z.mean(1).data,N=Z.data,[K,V,Ae]=Z.dims;for(let me=0;me<K;++me){const Be=me*V*Ae,Ee=me*Ae;for(let se=0;se<V;++se){const ie=Be+se*Ae;for(let ve=0;ve<Ae;++ve)N[ie+ve]-=R[Ee+ve]}}}return{input_features:Z}}}},"./src/models/whisper/common_whisper.js":(x,C,d)=>{d.r(C),d.d(C,{WHISPER_LANGUAGE_MAPPING:()=>Q,WHISPER_TO_LANGUAGE_CODE_MAPPING:()=>H,whisper_language_to_code:()=>S});const k=[["en","english"],["zh","chinese"],["de","german"],["es","spanish"],["ru","russian"],["ko","korean"],["fr","french"],["ja","japanese"],["pt","portuguese"],["tr","turkish"],["pl","polish"],["ca","catalan"],["nl","dutch"],["ar","arabic"],["sv","swedish"],["it","italian"],["id","indonesian"],["hi","hindi"],["fi","finnish"],["vi","vietnamese"],["he","hebrew"],["uk","ukrainian"],["el","greek"],["ms","malay"],["cs","czech"],["ro","romanian"],["da","danish"],["hu","hungarian"],["ta","tamil"],["no","norwegian"],["th","thai"],["ur","urdu"],["hr","croatian"],["bg","bulgarian"],["lt","lithuanian"],["la","latin"],["mi","maori"],["ml","malayalam"],["cy","welsh"],["sk","slovak"],["te","telugu"],["fa","persian"],["lv","latvian"],["bn","bengali"],["sr","serbian"],["az","azerbaijani"],["sl","slovenian"],["kn","kannada"],["et","estonian"],["mk","macedonian"],["br","breton"],["eu","basque"],["is","icelandic"],["hy","armenian"],["ne","nepali"],["mn","mongolian"],["bs","bosnian"],["kk","kazakh"],["sq","albanian"],["sw","swahili"],["gl","galician"],["mr","marathi"],["pa","punjabi"],["si","sinhala"],["km","khmer"],["sn","shona"],["yo","yoruba"],["so","somali"],["af","afrikaans"],["oc","occitan"],["ka","georgian"],["be","belarusian"],["tg","tajik"],["sd","sindhi"],["gu","gujarati"],["am","amharic"],["yi","yiddish"],["lo","lao"],["uz","uzbek"],["fo","faroese"],["ht","haitian creole"],["ps","pashto"],["tk","turkmen"],["nn","nynorsk"],["mt","maltese"],["sa","sanskrit"],["lb","luxembourgish"],["my","myanmar"],["bo","tibetan"],["tl","tagalog"],["mg","malagasy"],["as","assamese"],["tt","tatar"],["haw","hawaiian"],["ln","lingala"],["ha","hausa"],["ba","bashkir"],["jw","javanese"],["su","sundanese"]],Q=new Map(k),H=new Map([...k.map(([W,Z])=>[Z,W]),["burmese","my"],["valencian","ca"],["flemish","nl"],["haitian","ht"],["letzeburgesch","lb"],["pushto","ps"],["panjabi","pa"],["moldavian","ro"],["moldovan","ro"],["sinhalese","si"],["castilian","es"]]);function S(W){W=W.toLowerCase();let Z=H.get(W);if(Z===void 0){if(!Q.has(W)){const R=W.length===2?Q.keys():Q.values();throw new Error(`Language "${W}" is not supported. Must be one of: ${JSON.stringify(R)}`)}Z=W}return Z}},"./src/models/whisper/feature_extraction_whisper.js":(x,C,d)=>{d.r(C),d.d(C,{WhisperFeatureExtractor:()=>S});var k=d("./src/base/feature_extraction_utils.js");d("./src/utils/tensor.js");var Q=d("./src/utils/audio.js"),H=d("./src/utils/maths.js");class S extends k.FeatureExtractor{constructor(Z){var R;super(Z),(R=this.config).mel_filters??(R.mel_filters=(0,Q.mel_filter_bank)(Math.floor(1+this.config.n_fft/2),this.config.feature_size,0,8e3,this.config.sampling_rate,"slaney","slaney")),this.window=(0,Q.window_function)(this.config.n_fft,"hann")}async _extract_fbank_features(Z){const R=await(0,Q.spectrogram)(Z,this.window,this.config.n_fft,this.config.hop_length,{power:2,mel_filters:this.config.mel_filters,log_mel:"log10",max_num_frames:this.config.nb_max_frames}),N=R.data,K=(0,H.max)(N)[0];for(let V=0;V<N.length;++V)N[V]=(Math.max(N[V],K-8)+4)/4;return R}async _call(Z){let R;return(0,k.validate_audio_inputs)(Z,"WhisperFeatureExtractor"),Z.length>this.config.n_samples?(console.warn("Attempting to extract features for audio longer than 30 seconds. If using a pipeline to extract transcript from a long audio clip, remember to specify `chunk_length_s` and/or `stride_length_s`."),R=Z.slice(0,this.config.n_samples)):(R=new Float32Array(this.config.n_samples),R.set(Z)),{input_features:(await this._extract_fbank_features(R)).unsqueeze_(0)}}}},"./src/models/whisper/generation_whisper.js":(x,C,d)=>{d.r(C),d.d(C,{WhisperGenerationConfig:()=>Q});var k=d("./src/generation/configuration_utils.js");class Q extends k.GenerationConfig{constructor(){super(...arguments);Ve(this,"return_timestamps",null);Ve(this,"return_token_timestamps",null);Ve(this,"num_frames",null);Ve(this,"alignment_heads",null);Ve(this,"task",null);Ve(this,"language",null);Ve(this,"no_timestamps_token_id",null);Ve(this,"prompt_ids",null);Ve(this,"is_multilingual",null);Ve(this,"lang_to_id",null);Ve(this,"task_to_id",null);Ve(this,"max_initial_timestamp_index",1)}}},"./src/models/whisper/processing_whisper.js":(x,C,d)=>{d.r(C),d.d(C,{WhisperProcessor:()=>S});var k=d("./src/models/auto/feature_extraction_auto.js"),Q=d("./src/tokenizers.js"),H=d("./src/base/processing_utils.js");class S extends H.Processor{async _call(Z){return await this.feature_extractor(Z)}}Ve(S,"tokenizer_class",Q.AutoTokenizer),Ve(S,"feature_extractor_class",k.AutoFeatureExtractor)},"./src/models/yolos/image_processing_yolos.js":(x,C,d)=>{d.r(C),d.d(C,{YolosFeatureExtractor:()=>H,YolosImageProcessor:()=>Q});var k=d("./src/base/image_processors_utils.js");class Q extends k.ImageProcessor{post_process_object_detection(...W){return(0,k.post_process_object_detection)(...W)}}class H extends Q{}},"./src/ops/registry.js":(x,C,d)=>{d.r(C),d.d(C,{TensorOpRegistry:()=>Z});var k=d("./src/backends/onnx.js"),Q=d("./src/utils/tensor.js"),H=d("./src/env.js");const S=H.apis.IS_BROWSER_ENV||H.apis.IS_WEBWORKER_ENV,W=async(R,N,K)=>{const V=await(0,k.createInferenceSession)(new Uint8Array(R),N);let Ae=Promise.resolve();return async me=>{const Be=(0,k.isONNXProxy)(),Ee=Object.fromEntries(Object.entries(me).map(([ie,ve])=>[ie,(Be?ve.clone():ve).ort_tensor])),se=await(Ae=S?Ae.then(()=>V.run(Ee)):V.run(Ee));return Array.isArray(K)?K.map(ie=>new Q.Tensor(se[ie])):new Q.Tensor(se[K])}};class Z{static get nearest_interpolate_4d(){return this._nearest_interpolate_4d||(this._nearest_interpolate_4d=W([8,10,18,0,58,129,1,10,41,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,18,10,4,109,111,100,101,34,7,110,101,97,114,101,115,116,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,21],this.session_options,"y")),this._nearest_interpolate_4d}static get bilinear_interpolate_4d(){return this._bilinear_interpolate_4d||(this._bilinear_interpolate_4d=W([8,9,18,0,58,128,1,10,40,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,17,10,4,109,111,100,101,34,6,108,105,110,101,97,114,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,"y")),this._bilinear_interpolate_4d}static get bicubic_interpolate_4d(){return this._bicubic_interpolate_4d||(this._bicubic_interpolate_4d=W([8,9,18,0,58,127,10,39,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,16,10,4,109,111,100,101,34,5,99,117,98,105,99,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,"y")),this._bicubic_interpolate_4d}static get matmul(){return this._matmul||(this._matmul=W([8,9,18,0,58,55,10,17,10,1,97,10,1,98,18,1,99,34,6,77,97,116,77,117,108,18,1,114,90,9,10,1,97,18,4,10,2,8,1,90,9,10,1,98,18,4,10,2,8,1,98,9,10,1,99,18,4,10,2,8,1,66,2,16,20],this.session_options,"c")),this._matmul}static get stft(){return this._stft||(this._stft=W([8,7,18,0,58,148,1,10,38,10,1,115,10,1,106,10,1,119,10,1,108,18,1,111,34,4,83,84,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,115,90,26,10,1,115,18,21,10,19,8,1,18,15,10,3,18,1,98,10,3,18,1,115,10,3,18,1,99,90,11,10,1,106,18,6,10,4,8,7,18,0,90,16,10,1,119,18,11,10,9,8,1,18,5,10,3,18,1,119,90,11,10,1,108,18,6,10,4,8,7,18,0,98,31,10,1,111,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,102,10,3,18,1,100,10,3,18,1,99,66,2,16,17],this.session_options,"o")),this._stft}static get rfft(){return this._rfft||(this._rfft=W([8,9,18,0,58,97,10,33,10,1,120,10,0,10,1,97,18,1,121,34,3,68,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,100,90,21,10,1,120,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,90,11,10,1,97,18,6,10,4,8,7,18,0,98,21,10,1,121,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,66,2,16,20],this.session_options,"y")),this._rfft}static get top_k(){return this._top_k||(this._top_k=W([8,10,18,0,58,73,10,18,10,1,120,10,1,107,18,1,118,18,1,105,34,4,84,111,112,75,18,1,116,90,9,10,1,120,18,4,10,2,8,1,90,15,10,1,107,18,10,10,8,8,7,18,4,10,2,8,1,98,9,10,1,118,18,4,10,2,8,1,98,9,10,1,105,18,4,10,2,8,7,66,2,16,21],this.session_options,["v","i"])),this._top_k}static get slice(){return this._slice||(this._slice=W([8,7,18,0,58,96,10,25,10,1,120,10,1,115,10,1,101,10,1,97,10,1,116,18,1,121,34,5,83,108,105,99,101,18,1,114,90,9,10,1,120,18,4,10,2,8,1,90,9,10,1,115,18,4,10,2,8,7,90,9,10,1,101,18,4,10,2,8,7,90,9,10,1,97,18,4,10,2,8,7,90,9,10,1,116,18,4,10,2,8,7,98,9,10,1,121,18,4,10,2,8,1,66,2,16,13],this.session_options,"y")),this._slice}}Ve(Z,"session_options",{})},"./src/pipelines.js":(x,C,d)=>{d.r(C),d.d(C,{AudioClassificationPipeline:()=>Ye,AutomaticSpeechRecognitionPipeline:()=>Oe,DepthEstimationPipeline:()=>xA,DocumentQuestionAnsweringPipeline:()=>ze,FeatureExtractionPipeline:()=>D,FillMaskPipeline:()=>ve,ImageClassificationPipeline:()=>tA,ImageFeatureExtractionPipeline:()=>F,ImageSegmentationPipeline:()=>BA,ImageToImagePipeline:()=>Pe,ImageToTextPipeline:()=>AA,ObjectDetectionPipeline:()=>Ge,Pipeline:()=>Be,QuestionAnsweringPipeline:()=>ie,SummarizationPipeline:()=>b,Text2TextGenerationPipeline:()=>g,TextClassificationPipeline:()=>Ee,TextGenerationPipeline:()=>M,TextToAudioPipeline:()=>Ke,TokenClassificationPipeline:()=>se,TranslationPipeline:()=>e,ZeroShotAudioClassificationPipeline:()=>Ne,ZeroShotClassificationPipeline:()=>ue,ZeroShotImageClassificationPipeline:()=>DA,ZeroShotObjectDetectionPipeline:()=>ke,pipeline:()=>yA});var k=d("./src/tokenizers.js"),Q=d("./src/models.js"),H=d("./src/models/auto/processing_auto.js");d("./src/base/processing_utils.js");var S=d("./src/utils/generic.js"),W=d("./src/utils/core.js"),Z=d("./src/utils/maths.js"),R=d("./src/utils/audio.js"),N=d("./src/utils/tensor.js"),K=d("./src/utils/image.js");async function V(gA){return Array.isArray(gA)||(gA=[gA]),await Promise.all(gA.map(He=>K.RawImage.read(He)))}async function Ae(gA,He){return Array.isArray(gA)||(gA=[gA]),await Promise.all(gA.map(Je=>typeof Je=="string"||Je instanceof URL?(0,R.read_audio)(Je,He):Je instanceof Float64Array?new Float32Array(Je):Je))}function me(gA,He){He&&(gA=gA.map(mA=>0|mA));const[Je,hA,IA,Qe]=gA;return{xmin:Je,ymin:hA,xmax:IA,ymax:Qe}}class Be extends S.Callable{constructor({task:He,model:Je,tokenizer:hA=null,processor:IA=null}){super(),this.task=He,this.model=Je,this.tokenizer=hA,this.processor=IA}async dispose(){await this.model.dispose()}}class Ee extends Be{constructor(He){super(He)}async _call(He,{top_k:Je=1}={}){const hA=this.tokenizer(He,{padding:!0,truncation:!0}),IA=await this.model(hA),Qe=this.model.config.problem_type==="multi_label_classification"?LA=>LA.sigmoid():LA=>new N.Tensor("float32",(0,Z.softmax)(LA.data),LA.dims),mA=this.model.config.id2label,MA=[];for(const LA of IA.logits){const OA=Qe(LA),q=await(0,N.topk)(OA,Je),HA=q[0].tolist(),ge=q[1].tolist().map((J,fe)=>({label:mA?mA[J]:`LABEL_${J}`,score:HA[fe]}));Je===1?MA.push(...ge):MA.push(ge)}return Array.isArray(He)||Je===1?MA:MA[0]}}class se extends Be{constructor(He){super(He)}async _call(He,{ignore_labels:Je=["O"]}={}){const hA=Array.isArray(He),IA=this.tokenizer(hA?He:[He],{padding:!0,truncation:!0}),Qe=(await this.model(IA)).logits,mA=this.model.config.id2label,MA=[];for(let LA=0;LA<Qe.dims[0];++LA){const OA=IA.input_ids[LA],q=Qe[LA],HA=[];for(let ge=0;ge<q.dims[0];++ge){const J=q[ge],fe=(0,Z.max)(J.data)[1],Te=mA?mA[fe]:`LABEL_${fe}`;if(Je.includes(Te))continue;const _e=this.tokenizer.decode([OA[ge].item()],{skip_special_tokens:!0});if(_e==="")continue;const dA=(0,Z.softmax)(J.data);HA.push({entity:Te,score:dA[fe],index:ge,word:_e})}MA.push(HA)}return hA?MA:MA[0]}}class ie extends Be{constructor(He){super(He)}async _call(He,Je,{top_k:hA=1}={}){const IA=this.tokenizer(He,{text_pair:Je,padding:!0,truncation:!0}),{start_logits:Qe,end_logits:mA}=await this.model(IA),MA=IA.input_ids.tolist(),LA=IA.attention_mask.tolist(),OA=this.tokenizer.all_special_ids,q=[];for(let HA=0;HA<Qe.dims[0];++HA){const ge=MA[HA],J=ge.findIndex(NA=>NA==this.tokenizer.sep_token_id);LA[HA].map((NA,XA)=>NA==1&&(XA===0||XA>J&&OA.findIndex(TA=>TA==ge[XA])===-1));const fe=Qe[HA].tolist(),Te=mA[HA].tolist();for(let NA=1;NA<fe.length;++NA)(LA[HA]==0||NA<=J||OA.findIndex(XA=>XA==ge[NA])!==-1)&&(fe[NA]=-1/0,Te[NA]=-1/0);const _e=(0,Z.softmax)(fe).map((NA,XA)=>[NA,XA]),dA=(0,Z.softmax)(Te).map((NA,XA)=>[NA,XA]);_e[0][0]=0,dA[0][0]=0;const bA=(0,W.product)(_e,dA).filter(NA=>NA[0][1]<=NA[1][1]).map(NA=>[NA[0][1],NA[1][1],NA[0][0]*NA[1][0]]).sort((NA,XA)=>XA[2]-NA[2]);for(let NA=0;NA<Math.min(bA.length,hA);++NA){const[XA,TA,st]=bA[NA],tt=ge.slice(XA,TA+1),nt=this.tokenizer.decode(tt,{skip_special_tokens:!0});q.push({answer:nt,score:st})}}return hA===1?q[0]:q}}class ve extends Be{constructor(He){super(He)}async _call(He,{top_k:Je=5}={}){const hA=this.tokenizer(He,{padding:!0,truncation:!0}),{logits:IA}=await this.model(hA),Qe=[],mA=hA.input_ids.tolist();for(let MA=0;MA<mA.length;++MA){const LA=mA[MA],OA=LA.findIndex(fe=>fe==this.tokenizer.mask_token_id);if(OA===-1)throw Error(`Mask token (${this.tokenizer.mask_token}) not found in text.`);const q=IA[MA][OA],HA=await(0,N.topk)(new N.Tensor("float32",(0,Z.softmax)(q.data),q.dims),Je),ge=HA[0].tolist(),J=HA[1].tolist();Qe.push(J.map((fe,Te)=>{const _e=LA.slice();return _e[OA]=fe,{score:ge[Te],token:Number(fe),token_str:this.tokenizer.decode([fe]),sequence:this.tokenizer.decode(_e,{skip_special_tokens:!0})}}))}return Array.isArray(He)?Qe:Qe[0]}}class g extends Be{constructor(Je){super(Je);Ve(this,"_key","generated_text")}async _call(Je,hA={}){Array.isArray(Je)||(Je=[Je]),this.model.config.prefix&&(Je=Je.map(OA=>this.model.config.prefix+OA));const IA=this.model.config.task_specific_params;IA&&IA[this.task]&&IA[this.task].prefix&&(Je=Je.map(OA=>IA[this.task].prefix+OA));const Qe=this.tokenizer,mA={padding:!0,truncation:!0};let MA;MA=this instanceof e&&"_build_translation_inputs"in Qe?Qe._build_translation_inputs(Je,mA,hA):Qe(Je,mA);const LA=await this.model.generate({...MA,...hA});return Qe.batch_decode(LA,{skip_special_tokens:!0}).map(OA=>({[this._key]:OA}))}}class b extends g{constructor(Je){super(Je);Ve(this,"_key","summary_text")}}class e extends g{constructor(Je){super(Je);Ve(this,"_key","translation_text")}}function l(gA){return Array.isArray(gA)&&gA.every(He=>"role"in He&&"content"in He)}class M extends Be{constructor(He){super(He)}async _call(He,Je={}){let hA,IA=!1,Qe=!1;if(typeof He=="string")hA=He=[He];else if(Array.isArray(He)&&He.every(J=>typeof J=="string"))IA=!0,hA=He;else{if(l(He))He=[He];else{if(!Array.isArray(He)||!He.every(l))throw new Error("Input must be a string, an array of strings, a Chat, or an array of Chats");IA=!0}Qe=!0,hA=He.map(J=>this.tokenizer.apply_chat_template(J,{tokenize:!1,add_generation_prompt:!0}))}const mA=Je.add_special_tokens??!1,MA=!Qe&&(Je.return_full_text??!0);this.tokenizer.padding_side="left";const LA=this.tokenizer(hA,{add_special_tokens:mA,padding:!0,truncation:!0}),OA=await this.model.generate({...LA,...Je}),q=this.tokenizer.batch_decode(OA,{skip_special_tokens:!0});let HA;!MA&&LA.input_ids.dims.at(-1)>0&&(HA=this.tokenizer.batch_decode(LA.input_ids,{skip_special_tokens:!0}).map(J=>J.length));const ge=Array.from({length:He.length},J=>[]);for(let J=0;J<q.length;++J){const fe=Math.floor(J/OA.dims[0]*He.length);HA&&(q[J]=q[J].slice(HA[fe])),ge[fe].push({generated_text:Qe?[...He[fe],{role:"assistant",content:q[J]}]:q[J]})}return IA||ge.length!==1?ge:ge[0]}}class ue extends Be{constructor(He){super(He),this.label2id=Object.fromEntries(Object.entries(this.model.config.label2id).map(([Je,hA])=>[Je.toLowerCase(),hA])),this.entailment_id=this.label2id.entailment,this.entailment_id===void 0&&(console.warn("Could not find 'entailment' in label2id mapping. Using 2 as entailment_id."),this.entailment_id=2),this.contradiction_id=this.label2id.contradiction??this.label2id.not_entailment,this.contradiction_id===void 0&&(console.warn("Could not find 'contradiction' in label2id mapping. Using 0 as contradiction_id."),this.contradiction_id=0)}async _call(He,Je,{hypothesis_template:hA="This example is {}.",multi_label:IA=!1}={}){const Qe=Array.isArray(He);Qe||(He=[He]),Array.isArray(Je)||(Je=[Je]);const mA=Je.map(OA=>hA.replace("{}",OA)),MA=IA||Je.length===1,LA=[];for(const OA of He){const q=[];for(const J of mA){const fe=this.tokenizer(OA,{text_pair:J,padding:!0,truncation:!0}),Te=await this.model(fe);MA?q.push([Te.logits.data[this.contradiction_id],Te.logits.data[this.entailment_id]]):q.push(Te.logits.data[this.entailment_id])}const HA=MA?q.map(J=>(0,Z.softmax)(J)[1]):(0,Z.softmax)(q),ge=HA.map((J,fe)=>[J,fe]).sort((J,fe)=>fe[0]-J[0]);LA.push({sequence:OA,labels:ge.map(J=>Je[J[1]]),scores:ge.map(J=>J[0])})}return Qe?LA:LA[0]}}class D extends Be{constructor(He){super(He)}async _call(He,{pooling:Je="none",normalize:hA=!1,quantize:IA=!1,precision:Qe="binary"}={}){const mA=this.tokenizer(He,{padding:!0,truncation:!0}),MA=await this.model(mA);let LA=MA.last_hidden_state??MA.logits??MA.token_embeddings;if(Je!=="none")if(Je==="mean")LA=(0,N.mean_pooling)(LA,mA.attention_mask);else{if(Je!=="cls")throw Error(`Pooling method '${Je}' not supported.`);LA=LA.slice(null,0)}return hA&&(LA=LA.normalize(2,-1)),IA&&(LA=(0,N.quantize_embeddings)(LA,Qe)),LA}}class F extends Be{constructor(He){super(He)}async _call(He,{pool:Je=null}={}){const hA=await V(He),{pixel_values:IA}=await this.processor(hA),Qe=await this.model({pixel_values:IA});let mA;if(Je){if(!("pooler_output"in Qe))throw Error("No pooled output was returned. Make sure the model has a 'pooler' layer when using the 'pool' option.");mA=Qe.pooler_output}else mA=Qe.last_hidden_state??Qe.logits??Qe.image_embeds;return mA}}class Ye extends Be{constructor(He){super(He)}async _call(He,{top_k:Je=5}={}){const hA=this.processor.feature_extractor.config.sampling_rate,IA=await Ae(He,hA),Qe=this.model.config.id2label,mA=[];for(const MA of IA){const LA=await this.processor(MA),OA=(await this.model(LA)).logits[0],q=await(0,N.topk)(new N.Tensor("float32",(0,Z.softmax)(OA.data),OA.dims),Je),HA=q[0].tolist(),ge=q[1].tolist().map((J,fe)=>({label:Qe?Qe[J]:`LABEL_${J}`,score:HA[fe]}));mA.push(ge)}return Array.isArray(He)?mA:mA[0]}}class Ne extends Be{constructor(He){super(He)}async _call(He,Je,{hypothesis_template:hA="This is a sound of {}."}={}){const IA=!Array.isArray(He);IA&&(He=[He]);const Qe=Je.map(q=>hA.replace("{}",q)),mA=this.tokenizer(Qe,{padding:!0,truncation:!0}),MA=this.processor.feature_extractor.config.sampling_rate,LA=await Ae(He,MA),OA=[];for(const q of LA){const HA=await this.processor(q),ge=await this.model({...mA,...HA}),J=(0,Z.softmax)(ge.logits_per_audio.data);OA.push([...J].map((fe,Te)=>({score:fe,label:Je[Te]})))}return IA?OA[0]:OA}}class Oe extends Be{constructor(He){super(He)}async _call(He,Je={}){switch(this.model.config.model_type){case"whisper":return this._call_whisper(He,Je);case"wav2vec2":case"wav2vec2-bert":case"unispeech":case"unispeech-sat":case"hubert":return this._call_wav2vec2(He,Je);case"moonshine":return this._call_moonshine(He,Je);default:throw new Error(`AutomaticSpeechRecognitionPipeline does not support model type '${this.model.config.model_type}'.`)}}async _call_wav2vec2(He,Je){Je.language&&console.warn('`language` parameter is not yet supported for `wav2vec2` models, defaulting to "English".'),Je.task&&console.warn('`task` parameter is not yet supported for `wav2vec2` models, defaulting to "transcribe".');const hA=!Array.isArray(He);hA&&(He=[He]);const IA=this.processor.feature_extractor.config.sampling_rate,Qe=await Ae(He,IA),mA=[];for(const MA of Qe){const LA=await this.processor(MA),OA=(await this.model(LA)).logits[0],q=[];for(const ge of OA)q.push((0,Z.max)(ge.data)[1]);const HA=this.tokenizer.decode(q);mA.push({text:HA})}return hA?mA[0]:mA}async _call_whisper(He,Je){const hA=Je.return_timestamps??!1,IA=Je.chunk_length_s??0,Qe=Je.force_full_sequences??!1;let mA=Je.stride_length_s??null;const MA={...Je};hA==="word"&&(MA.return_token_timestamps=!0,MA.return_timestamps=!1);const LA=!Array.isArray(He);LA&&(He=[He]);const OA=this.processor.feature_extractor.config.chunk_length/this.model.config.max_source_positions,q=this.processor.feature_extractor.config.hop_length,HA=this.processor.feature_extractor.config.sampling_rate,ge=await Ae(He,HA),J=[];for(const fe of ge){let Te=[];if(IA>0){if(mA===null)mA=IA/6;else if(IA<=mA)throw Error("`chunk_length_s` must be larger than `stride_length_s`.");const bA=HA*IA,NA=HA*mA,XA=bA-2*NA;let TA=0;for(;;){const st=TA+bA,tt=fe.subarray(TA,st),nt=await this.processor(tt),It=TA===0,Ar=st>=fe.length;if(Te.push({stride:[tt.length,It?0:NA,Ar?0:NA],input_features:nt.input_features,is_last:Ar}),Ar)break;TA+=XA}}else Te=[{stride:[fe.length,0,0],input_features:(await this.processor(fe)).input_features,is_last:!0}];for(const bA of Te){MA.num_frames=Math.floor(bA.stride[0]/q);const NA=await this.model.generate({inputs:bA.input_features,...MA});hA==="word"?(bA.tokens=NA.sequences.tolist()[0],bA.token_timestamps=NA.token_timestamps.tolist()[0].map(XA=>(0,Z.round)(XA,2))):bA.tokens=NA[0].tolist(),bA.stride=bA.stride.map(XA=>XA/HA)}const[_e,dA]=this.tokenizer._decode_asr(Te,{time_precision:OA,return_timestamps:hA,force_full_sequences:Qe});J.push({text:_e,...dA})}return LA?J[0]:J}async _call_moonshine(He,Je){const hA=!Array.isArray(He);hA&&(He=[He]);const IA=this.processor.feature_extractor.config.sampling_rate,Qe=await Ae(He,IA),mA=[];for(const MA of Qe){const LA=await this.processor(MA),OA=6*Math.floor(MA.length/IA),q=await this.model.generate({max_new_tokens:OA,...Je,...LA}),HA=this.processor.batch_decode(q,{skip_special_tokens:!0})[0];mA.push({text:HA})}return hA?mA[0]:mA}}class AA extends Be{constructor(He){super(He)}async _call(He,Je={}){const hA=Array.isArray(He),IA=await V(He),{pixel_values:Qe}=await this.processor(IA),mA=[];for(const MA of Qe){MA.dims=[1,...MA.dims];const LA=await this.model.generate({inputs:MA,...Je}),OA=this.tokenizer.batch_decode(LA,{skip_special_tokens:!0}).map(q=>({generated_text:q.trim()}));mA.push(OA)}return hA?mA:mA[0]}}class tA extends Be{constructor(He){super(He)}async _call(He,{top_k:Je=5}={}){const hA=await V(He),{pixel_values:IA}=await this.processor(hA),Qe=await this.model({pixel_values:IA}),mA=this.model.config.id2label,MA=[];for(const LA of Qe.logits){const OA=await(0,N.topk)(new N.Tensor("float32",(0,Z.softmax)(LA.data),LA.dims),Je),q=OA[0].tolist(),HA=OA[1].tolist().map((ge,J)=>({label:mA?mA[ge]:`LABEL_${ge}`,score:q[J]}));MA.push(HA)}return Array.isArray(He)?MA:MA[0]}}class BA extends Be{constructor(He){super(He),this.subtasks_mapping={panoptic:"post_process_panoptic_segmentation",instance:"post_process_instance_segmentation",semantic:"post_process_semantic_segmentation"}}async _call(He,{threshold:Je=.5,mask_threshold:hA=.5,overlap_mask_area_threshold:IA=.8,label_ids_to_fuse:Qe=null,target_sizes:mA=null,subtask:MA=null}={}){if(Array.isArray(He)&&He.length!==1)throw Error("Image segmentation pipeline currently only supports a batch size of 1.");const LA=await V(He),OA=LA.map(_e=>[_e.height,_e.width]),{pixel_values:q,pixel_mask:HA}=await this.processor(LA),ge=await this.model({pixel_values:q,pixel_mask:HA});let J=null;if(MA!==null)J=this.subtasks_mapping[MA];else for(let[_e,dA]of Object.entries(this.subtasks_mapping))if(dA in this.processor.image_processor){J=this.processor.image_processor[dA].bind(this.processor.image_processor),MA=_e;break}const fe=this.model.config.id2label,Te=[];if(MA==="panoptic"||MA==="instance"){const _e=J(ge,Je,hA,IA,Qe,mA??OA)[0],dA=_e.segmentation;for(const bA of _e.segments_info){const NA=new Uint8ClampedArray(dA.data.length);for(let TA=0;TA<dA.data.length;++TA)dA.data[TA]===bA.id&&(NA[TA]=255);const XA=new K.RawImage(NA,dA.dims[1],dA.dims[0],1);Te.push({score:bA.score,label:fe[bA.label_id],mask:XA})}}else{if(MA!=="semantic")throw Error(`Subtask ${MA} not supported.`);{const{segmentation:_e,labels:dA}=J(ge,mA??OA)[0];for(const bA of dA){const NA=new Uint8ClampedArray(_e.data.length);for(let TA=0;TA<_e.data.length;++TA)_e.data[TA]===bA&&(NA[TA]=255);const XA=new K.RawImage(NA,_e.dims[1],_e.dims[0],1);Te.push({score:null,label:fe[bA],mask:XA})}}}return Te}}class DA extends Be{constructor(He){super(He)}async _call(He,Je,{hypothesis_template:hA="This is a photo of {}"}={}){const IA=Array.isArray(He),Qe=await V(He),mA=Je.map(ge=>hA.replace("{}",ge)),MA=this.tokenizer(mA,{padding:this.model.config.model_type!=="siglip"||"max_length",truncation:!0}),{pixel_values:LA}=await this.processor(Qe),OA=await this.model({...MA,pixel_values:LA}),q=this.model.config.model_type==="siglip"?ge=>ge.sigmoid().data:ge=>(0,Z.softmax)(ge.data),HA=[];for(const ge of OA.logits_per_image){const J=[...q(ge)].map((fe,Te)=>({score:fe,label:Je[Te]}));J.sort((fe,Te)=>Te.score-fe.score),HA.push(J)}return IA?HA:HA[0]}}class Ge extends Be{constructor(He){super(He)}async _call(He,{threshold:Je=.9,percentage:hA=!1}={}){const IA=Array.isArray(He);if(IA&&He.length!==1)throw Error("Object detection pipeline currently only supports a batch size of 1.");const Qe=await V(He),mA=hA?null:Qe.map(J=>[J.height,J.width]),{pixel_values:MA,pixel_mask:LA}=await this.processor(Qe),OA=await this.model({pixel_values:MA,pixel_mask:LA}),q=this.processor.image_processor.post_process_object_detection(OA,Je,mA),HA=this.model.config.id2label,ge=q.map(J=>J.boxes.map((fe,Te)=>({score:J.scores[Te],label:HA[J.classes[Te]],box:me(fe,!hA)})));return IA?ge:ge[0]}}class ke extends Be{constructor(He){super(He)}async _call(He,Je,{threshold:hA=.1,top_k:IA=null,percentage:Qe=!1}={}){const mA=Array.isArray(He),MA=await V(He),LA=this.tokenizer(Je,{padding:!0,truncation:!0}),OA=await this.processor(MA),q=[];for(let HA=0;HA<MA.length;++HA){const ge=MA[HA],J=Qe?null:[[ge.height,ge.width]],fe=OA.pixel_values[HA].unsqueeze_(0),Te=await this.model({...LA,pixel_values:fe});let _e;if("post_process_grounded_object_detection"in this.processor){const dA=this.processor.post_process_grounded_object_detection(Te,LA.input_ids,{box_threshold:hA,text_threshold:hA,target_sizes:J})[0];_e=dA.boxes.map((bA,NA)=>({score:dA.scores[NA],label:dA.labels[NA],box:me(bA,!Qe)}))}else{const dA=this.processor.image_processor.post_process_object_detection(Te,hA,J,!0)[0];_e=dA.boxes.map((bA,NA)=>({score:dA.scores[NA],label:Je[dA.classes[NA]],box:me(bA,!Qe)}))}_e.sort((dA,bA)=>bA.score-dA.score),IA!==null&&(_e=_e.slice(0,IA)),q.push(_e)}return mA?q:q[0]}}class ze extends Be{constructor(He){super(He)}async _call(He,Je,hA={}){const IA=(await V(He))[0],{pixel_values:Qe}=await this.processor(IA),mA=`<s_docvqa><s_question>${Je}</s_question><s_answer>`,MA=this.tokenizer(mA,{add_special_tokens:!1,padding:!0,truncation:!0}).input_ids,LA=await this.model.generate({inputs:Qe,max_length:this.model.config.decoder.max_position_embeddings,decoder_input_ids:MA,...hA}),OA=this.tokenizer.batch_decode(LA)[0].match(/<s_answer>(.*?)<\/s_answer>/);let q=null;return OA&&OA.length>=2&&(q=OA[1].trim()),[{answer:q}]}}class Ke extends Be{constructor(Je){super(Je);Ve(this,"DEFAULT_VOCODER_ID","Xenova/speecht5_hifigan");this.vocoder=Je.vocoder??null}async _call(Je,{speaker_embeddings:hA=null}={}){return this.processor?this._call_text_to_spectrogram(Je,{speaker_embeddings:hA}):this._call_text_to_waveform(Je)}async _call_text_to_waveform(Je){const hA=this.tokenizer(Je,{padding:!0,truncation:!0}),{waveform:IA}=await this.model(hA),Qe=this.model.config.sampling_rate;return new R.RawAudio(IA.data,Qe)}async _call_text_to_spectrogram(Je,{speaker_embeddings:hA}){if(this.vocoder||(console.log("No vocoder specified, using default HifiGan vocoder."),this.vocoder=await Q.AutoModel.from_pretrained(this.DEFAULT_VOCODER_ID,{dtype:"fp32"})),(typeof hA=="string"||hA instanceof URL)&&(hA=new Float32Array(await(await fetch(hA)).arrayBuffer())),hA instanceof Float32Array)hA=new N.Tensor("float32",hA,[1,hA.length]);else if(!(hA instanceof N.Tensor))throw new Error("Speaker embeddings must be a `Tensor`, `Float32Array`, `string`, or `URL`.");const{input_ids:IA}=this.tokenizer(Je,{padding:!0,truncation:!0}),{waveform:Qe}=await this.model.generate_speech(IA,hA,{vocoder:this.vocoder}),mA=this.processor.feature_extractor.config.sampling_rate;return new R.RawAudio(Qe.data,mA)}}class Pe extends Be{constructor(He){super(He)}async _call(He){const Je=await V(He),hA=await this.processor(Je),IA=await this.model(hA),Qe=[];for(const mA of IA.reconstruction){const MA=mA.squeeze().clamp_(0,1).mul_(255).round_().to("uint8");Qe.push(K.RawImage.fromTensor(MA))}return Qe.length>1?Qe:Qe[0]}}class xA extends Be{constructor(He){super(He)}async _call(He){const Je=await V(He),hA=await this.processor(Je),{predicted_depth:IA}=await this.model(hA),Qe=[];for(let mA=0;mA<Je.length;++mA){const MA=IA[mA],[LA,OA]=MA.dims.slice(-2),[q,HA]=Je[mA].size,ge=(await(0,N.interpolate_4d)(MA.view(1,1,LA,OA),{size:[HA,q],mode:"bilinear"})).view(HA,q),J=ge.min().item(),fe=ge.max().item(),Te=ge.sub(J).div_(fe-J).mul_(255).to("uint8").unsqueeze(0),_e=K.RawImage.fromTensor(Te);Qe.push({predicted_depth:ge,depth:_e})}return Qe.length>1?Qe:Qe[0]}}const sA=Object.freeze({"text-classification":{tokenizer:k.AutoTokenizer,pipeline:Ee,model:Q.AutoModelForSequenceClassification,default:{model:"Xenova/distilbert-base-uncased-finetuned-sst-2-english"},type:"text"},"token-classification":{tokenizer:k.AutoTokenizer,pipeline:se,model:Q.AutoModelForTokenClassification,default:{model:"Xenova/bert-base-multilingual-cased-ner-hrl"},type:"text"},"question-answering":{tokenizer:k.AutoTokenizer,pipeline:ie,model:Q.AutoModelForQuestionAnswering,default:{model:"Xenova/distilbert-base-cased-distilled-squad"},type:"text"},"fill-mask":{tokenizer:k.AutoTokenizer,pipeline:ve,model:Q.AutoModelForMaskedLM,default:{model:"Xenova/bert-base-uncased"},type:"text"},summarization:{tokenizer:k.AutoTokenizer,pipeline:b,model:Q.AutoModelForSeq2SeqLM,default:{model:"Xenova/distilbart-cnn-6-6"},type:"text"},translation:{tokenizer:k.AutoTokenizer,pipeline:e,model:Q.AutoModelForSeq2SeqLM,default:{model:"Xenova/t5-small"},type:"text"},"text2text-generation":{tokenizer:k.AutoTokenizer,pipeline:g,model:Q.AutoModelForSeq2SeqLM,default:{model:"Xenova/flan-t5-small"},type:"text"},"text-generation":{tokenizer:k.AutoTokenizer,pipeline:M,model:Q.AutoModelForCausalLM,default:{model:"Xenova/gpt2"},type:"text"},"zero-shot-classification":{tokenizer:k.AutoTokenizer,pipeline:ue,model:Q.AutoModelForSequenceClassification,default:{model:"Xenova/distilbert-base-uncased-mnli"},type:"text"},"audio-classification":{pipeline:Ye,model:Q.AutoModelForAudioClassification,processor:H.AutoProcessor,default:{model:"Xenova/wav2vec2-base-superb-ks"},type:"audio"},"zero-shot-audio-classification":{tokenizer:k.AutoTokenizer,pipeline:Ne,model:Q.AutoModel,processor:H.AutoProcessor,default:{model:"Xenova/clap-htsat-unfused"},type:"multimodal"},"automatic-speech-recognition":{tokenizer:k.AutoTokenizer,pipeline:Oe,model:[Q.AutoModelForSpeechSeq2Seq,Q.AutoModelForCTC],processor:H.AutoProcessor,default:{model:"Xenova/whisper-tiny.en"},type:"multimodal"},"text-to-audio":{tokenizer:k.AutoTokenizer,pipeline:Ke,model:[Q.AutoModelForTextToWaveform,Q.AutoModelForTextToSpectrogram],processor:[H.AutoProcessor,null],default:{model:"Xenova/speecht5_tts"},type:"text"},"image-to-text":{tokenizer:k.AutoTokenizer,pipeline:AA,model:Q.AutoModelForVision2Seq,processor:H.AutoProcessor,default:{model:"Xenova/vit-gpt2-image-captioning"},type:"multimodal"},"image-classification":{pipeline:tA,model:Q.AutoModelForImageClassification,processor:H.AutoProcessor,default:{model:"Xenova/vit-base-patch16-224"},type:"multimodal"},"image-segmentation":{pipeline:BA,model:[Q.AutoModelForImageSegmentation,Q.AutoModelForSemanticSegmentation,Q.AutoModelForUniversalSegmentation],processor:H.AutoProcessor,default:{model:"Xenova/detr-resnet-50-panoptic"},type:"multimodal"},"zero-shot-image-classification":{tokenizer:k.AutoTokenizer,pipeline:DA,model:Q.AutoModel,processor:H.AutoProcessor,default:{model:"Xenova/clip-vit-base-patch32"},type:"multimodal"},"object-detection":{pipeline:Ge,model:Q.AutoModelForObjectDetection,processor:H.AutoProcessor,default:{model:"Xenova/detr-resnet-50"},type:"multimodal"},"zero-shot-object-detection":{tokenizer:k.AutoTokenizer,pipeline:ke,model:Q.AutoModelForZeroShotObjectDetection,processor:H.AutoProcessor,default:{model:"Xenova/owlvit-base-patch32"},type:"multimodal"},"document-question-answering":{tokenizer:k.AutoTokenizer,pipeline:ze,model:Q.AutoModelForDocumentQuestionAnswering,processor:H.AutoProcessor,default:{model:"Xenova/donut-base-finetuned-docvqa"},type:"multimodal"},"image-to-image":{pipeline:Pe,model:Q.AutoModelForImageToImage,processor:H.AutoProcessor,default:{model:"Xenova/swin2SR-classical-sr-x2-64"},type:"image"},"depth-estimation":{pipeline:xA,model:Q.AutoModelForDepthEstimation,processor:H.AutoProcessor,default:{model:"Xenova/dpt-large"},type:"image"},"feature-extraction":{tokenizer:k.AutoTokenizer,pipeline:D,model:Q.AutoModel,default:{model:"Xenova/all-MiniLM-L6-v2"},type:"text"},"image-feature-extraction":{processor:H.AutoProcessor,pipeline:F,model:[Q.AutoModelForImageFeatureExtraction,Q.AutoModel],default:{model:"Xenova/vit-base-patch16-224-in21k"},type:"image"}}),cA=Object.freeze({"sentiment-analysis":"text-classification",ner:"token-classification",asr:"automatic-speech-recognition","text-to-speech":"text-to-audio",embeddings:"feature-extraction"});async function yA(gA,He=null,{progress_callback:Je=null,config:hA=null,cache_dir:IA=null,local_files_only:Qe=!1,revision:mA="main",device:MA=null,dtype:LA=null,model_file_name:OA=null,session_options:q={}}={}){gA=cA[gA]??gA;const HA=sA[gA.split("_",1)[0]];if(!HA)throw Error(`Unsupported pipeline: ${gA}. Must be one of [${Object.keys(sA)}]`);He||(He=HA.default.model,console.log(`No model specified. Using default model: "${He}".`));const ge={progress_callback:Je,config:hA,cache_dir:IA,local_files_only:Qe,revision:mA,device:MA,dtype:LA,model_file_name:OA,session_options:q},J=new Map([["tokenizer",HA.tokenizer],["model",HA.model],["processor",HA.processor]]),fe=await async function(Te,_e,dA){const bA=Object.create(null),NA=[];for(const[XA,TA]of Te.entries()){if(!TA)continue;let st;st=Array.isArray(TA)?new Promise(async(tt,nt)=>{var Ar,Vr;let It;for(const $t of TA){if($t===null)return void tt(null);try{return void tt(await $t.from_pretrained(_e,dA))}catch(Pr){if((Ar=Pr.message)!=null&&Ar.includes("Unsupported model type"))It=Pr;else{if(!((Vr=Pr.message)!=null&&Vr.includes("Could not locate file")))return void nt(Pr);It=Pr}}}nt(It)}):TA.from_pretrained(_e,dA),bA[XA]=st,NA.push(st)}await Promise.all(NA);for(const[XA,TA]of Object.entries(bA))bA[XA]=await TA;return bA}(J,He,ge);return fe.task=gA,(0,W.dispatchCallback)(Je,{status:"ready",task:gA,model:He}),new HA.pipeline(fe)}},"./src/tokenizers.js":(x,C,d)=>{d.r(C),d.d(C,{AlbertTokenizer:()=>Yn,AutoTokenizer:()=>Ta,BartTokenizer:()=>Dn,BertTokenizer:()=>qn,BlenderbotSmallTokenizer:()=>Ft,BlenderbotTokenizer:()=>xt,BloomTokenizer:()=>Xt,CLIPTokenizer:()=>Ra,CamembertTokenizer:()=>Jn,CodeGenTokenizer:()=>Bs,CodeLlamaTokenizer:()=>ks,CohereTokenizer:()=>Va,ConvBertTokenizer:()=>Vn,DebertaTokenizer:()=>et,DebertaV2Tokenizer:()=>FA,DistilBertTokenizer:()=>oa,ElectraTokenizer:()=>la,EsmTokenizer:()=>ca,FalconTokenizer:()=>xs,GPT2Tokenizer:()=>yt,GPTNeoXTokenizer:()=>qr,GemmaTokenizer:()=>rs,Grok1Tokenizer:()=>ea,HerbertTokenizer:()=>Kt,LlamaTokenizer:()=>ba,M2M100Tokenizer:()=>Ya,MBart50Tokenizer:()=>jr,MBartTokenizer:()=>zr,MPNetTokenizer:()=>ts,MarianTokenizer:()=>Wa,MgpstrTokenizer:()=>ga,MobileBertTokenizer:()=>kn,NllbTokenizer:()=>Br,NougatTokenizer:()=>ns,PreTrainedTokenizer:()=>wt,Qwen2Tokenizer:()=>Ia,RoFormerTokenizer:()=>zn,RobertaTokenizer:()=>Ca,SiglipTokenizer:()=>Ga,SpeechT5Tokenizer:()=>xn,SqueezeBertTokenizer:()=>qA,T5Tokenizer:()=>Yr,TokenizerModel:()=>l,VitsTokenizer:()=>Qa,Wav2Vec2CTCTokenizer:()=>Da,WhisperTokenizer:()=>Ha,XLMRobertaTokenizer:()=>As,XLMTokenizer:()=>_n,is_chinese_char:()=>se});var k=d("./src/utils/generic.js"),Q=d("./src/utils/core.js"),H=d("./src/utils/hub.js"),S=d("./src/utils/maths.js"),W=d("./src/utils/tensor.js"),Z=d("./src/utils/data-structures.js"),R=d("./node_modules/@huggingface/jinja/dist/index.js"),N=d("./src/models/whisper/common_whisper.js");async function K(rA,re){const xe=await Promise.all([(0,H.getModelJSON)(rA,"tokenizer.json",!0,re),(0,H.getModelJSON)(rA,"tokenizer_config.json",!0,re)]);return re.legacy!==null&&(xe[1].legacy=re.legacy),xe}function V(rA,re=!0){if(rA.Regex!==void 0){let xe=rA.Regex.replace(/\\([#&~])/g,"$1");for(const[Se,je]of b)xe=xe.replaceAll(Se,je);return new RegExp(xe,"gu")}if(rA.String!==void 0){const xe=(0,Q.escapeRegExp)(rA.String);return new RegExp(re?xe:`(${xe})`,"gu")}return console.warn("Unknown pattern type:",rA),null}function Ae(rA){return new Map(Object.entries(rA))}function me(rA){const re=rA.dims;switch(re.length){case 1:return rA.tolist();case 2:if(re[0]!==1)throw new Error("Unable to decode tensor with `batch size !== 1`. Use `tokenizer.batch_decode(...)` for batched inputs.");return rA.tolist()[0];default:throw new Error(`Expected tensor to have 1-2 dimensions, got ${re.length}.`)}}function Be(rA){return rA.replace(/ \./g,".").replace(/ \?/g,"?").replace(/ \!/g,"!").replace(/ ,/g,",").replace(/ \' /g,"'").replace(/ n\'t/g,"n't").replace(/ \'m/g,"'m").replace(/ \'s/g,"'s").replace(/ \'ve/g,"'ve").replace(/ \'re/g,"'re")}function Ee(rA){return rA.replace(/\p{M}/gu,"")}function se(rA){return rA>=19968&&rA<=40959||rA>=13312&&rA<=19903||rA>=131072&&rA<=173791||rA>=173824&&rA<=177983||rA>=177984&&rA<=178207||rA>=178208&&rA<=183983||rA>=63744&&rA<=64255||rA>=194560&&rA<=195103}const ie="\\p{P}\\u0021-\\u002F\\u003A-\\u0040\\u005B-\\u0060\\u007B-\\u007E",ve=new RegExp(`^[${ie}]+$`,"gu"),g=".,!?…。，、।۔،",b=new Map([["(?i:'s|'t|'re|'ve|'m|'ll|'d)","(?:'([sS]|[tT]|[rR][eE]|[vV][eE]|[mM]|[lL][lL]|[dD]))"],[` ?[^(\\s|[${g}])]+`,` ?[^\\s${g}]+`]]);class e{constructor(re){this.content=re.content,this.id=re.id,this.single_word=re.single_word??!1,this.lstrip=re.lstrip??!1,this.rstrip=re.rstrip??!1,this.special=re.special??!1,this.normalized=re.normalized??null}}class l extends k.Callable{constructor(re){super(),this.config=re,this.vocab=[],this.tokens_to_ids=new Map,this.unk_token_id=void 0,this.unk_token=void 0,this.end_of_word_suffix=void 0,this.fuse_unk=this.config.fuse_unk??!1}static fromConfig(re,...xe){switch(re.type){case"WordPiece":return new M(re);case"Unigram":return new ue(re,...xe);case"BPE":return new Ye(re);default:if(re.vocab)return Array.isArray(re.vocab)?new ue(re,...xe):typeof re.vocab=="object"&&re.continuing_subword_prefix&&re.unk_token?new M(re):new Ne(re,...xe);throw new Error(`Unknown TokenizerModel type: ${re.type}`)}}_call(re){return re=this.encode(re),this.fuse_unk&&(re=function(xe,Se,je){const Ze=[];let uA=0;for(;uA<xe.length;)if(Ze.push(xe[uA]),(Se.get(xe[uA])??je)===je)for(;++uA<xe.length&&(Se.get(xe[uA])??je)===je;)Se.get(Ze.at(-1))!==je&&(Ze[Ze.length-1]+=xe[uA]);else++uA;return Ze}(re,this.tokens_to_ids,this.unk_token_id)),re}encode(re){throw Error("encode should be implemented in subclass.")}convert_tokens_to_ids(re){return re.map(xe=>this.tokens_to_ids.get(xe)??this.unk_token_id)}convert_ids_to_tokens(re){return re.map(xe=>this.vocab[xe]??this.unk_token)}}class M extends l{constructor(re){super(re),this.tokens_to_ids=Ae(re.vocab),this.unk_token_id=this.tokens_to_ids.get(re.unk_token),this.unk_token=re.unk_token,this.max_input_chars_per_word=re.max_input_chars_per_word??100,this.vocab=new Array(this.tokens_to_ids.size);for(const[xe,Se]of this.tokens_to_ids)this.vocab[Se]=xe}encode(re){const xe=[];for(const Se of re){const je=[...Se];if(je.length>this.max_input_chars_per_word){xe.push(this.unk_token);continue}let Ze=!1,uA=0;const PA=[];for(;uA<je.length;){let Le=je.length,YA=null;for(;uA<Le;){let vA=je.slice(uA,Le).join("");if(uA>0&&(vA=this.config.continuing_subword_prefix+vA),this.tokens_to_ids.has(vA)){YA=vA;break}--Le}if(YA===null){Ze=!0;break}PA.push(YA),uA=Le}Ze?xe.push(this.unk_token):xe.push(...PA)}return xe}}class ue extends l{constructor(re,xe){super(re);const Se=re.vocab.length;this.vocab=new Array(Se),this.scores=new Array(Se);for(let je=0;je<Se;++je)[this.vocab[je],this.scores[je]]=re.vocab[je];this.unk_token_id=re.unk_id,this.unk_token=this.vocab[re.unk_id],this.tokens_to_ids=new Map(this.vocab.map((je,Ze)=>[je,Ze])),this.bos_token=" ",this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=xe.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.unk_token=this.vocab[this.unk_token_id],this.minScore=(0,S.min)(this.scores)[0],this.unk_score=this.minScore-10,this.scores[this.unk_token_id]=this.unk_score,this.trie=new Z.CharTrie,this.trie.extend(this.vocab),this.fuse_unk=!0}populateNodes(re){const xe=re.chars;let Se=0;for(;Se<xe.length;){let je=!1;const Ze=xe.slice(Se).join(""),uA=this.trie.commonPrefixSearch(Ze);for(const PA of uA){const Le=this.tokens_to_ids.get(PA),YA=this.scores[Le],vA=(0,Q.len)(PA);re.insert(Se,vA,YA,Le),je||vA!==1||(je=!0)}je||re.insert(Se,1,this.unk_score,this.unk_token_id),Se+=1}}tokenize(re){const xe=new Z.TokenLattice(re,this.bos_token_id,this.eos_token_id);return this.populateNodes(xe),xe.tokens()}encode(re){const xe=[];for(const Se of re){const je=this.tokenize(Se);xe.push(...je)}return xe}}const D=(()=>{const rA=[...Array.from({length:"~".charCodeAt(0)-"!".charCodeAt(0)+1},(je,Ze)=>Ze+"!".charCodeAt(0)),...Array.from({length:"¬".charCodeAt(0)-"¡".charCodeAt(0)+1},(je,Ze)=>Ze+"¡".charCodeAt(0)),...Array.from({length:"ÿ".charCodeAt(0)-"®".charCodeAt(0)+1},(je,Ze)=>Ze+"®".charCodeAt(0))],re=rA.slice();let xe=0;for(let je=0;je<256;++je)rA.includes(je)||(rA.push(je),re.push(256+xe),xe+=1);const Se=re.map(je=>String.fromCharCode(je));return Object.fromEntries(rA.map((je,Ze)=>[je,Se[Ze]]))})(),F=(0,Q.reverseDictionary)(D);class Ye extends l{constructor(re){super(re),this.tokens_to_ids=Ae(re.vocab),this.unk_token_id=this.tokens_to_ids.get(re.unk_token),this.unk_token=re.unk_token,this.vocab=new Array(this.tokens_to_ids.size);for(const[Se,je]of this.tokens_to_ids)this.vocab[je]=Se;const xe=Array.isArray(re.merges[0]);this.merges=xe?re.merges:re.merges.map(Se=>Se.split(" ",2)),this.bpe_ranks=new Map(this.merges.map((Se,je)=>[JSON.stringify(Se),je])),this.end_of_word_suffix=re.end_of_word_suffix,this.continuing_subword_suffix=re.continuing_subword_suffix??null,this.byte_fallback=this.config.byte_fallback??!1,this.byte_fallback&&(this.text_encoder=new TextEncoder),this.ignore_merges=this.config.ignore_merges??!1,this.cache=new Map}bpe(re){if(re.length===0)return[];const xe=this.cache.get(re);if(xe!==void 0)return xe;const Se=Array.from(re);this.end_of_word_suffix&&(Se[Se.length-1]+=this.end_of_word_suffix);let je=[];if(Se.length>1){const Ze=new Z.PriorityQueue((Le,YA)=>Le.score<YA.score);let uA={token:Se[0],bias:0,prev:null,next:null},PA=uA;for(let Le=1;Le<Se.length;++Le){const YA={bias:Le/Se.length,token:Se[Le],prev:PA,next:null};PA.next=YA,this._add_node(Ze,PA),PA=YA}for(;!Ze.isEmpty();){const Le=Ze.pop();if(Le.deleted||!Le.next||Le.next.deleted)continue;if(Le.deleted=!0,Le.next.deleted=!0,Le.prev){const vA={...Le.prev};Le.prev.deleted=!0,Le.prev=vA,vA.prev?vA.prev.next=vA:uA=vA}const YA={token:Le.token+Le.next.token,bias:Le.bias,prev:Le.prev,next:Le.next.next};YA.prev?(YA.prev.next=YA,this._add_node(Ze,YA.prev)):uA=YA,YA.next&&(YA.next.prev=YA,this._add_node(Ze,YA))}for(let Le=uA;Le!==null;Le=Le.next)je.push(Le.token)}else je=Se;if(this.continuing_subword_suffix)for(let Ze=0;Ze<je.length-1;++Ze)je[Ze]+=this.continuing_subword_suffix;return this.cache.set(re,je),je}_add_node(re,xe){const Se=this.bpe_ranks.get(JSON.stringify([xe.token,xe.next.token]));Se!==void 0&&(xe.score=Se+xe.bias,re.push(xe))}encode(re){const xe=[];for(const Se of re){if(this.ignore_merges&&this.tokens_to_ids.has(Se)){xe.push(Se);continue}const je=this.bpe(Se);for(const Ze of je)if(this.tokens_to_ids.has(Ze))xe.push(Ze);else if(this.byte_fallback){const uA=Array.from(this.text_encoder.encode(Ze)).map(PA=>`<0x${PA.toString(16).toUpperCase().padStart(2,"0")}>`);uA.every(PA=>this.tokens_to_ids.has(PA))?xe.push(...uA):xe.push(this.unk_token)}else xe.push(this.unk_token)}return xe}}class Ne extends l{constructor(re,xe){super(re),this.tokens_to_ids=Ae(xe.target_lang?re.vocab[xe.target_lang]:re.vocab),this.bos_token=xe.bos_token,this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=xe.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.pad_token=xe.pad_token,this.pad_token_id=this.tokens_to_ids.get(this.pad_token),this.unk_token=xe.unk_token,this.unk_token_id=this.tokens_to_ids.get(this.unk_token),this.vocab=new Array(this.tokens_to_ids.size);for(const[Se,je]of this.tokens_to_ids)this.vocab[je]=Se}encode(re){return re}}class Oe extends k.Callable{constructor(re){super(),this.config=re}static fromConfig(re){if(re===null)return null;switch(re.type){case"BertNormalizer":return new xA(re);case"Precompiled":return new st(re);case"Sequence":return new Pe(re);case"Replace":return new AA(re);case"NFC":return new tA(re);case"NFKC":return new BA(re);case"NFKD":return new DA(re);case"Strip":return new Ge(re);case"StripAccents":return new ke(re);case"Lowercase":return new ze(re);case"Prepend":return new Ke(re);default:throw new Error(`Unknown Normalizer type: ${re.type}`)}}normalize(re){throw Error("normalize should be implemented in subclass.")}_call(re){return this.normalize(re)}}class AA extends Oe{normalize(re){const xe=V(this.config.pattern);return xe===null?re:re.replaceAll(xe,this.config.content)}}class tA extends Oe{normalize(re){return re=re.normalize("NFC")}}class BA extends Oe{normalize(re){return re=re.normalize("NFKC")}}class DA extends Oe{normalize(re){return re=re.normalize("NFKD")}}class Ge extends Oe{normalize(re){return this.config.strip_left&&this.config.strip_right?re=re.trim():(this.config.strip_left&&(re=re.trimStart()),this.config.strip_right&&(re=re.trimEnd())),re}}class ke extends Oe{normalize(re){return re=Ee(re)}}class ze extends Oe{normalize(re){return re=re.toLowerCase()}}class Ke extends Oe{normalize(re){return re=this.config.prepend+re}}class Pe extends Oe{constructor(re){super(re),this.normalizers=re.normalizers.map(xe=>Oe.fromConfig(xe))}normalize(re){return this.normalizers.reduce((xe,Se)=>Se.normalize(xe),re)}}class xA extends Oe{_tokenize_chinese_chars(re){const xe=[];for(let Se=0;Se<re.length;++Se){const je=re[Se];se(je.charCodeAt(0))?(xe.push(" "),xe.push(je),xe.push(" ")):xe.push(je)}return xe.join("")}stripAccents(re){return re.normalize("NFD").replace(/\p{Mn}/gu,"")}_is_control(re){switch(re){case"	":case`
`:case"\r":return!1;default:return/^\p{Cc}|\p{Cf}|\p{Co}|\p{Cs}$/u.test(re)}}_clean_text(re){const xe=[];for(const Se of re){const je=Se.charCodeAt(0);je===0||je===65533||this._is_control(Se)||(/^\s$/.test(Se)?xe.push(" "):xe.push(Se))}return xe.join("")}normalize(re){return this.config.clean_text&&(re=this._clean_text(re)),this.config.handle_chinese_chars&&(re=this._tokenize_chinese_chars(re)),this.config.lowercase?(re=re.toLowerCase(),this.config.strip_accents!==!1&&(re=this.stripAccents(re))):this.config.strip_accents&&(re=this.stripAccents(re)),re}}class sA extends k.Callable{static fromConfig(re){if(re===null)return null;switch(re.type){case"BertPreTokenizer":return new cA(re);case"Sequence":return new tt(re);case"Whitespace":return new nt(re);case"WhitespaceSplit":return new It(re);case"Metaspace":return new XA(re);case"ByteLevel":return new yA(re);case"Split":return new gA(re);case"Punctuation":return new He(re);case"Digits":return new Je(re);case"Replace":return new Ar(re);default:throw new Error(`Unknown PreTokenizer type: ${re.type}`)}}pre_tokenize_text(re,xe){throw Error("pre_tokenize_text should be implemented in subclass.")}pre_tokenize(re,xe){return(Array.isArray(re)?re.map(Se=>this.pre_tokenize_text(Se,xe)):this.pre_tokenize_text(re,xe)).flat()}_call(re,xe){return this.pre_tokenize(re,xe)}}class cA extends sA{constructor(re){super(),this.pattern=new RegExp(`[^\\s${ie}]+|[${ie}]`,"gu")}pre_tokenize_text(re,xe){return re.trim().match(this.pattern)||[]}}class yA extends sA{constructor(re){super(),this.config=re,this.add_prefix_space=this.config.add_prefix_space,this.trim_offsets=this.config.trim_offsets,this.use_regex=this.config.use_regex??!0,this.pattern=/'s|'t|'re|'ve|'m|'ll|'d| ?\p{L}+| ?\p{N}+| ?[^\s\p{L}\p{N}]+|\s+(?!\S)|\s+/gu,this.byte_encoder=D,this.text_encoder=new TextEncoder}pre_tokenize_text(re,xe){return this.add_prefix_space&&!re.startsWith(" ")&&(re=" "+re),(this.use_regex?re.match(this.pattern)||[]:[re]).map(Se=>Array.from(this.text_encoder.encode(Se),je=>this.byte_encoder[je]).join(""))}}class gA extends sA{constructor(re){super(),this.config=re,this.pattern=V(this.config.pattern,this.config.invert)}pre_tokenize_text(re,xe){var Se;return this.pattern===null?[]:this.config.invert?re.match(this.pattern)||[]:((Se=this.config.behavior)==null?void 0:Se.toLowerCase())==="removed"?re.split(this.pattern).filter(je=>je):function(je,Ze){const uA=[];let PA=0;for(const Le of je.matchAll(Ze)){const YA=Le[0];PA<Le.index&&uA.push(je.slice(PA,Le.index)),YA.length>0&&uA.push(YA),PA=Le.index+YA.length}return PA<je.length&&uA.push(je.slice(PA)),uA}(re,this.pattern)}}class He extends sA{constructor(re){super(),this.config=re,this.pattern=new RegExp(`[^${ie}]+|[${ie}]+`,"gu")}pre_tokenize_text(re,xe){return re.match(this.pattern)||[]}}class Je extends sA{constructor(re){super(),this.config=re;const xe="[^\\d]+|\\d"+(this.config.individual_digits?"":"+");this.pattern=new RegExp(xe,"gu")}pre_tokenize_text(re,xe){return re.match(this.pattern)||[]}}class hA extends k.Callable{constructor(re){super(),this.config=re}static fromConfig(re){if(re===null)return null;switch(re.type){case"TemplateProcessing":return new mA(re);case"ByteLevel":return new MA(re);case"RobertaProcessing":return new Qe(re);case"BertProcessing":return new IA(re);case"Sequence":return new LA(re);default:throw new Error(`Unknown PostProcessor type: ${re.type}`)}}post_process(re,...xe){throw Error("post_process should be implemented in subclass.")}_call(re,...xe){return this.post_process(re,...xe)}}class IA extends hA{constructor(re){super(re),this.cls=re.cls[0],this.sep=re.sep[0]}post_process(re,xe=null,{add_special_tokens:Se=!0}={}){Se&&(re=(0,Q.mergeArrays)([this.cls],re,[this.sep]));let je=new Array(re.length).fill(0);if(xe!==null){const Ze=Se&&this instanceof Qe?[this.sep]:[],uA=Se?[this.sep]:[];re=(0,Q.mergeArrays)(re,Ze,xe,uA),je=(0,Q.mergeArrays)(je,new Array(xe.length+Ze.length+uA.length).fill(1))}return{tokens:re,token_type_ids:je}}}class Qe extends IA{}class mA extends hA{constructor(re){super(re),this.single=re.single,this.pair=re.pair}post_process(re,xe=null,{add_special_tokens:Se=!0}={}){const je=xe===null?this.single:this.pair;let Ze=[],uA=[];for(const PA of je)"SpecialToken"in PA?Se&&(Ze.push(PA.SpecialToken.id),uA.push(PA.SpecialToken.type_id)):"Sequence"in PA&&(PA.Sequence.id==="A"?(Ze=(0,Q.mergeArrays)(Ze,re),uA=(0,Q.mergeArrays)(uA,new Array(re.length).fill(PA.Sequence.type_id))):PA.Sequence.id==="B"&&(Ze=(0,Q.mergeArrays)(Ze,xe),uA=(0,Q.mergeArrays)(uA,new Array(xe.length).fill(PA.Sequence.type_id))));return{tokens:Ze,token_type_ids:uA}}}class MA extends hA{post_process(re,xe=null){return xe&&(re=(0,Q.mergeArrays)(re,xe)),{tokens:re}}}class LA extends hA{constructor(re){super(re),this.processors=re.processors.map(xe=>hA.fromConfig(xe))}post_process(re,xe=null,Se={}){let je;for(const Ze of this.processors)if(Ze instanceof MA)re=Ze.post_process(re).tokens,xe&&(xe=Ze.post_process(xe).tokens);else{const uA=Ze.post_process(re,xe,Se);re=uA.tokens,je=uA.token_type_ids}return{tokens:re,token_type_ids:je}}}class OA extends k.Callable{constructor(re){super(),this.config=re,this.added_tokens=[],this.end_of_word_suffix=null,this.trim_offsets=re.trim_offsets}static fromConfig(re){if(re===null)return null;switch(re.type){case"WordPiece":return new fe(re);case"Metaspace":return new TA(re);case"ByteLevel":return new Te(re);case"Replace":return new q(re);case"ByteFallback":return new HA(re);case"Fuse":return new ge(re);case"Strip":return new J(re);case"Sequence":return new dA(re);case"CTC":return new _e(re);case"BPEDecoder":return new bA(re);default:throw new Error(`Unknown Decoder type: ${re.type}`)}}_call(re){return this.decode(re)}decode(re){return this.decode_chain(re).join("")}decode_chain(re){throw Error("`decode_chain` should be implemented in subclass.")}}class q extends OA{decode_chain(re){const xe=V(this.config.pattern);return xe===null?re:re.map(Se=>Se.replaceAll(xe,this.config.content))}}class HA extends OA{constructor(re){super(re),this.text_decoder=new TextDecoder}decode_chain(re){const xe=[];let Se=[];for(const je of re){let Ze=null;if(je.length===6&&je.startsWith("<0x")&&je.endsWith(">")){const uA=parseInt(je.slice(3,5),16);isNaN(uA)||(Ze=uA)}if(Ze!==null)Se.push(Ze);else{if(Se.length>0){const uA=this.text_decoder.decode(Uint8Array.from(Se));xe.push(uA),Se=[]}xe.push(je)}}if(Se.length>0){const je=this.text_decoder.decode(Uint8Array.from(Se));xe.push(je),Se=[]}return xe}}class ge extends OA{decode_chain(re){return[re.join("")]}}class J extends OA{constructor(re){super(re),this.content=this.config.content,this.start=this.config.start,this.stop=this.config.stop}decode_chain(re){return re.map(xe=>{let Se=0;for(let Ze=0;Ze<this.start&&xe[Ze]===this.content;++Ze)Se=Ze+1;let je=xe.length;for(let Ze=0;Ze<this.stop;++Ze){const uA=xe.length-Ze-1;if(xe[uA]!==this.content)break;je=uA}return xe.slice(Se,je)})}}class fe extends OA{constructor(re){super(re),this.cleanup=re.cleanup}decode_chain(re){return re.map((xe,Se)=>(Se!==0&&(xe=xe.startsWith(this.config.prefix)?xe.replace(this.config.prefix,""):" "+xe),this.cleanup&&(xe=Be(xe)),xe))}}class Te extends OA{constructor(re){super(re),this.byte_decoder=F,this.text_decoder=new TextDecoder("utf-8",{fatal:!1,ignoreBOM:!0}),this.end_of_word_suffix=null}convert_tokens_to_string(re){const xe=re.join(""),Se=new Uint8Array([...xe].map(je=>this.byte_decoder[je]));return this.text_decoder.decode(Se)}decode_chain(re){const xe=[];let Se=[];for(const je of re)this.added_tokens.find(Ze=>Ze.content===je)!==void 0?(Se.length>0&&(xe.push(this.convert_tokens_to_string(Se)),Se=[]),xe.push(je)):Se.push(je);return Se.length>0&&xe.push(this.convert_tokens_to_string(Se)),xe}}class _e extends OA{constructor(re){super(re),this.pad_token=this.config.pad_token,this.word_delimiter_token=this.config.word_delimiter_token,this.cleanup=this.config.cleanup}convert_tokens_to_string(re){if(re.length===0)return"";const xe=[re[0]];for(let je=1;je<re.length;++je)re[je]!==xe.at(-1)&&xe.push(re[je]);let Se=xe.filter(je=>je!==this.pad_token).join("");return this.cleanup&&(Se=Be(Se).replaceAll(this.word_delimiter_token," ").trim()),Se}decode_chain(re){return[this.convert_tokens_to_string(re)]}}class dA extends OA{constructor(re){super(re),this.decoders=re.decoders.map(xe=>OA.fromConfig(xe))}decode_chain(re){return this.decoders.reduce((xe,Se)=>Se.decode_chain(xe),re)}}class bA extends OA{constructor(re){super(re),this.suffix=this.config.suffix}decode_chain(re){return re.map((xe,Se)=>xe.replaceAll(this.suffix,Se===re.length-1?"":" "))}}class NA extends OA{decode_chain(re){let xe="";for(let Se=1;Se<re.length;Se+=2)xe+=re[Se];return[xe]}}class XA extends sA{constructor(re){super(),this.addPrefixSpace=re.add_prefix_space,this.replacement=re.replacement,this.strRep=re.str_rep||this.replacement,this.prepend_scheme=re.prepend_scheme??"always"}pre_tokenize_text(re,{section_index:xe}={}){let Se=re.replaceAll(" ",this.strRep);return this.addPrefixSpace&&!Se.startsWith(this.replacement)&&(this.prepend_scheme==="always"||this.prepend_scheme==="first"&&xe===0)&&(Se=this.strRep+Se),[Se]}}class TA extends OA{constructor(re){super(re),this.addPrefixSpace=re.add_prefix_space,this.replacement=re.replacement}decode_chain(re){const xe=[];for(let Se=0;Se<re.length;++Se){let je=re[Se].replaceAll(this.replacement," ");this.addPrefixSpace&&Se==0&&je.startsWith(" ")&&(je=je.substring(1)),xe.push(je)}return xe}}class st extends Oe{constructor(re){super(re),this.charsmap=re.precompiled_charsmap}normalize(re){return(re=(re=re.replace(/[\u0001-\u0008\u000B\u000E-\u001F\u007F\u008F\u009F]/gm,"")).replace(/[\u0009\u000A\u000C\u000D\u00A0\u1680\u2000-\u200F\u2028\u2029\u202F\u205F\u2581\u3000\uFEFF\uFFFD]/gm," ")).includes("～")?re=re.split("～").map(Se=>Se.normalize("NFKC")).join("～"):re=re.normalize("NFKC"),re}}class tt extends sA{constructor(re){super(),this.tokenizers=re.pretokenizers.map(xe=>sA.fromConfig(xe))}pre_tokenize_text(re,xe){return this.tokenizers.reduce((Se,je)=>je.pre_tokenize(Se,xe),[re])}}class nt extends sA{constructor(re){super()}pre_tokenize_text(re,xe){return re.match(/\w+|[^\w\s]+/g)||[]}}class It extends sA{constructor(re){super()}pre_tokenize_text(re,xe){return function(Se){return Se.match(/\S+/g)||[]}(re)}}class Ar extends sA{constructor(re){super(),this.config=re,this.pattern=V(this.config.pattern),this.content=this.config.content}pre_tokenize_text(re,xe){return this.pattern===null?[re]:[re.replaceAll(this.pattern,this.config.content)]}}const Vr=["bos_token","eos_token","unk_token","sep_token","pad_token","cls_token","mask_token"];function $t(rA,re,xe,Se){for(const je of Object.keys(rA)){const Ze=re-rA[je].length,uA=xe(je),PA=new Array(Ze).fill(uA);rA[je]=Se==="right"?(0,Q.mergeArrays)(rA[je],PA):(0,Q.mergeArrays)(PA,rA[je])}}function Pr(rA,re){for(const xe of Object.keys(rA))rA[xe].length=re}class wt extends k.Callable{constructor(xe,Se){super();Ve(this,"return_token_type_ids",!1);Ve(this,"padding_side","right");this._tokenizer_config=Se,this.normalizer=Oe.fromConfig(xe.normalizer),this.pre_tokenizer=sA.fromConfig(xe.pre_tokenizer),this.model=l.fromConfig(xe.model,Se),this.post_processor=hA.fromConfig(xe.post_processor),this.decoder=OA.fromConfig(xe.decoder),this.special_tokens=[],this.all_special_ids=[],this.added_tokens=[];for(const je of xe.added_tokens){const Ze=new e(je);this.added_tokens.push(Ze),this.model.tokens_to_ids.set(Ze.content,Ze.id),this.model.vocab[Ze.id]=Ze.content,Ze.special&&(this.special_tokens.push(Ze.content),this.all_special_ids.push(Ze.id))}if(this.additional_special_tokens=Se.additional_special_tokens??[],this.special_tokens.push(...this.additional_special_tokens),this.special_tokens=[...new Set(this.special_tokens)],this.decoder&&(this.decoder.added_tokens=this.added_tokens,this.decoder.end_of_word_suffix=this.model.end_of_word_suffix),this.added_tokens_regex=this.added_tokens.length>0?new RegExp(this.added_tokens.slice().sort((je,Ze)=>Ze.content.length-je.content.length).map(je=>`${je.lstrip?"\\s*":""}(${(0,Q.escapeRegExp)(je.content)})${je.rstrip?"\\s*":""}`).join("|")):null,this.mask_token=this.getToken("mask_token"),this.mask_token_id=this.model.tokens_to_ids.get(this.mask_token),this.pad_token=this.getToken("pad_token","eos_token"),this.pad_token_id=this.model.tokens_to_ids.get(this.pad_token),this.sep_token=this.getToken("sep_token"),this.sep_token_id=this.model.tokens_to_ids.get(this.sep_token),this.unk_token=this.getToken("unk_token"),this.unk_token_id=this.model.tokens_to_ids.get(this.unk_token),this.bos_token=this.getToken("bos_token"),this.bos_token_id=this.model.tokens_to_ids.get(this.bos_token),this.eos_token=this.getToken("eos_token"),this.eos_token_id=this.model.tokens_to_ids.get(this.eos_token),this.model_max_length=Se.model_max_length,this.remove_space=Se.remove_space,this.clean_up_tokenization_spaces=Se.clean_up_tokenization_spaces??!0,this.do_lowercase_and_remove_accent=Se.do_lowercase_and_remove_accent??!1,Se.padding_side&&(this.padding_side=Se.padding_side),this.legacy=!1,this.chat_template=Se.chat_template??null,Array.isArray(this.chat_template)){const je=Object.create(null);for(const{name:Ze,template:uA}of this.chat_template){if(typeof Ze!="string"||typeof uA!="string")throw new Error('Chat template must be a list of objects with "name" and "template" properties');je[Ze]=uA}this.chat_template=je}this._compiled_template_cache=new Map}getToken(...xe){for(const Se of xe){const je=this._tokenizer_config[Se];if(je){if(typeof je=="object"){if(je.__type==="AddedToken")return je.content;throw Error(`Unknown token: ${je}`)}return je}}return null}static async from_pretrained(xe,{progress_callback:Se=null,config:je=null,cache_dir:Ze=null,local_files_only:uA=!1,revision:PA="main",legacy:Le=null}={}){return new this(...await K(xe,{progress_callback:Se,config:je,cache_dir:Ze,local_files_only:uA,revision:PA,legacy:Le}))}_call(xe,{text_pair:Se=null,add_special_tokens:je=!0,padding:Ze=!1,truncation:uA=null,max_length:PA=null,return_tensor:Le=!0,return_token_type_ids:YA=null}={}){const vA=Array.isArray(xe);let Bt;if(vA){if(xe.length===0)throw Error("text array must be non-empty");if(Se!==null){if(!Array.isArray(Se))throw Error("text_pair must also be an array");if(xe.length!==Se.length)throw Error("text and text_pair must have the same length");Bt=xe.map((jt,er)=>this._encode_plus(jt,{text_pair:Se[er],add_special_tokens:je,return_token_type_ids:YA}))}else Bt=xe.map(jt=>this._encode_plus(jt,{add_special_tokens:je,return_token_type_ids:YA}))}else{if(xe==null)throw Error("text may not be null or undefined");if(Array.isArray(Se))throw Error("When specifying `text_pair`, since `text` is a string, `text_pair` must also be a string (i.e., not an array).");Bt=[this._encode_plus(xe,{text_pair:Se,add_special_tokens:je,return_token_type_ids:YA})]}if(PA===null?PA=Ze==="max_length"?this.model_max_length:(0,S.max)(Bt.map(jt=>jt.input_ids.length))[0]:uA||console.warn("Truncation was not explicitly activated but `max_length` is provided a specific value, please use `truncation=true` to explicitly truncate examples to max length."),PA=Math.min(PA,this.model_max_length??1/0),Ze||uA)for(let jt=0;jt<Bt.length;++jt)Bt[jt].input_ids.length!==PA&&(Bt[jt].input_ids.length>PA?uA&&Pr(Bt[jt],PA):Ze&&$t(Bt[jt],PA,er=>er==="input_ids"?this.pad_token_id:0,this.padding_side));const fr={};if(Le){if((!Ze||!uA)&&Bt.some(er=>{var zt;for(const VA of Object.keys(er))if(er[VA].length!==((zt=Bt[0][VA])==null?void 0:zt.length))return!0;return!1}))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=true' and 'truncation=true' to have batched tensors with the same length.");const jt=[Bt.length,Bt[0].input_ids.length];for(const er of Object.keys(Bt[0]))fr[er]=new W.Tensor("int64",BigInt64Array.from(Bt.flatMap(zt=>zt[er]).map(BigInt)),jt)}else{for(const jt of Object.keys(Bt[0]))fr[jt]=Bt.map(er=>er[jt]);if(!vA)for(const jt of Object.keys(fr))fr[jt]=fr[jt][0]}return fr}_encode_text(xe){return xe===null?null:(this.added_tokens_regex?xe.split(this.added_tokens_regex).filter(Ze=>Ze):[xe]).map((Ze,uA)=>{if(this.added_tokens.find(Le=>Le.content===Ze)!==void 0)return Ze;{if(this.remove_space===!0&&(Ze=Ze.trim().split(/\s+/).join(" ")),this.do_lowercase_and_remove_accent&&(Ze=function(YA){return Ee(YA.toLowerCase())}(Ze)),this.normalizer!==null&&(Ze=this.normalizer(Ze)),Ze.length===0)return[];const Le=this.pre_tokenizer!==null?this.pre_tokenizer(Ze,{section_index:uA}):[Ze];return this.model(Le)}}).flat()}_encode_plus(xe,{text_pair:Se=null,add_special_tokens:je=!0,return_token_type_ids:Ze=null}={}){const{tokens:uA,token_type_ids:PA}=this._tokenize_helper(xe,{pair:Se,add_special_tokens:je}),Le=this.model.convert_tokens_to_ids(uA),YA={input_ids:Le,attention_mask:new Array(Le.length).fill(1)};return(Ze??this.return_token_type_ids)&&PA&&(YA.token_type_ids=PA),YA}_tokenize_helper(xe,{pair:Se=null,add_special_tokens:je=!1}={}){const Ze=this._encode_text(xe),uA=this._encode_text(Se);return this.post_processor?this.post_processor(Ze,uA,{add_special_tokens:je}):{tokens:(0,Q.mergeArrays)(Ze??[],uA??[])}}tokenize(xe,{pair:Se=null,add_special_tokens:je=!1}={}){return this._tokenize_helper(xe,{pair:Se,add_special_tokens:je}).tokens}encode(xe,{text_pair:Se=null,add_special_tokens:je=!0,return_token_type_ids:Ze=null}={}){return this._encode_plus(xe,{text_pair:Se,add_special_tokens:je,return_token_type_ids:Ze}).input_ids}batch_decode(xe,Se={}){return xe instanceof W.Tensor&&(xe=xe.tolist()),xe.map(je=>this.decode(je,Se))}decode(xe,Se={}){if(xe instanceof W.Tensor&&(xe=me(xe)),!Array.isArray(xe)||xe.length===0||!(0,Q.isIntegralNumber)(xe[0]))throw Error("token_ids must be a non-empty array of integers.");return this.decode_single(xe,Se)}decode_single(xe,{skip_special_tokens:Se=!1,clean_up_tokenization_spaces:je=null}){let Ze=this.model.convert_ids_to_tokens(xe);Se&&(Ze=Ze.filter(PA=>!this.special_tokens.includes(PA)));let uA=this.decoder?this.decoder(Ze):Ze.join(" ");return this.decoder&&this.decoder.end_of_word_suffix&&(uA=uA.replaceAll(this.decoder.end_of_word_suffix," "),Se&&(uA=uA.trim())),(je??this.clean_up_tokenization_spaces)&&(uA=Be(uA)),uA}get_chat_template({chat_template:xe=null,tools:Se=null}={}){if(this.chat_template&&typeof this.chat_template=="object"){const je=this.chat_template;if(xe!==null&&Object.hasOwn(je,xe))xe=je[xe];else if(xe===null)if(Se!==null&&"tool_use"in je)xe=je.tool_use;else{if(!("default"in je))throw Error(`This model has multiple chat templates with no default specified! Please either pass a chat template or the name of the template you wish to use to the 'chat_template' argument. Available template names are ${Object.keys(je).sort()}.`);xe=je.default}}else if(xe===null){if(!this.chat_template)throw Error("Cannot use apply_chat_template() because tokenizer.chat_template is not set and no template argument was passed! For information about writing templates and setting the tokenizer.chat_template attribute, please see the documentation at https://huggingface.co/docs/transformers/main/en/chat_templating");xe=this.chat_template}return xe}apply_chat_template(xe,{tools:Se=null,documents:je=null,chat_template:Ze=null,add_generation_prompt:uA=!1,tokenize:PA=!0,padding:Le=!1,truncation:YA=!1,max_length:vA=null,return_tensor:Bt=!0,return_dict:fr=!1,tokenizer_kwargs:jt={},...er}={}){if(typeof(Ze=this.get_chat_template({chat_template:Ze,tools:Se}))!="string")throw Error("chat_template must be a string, but got "+typeof Ze);let zt=this._compiled_template_cache.get(Ze);zt===void 0&&(zt=new R.Template(Ze),this._compiled_template_cache.set(Ze,zt));const VA=Object.create(null);for(const Zt of Vr){const Bn=this.getToken(Zt);Bn&&(VA[Zt]=Bn)}const _A=zt.render({messages:xe,add_generation_prompt:uA,tools:Se,documents:je,...VA,...er});if(PA){const Zt=this._call(_A,{add_special_tokens:!1,padding:Le,truncation:YA,max_length:vA,return_tensor:Bt,...jt});return fr?Zt:Zt.input_ids}return _A}}class qn extends wt{constructor(){super(...arguments);Ve(this,"return_token_type_ids",!0)}}class Yn extends wt{constructor(){super(...arguments);Ve(this,"return_token_type_ids",!0)}}class kn extends wt{constructor(){super(...arguments);Ve(this,"return_token_type_ids",!0)}}class qA extends wt{constructor(){super(...arguments);Ve(this,"return_token_type_ids",!0)}}class et extends wt{constructor(){super(...arguments);Ve(this,"return_token_type_ids",!0)}}class FA extends wt{constructor(){super(...arguments);Ve(this,"return_token_type_ids",!0)}}class Kt extends wt{constructor(){super(...arguments);Ve(this,"return_token_type_ids",!0)}}class Vn extends wt{constructor(){super(...arguments);Ve(this,"return_token_type_ids",!0)}}class zn extends wt{constructor(){super(...arguments);Ve(this,"return_token_type_ids",!0)}}class oa extends wt{}class Jn extends wt{}class _n extends wt{constructor(xe,Se){super(xe,Se);Ve(this,"return_token_type_ids",!0);console.warn('WARNING: `XLMTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}}class la extends wt{constructor(){super(...arguments);Ve(this,"return_token_type_ids",!0)}}class Yr extends wt{}class yt extends wt{}class Dn extends wt{}class zr extends wt{constructor(re,xe){super(re,xe),this.languageRegex=/^[a-z]{2}_[A-Z]{2}$/,this.language_codes=this.special_tokens.filter(Se=>this.languageRegex.test(Se)),this.lang_to_token=Se=>Se}_build_translation_inputs(re,xe,Se){return Ma(this,re,xe,Se)}}class jr extends zr{}class Ca extends wt{}class Xt extends wt{}const $n="▁";class ba extends wt{constructor(xe,Se){super(xe,Se);Ve(this,"padding_side","left");this.legacy=Se.legacy??!0,this.legacy||(this.normalizer=null,this.pre_tokenizer=new XA({replacement:$n,add_prefix_space:!0,prepend_scheme:"first"}))}_encode_text(xe){if(xe===null)return null;if(this.legacy||xe.length===0)return super._encode_text(xe);let Se=super._encode_text($n+xe.replaceAll($n," "));return Se.length>1&&Se[0]===$n&&this.special_tokens.includes(Se[1])&&(Se=Se.slice(1)),Se}}class ks extends wt{}class As extends wt{}class ts extends wt{}class xs extends wt{}class qr extends wt{}class ca extends wt{}class Ia extends wt{}class rs extends wt{}class ea extends wt{}function Ma(rA,re,xe,Se){if(!("language_codes"in rA)||!Array.isArray(rA.language_codes))throw new Error("Tokenizer must have `language_codes` attribute set and it should be an array of language ids.");if(!("languageRegex"in rA&&rA.languageRegex instanceof RegExp))throw new Error("Tokenizer must have `languageRegex` attribute set and it should be a regular expression.");if(!("lang_to_token"in rA)||typeof rA.lang_to_token!="function")throw new Error("Tokenizer must have `lang_to_token` attribute set and it should be a function.");const je=Se.src_lang,Ze=Se.tgt_lang;if(!rA.language_codes.includes(Ze))throw new Error(`Target language code "${Ze}" is not valid. Must be one of: {${rA.language_codes.join(", ")}}`);if(je!==void 0){if(!rA.language_codes.includes(je))throw new Error(`Source language code "${je}" is not valid. Must be one of: {${rA.language_codes.join(", ")}}`);for(const uA of rA.post_processor.config.single)if("SpecialToken"in uA&&rA.languageRegex.test(uA.SpecialToken.id)){uA.SpecialToken.id=rA.lang_to_token(je);break}}return Se.forced_bos_token_id=rA.model.convert_tokens_to_ids([rA.lang_to_token(Ze)])[0],rA._call(re,xe)}class Br extends wt{constructor(re,xe){super(re,xe),this.languageRegex=/^[a-z]{3}_[A-Z][a-z]{3}$/,this.language_codes=this.special_tokens.filter(Se=>this.languageRegex.test(Se)),this.lang_to_token=Se=>Se}_build_translation_inputs(re,xe,Se){return Ma(this,re,xe,Se)}}class Ya extends wt{constructor(re,xe){super(re,xe),this.languageRegex=/^__[a-z]{2,3}__$/,this.language_codes=this.special_tokens.filter(Se=>this.languageRegex.test(Se)).map(Se=>Se.slice(2,-2)),this.lang_to_token=Se=>`__${Se}__`}_build_translation_inputs(re,xe,Se){return Ma(this,re,xe,Se)}}class Ha extends wt{get timestamp_begin(){return this.model.convert_tokens_to_ids(["<|notimestamps|>"])[0]+1}_decode_asr(re,{return_timestamps:xe=!1,return_language:Se=!1,time_precision:je=null,force_full_sequences:Ze=!0}={}){if(je===null)throw Error("Must specify time_precision");let uA=null;const PA=xe==="word";function Le(){return{language:uA,timestamp:[null,null],text:""}}const YA=[];let vA=Le(),Bt=0;const fr=this.timestamp_begin,jt=fr+1500;let er=[],zt=[],VA=!1,_A=null;const Zt=new Set(this.all_special_ids);for(const ir of re){const it=ir.tokens,pr=PA?ir.token_timestamps:null;let pA=null,$A=fr;if("stride"in ir){const[Ur,Fr,wr]=ir.stride;if(Bt-=Fr,_A=Ur-wr,Fr&&($A=Fr/je+fr),wr)for(let Ut=it.length-1;Ut>=0;--Ut){const vr=Number(it[Ut]);if(vr>=fr){if(pA!==null&&(vr-fr)*je<_A)break;pA=vr}}}let mn=[],Hr=[];for(let Ur=0;Ur<it.length;++Ur){const Fr=Number(it[Ur]);if(Zt.has(Fr)){const wr=this.decode([Fr]),Ut=N.WHISPER_LANGUAGE_MAPPING.get(wr.slice(2,-2));if(Ut!==void 0){if(uA!==null&&Ut!==uA&&!xe){er.push(mn);const vr=this.findLongestCommonSequence(er)[0],as=this.decode(vr);vA.text=as,YA.push(vA),er=[],mn=[],vA=Le()}uA=vA.language=Ut}}else if(Fr>=fr&&Fr<=jt){const wr=(Fr-fr)*je+Bt,Ut=(0,S.round)(wr,2);if(pA!==null&&Fr>=pA)VA=!0;else if(VA||er.length>0&&Fr<$A)VA=!1;else if(vA.timestamp[0]===null)vA.timestamp[0]=Ut;else if(Ut!==vA.timestamp[0]){vA.timestamp[1]=Ut,er.push(mn),PA&&zt.push(Hr);const[vr,as]=this.findLongestCommonSequence(er,zt),Hn=this.decode(vr);vA.text=Hn,PA&&(vA.words=this.collateWordTimestamps(vr,as,uA)),YA.push(vA),er=[],mn=[],zt=[],Hr=[],vA=Le()}}else if(mn.push(Fr),PA){let wr,Ut=(0,S.round)(pr[Ur]+Bt,2);if(Ur+1<pr.length){wr=(0,S.round)(pr[Ur+1]+Bt,2);const vr=this.decode([Fr]);ve.test(vr)&&(wr=(0,S.round)(Math.min(Ut+je,wr),2))}else wr=null;Hr.push([Ut,wr])}}if("stride"in ir){const[Ur,Fr,wr]=ir.stride;Bt+=Ur-wr}mn.length>0?(er.push(mn),PA&&zt.push(Hr)):er.every(Ur=>Ur.length===0)&&(vA=Le(),er=[],mn=[],zt=[],Hr=[])}if(er.length>0){if(Ze&&xe)throw new Error("Whisper did not predict an ending timestamp, which can happen if audio is cut off in the middle of a word. Also make sure WhisperTimeStampLogitsProcessor was used during generation.");const[ir,it]=this.findLongestCommonSequence(er,zt),pr=this.decode(ir);vA.text=pr,PA&&(vA.words=this.collateWordTimestamps(ir,it,uA)),YA.push(vA)}let Bn=Object.create(null);const hn=YA.map(ir=>ir.text).join("");if(xe||Se){for(let ir=0;ir<YA.length;++ir){const it=YA[ir];xe||delete it.timestamp,Se||delete it.language}if(PA){const ir=[];for(const it of YA)for(const pr of it.words)ir.push(pr);Bn={chunks:ir}}else Bn={chunks:YA}}return[hn,Bn]}findLongestCommonSequence(re,xe=null){let Se=re[0],je=Se.length,Ze=[];const uA=Array.isArray(xe)&&xe.length>0;let PA=uA?[]:null,Le=uA?xe[0]:null;for(let YA=1;YA<re.length;++YA){const vA=re[YA];let Bt=0,fr=[je,je,0,0];const jt=vA.length;for(let hn=1;hn<je+jt;++hn){const ir=Math.max(0,je-hn),it=Math.min(je,je+jt-hn),pr=Se.slice(ir,it),pA=Math.max(0,hn-je),$A=Math.min(jt,hn),mn=vA.slice(pA,$A);if(pr.length!==mn.length)throw new Error("There is a bug within whisper `decode_asr` function, please report it. Dropping to prevent bad inference.");let Hr;Hr=uA?pr.filter((Fr,wr)=>Fr===mn[wr]&&Le[ir+wr]<=xe[YA][pA+wr]).length:pr.filter((Fr,wr)=>Fr===mn[wr]).length;const Ur=Hr/hn+hn/1e4;Hr>1&&Ur>Bt&&(Bt=Ur,fr=[ir,it,pA,$A])}const[er,zt,VA,_A]=fr,Zt=Math.floor((zt+er)/2),Bn=Math.floor((_A+VA)/2);Ze.push(...Se.slice(0,Zt)),Se=vA.slice(Bn),je=Se.length,uA&&(PA.push(...Le.slice(0,Zt)),Le=xe[YA].slice(Bn))}return Ze.push(...Se),uA?(PA.push(...Le),[Ze,PA]):[Ze,[]]}collateWordTimestamps(re,xe,Se){const[je,Ze,uA]=this.combineTokensIntoWords(re,Se),PA=[];for(let Le=0;Le<je.length;++Le){const YA=uA[Le];PA.push({text:je[Le],timestamp:[xe[YA.at(0)][0],xe[YA.at(-1)][1]]})}return PA}combineTokensIntoWords(re,xe,Se=`"'“¡¿([{-`,je=`"'.。,，!！?？:：”)]}、`){let Ze,uA,PA;return["chinese","japanese","thai","lao","myanmar"].includes(xe=xe??"english")?[Ze,uA,PA]=this.splitTokensOnUnicode(re):[Ze,uA,PA]=this.splitTokensOnSpaces(re),this.mergePunctuations(Ze,uA,PA,Se,je)}decode(re,xe){let Se;return xe!=null&&xe.decode_with_timestamps?(re instanceof W.Tensor&&(re=me(re)),Se=this.decodeWithTimestamps(re,xe)):Se=super.decode(re,xe),Se}decodeWithTimestamps(re,xe){const Se=(xe==null?void 0:xe.time_precision)??.02,je=Array.from(this.all_special_ids).at(-1)+1;let Ze=[[]];for(let uA of re)if(uA=Number(uA),uA>=je){const PA=((uA-je)*Se).toFixed(2);Ze.push(`<|${PA}|>`),Ze.push([])}else Ze[Ze.length-1].push(uA);return Ze=Ze.map(uA=>typeof uA=="string"?uA:super.decode(uA,xe)),Ze.join("")}splitTokensOnUnicode(re){const xe=this.decode(re,{decode_with_timestamps:!0}),Se=[],je=[],Ze=[];let uA=[],PA=[],Le=0;for(let YA=0;YA<re.length;++YA){const vA=re[YA];uA.push(vA),PA.push(YA);const Bt=this.decode(uA,{decode_with_timestamps:!0});Bt.includes("�")&&xe[Le+Bt.indexOf("�")]!=="�"||(Se.push(Bt),je.push(uA),Ze.push(PA),uA=[],PA=[],Le+=Bt.length)}return[Se,je,Ze]}splitTokensOnSpaces(re){const[xe,Se,je]=this.splitTokensOnUnicode(re),Ze=[],uA=[],PA=[],Le=new RegExp(`^[${ie}]$`,"gu");for(let YA=0;YA<xe.length;++YA){const vA=xe[YA],Bt=Se[YA],fr=je[YA],jt=Bt[0]>=this.model.tokens_to_ids.get("<|endoftext|>"),er=vA.startsWith(" "),zt=vA.trim(),VA=Le.test(zt);if(jt||er||VA||Ze.length===0)Ze.push(vA),uA.push(Bt),PA.push(fr);else{const _A=Ze.length-1;Ze[_A]+=vA,uA[_A].push(...Bt),PA[_A].push(...fr)}}return[Ze,uA,PA]}mergePunctuations(re,xe,Se,je,Ze){const uA=structuredClone(re),PA=structuredClone(xe),Le=structuredClone(Se);let YA=uA.length-2,vA=uA.length-1;for(;YA>=0;)uA[YA].startsWith(" ")&&je.includes(uA[YA].trim())?(uA[vA]=uA[YA]+uA[vA],PA[vA]=(0,Q.mergeArrays)(PA[YA],PA[vA]),Le[vA]=(0,Q.mergeArrays)(Le[YA],Le[vA]),uA[YA]="",PA[YA]=[],Le[YA]=[]):vA=YA,--YA;for(YA=0,vA=1;vA<uA.length;)!uA[YA].endsWith(" ")&&Ze.includes(uA[vA])?(uA[YA]+=uA[vA],PA[YA]=(0,Q.mergeArrays)(PA[YA],PA[vA]),Le[YA]=(0,Q.mergeArrays)(Le[YA],Le[vA]),uA[vA]="",PA[vA]=[],Le[vA]=[]):YA=vA,++vA;return[uA.filter(Bt=>Bt),PA.filter(Bt=>Bt.length>0),Le.filter(Bt=>Bt.length>0)]}}class Bs extends wt{}class Ra extends wt{}class Ga extends wt{}class Wa extends wt{constructor(re,xe){super(re,xe),this.languageRegex=/^(>>\w+<<)\s*/g,this.supported_language_codes=this.model.vocab.filter(Se=>this.languageRegex.test(Se)),console.warn('WARNING: `MarianTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}_encode_text(re){if(re===null)return null;const[xe,...Se]=re.trim().split(this.languageRegex);if(Se.length===0)return super._encode_text(xe);if(Se.length===2){const[je,Ze]=Se;return this.supported_language_codes.includes(je)||console.warn(`Unsupported language code "${je}" detected, which may lead to unexpected behavior. Should be one of: ${JSON.stringify(this.supported_language_codes)}`),(0,Q.mergeArrays)([je],super._encode_text(Ze))}}}class Da extends wt{}class xt extends wt{}class Ft extends wt{}class xn extends wt{}class ns extends wt{}class Qa extends wt{constructor(re,xe){super(re,xe),this.decoder=new NA({})}}class Va extends wt{}class ga extends wt{}class Ta{static async from_pretrained(re,{progress_callback:xe=null,config:Se=null,cache_dir:je=null,local_files_only:Ze=!1,revision:uA="main",legacy:PA=null}={}){var fr;const[Le,YA]=await K(re,{progress_callback:xe,config:Se,cache_dir:je,local_files_only:Ze,revision:uA,legacy:PA}),vA=((fr=YA.tokenizer_class)==null?void 0:fr.replace(/Fast$/,""))??"PreTrainedTokenizer";let Bt=this.TOKENIZER_CLASS_MAPPING[vA];return Bt||(console.warn(`Unknown tokenizer class "${vA}", attempting to construct from base class.`),Bt=wt),new Bt(Le,YA)}}Ve(Ta,"TOKENIZER_CLASS_MAPPING",{T5Tokenizer:Yr,DistilBertTokenizer:oa,CamembertTokenizer:Jn,DebertaTokenizer:et,DebertaV2Tokenizer:FA,BertTokenizer:qn,HerbertTokenizer:Kt,ConvBertTokenizer:Vn,RoFormerTokenizer:zn,XLMTokenizer:_n,ElectraTokenizer:la,MobileBertTokenizer:kn,SqueezeBertTokenizer:qA,AlbertTokenizer:Yn,GPT2Tokenizer:yt,BartTokenizer:Dn,MBartTokenizer:zr,MBart50Tokenizer:jr,RobertaTokenizer:Ca,WhisperTokenizer:Ha,CodeGenTokenizer:Bs,CLIPTokenizer:Ra,SiglipTokenizer:Ga,MarianTokenizer:Wa,BloomTokenizer:Xt,NllbTokenizer:Br,M2M100Tokenizer:Ya,LlamaTokenizer:ba,CodeLlamaTokenizer:ks,XLMRobertaTokenizer:As,MPNetTokenizer:ts,FalconTokenizer:xs,GPTNeoXTokenizer:qr,EsmTokenizer:ca,Wav2Vec2CTCTokenizer:Da,BlenderbotTokenizer:xt,BlenderbotSmallTokenizer:Ft,SpeechT5Tokenizer:xn,NougatTokenizer:ns,VitsTokenizer:Qa,Qwen2Tokenizer:Ia,GemmaTokenizer:rs,Grok1Tokenizer:ea,CohereTokenizer:Va,MgpstrTokenizer:ga,PreTrainedTokenizer:wt})},"./src/utils/audio.js":(x,C,d)=>{d.r(C),d.d(C,{RawAudio:()=>e,hamming:()=>V,hanning:()=>K,mel_filter_bank:()=>se,read_audio:()=>R,spectrogram:()=>ve,window_function:()=>g});var k=d("./src/utils/hub.js"),Q=d("./src/utils/maths.js"),H=d("./src/utils/core.js"),S=d("./src/env.js"),W=d("?7a2c"),Z=d("./src/utils/tensor.js");async function R(l,M){if(typeof AudioContext>"u")throw Error("Unable to load audio from path/URL since `AudioContext` is not available in your environment. Instead, audio data should be passed directly to the pipeline/processor. For more information and some example code, see https://huggingface.co/docs/transformers.js/guides/node-audio-processing.");const ue=await(await(0,k.getFile)(l)).arrayBuffer(),D=new AudioContext({sampleRate:M});M===void 0&&console.warn(`No sampling rate provided, using default of ${D.sampleRate}Hz.`);const F=await D.decodeAudioData(ue);let Ye;if(F.numberOfChannels===2){const Ne=Math.sqrt(2),Oe=F.getChannelData(0),AA=F.getChannelData(1);Ye=new Float32Array(Oe.length);for(let tA=0;tA<F.length;++tA)Ye[tA]=Ne*(Oe[tA]+AA[tA])/2}else Ye=F.getChannelData(0);return Ye}function N(l,M){if(l<1)return new Float64Array;if(l===1)return new Float64Array([1]);const ue=1-M,D=2*Math.PI/(l-1),F=new Float64Array(l);for(let Ye=0;Ye<l;++Ye)F[Ye]=M-ue*Math.cos(Ye*D);return F}function K(l){return N(l,.5)}function V(l){return N(l,.54)}const Ae={htk:l=>2595*Math.log10(1+l/700),kaldi:l=>1127*Math.log(1+l/700),slaney:(l,M=1e3,ue=15,D=27/Math.log(6.4))=>l>=M?ue+Math.log(l/M)*D:3*l/200};function me(l,M="htk"){const ue=Ae[M];if(!ue)throw new Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return typeof l=="number"?ue(l):l.map(D=>ue(D))}const Be={htk:l=>700*(10**(l/2595)-1),kaldi:l=>700*(Math.exp(l/1127)-1),slaney:(l,M=1e3,ue=15,D=Math.log(6.4)/27)=>l>=ue?M*Math.exp(D*(l-ue)):200*l/3};function Ee(l,M,ue){const D=(M-l)/(ue-1);return Float64Array.from({length:ue},(F,Ye)=>l+D*Ye)}function se(l,M,ue,D,F,Ye=null,Ne="htk",Oe=!1){if(Ye!==null&&Ye!=="slaney")throw new Error('norm must be one of null or "slaney"');const AA=Ee(me(ue,Ne),me(D,Ne),M+2);let tA,BA=function(Ge,ke="htk"){const ze=Be[ke];if(!ze)throw new Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return typeof Ge=="number"?ze(Ge):Ge.map(Ke=>ze(Ke))}(AA,Ne);if(Oe){const Ge=F/(2*l);tA=me(Float64Array.from({length:l},(ke,ze)=>ze*Ge),Ne),BA=AA}else tA=Ee(0,Math.floor(F/2),l);const DA=function(Ge,ke){const ze=Float64Array.from({length:ke.length-1},(sA,cA)=>ke[cA+1]-ke[cA]),Ke=Array.from({length:Ge.length},()=>new Array(ke.length));for(let sA=0;sA<Ge.length;++sA){const cA=Ke[sA];for(let yA=0;yA<ke.length;++yA)cA[yA]=ke[yA]-Ge[sA]}const Pe=ke.length-2,xA=Array.from({length:Pe},()=>new Array(Ge.length));for(let sA=0;sA<Ge.length;++sA){const cA=Ke[sA];for(let yA=0;yA<Pe;++yA){const gA=-cA[yA]/ze[yA],He=cA[yA+2]/ze[yA+1];xA[yA][sA]=Math.max(0,Math.min(gA,He))}}return xA}(tA,BA);if(Ye!==null&&Ye==="slaney")for(let Ge=0;Ge<M;++Ge){const ke=DA[Ge],ze=2/(BA[Ge+2]-BA[Ge]);for(let Ke=0;Ke<l;++Ke)ke[Ke]*=ze}return DA}function ie(l,M,ue,D,F){if(ue<=0)throw new Error("reference must be greater than zero");if(D<=0)throw new Error("min_value must be greater than zero");ue=Math.max(D,ue);const Ye=Math.log10(ue);for(let Ne=0;Ne<l.length;++Ne)l[Ne]=M*Math.log10(Math.max(D,l[Ne])-Ye);if(F!==null){if(F<=0)throw new Error("db_range must be greater than zero");const Ne=(0,Q.max)(l)[0]-F;for(let Oe=0;Oe<l.length;++Oe)l[Oe]=Math.max(l[Oe],Ne)}return l}async function ve(l,M,ue,D,{fft_length:F=null,power:Ye=1,center:Ne=!0,pad_mode:Oe="reflect",onesided:AA=!0,preemphasis:tA=null,mel_filters:BA=null,mel_floor:DA=1e-10,log_mel:Ge=null,reference:ke=1,min_value:ze=1e-10,db_range:Ke=null,remove_dc_offset:Pe=null,min_num_frames:xA=null,max_num_frames:sA=null,do_pad:cA=!0,transpose:yA=!1}={}){const gA=M.length;if(F===null&&(F=ue),ue>F)throw Error(`frame_length (${ue}) may not be larger than fft_length (${F})`);if(gA!==ue)throw new Error(`Length of the window (${gA}) must equal frame_length (${ue})`);if(D<=0)throw new Error("hop_length must be greater than zero");if(Ye===null&&BA!==null)throw new Error("You have provided `mel_filters` but `power` is `None`. Mel spectrogram computation is not yet supported for complex-valued spectrogram. Specify `power` to fix this issue.");if(Ne){if(Oe!=="reflect")throw new Error(`pad_mode="${Oe}" not implemented yet.`);const ge=Math.floor((F-1)/2)+1;l=function(J,fe,Te){const _e=new J.constructor(J.length+fe+Te),dA=J.length-1;for(let bA=0;bA<J.length;++bA)_e[fe+bA]=J[bA];for(let bA=1;bA<=fe;++bA)_e[fe-bA]=J[(0,H.calculateReflectOffset)(bA,dA)];for(let bA=1;bA<=Te;++bA)_e[dA+fe+bA]=J[(0,H.calculateReflectOffset)(dA-bA,dA)];return _e}(l,ge,ge)}let He=Math.floor(1+Math.floor((l.length-ue)/D));xA!==null&&He<xA&&(He=xA);const Je=AA?Math.floor(F/2)+1:F;let hA=He,IA=He;sA!==null&&(sA>He?cA&&(IA=sA):IA=hA=sA);const Qe=new Q.FFT(F),mA=new Float64Array(F),MA=new Float64Array(Qe.outputBufferSize),LA=new Float32Array(Je*IA);for(let ge=0;ge<hA;++ge){const J=ge*D,fe=Math.min(l.length-J,ue);fe!==ue&&mA.fill(0,0,ue);for(let Te=0;Te<fe;++Te)mA[Te]=l[J+Te];if(Pe){let Te=0;for(let dA=0;dA<fe;++dA)Te+=mA[dA];const _e=Te/fe;for(let dA=0;dA<fe;++dA)mA[dA]-=_e}if(tA!==null){for(let Te=fe-1;Te>=1;--Te)mA[Te]-=tA*mA[Te-1];mA[0]*=1-tA}for(let Te=0;Te<M.length;++Te)mA[Te]*=M[Te];Qe.realTransform(MA,mA);for(let Te=0;Te<Je;++Te){const _e=Te<<1;LA[Te*IA+ge]=MA[_e]**2+MA[_e+1]**2}}if(Ye!==null&&Ye!==2){const ge=2/Ye;for(let J=0;J<LA.length;++J)LA[J]**=ge}const OA=BA.length;let q=await(0,Z.matmul)(new Z.Tensor("float32",BA.flat(),[OA,Je]),new Z.Tensor("float32",LA,[Je,IA]));yA&&(q=q.transpose(1,0));const HA=q.data;for(let ge=0;ge<HA.length;++ge)HA[ge]=Math.max(DA,HA[ge]);if(Ye!==null&&Ge!==null){const ge=Math.min(HA.length,hA*OA);switch(Ge){case"log":for(let J=0;J<ge;++J)HA[J]=Math.log(HA[J]);break;case"log10":for(let J=0;J<ge;++J)HA[J]=Math.log10(HA[J]);break;case"dB":if(Ye===1)(function(J,fe=1,Te=1e-5,_e=null){ie(J,20,fe,Te,_e)})(HA,ke,ze,Ke);else{if(Ye!==2)throw new Error(`Cannot use log_mel option '${Ge}' with power ${Ye}`);(function(J,fe=1,Te=1e-10,_e=null){ie(J,10,fe,Te,_e)})(HA,ke,ze,Ke)}break;default:throw new Error(`log_mel must be one of null, 'log', 'log10' or 'dB'. Got '${Ge}'`)}}return q}function g(l,M,{periodic:ue=!0,frame_length:D=null,center:F=!0}={}){const Ye=ue?l+1:l;let Ne;switch(M){case"boxcar":Ne=new Float64Array(Ye).fill(1);break;case"hann":case"hann_window":Ne=K(Ye);break;case"hamming":Ne=V(Ye);break;case"povey":Ne=K(Ye).map(Oe=>Math.pow(Oe,.85));break;default:throw new Error(`Unknown window type ${M}.`)}if(ue&&(Ne=Ne.subarray(0,l)),D===null)return Ne;if(l>D)throw new Error(`Length of the window (${l}) may not be larger than frame_length (${D})`);return Ne}function b(l,M,ue){for(let D=0;D<ue.length;++D)l.setUint8(M+D,ue.charCodeAt(D))}class e{constructor(M,ue){this.audio=M,this.sampling_rate=ue}toWav(){return function(M,ue){let D=44;const F=new ArrayBuffer(D+4*M.length),Ye=new DataView(F);b(Ye,0,"RIFF"),Ye.setUint32(4,36+4*M.length,!0),b(Ye,8,"WAVE"),b(Ye,12,"fmt "),Ye.setUint32(16,16,!0),Ye.setUint16(20,3,!0),Ye.setUint16(22,1,!0),Ye.setUint32(24,ue,!0),Ye.setUint32(28,4*ue,!0),Ye.setUint16(32,4,!0),Ye.setUint16(34,32,!0),b(Ye,36,"data"),Ye.setUint32(40,4*M.length,!0);for(let Ne=0;Ne<M.length;++Ne,D+=4)Ye.setFloat32(D,M[Ne],!0);return F}(this.audio,this.sampling_rate)}toBlob(){const M=this.toWav();return new Blob([M],{type:"audio/wav"})}async save(M){let ue;if(S.apis.IS_BROWSER_ENV){if(S.apis.IS_WEBWORKER_ENV)throw new Error("Unable to save a file from a Web Worker.");ue=H.saveBlob}else{if(!S.apis.IS_FS_AVAILABLE)throw new Error("Unable to save because filesystem is disabled in this environment.");ue=async(D,F)=>{let Ye=await F.arrayBuffer();W.writeFileSync(D,Buffer.from(Ye))}}await ue(M,this.toBlob())}}},"./src/utils/constants.js":(x,C,d)=>{d.r(C),d.d(C,{CHAT_TEMPLATE_NAME:()=>Z,CONFIG_NAME:()=>Q,FEATURE_EXTRACTOR_NAME:()=>H,GENERATION_CONFIG_NAME:()=>R,GITHUB_ISSUE_URL:()=>k,IMAGE_PROCESSOR_NAME:()=>S,PROCESSOR_NAME:()=>W});const k="https://github.com/huggingface/transformers.js/issues/new/choose",Q="config.json",H="preprocessor_config.json",S=H,W="processor_config.json",Z="chat_template.json",R="generation_config.json"},"./src/utils/core.js":(x,C,d)=>{function k(ie,ve){ie&&ie(ve)}function Q(ie){return Object.fromEntries(Object.entries(ie).map(([ve,g])=>[g,ve]))}function H(ie){return ie.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}function S(ie){var ve,g,b;return((b=(g=(ve=ie==null?void 0:ie.prototype)==null?void 0:ve.__proto__)==null?void 0:g.constructor)==null?void 0:b.name)==="TypedArray"}function W(ie){return Number.isInteger(ie)||typeof ie=="bigint"}function Z(ie){return ie==null||ie===-1}function R(ie){const ve=[];let g=ie;for(;Array.isArray(g);)ve.push(g.length),g=g[0];return ve}function N(ie,ve,g=void 0){const b=ie[ve];if(b!==void 0)return delete ie[ve],b;if(g===void 0)throw Error(`Key ${ve} does not exist in object.`);return g}function K(...ie){return Array.prototype.concat.apply([],ie)}function V(...ie){return ie.reduce((ve,g)=>ve.flatMap(b=>g.map(e=>[b,e])))}function Ae(ie,ve){return Math.abs((ie+ve)%(2*ve)-ve)}function me(ie,ve){const g=URL.createObjectURL(ve),b=document.createElement("a");b.href=g,b.download=ie,b.click(),b.remove(),URL.revokeObjectURL(g)}function Be(ie,ve){return Object.assign({},...ve.map(g=>{if(ie[g]!==void 0)return{[g]:ie[g]}}))}function Ee(ie){let ve=0;for(const g of ie)++ve;return ve}function se(ie,ve){let g=0;for(const b of ie)b===ve&&++g;return g}d.r(C),d.d(C,{calculateDimensions:()=>R,calculateReflectOffset:()=>Ae,count:()=>se,dispatchCallback:()=>k,escapeRegExp:()=>H,isIntegralNumber:()=>W,isNullishDimension:()=>Z,isTypedArray:()=>S,len:()=>Ee,mergeArrays:()=>K,pick:()=>Be,pop:()=>N,product:()=>V,reverseDictionary:()=>Q,saveBlob:()=>me})},"./src/utils/data-structures.js":(x,C,d)=>{d.r(C),d.d(C,{CharTrie:()=>Q,PriorityQueue:()=>k,TokenLattice:()=>S});class k{constructor(R=(K,V)=>K>V,N=1/0){this._heap=[],this._comparator=R,this._maxSize=N}get size(){return this._heap.length}isEmpty(){return this.size===0}peek(){return this._heap[0]}push(...R){return this.extend(R)}extend(R){for(const N of R)if(this.size<this._maxSize)this._heap.push(N),this._siftUp();else{const K=this._smallest();this._comparator(N,this._heap[K])&&(this._heap[K]=N,this._siftUpFrom(K))}return this.size}pop(){const R=this.peek(),N=this.size-1;return N>0&&this._swap(0,N),this._heap.pop(),this._siftDown(),R}replace(R){const N=this.peek();return this._heap[0]=R,this._siftDown(),N}_parent(R){return(R+1>>>1)-1}_left(R){return 1+(R<<1)}_right(R){return R+1<<1}_greater(R,N){return this._comparator(this._heap[R],this._heap[N])}_swap(R,N){const K=this._heap[R];this._heap[R]=this._heap[N],this._heap[N]=K}_siftUp(){this._siftUpFrom(this.size-1)}_siftUpFrom(R){for(;R>0&&this._greater(R,this._parent(R));)this._swap(R,this._parent(R)),R=this._parent(R)}_siftDown(){let R=0;for(;this._left(R)<this.size&&this._greater(this._left(R),R)||this._right(R)<this.size&&this._greater(this._right(R),R);){const N=this._right(R)<this.size&&this._greater(this._right(R),this._left(R))?this._right(R):this._left(R);this._swap(R,N),R=N}}_smallest(){return 2**Math.floor(Math.log2(this.size))-1}}class Q{constructor(){this.root=H.default()}extend(R){for(const N of R)this.push(N)}push(R){let N=this.root;for(const K of R){let V=N.children.get(K);V===void 0&&(V=H.default(),N.children.set(K,V)),N=V}N.isLeaf=!0}*commonPrefixSearch(R){let N=this.root;if(N===void 0)return;let K="";for(const V of R){if(K+=V,N=N.children.get(V),N===void 0)return;N.isLeaf&&(yield K)}}}class H{constructor(R,N){this.isLeaf=R,this.children=N}static default(){return new H(!1,new Map)}}class S{constructor(R,N,K){this.chars=Array.from(R),this.len=this.chars.length,this.bosTokenId=N,this.eosTokenId=K,this.nodes=[],this.beginNodes=Array.from({length:this.len+1},()=>[]),this.endNodes=Array.from({length:this.len+1},()=>[]);const V=new W(this.bosTokenId,0,0,0,0),Ae=new W(this.eosTokenId,1,this.len,0,0);this.nodes.push(V.clone()),this.nodes.push(Ae.clone()),this.beginNodes[this.len].push(Ae),this.endNodes[0].push(V)}insert(R,N,K,V){const Ae=this.nodes.length,me=new W(V,Ae,R,N,K);this.beginNodes[R].push(me),this.endNodes[R+N].push(me),this.nodes.push(me)}viterbi(){const R=this.len;let N=0;for(;N<=R;){if(this.beginNodes[N].length==0)return[];for(let me of this.beginNodes[N]){me.prev=null;let Be=0,Ee=null;for(let se of this.endNodes[N]){const ie=se.backtraceScore+me.score;(Ee===null||ie>Be)&&(Ee=se.clone(),Be=ie)}if(Ee===null)return[];me.prev=Ee,me.backtraceScore=Be}++N}const K=[],V=this.beginNodes[R][0].prev;if(V===null)return[];let Ae=V.clone();for(;Ae.prev!==null;)K.push(Ae.clone()),Ae=Ae.clone().prev.clone();return K.reverse(),K}piece(R){return this.chars.slice(R.pos,R.pos+R.length).join("")}tokens(){return this.viterbi().map(R=>this.piece(R))}tokenIds(){return this.viterbi().map(R=>R.tokenId)}}class W{constructor(R,N,K,V,Ae){this.tokenId=R,this.nodeId=N,this.pos=K,this.length=V,this.score=Ae,this.prev=null,this.backtraceScore=0}clone(){const R=new W(this.tokenId,this.nodeId,this.pos,this.length,this.score);return R.prev=this.prev,R.backtraceScore=this.backtraceScore,R}}},"./src/utils/devices.js":(x,C,d)=>{d.r(C),d.d(C,{DEVICE_TYPES:()=>k});const k=Object.freeze({auto:"auto",gpu:"gpu",cpu:"cpu",wasm:"wasm",webgpu:"webgpu",cuda:"cuda",dml:"dml",webnn:"webnn","webnn-npu":"webnn-npu","webnn-gpu":"webnn-gpu","webnn-cpu":"webnn-cpu"})},"./src/utils/dtypes.js":(x,C,d)=>{d.r(C),d.d(C,{DATA_TYPES:()=>S,DEFAULT_DEVICE_DTYPE_MAPPING:()=>W,DEFAULT_DTYPE_SUFFIX_MAPPING:()=>Z,isWebGpuFp16Supported:()=>H});var k=d("./src/env.js"),Q=d("./src/utils/devices.js");const H=function(){let R;return async function(){if(R===void 0)if(k.apis.IS_WEBGPU_AVAILABLE)try{R=(await navigator.gpu.requestAdapter()).features.has("shader-f16")}catch{R=!1}else R=!1;return R}}(),S=Object.freeze({auto:"auto",fp32:"fp32",fp16:"fp16",q8:"q8",int8:"int8",uint8:"uint8",q4:"q4",bnb4:"bnb4",q4f16:"q4f16"}),W=Object.freeze({[Q.DEVICE_TYPES.wasm]:S.q8}),Z=Object.freeze({[S.fp32]:"",[S.fp16]:"_fp16",[S.int8]:"_int8",[S.uint8]:"_uint8",[S.q8]:"_quantized",[S.q4]:"_q4",[S.q4f16]:"_q4f16",[S.bnb4]:"_bnb4"})},"./src/utils/generic.js":(x,C,d)=>{d.r(C),d.d(C,{Callable:()=>k});const k=class{constructor(){let Q=function(...H){return Q._call(...H)};return Object.setPrototypeOf(Q,new.target.prototype)}_call(...Q){throw Error("Must implement _call method in subclass")}}},"./src/utils/hub.js":(x,C,d)=>{d.r(C),d.d(C,{getFile:()=>N,getModelFile:()=>Ae,getModelJSON:()=>me});var k=d("?7a2c"),Q=d("?a42a"),H=d("./src/env.js"),S=d("./src/utils/core.js");const W={txt:"text/plain",html:"text/html",css:"text/css",js:"text/javascript",json:"application/json",png:"image/png",jpg:"image/jpeg",jpeg:"image/jpeg",gif:"image/gif"};class Z{constructor(se){if(this.filePath=se,this.headers=new Headers,this.exists=k.existsSync(se),this.exists){this.status=200,this.statusText="OK";let ie=k.statSync(se);this.headers.set("content-length",ie.size.toString()),this.updateContentType();let ve=this;this.body=new ReadableStream({start(g){ve.arrayBuffer().then(b=>{g.enqueue(new Uint8Array(b)),g.close()})}})}else this.status=404,this.statusText="Not Found",this.body=null}updateContentType(){const se=this.filePath.toString().split(".").pop().toLowerCase();this.headers.set("content-type",W[se]??"application/octet-stream")}clone(){let se=new Z(this.filePath);return se.exists=this.exists,se.status=this.status,se.statusText=this.statusText,se.headers=new Headers(this.headers),se}async arrayBuffer(){return(await k.promises.readFile(this.filePath)).buffer}async blob(){const se=await k.promises.readFile(this.filePath);return new Blob([se],{type:this.headers.get("content-type")})}async text(){return await k.promises.readFile(this.filePath,"utf8")}async json(){return JSON.parse(await this.text())}}function R(Ee,se=null,ie=null){let ve;try{ve=new URL(Ee)}catch{return!1}return!(se&&!se.includes(ve.protocol))&&!(ie&&!ie.includes(ve.hostname))}async function N(Ee){var se,ie,ve,g;if(H.env.useFS&&!R(Ee,["http:","https:","blob:"]))return new Z(Ee);if(typeof process<"u"&&((se=process==null?void 0:process.release)==null?void 0:se.name)==="node"){const b=!!((ie=process.env)!=null&&ie.TESTING_REMOTELY),e=H.env.version,l=new Headers;if(l.set("User-Agent",`transformers.js/${e}; is_ci/${b};`),R(Ee,["http:","https:"],["huggingface.co","hf.co"])){const M=((ve=process.env)==null?void 0:ve.HF_TOKEN)??((g=process.env)==null?void 0:g.HF_ACCESS_TOKEN);M&&l.set("Authorization",`Bearer ${M}`)}return fetch(Ee,{headers:l})}return fetch(Ee)}const K={400:"Bad request error occurred while trying to load file",401:"Unauthorized access to file",403:"Forbidden access to file",404:"Could not locate file",408:"Request timeout error occurred while trying to load file",500:"Internal server error error occurred while trying to load file",502:"Bad gateway error occurred while trying to load file",503:"Service unavailable error occurred while trying to load file",504:"Gateway timeout error occurred while trying to load file"};class V{constructor(se){this.path=se}async match(se){let ie=Q.join(this.path,se),ve=new Z(ie);return ve.exists?ve:void 0}async put(se,ie){const ve=Buffer.from(await ie.arrayBuffer());let g=Q.join(this.path,se);try{await k.promises.mkdir(Q.dirname(g),{recursive:!0}),await k.promises.writeFile(g,ve)}catch(b){console.warn("An error occurred while writing the file to cache:",b)}}}async function Ae(Ee,se,ie=!0,ve={}){if(!H.env.allowLocalModels){if(ve.local_files_only)throw Error("Invalid configuration detected: local models are disabled (`env.allowLocalModels=false`) but you have requested to only use local models (`local_files_only=true`).");if(!H.env.allowRemoteModels)throw Error("Invalid configuration detected: both local and remote models are disabled. Fix by setting `env.allowLocalModels` or `env.allowRemoteModels` to `true`.")}let g;if((0,S.dispatchCallback)(ve.progress_callback,{status:"initiate",name:Ee,file:se}),!g&&H.env.useBrowserCache){if(typeof caches>"u")throw Error("Browser cache is not available in this environment.");try{g=await caches.open("transformers-cache")}catch(tA){console.warn("An error occurred while opening the browser cache:",tA)}}if(!g&&H.env.useFSCache&&(g=new V(ve.cache_dir??H.env.cacheDir)),!g&&H.env.useCustomCache){if(!H.env.customCache)throw Error("`env.useCustomCache=true`, but `env.customCache` is not defined.");if(!H.env.customCache.match||!H.env.customCache.put)throw new Error("`env.customCache` must be an object which implements the `match` and `put` functions of the Web Cache API. For more information, see https://developer.mozilla.org/en-US/docs/Web/API/Cache");g=H.env.customCache}const b=ve.revision??"main";let e,l,M=Be(Ee,se),ue=Be(H.env.localModelPath,M),D=Be(H.env.remoteHost,H.env.remotePathTemplate.replaceAll("{model}",Ee).replaceAll("{revision}",encodeURIComponent(b)),se),F=b==="main"?M:Be(Ee,b,se),Ye=g instanceof V?F:D,Ne=!1;g&&(l=await async function(tA,...BA){for(let DA of BA)try{let Ge=await tA.match(DA);if(Ge)return Ge}catch{continue}}(g,ue,Ye));const Oe=l!==void 0;if(l===void 0){if(H.env.allowLocalModels)if(R(M,["http:","https:"])){if(ve.local_files_only)throw new Error(`\`local_files_only=true\`, but attempted to load a remote file from: ${M}.`);if(!H.env.allowRemoteModels)throw new Error(`\`env.allowRemoteModels=false\`, but attempted to load a remote file from: ${M}.`)}else try{l=await N(ue),e=ue}catch(tA){console.warn(`Unable to load from local path "${ue}": "${tA}"`)}if(l===void 0||l.status===404){if(ve.local_files_only||!H.env.allowRemoteModels){if(ie)throw Error(`\`local_files_only=true\` or \`env.allowRemoteModels=false\` and file was not found locally at "${ue}".`);return null}if(l=await N(D),l.status!==200)return function(tA,BA,DA){if(!DA)return null;const Ge=K[tA]??`Error (${tA}) occurred while trying to load file`;throw Error(`${Ge}: "${BA}".`)}(l.status,D,ie);e=Ye}Ne=g&&typeof Response<"u"&&l instanceof Response&&l.status===200}let AA;return(0,S.dispatchCallback)(ve.progress_callback,{status:"download",name:Ee,file:se}),ve.progress_callback?Oe&&typeof navigator<"u"&&/firefox/i.test(navigator.userAgent)?(AA=new Uint8Array(await l.arrayBuffer()),(0,S.dispatchCallback)(ve.progress_callback,{status:"progress",name:Ee,file:se,progress:100,loaded:AA.length,total:AA.length})):AA=await async function(tA,BA){const DA=tA.headers.get("Content-Length");DA===null&&console.warn("Unable to determine content-length from response headers. Will expand buffer when needed.");let Ge=parseInt(DA??"0"),ke=new Uint8Array(Ge),ze=0;const Ke=tA.body.getReader();async function Pe(){const{done:xA,value:sA}=await Ke.read();if(xA)return;let cA=ze+sA.length;if(cA>Ge){Ge=cA;let yA=new Uint8Array(Ge);yA.set(ke),ke=yA}return ke.set(sA,ze),ze=cA,BA({progress:ze/Ge*100,loaded:ze,total:Ge}),Pe()}return await Pe(),ke}(l,tA=>{(0,S.dispatchCallback)(ve.progress_callback,{status:"progress",name:Ee,file:se,...tA})}):AA=new Uint8Array(await l.arrayBuffer()),Ne&&e&&await g.match(e)===void 0&&await g.put(e,new Response(AA,{headers:l.headers})).catch(tA=>{console.warn(`Unable to add response to browser cache: ${tA}.`)}),(0,S.dispatchCallback)(ve.progress_callback,{status:"done",name:Ee,file:se}),AA}async function me(Ee,se,ie=!0,ve={}){let g=await Ae(Ee,se,ie,ve);if(g===null)return{};let b=new TextDecoder("utf-8").decode(g);return JSON.parse(b)}function Be(...Ee){return(Ee=Ee.map((se,ie)=>(ie&&(se=se.replace(new RegExp("^/"),"")),ie!==Ee.length-1&&(se=se.replace(new RegExp("/$"),"")),se))).join("/")}},"./src/utils/image.js":(x,C,d)=>{d.r(C),d.d(C,{RawImage:()=>me,load_image:()=>Be});var k=d("./src/utils/core.js"),Q=d("./src/utils/hub.js"),H=d("./src/env.js"),S=d("./src/utils/tensor.js"),W=d("?2b25");let Z,R,N;const K=H.apis.IS_BROWSER_ENV||H.apis.IS_WEBWORKER_ENV;if(K)Z=(Ee,se)=>{if(!self.OffscreenCanvas)throw new Error("OffscreenCanvas not supported by this browser.");return new self.OffscreenCanvas(Ee,se)},N=self.createImageBitmap,R=self.ImageData;else{if(!W)throw new Error("Unable to load image processing library.");N=async Ee=>{const se=(await Ee.metadata()).channels,{data:ie,info:ve}=await Ee.rotate().raw().toBuffer({resolveWithObject:!0}),g=new me(new Uint8ClampedArray(ie),ve.width,ve.height,ve.channels);return se!==void 0&&se!==ve.channels&&g.convert(se),g}}const V={0:"nearest",1:"lanczos",2:"bilinear",3:"bicubic",4:"box",5:"hamming"},Ae=new Map([["png","image/png"],["jpg","image/jpeg"],["jpeg","image/jpeg"],["gif","image/gif"]]);class me{constructor(se,ie,ve,g){this.data=se,this.width=ie,this.height=ve,this.channels=g}get size(){return[this.width,this.height]}static async read(se){if(se instanceof me)return se;if(typeof se=="string"||se instanceof URL)return await this.fromURL(se);throw new Error("Unsupported input type: "+typeof se)}static fromCanvas(se){if(!K)throw new Error("fromCanvas() is only supported in browser environments.");const ie=se.getContext("2d").getImageData(0,0,se.width,se.height).data;return new me(ie,se.width,se.height,4)}static async fromURL(se){const ie=await(0,Q.getFile)(se);if(ie.status!==200)throw new Error(`Unable to read image from "${se}" (${ie.status} ${ie.statusText})`);const ve=await ie.blob();return this.fromBlob(ve)}static async fromBlob(se){if(K){const ie=await N(se),ve=Z(ie.width,ie.height).getContext("2d");return ve.drawImage(ie,0,0),new this(ve.getImageData(0,0,ie.width,ie.height).data,ie.width,ie.height,4)}{const ie=W(await se.arrayBuffer());return await N(ie)}}static fromTensor(se,ie="CHW"){if(se.dims.length!==3)throw new Error(`Tensor should have 3 dimensions, but has ${se.dims.length} dimensions.`);if(ie==="CHW")se=se.transpose(1,2,0);else if(ie!=="HWC")throw new Error(`Unsupported channel format: ${ie}`);if(!(se.data instanceof Uint8ClampedArray||se.data instanceof Uint8Array))throw new Error(`Unsupported tensor type: ${se.type}`);switch(se.dims[2]){case 1:case 2:case 3:case 4:return new me(se.data,se.dims[1],se.dims[0],se.dims[2]);default:throw new Error(`Unsupported number of channels: ${se.dims[2]}`)}}grayscale(){if(this.channels===1)return this;const se=new Uint8ClampedArray(this.width*this.height*1);switch(this.channels){case 3:case 4:for(let ie=0,ve=0;ie<this.data.length;ie+=this.channels){const g=this.data[ie],b=this.data[ie+1],e=this.data[ie+2];se[ve++]=Math.round(.2989*g+.587*b+.114*e)}break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(se,this.width,this.height,1)}rgb(){if(this.channels===3)return this;const se=new Uint8ClampedArray(this.width*this.height*3);switch(this.channels){case 1:for(let ie=0,ve=0;ie<this.data.length;++ie)se[ve++]=this.data[ie],se[ve++]=this.data[ie],se[ve++]=this.data[ie];break;case 4:for(let ie=0,ve=0;ie<this.data.length;ie+=4)se[ve++]=this.data[ie],se[ve++]=this.data[ie+1],se[ve++]=this.data[ie+2];break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(se,this.width,this.height,3)}rgba(){if(this.channels===4)return this;const se=new Uint8ClampedArray(this.width*this.height*4);switch(this.channels){case 1:for(let ie=0,ve=0;ie<this.data.length;++ie)se[ve++]=this.data[ie],se[ve++]=this.data[ie],se[ve++]=this.data[ie],se[ve++]=255;break;case 3:for(let ie=0,ve=0;ie<this.data.length;ie+=3)se[ve++]=this.data[ie],se[ve++]=this.data[ie+1],se[ve++]=this.data[ie+2],se[ve++]=255;break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(se,this.width,this.height,4)}putAlpha(se){if(se.width!==this.width||se.height!==this.height)throw new Error(`Expected mask size to be ${this.width}x${this.height}, but got ${se.width}x${se.height}`);if(se.channels!==1)throw new Error(`Expected mask to have 1 channel, but got ${se.channels}`);const ie=this.data,ve=se.data,g=this.width*this.height;if(this.channels===3){const b=new Uint8ClampedArray(4*g);for(let e=0,l=0,M=0;e<g;++e)b[M++]=ie[l++],b[M++]=ie[l++],b[M++]=ie[l++],b[M++]=ve[e];return this._update(b,this.width,this.height,4)}if(this.channels===4){for(let b=0;b<g;++b)ie[4*b+3]=ve[b];return this}throw new Error(`Expected image to have 3 or 4 channels, but got ${this.channels}`)}async resize(se,ie,{resample:ve=2}={}){if(this.width===se&&this.height===ie)return this;let g=V[ve]??ve;const b=(0,k.isNullishDimension)(se),e=(0,k.isNullishDimension)(ie);if(b&&e)return this;if(b?se=ie/this.height*this.width:e&&(ie=se/this.width*this.height),K){const l=this.channels,M=this.toCanvas(),ue=Z(se,ie).getContext("2d");return ue.drawImage(M,0,0,se,ie),new me(ue.getImageData(0,0,se,ie).data,se,ie,4).convert(l)}{let l=this.toSharp();switch(g){case"box":case"hamming":g!=="box"&&g!=="hamming"||(console.warn(`Resampling method ${g} is not yet supported. Using bilinear instead.`),g="bilinear");case"nearest":case"bilinear":case"bicubic":l=l.affine([se/this.width,0,0,ie/this.height],{interpolator:g});break;case"lanczos":l=l.resize({width:se,height:ie,fit:"fill",kernel:"lanczos3"});break;default:throw new Error(`Resampling method ${g} is not supported.`)}return await N(l)}}async pad([se,ie,ve,g]){if(se=Math.max(se,0),ie=Math.max(ie,0),ve=Math.max(ve,0),g=Math.max(g,0),se===0&&ie===0&&ve===0&&g===0)return this;if(K){const b=this.channels,e=this.toCanvas(),l=this.width+se+ie,M=this.height+ve+g,ue=Z(l,M).getContext("2d");return ue.drawImage(e,0,0,this.width,this.height,se,ve,this.width,this.height),new me(ue.getImageData(0,0,l,M).data,l,M,4).convert(b)}{const b=this.toSharp().extend({left:se,right:ie,top:ve,bottom:g});return await N(b)}}async crop([se,ie,ve,g]){if(se=Math.max(se,0),ie=Math.max(ie,0),ve=Math.min(ve,this.width-1),g=Math.min(g,this.height-1),se===0&&ie===0&&ve===this.width-1&&g===this.height-1)return this;const b=ve-se+1,e=g-ie+1;if(K){const l=this.channels,M=this.toCanvas(),ue=Z(b,e).getContext("2d");return ue.drawImage(M,se,ie,b,e,0,0,b,e),new me(ue.getImageData(0,0,b,e).data,b,e,4).convert(l)}{const l=this.toSharp().extract({left:se,top:ie,width:b,height:e});return await N(l)}}async center_crop(se,ie){if(this.width===se&&this.height===ie)return this;const ve=(this.width-se)/2,g=(this.height-ie)/2;if(K){const b=this.channels,e=this.toCanvas(),l=Z(se,ie).getContext("2d");let M=0,ue=0,D=0,F=0;return ve>=0?M=ve:D=-ve,g>=0?ue=g:F=-g,l.drawImage(e,M,ue,se,ie,D,F,se,ie),new me(l.getImageData(0,0,se,ie).data,se,ie,4).convert(b)}{let b=this.toSharp();if(ve>=0&&g>=0)b=b.extract({left:Math.floor(ve),top:Math.floor(g),width:se,height:ie});else if(ve<=0&&g<=0){const e=Math.floor(-g),l=Math.floor(-ve);b=b.extend({top:e,left:l,right:se-this.width-l,bottom:ie-this.height-e})}else{let e=[0,0],l=0;g<0?(e[0]=Math.floor(-g),e[1]=ie-this.height-e[0]):l=Math.floor(g);let M=[0,0],ue=0;ve<0?(M[0]=Math.floor(-ve),M[1]=se-this.width-M[0]):ue=Math.floor(ve),b=b.extend({top:e[0],bottom:e[1],left:M[0],right:M[1]}).extract({left:ue,top:l,width:se,height:ie})}return await N(b)}}async toBlob(se="image/png",ie=1){if(!K)throw new Error("toBlob() is only supported in browser environments.");return await this.toCanvas().convertToBlob({type:se,quality:ie})}toTensor(se="CHW"){let ie=new S.Tensor("uint8",new Uint8Array(this.data),[this.height,this.width,this.channels]);if(se!=="HWC"){if(se!=="CHW")throw new Error(`Unsupported channel format: ${se}`);ie=ie.permute(2,0,1)}return ie}toCanvas(){if(!K)throw new Error("toCanvas() is only supported in browser environments.");const se=this.clone().rgba(),ie=Z(se.width,se.height),ve=new R(se.data,se.width,se.height);return ie.getContext("2d").putImageData(ve,0,0),ie}split(){const{data:se,width:ie,height:ve,channels:g}=this,b=se.constructor,e=se.length/g,l=Array.from({length:g},()=>new b(e));for(let M=0;M<e;++M){const ue=g*M;for(let D=0;D<g;++D)l[D][M]=se[ue+D]}return l.map(M=>new me(M,ie,ve,1))}_update(se,ie,ve,g=null){return this.data=se,this.width=ie,this.height=ve,g!==null&&(this.channels=g),this}clone(){return new me(this.data.slice(),this.width,this.height,this.channels)}convert(se){if(this.channels===se)return this;switch(se){case 1:this.grayscale();break;case 3:this.rgb();break;case 4:this.rgba();break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this}async save(se){if(!K){if(H.apis.IS_FS_AVAILABLE)return await this.toSharp().toFile(se);throw new Error("Unable to save the image because filesystem is disabled in this environment.")}{if(H.apis.IS_WEBWORKER_ENV)throw new Error("Unable to save an image from a Web Worker.");const ie=se.split(".").pop().toLowerCase(),ve=Ae.get(ie)??"image/png",g=await this.toBlob(ve);(0,k.saveBlob)(se,g)}}toSharp(){if(K)throw new Error("toSharp() is only supported in server-side environments.");return W(this.data,{raw:{width:this.width,height:this.height,channels:this.channels}})}}const Be=me.read.bind(me)},"./src/utils/maths.js":(x,C,d)=>{function k(g,[b,e,l],[M,ue],D="bilinear",F=!1){const Ye=ue/l,Ne=M/e,Oe=new g.constructor(M*ue*b),AA=e*l,tA=M*ue;for(let BA=0;BA<M;++BA)for(let DA=0;DA<ue;++DA){const Ge=BA*ue+DA,ke=(DA+.5)/Ye-.5,ze=(BA+.5)/Ne-.5;let Ke=Math.floor(ke),Pe=Math.floor(ze);const xA=Math.min(Ke+1,l-1),sA=Math.min(Pe+1,e-1);Ke=Math.max(Ke,0),Pe=Math.max(Pe,0);const cA=ke-Ke,yA=ze-Pe,gA=(1-cA)*(1-yA),He=cA*(1-yA),Je=(1-cA)*yA,hA=cA*yA,IA=Pe*l,Qe=sA*l,mA=IA+Ke,MA=IA+xA,LA=Qe+Ke,OA=Qe+xA;for(let q=0;q<b;++q){const HA=q*AA;Oe[q*tA+Ge]=gA*g[HA+mA]+He*g[HA+MA]+Je*g[HA+LA]+hA*g[HA+OA]}}return Oe}function Q(g,b,e){const l=new Array(e.length),M=new Array(e.length);for(let F=e.length-1,Ye=1;F>=0;--F)M[F]=Ye,l[F]=b[e[F]],Ye*=l[F];const ue=e.map((F,Ye)=>M[e.indexOf(Ye)]),D=new g.constructor(g.length);for(let F=0;F<g.length;++F){let Ye=0;for(let Ne=b.length-1,Oe=F;Ne>=0;--Ne)Ye+=Oe%b[Ne]*ue[Ne],Oe=Math.floor(Oe/b[Ne]);D[Ye]=g[F]}return[D,l]}function H(g){const b=K(g)[0],e=g.map(ue=>Math.exp(ue-b)),l=e.reduce((ue,D)=>ue+D,0);return e.map(ue=>ue/l)}function S(g){const b=K(g)[0];let e=0;for(let ue=0;ue<g.length;++ue)e+=Math.exp(g[ue]-b);const l=Math.log(e);return g.map(ue=>ue-b-l)}function W(g,b){let e=0;for(let l=0;l<g.length;++l)e+=g[l]*b[l];return e}function Z(g,b){return W(g,b)/(R(g)*R(b))}function R(g){return Math.sqrt(g.reduce((b,e)=>b+e*e,0))}function N(g){if(g.length===0)throw Error("Array must not be empty");let b=g[0],e=0;for(let l=1;l<g.length;++l)g[l]<b&&(b=g[l],e=l);return[b,e]}function K(g){if(g.length===0)throw Error("Array must not be empty");let b=g[0],e=0;for(let l=1;l<g.length;++l)g[l]>b&&(b=g[l],e=l);return[b,e]}function V(g){return g>0&&!(g&g-1)}d.r(C),d.d(C,{FFT:()=>Be,bankers_round:()=>ie,cos_sim:()=>Z,dot:()=>W,dynamic_time_warping:()=>ve,interpolate_data:()=>k,log_softmax:()=>S,magnitude:()=>R,max:()=>K,medianFilter:()=>Ee,min:()=>N,permute_data:()=>Q,round:()=>se,softmax:()=>H});class Ae{constructor(b){if(this.size=0|b,this.size<=1||!V(this.size))throw new Error("FFT size must be a power of two larger than 1");this._csize=b<<1,this.table=new Float64Array(2*this.size);for(let l=0;l<this.table.length;l+=2){const M=Math.PI*l/this.size;this.table[l]=Math.cos(M),this.table[l+1]=-Math.sin(M)}let e=0;for(let l=1;this.size>l;l<<=1)++e;this._width=e%2==0?e-1:e,this._bitrev=new Int32Array(1<<this._width);for(let l=0;l<this._bitrev.length;++l){this._bitrev[l]=0;for(let M=0;M<this._width;M+=2){const ue=this._width-M-2;this._bitrev[l]|=(l>>>M&3)<<ue}}}createComplexArray(){return new Float64Array(this._csize)}fromComplexArray(b,e){const l=e||new Array(b.length>>>1);for(let M=0;M<b.length;M+=2)l[M>>>1]=b[M];return l}toComplexArray(b,e){const l=e||this.createComplexArray();for(let M=0;M<l.length;M+=2)l[M]=b[M>>>1],l[M+1]=0;return l}transform(b,e){if(b===e)throw new Error("Input and output buffers must be different");this._transform4(b,e,1)}realTransform(b,e){if(b===e)throw new Error("Input and output buffers must be different");this._realTransform4(b,e,1)}inverseTransform(b,e){if(b===e)throw new Error("Input and output buffers must be different");this._transform4(b,e,-1);for(let l=0;l<b.length;++l)b[l]/=this.size}_transform4(b,e,l){const M=this._csize;let ue,D,F=1<<this._width,Ye=M/F<<1;const Ne=this._bitrev;if(Ye===4)for(ue=0,D=0;ue<M;ue+=Ye,++D){const AA=Ne[D];this._singleTransform2(e,b,ue,AA,F)}else for(ue=0,D=0;ue<M;ue+=Ye,++D){const AA=Ne[D];this._singleTransform4(e,b,ue,AA,F,l)}const Oe=this.table;for(F>>=2;F>=2;F>>=2){Ye=M/F<<1;const AA=Ye>>>2;for(ue=0;ue<M;ue+=Ye){const tA=ue+AA-1;for(let BA=ue,DA=0;BA<tA;BA+=2,DA+=F){const Ge=BA,ke=Ge+AA,ze=ke+AA,Ke=ze+AA,Pe=b[Ge],xA=b[Ge+1],sA=b[ke],cA=b[ke+1],yA=b[ze],gA=b[ze+1],He=b[Ke],Je=b[Ke+1],hA=Oe[DA],IA=l*Oe[DA+1],Qe=sA*hA-cA*IA,mA=sA*IA+cA*hA,MA=Oe[2*DA],LA=l*Oe[2*DA+1],OA=yA*MA-gA*LA,q=yA*LA+gA*MA,HA=Oe[3*DA],ge=l*Oe[3*DA+1],J=He*HA-Je*ge,fe=He*ge+Je*HA,Te=Pe+OA,_e=xA+q,dA=Pe-OA,bA=xA-q,NA=Qe+J,XA=mA+fe,TA=l*(Qe-J),st=l*(mA-fe);b[Ge]=Te+NA,b[Ge+1]=_e+XA,b[ke]=dA+st,b[ke+1]=bA-TA,b[ze]=Te-NA,b[ze+1]=_e-XA,b[Ke]=dA-st,b[Ke+1]=bA+TA}}}}_singleTransform2(b,e,l,M,ue){const D=b[M],F=b[M+1],Ye=b[M+ue],Ne=b[M+ue+1];e[l]=D+Ye,e[l+1]=F+Ne,e[l+2]=D-Ye,e[l+3]=F-Ne}_singleTransform4(b,e,l,M,ue,D){const F=2*ue,Ye=3*ue,Ne=b[M],Oe=b[M+1],AA=b[M+ue],tA=b[M+ue+1],BA=b[M+F],DA=b[M+F+1],Ge=b[M+Ye],ke=b[M+Ye+1],ze=Ne+BA,Ke=Oe+DA,Pe=Ne-BA,xA=Oe-DA,sA=AA+Ge,cA=tA+ke,yA=D*(AA-Ge),gA=D*(tA-ke);e[l]=ze+sA,e[l+1]=Ke+cA,e[l+2]=Pe+gA,e[l+3]=xA-yA,e[l+4]=ze-sA,e[l+5]=Ke-cA,e[l+6]=Pe-gA,e[l+7]=xA+yA}_realTransform4(b,e,l){const M=this._csize;let ue,D,F=1<<this._width,Ye=M/F<<1;const Ne=this._bitrev;if(Ye===4)for(ue=0,D=0;ue<M;ue+=Ye,++D){const tA=Ne[D];this._singleRealTransform2(e,b,ue,tA>>>1,F>>>1)}else for(ue=0,D=0;ue<M;ue+=Ye,++D){const tA=Ne[D];this._singleRealTransform4(e,b,ue,tA>>>1,F>>>1,l)}const Oe=this.table;for(F>>=2;F>=2;F>>=2){Ye=M/F<<1;const tA=Ye>>>1,BA=tA>>>1,DA=BA>>>1;for(ue=0;ue<M;ue+=Ye)for(let Ge=0,ke=0;Ge<=DA;Ge+=2,ke+=F){const ze=ue+Ge,Ke=ze+BA,Pe=Ke+BA,xA=Pe+BA,sA=b[ze],cA=b[ze+1],yA=b[Ke],gA=b[Ke+1],He=b[Pe],Je=b[Pe+1],hA=b[xA],IA=b[xA+1],Qe=sA,mA=cA,MA=Oe[ke],LA=l*Oe[ke+1],OA=yA*MA-gA*LA,q=yA*LA+gA*MA,HA=Oe[2*ke],ge=l*Oe[2*ke+1],J=He*HA-Je*ge,fe=He*ge+Je*HA,Te=Oe[3*ke],_e=l*Oe[3*ke+1],dA=hA*Te-IA*_e,bA=hA*_e+IA*Te,NA=Qe+J,XA=mA+fe,TA=Qe-J,st=mA-fe,tt=OA+dA,nt=q+bA,It=l*(OA-dA),Ar=l*(q-bA);if(b[ze]=NA+tt,b[ze+1]=XA+nt,b[Ke]=TA+Ar,b[Ke+1]=st-It,Ge===0){b[Pe]=NA-tt,b[Pe+1]=XA-nt;continue}if(Ge===DA)continue;const Vr=ue+BA-Ge,$t=ue+tA-Ge;b[Vr]=TA-l*Ar,b[Vr+1]=-st-l*It,b[$t]=NA-l*tt,b[$t+1]=l*nt-XA}}const AA=M>>>1;for(let tA=2;tA<AA;tA+=2)b[M-tA]=b[tA],b[M-tA+1]=-b[tA+1]}_singleRealTransform2(b,e,l,M,ue){const D=b[M],F=b[M+ue];e[l]=D+F,e[l+1]=0,e[l+2]=D-F,e[l+3]=0}_singleRealTransform4(b,e,l,M,ue,D){const F=2*ue,Ye=3*ue,Ne=b[M],Oe=b[M+ue],AA=b[M+F],tA=b[M+Ye],BA=Ne+AA,DA=Ne-AA,Ge=Oe+tA,ke=D*(Oe-tA);e[l]=BA+Ge,e[l+1]=0,e[l+2]=DA,e[l+3]=-ke,e[l+4]=BA-Ge,e[l+5]=0,e[l+6]=DA,e[l+7]=ke}}class me{constructor(b){const e=2*(b-1),l=2*(2*b-1),M=2**Math.ceil(Math.log2(l));this.bufferSize=M,this._a=e;const ue=new Float64Array(l),D=new Float64Array(M);this._chirpBuffer=new Float64Array(M),this._buffer1=new Float64Array(M),this._buffer2=new Float64Array(M),this._outBuffer1=new Float64Array(M),this._outBuffer2=new Float64Array(M);const F=-2*Math.PI/b,Ye=Math.cos(F),Ne=Math.sin(F);for(let Oe=0;Oe<l>>1;++Oe){const AA=(Oe+1-b)**2/2,tA=Math.sqrt(Ye**2+Ne**2)**AA,BA=AA*Math.atan2(Ne,Ye),DA=2*Oe;ue[DA]=tA*Math.cos(BA),ue[DA+1]=tA*Math.sin(BA),D[DA]=ue[DA],D[DA+1]=-ue[DA+1]}this._slicedChirpBuffer=ue.subarray(e,l),this._f=new Ae(M>>1),this._f.transform(this._chirpBuffer,D)}_transform(b,e,l){const M=this._buffer1,ue=this._buffer2,D=this._outBuffer1,F=this._outBuffer2,Ye=this._chirpBuffer,Ne=this._slicedChirpBuffer,Oe=this._a;if(l)for(let AA=0;AA<Ne.length;AA+=2){const tA=AA+1,BA=e[AA>>1];M[AA]=BA*Ne[AA],M[tA]=BA*Ne[tA]}else for(let AA=0;AA<Ne.length;AA+=2){const tA=AA+1;M[AA]=e[AA]*Ne[AA]-e[tA]*Ne[tA],M[tA]=e[AA]*Ne[tA]+e[tA]*Ne[AA]}this._f.transform(D,M);for(let AA=0;AA<Ye.length;AA+=2){const tA=AA+1;ue[AA]=D[AA]*Ye[AA]-D[tA]*Ye[tA],ue[tA]=D[AA]*Ye[tA]+D[tA]*Ye[AA]}this._f.inverseTransform(F,ue);for(let AA=0;AA<F.length;AA+=2){const tA=F[AA+Oe],BA=F[AA+Oe+1],DA=Ne[AA],Ge=Ne[AA+1];b[AA]=tA*DA-BA*Ge,b[AA+1]=tA*Ge+BA*DA}}transform(b,e){this._transform(b,e,!1)}realTransform(b,e){this._transform(b,e,!0)}}class Be{constructor(b){this.fft_length=b,this.isPowerOfTwo=V(b),this.isPowerOfTwo?(this.fft=new Ae(b),this.outputBufferSize=2*b):(this.fft=new me(b),this.outputBufferSize=this.fft.bufferSize)}realTransform(b,e){this.fft.realTransform(b,e)}transform(b,e){this.fft.transform(b,e)}}function Ee(g,b){if(b%2==0||b<=0)throw new Error("Window size must be a positive odd number");const e=new g.constructor(g.length),l=new g.constructor(b),M=Math.floor(b/2);for(let ue=0;ue<g.length;++ue){let D=0;for(let F=-M;F<=M;++F){let Ye=ue+F;Ye<0?Ye=Math.abs(Ye):Ye>=g.length&&(Ye=2*(g.length-1)-Ye),l[D++]=g[Ye]}l.sort(),e[ue]=l[M]}return e}function se(g,b){const e=Math.pow(10,b);return Math.round(g*e)/e}function ie(g){const b=Math.round(g);return Math.abs(g)%1==.5?b%2==0?b:b-1:b}function ve(g){const b=g.length,e=g[0].length,l=[b+1,e+1],M=Array.from({length:l[0]},()=>Array(l[1]).fill(1/0));M[0][0]=0;const ue=Array.from({length:l[0]},()=>Array(l[1]).fill(-1));for(let Oe=1;Oe<l[1];++Oe)for(let AA=1;AA<l[0];++AA){const tA=M[AA-1][Oe-1],BA=M[AA-1][Oe],DA=M[AA][Oe-1];let Ge,ke;tA<BA&&tA<DA?(Ge=tA,ke=0):BA<tA&&BA<DA?(Ge=BA,ke=1):(Ge=DA,ke=2),M[AA][Oe]=g[AA-1][Oe-1]+Ge,ue[AA][Oe]=ke}for(let Oe=0;Oe<l[1];++Oe)ue[0][Oe]=2;for(let Oe=0;Oe<l[0];++Oe)ue[Oe][0]=1;let D=b,F=e,Ye=[],Ne=[];for(;D>0||F>0;)switch(Ye.push(D-1),Ne.push(F-1),ue[D][F]){case 0:--D,--F;break;case 1:--D;break;case 2:--F;break;default:throw new Error(`Internal error in dynamic time warping. Unexpected trace[${D}, ${F}]. Please file a bug report.`)}return Ye.reverse(),Ne.reverse(),[Ye,Ne]}},"./src/utils/tensor.js":(x,C,d)=>{d.r(C),d.d(C,{Tensor:()=>W,cat:()=>b,full:()=>F,full_like:()=>Ye,interpolate:()=>R,interpolate_4d:()=>N,layer_norm:()=>se,matmul:()=>K,mean:()=>ue,mean_pooling:()=>Ee,ones:()=>Ne,ones_like:()=>Oe,permute:()=>Z,quantize_embeddings:()=>DA,rand:()=>BA,rfft:()=>V,slice:()=>Be,stack:()=>e,std_mean:()=>M,topk:()=>Ae,zeros:()=>AA,zeros_like:()=>tA});var k=d("./src/utils/maths.js"),Q=d("./src/backends/onnx.js"),H=d("./src/ops/registry.js");const S=Object.freeze({float32:Float32Array,float16:Uint16Array,float64:Float64Array,string:Array,int8:Int8Array,uint8:Uint8Array,int16:Int16Array,uint16:Uint16Array,int32:Int32Array,uint32:Uint32Array,int64:BigInt64Array,uint64:BigUint64Array,bool:Uint8Array,uint4:Uint8Array,int4:Int8Array});class W{constructor(...ke){Ve(this,"ort_tensor");return(0,Q.isONNXTensor)(ke[0])?this.ort_tensor=ke[0]:this.ort_tensor=new Q.Tensor(ke[0],ke[1],ke[2]),new Proxy(this,{get:(ze,Ke)=>{if(typeof Ke=="string"){let Pe=Number(Ke);if(Number.isInteger(Pe))return ze._getitem(Pe)}return ze[Ke]},set:(ze,Ke,Pe)=>ze[Ke]=Pe})}get dims(){return this.ort_tensor.dims}set dims(ke){this.ort_tensor.dims=ke}get type(){return this.ort_tensor.type}get data(){return this.ort_tensor.data}get size(){return this.ort_tensor.size}get location(){return this.ort_tensor.location}dispose(){this.ort_tensor.dispose()}*[Symbol.iterator](){const[ke,...ze]=this.dims;if(ze.length>0){const Ke=ze.reduce((Pe,xA)=>Pe*xA);for(let Pe=0;Pe<ke;++Pe)yield this._subarray(Pe,Ke,ze)}else yield*this.data}_getitem(ke){const[ze,...Ke]=this.dims;if(ke=g(ke,ze),Ke.length>0){const Pe=Ke.reduce((xA,sA)=>xA*sA);return this._subarray(ke,Pe,Ke)}return new W(this.type,[this.data[ke]],Ke)}indexOf(ke){const ze=this.data;for(let Ke=0;Ke<ze.length;++Ke)if(ze[Ke]==ke)return Ke;return-1}_subarray(ke,ze,Ke){const Pe=ke*ze,xA=(ke+1)*ze,sA="subarray"in this.data?this.data.subarray(Pe,xA):this.data.slice(Pe,xA);return new W(this.type,sA,Ke)}item(){const ke=this.data;if(ke.length!==1)throw new Error(`a Tensor with ${ke.length} elements cannot be converted to Scalar`);return ke[0]}tolist(){return function(ke,ze){const Ke=ke.length,Pe=ze.reduce((sA,cA)=>sA*cA);if(Ke!==Pe)throw Error(`cannot reshape array of size ${Ke} into shape (${ze})`);let xA=ke;for(let sA=ze.length-1;sA>=0;sA--)xA=xA.reduce((cA,yA)=>{let gA=cA[cA.length-1];return gA.length<ze[sA]?gA.push(yA):cA.push([yA]),cA},[[]]);return xA[0]}(this.data,this.dims)}sigmoid(){return this.clone().sigmoid_()}sigmoid_(){const ke=this.data;for(let ze=0;ze<ke.length;++ze)ke[ze]=1/(1+Math.exp(-ke[ze]));return this}map(ke){return this.clone().map_(ke)}map_(ke){const ze=this.data;for(let Ke=0;Ke<ze.length;++Ke)ze[Ke]=ke(ze[Ke],Ke,ze);return this}mul(ke){return this.clone().mul_(ke)}mul_(ke){const ze=this.data;for(let Ke=0;Ke<ze.length;++Ke)ze[Ke]*=ke;return this}div(ke){return this.clone().div_(ke)}div_(ke){const ze=this.data;for(let Ke=0;Ke<ze.length;++Ke)ze[Ke]/=ke;return this}add(ke){return this.clone().add_(ke)}add_(ke){const ze=this.data;for(let Ke=0;Ke<ze.length;++Ke)ze[Ke]+=ke;return this}sub(ke){return this.clone().sub_(ke)}sub_(ke){const ze=this.data;for(let Ke=0;Ke<ze.length;++Ke)ze[Ke]-=ke;return this}clone(){return new W(this.type,this.data.slice(),this.dims.slice())}slice(...ke){const ze=[],Ke=[];for(let gA=0;gA<this.dims.length;++gA){let He=ke[gA];if(He==null)Ke.push([0,this.dims[gA]]),ze.push(this.dims[gA]);else if(typeof He=="number")He=g(He,this.dims[gA],gA),Ke.push([He,He+1]);else{if(!Array.isArray(He)||He.length!==2)throw new Error(`Invalid slice: ${He}`);{let[Je,hA]=He;if(Je=Je===null?0:g(Je,this.dims[gA],gA,!1),hA=hA===null?this.dims[gA]:g(hA,this.dims[gA],gA,!1),Je>hA)throw new Error(`Invalid slice: ${He}`);const IA=[Math.max(Je,0),Math.min(hA,this.dims[gA])];Ke.push(IA),ze.push(IA[1]-IA[0])}}}const Pe=Ke.map(([gA,He])=>He-gA),xA=Pe.reduce((gA,He)=>gA*He),sA=this.data,cA=new sA.constructor(xA),yA=this.stride();for(let gA=0;gA<xA;++gA){let He=0;for(let Je=Pe.length-1,hA=gA;Je>=0;--Je){const IA=Pe[Je];He+=(hA%IA+Ke[Je][0])*yA[Je],hA=Math.floor(hA/IA)}cA[gA]=sA[He]}return new W(this.type,cA,ze)}permute(...ke){return Z(this,ke)}transpose(...ke){return this.permute(...ke)}sum(ke=null,ze=!1){return this.norm(1,ke,ze)}norm(ke="fro",ze=null,Ke=!1){if(ke==="fro")ke=2;else if(typeof ke=="string")throw Error(`Unsupported norm: ${ke}`);const Pe=this.data,xA=(gA,He)=>gA+He**ke;if(ze===null){const gA=Pe.reduce(xA,0)**(1/ke);return new W(this.type,[gA],[])}const[sA,cA,yA]=l(xA,this,ze,Ke);if(ke!==1)for(let gA=0;gA<cA.length;++gA)cA[gA]=cA[gA]**(1/ke);return new W(sA,cA,yA)}normalize_(ke=2,ze=1){ze=g(ze,this.dims.length);const Ke=this.norm(ke,ze,!0),Pe=this.data,xA=Ke.data;for(let sA=0;sA<Pe.length;++sA){let cA=0;for(let yA=this.dims.length-1,gA=sA,He=1;yA>=0;--yA){const Je=this.dims[yA];yA!==ze&&(cA+=gA%Je*He,He*=this.dims[yA]),gA=Math.floor(gA/Je)}Pe[sA]/=xA[cA]}return this}normalize(ke=2,ze=1){return this.clone().normalize_(ke,ze)}stride(){return function(ke){const ze=new Array(ke.length);for(let Ke=ke.length-1,Pe=1;Ke>=0;--Ke)ze[Ke]=Pe,Pe*=ke[Ke];return ze}(this.dims)}squeeze(ke=null){return new W(this.type,this.data,ie(this.dims,ke))}squeeze_(ke=null){return this.dims=ie(this.dims,ke),this}unsqueeze(ke=null){return new W(this.type,this.data,ve(this.dims,ke))}unsqueeze_(ke=null){return this.dims=ve(this.dims,ke),this}flatten_(ke=0,ze=-1){ze=(ze+this.dims.length)%this.dims.length;let Ke=this.dims.slice(0,ke),Pe=this.dims.slice(ke,ze+1),xA=this.dims.slice(ze+1);return this.dims=[...Ke,Pe.reduce((sA,cA)=>sA*cA,1),...xA],this}flatten(ke=0,ze=-1){return this.clone().flatten_(ke,ze)}view(...ke){let ze=-1;for(let Pe=0;Pe<ke.length;++Pe)if(ke[Pe]===-1){if(ze!==-1)throw new Error("Only one dimension can be inferred");ze=Pe}const Ke=this.data;if(ze!==-1){const Pe=ke.reduce((xA,sA,cA)=>cA!==ze?xA*sA:xA,1);ke[ze]=Ke.length/Pe}return new W(this.type,Ke,ke)}neg_(){const ke=this.data;for(let ze=0;ze<ke.length;++ze)ke[ze]=-ke[ze];return this}neg(){return this.clone().neg_()}gt(ke){const ze=new Uint8Array(this.data.length),Ke=this.data;for(let Pe=0;Pe<Ke.length;++Pe)ze[Pe]=Ke[Pe]>ke?1:0;return new W("bool",ze,this.dims)}lt(ke){const ze=new Uint8Array(this.data.length),Ke=this.data;for(let Pe=0;Pe<Ke.length;++Pe)ze[Pe]=Ke[Pe]<ke?1:0;return new W("bool",ze,this.dims)}clamp_(ke,ze){const Ke=this.data;for(let Pe=0;Pe<Ke.length;++Pe)Ke[Pe]=Math.min(Math.max(Ke[Pe],ke),ze);return this}clamp(ke,ze){return this.clone().clamp_(ke,ze)}round_(){const ke=this.data;for(let ze=0;ze<ke.length;++ze)ke[ze]=Math.round(ke[ze]);return this}round(){return this.clone().round_()}mean(ke=null,ze=!1){return ue(this,ke,ze)}min(ke=null,ze=!1){if(ke===null){const sA=(0,k.min)(this.data)[0];return new W(this.type,[sA],[])}const[Ke,Pe,xA]=l((sA,cA)=>Math.min(sA,cA),this,ke,ze,1/0);return new W(Ke,Pe,xA)}max(ke=null,ze=!1){if(ke===null){const sA=(0,k.max)(this.data)[0];return new W(this.type,[sA],[])}const[Ke,Pe,xA]=l((sA,cA)=>Math.max(sA,cA),this,ke,ze,-1/0);return new W(Ke,Pe,xA)}argmin(ke=null,ze=!1){if(ke!==null)throw new Error("`dim !== null` not yet implemented.");const Ke=(0,k.min)(this.data)[1];return new W("int64",[BigInt(Ke)],[])}argmax(ke=null,ze=!1){if(ke!==null)throw new Error("`dim !== null` not yet implemented.");const Ke=(0,k.max)(this.data)[1];return new W("int64",[BigInt(Ke)],[])}to(ke){if(this.type===ke)return this;if(!S.hasOwnProperty(ke))throw new Error(`Unsupported type: ${ke}`);let ze;const Ke=["int64","uint64"].includes(this.type),Pe=["int64","uint64"].includes(ke);return Ke&&!Pe?ze=Number:!Ke&&Pe&&(ze=BigInt),new W(ke,S[ke].from(this.data,ze),this.dims)}}function Z(Ge,ke){const[ze,Ke]=(0,k.permute_data)(Ge.data,Ge.dims,ke);return new W(Ge.type,ze,Ke)}function R(Ge,[ke,ze],Ke="bilinear",Pe=!1){const xA=Ge.dims.at(-3)??1,sA=Ge.dims.at(-2),cA=Ge.dims.at(-1);let yA=(0,k.interpolate_data)(Ge.data,[xA,sA,cA],[ke,ze],Ke,Pe);return new W(Ge.type,yA,[xA,ke,ze])}async function N(Ge,{size:ke=null,mode:ze="bilinear"}={}){if(Ge.dims.length!==4)throw new Error("`interpolate_4d` currently only supports 4D input.");if(!ke)throw new Error("`interpolate_4d` requires a `size` argument.");let Ke,Pe;if(ke.length===2)Ke=[...Ge.dims.slice(0,2),...ke];else if(ke.length===3)Ke=[Ge.dims[0],...ke];else{if(ke.length!==4)throw new Error("`size` must be of length 2, 3, or 4.");Ke=ke}if(ze==="nearest")Pe=await H.TensorOpRegistry.nearest_interpolate_4d;else if(ze==="bilinear")Pe=await H.TensorOpRegistry.bilinear_interpolate_4d;else{if(ze!=="bicubic")throw new Error(`Unsupported mode: ${ze}`);Pe=await H.TensorOpRegistry.bicubic_interpolate_4d}const xA=new W("int64",new BigInt64Array(Ke.map(BigInt)),[Ke.length]);return await Pe({x:Ge,s:xA})}async function K(Ge,ke){return await(await H.TensorOpRegistry.matmul)({a:Ge,b:ke})}async function V(Ge,ke){return await(await H.TensorOpRegistry.rfft)({x:Ge,a:ke})}async function Ae(Ge,ke){const ze=await H.TensorOpRegistry.top_k;return ke=ke==null?Ge.dims.at(-1):Math.min(ke,Ge.dims.at(-1)),await ze({x:Ge,k:new W("int64",[BigInt(ke)],[1])})}const me=Ge=>new W("int64",Ge,[Ge.length]);async function Be(Ge,ke,ze,Ke,Pe){return await(await H.TensorOpRegistry.slice)({x:Ge,s:me(ke),e:me(ze),a:me(Ke),t:me(Pe??new Array(Ke.length).fill(1))})}function Ee(Ge,ke){const ze=Ge.data,Ke=ke.data,Pe=[Ge.dims[0],Ge.dims[2]],xA=new ze.constructor(Pe[0]*Pe[1]),[sA,cA,yA]=Ge.dims;let gA=0;for(let He=0;He<sA;++He){const Je=He*yA*cA;for(let hA=0;hA<yA;++hA){let IA=0,Qe=0;const mA=He*cA,MA=Je+hA;for(let OA=0;OA<cA;++OA){const q=Number(Ke[mA+OA]);Qe+=q,IA+=ze[MA+OA*yA]*q}const LA=IA/Qe;xA[gA++]=LA}}return new W(Ge.type,xA,Pe)}function se(Ge,ke,{eps:ze=1e-5}={}){if(Ge.dims.length!==2)throw new Error("`layer_norm` currently only supports 2D input.");const[Ke,Pe]=Ge.dims;if(ke.length!==1&&ke[0]!==Pe)throw new Error("`normalized_shape` must be a 1D array with shape `[input.dims[1]]`.");const[xA,sA]=M(Ge,1,0,!0),cA=xA.data,yA=sA.data,gA=Ge.data,He=new gA.constructor(gA.length);for(let Je=0;Je<Ke;++Je){const hA=Je*Pe;for(let IA=0;IA<Pe;++IA){const Qe=hA+IA;He[Qe]=(gA[Qe]-yA[Je])/(cA[Je]+ze)}}return new W(Ge.type,He,Ge.dims)}function ie(Ge,ke){return Ge=Ge.slice(),ke===null?Ge=Ge.filter(ze=>ze!==1):typeof ke=="number"?Ge[ke]===1&&Ge.splice(ke,1):Array.isArray(ke)&&(Ge=Ge.filter((ze,Ke)=>ze!==1||!ke.includes(Ke))),Ge}function ve(Ge,ke){return ke=g(ke,Ge.length+1),(Ge=Ge.slice()).splice(ke,0,1),Ge}function g(Ge,ke,ze=null,Ke=!0){if(Ke&&(Ge<-ke||Ge>=ke))throw new Error(`IndexError: index ${Ge} is out of bounds for dimension${ze===null?"":" "+ze} with size ${ke}`);return Ge<0&&(Ge=(Ge%ke+ke)%ke),Ge}function b(Ge,ke=0){ke=g(ke,Ge[0].dims.length);const ze=Ge[0].dims.slice();ze[ke]=Ge.reduce((sA,cA)=>sA+cA.dims[ke],0);const Ke=ze.reduce((sA,cA)=>sA*cA,1),Pe=new Ge[0].data.constructor(Ke),xA=Ge[0].type;if(ke===0){let sA=0;for(const cA of Ge){const yA=cA.data;Pe.set(yA,sA),sA+=yA.length}}else{let sA=0;for(let cA=0;cA<Ge.length;++cA){const{data:yA,dims:gA}=Ge[cA];for(let He=0;He<yA.length;++He){let Je=0;for(let hA=gA.length-1,IA=He,Qe=1;hA>=0;--hA){const mA=gA[hA];let MA=IA%mA;hA===ke&&(MA+=sA),Je+=MA*Qe,Qe*=ze[hA],IA=Math.floor(IA/mA)}Pe[Je]=yA[He]}sA+=gA[ke]}}return new W(xA,Pe,ze)}function e(Ge,ke=0){return b(Ge.map(ze=>ze.unsqueeze(ke)),ke)}function l(Ge,ke,ze=null,Ke=!1,Pe=null){const xA=ke.data,sA=ke.dims;ze=g(ze,sA.length);const cA=sA.slice();cA[ze]=1;const yA=new xA.constructor(xA.length/sA[ze]);Pe!==null&&yA.fill(Pe);for(let gA=0;gA<xA.length;++gA){let He=0;for(let Je=sA.length-1,hA=gA,IA=1;Je>=0;--Je){const Qe=sA[Je];Je!==ze&&(He+=hA%Qe*IA,IA*=cA[Je]),hA=Math.floor(hA/Qe)}yA[He]=Ge(yA[He],xA[gA],gA,He)}return Ke||cA.splice(ze,1),[ke.type,yA,cA]}function M(Ge,ke=null,ze=1,Ke=!1){const Pe=Ge.data,xA=Ge.dims;if(ke===null){const Je=Pe.reduce((mA,MA)=>mA+MA,0),hA=Je/Pe.length,IA=Math.sqrt(Pe.reduce((mA,MA)=>mA+(MA-hA)**2,0)/(Pe.length-ze)),Qe=new W(Ge.type,[hA],[]);return[new W(Ge.type,[IA],[]),Qe]}const sA=ue(Ge,ke=g(ke,xA.length),Ke),cA=sA.data,[yA,gA,He]=l((Je,hA,IA,Qe)=>Je+(hA-cA[Qe])**2,Ge,ke,Ke);for(let Je=0;Je<gA.length;++Je)gA[Je]=Math.sqrt(gA[Je]/(xA[ke]-ze));return[new W(yA,gA,He),sA]}function ue(Ge,ke=null,ze=!1){const Ke=Ge.dims,Pe=Ge.data;if(ke===null){const yA=Pe.reduce((gA,He)=>gA+He,0);return new W(Ge.type,[yA/Pe.length],[])}ke=g(ke,Ke.length);const[xA,sA,cA]=l((yA,gA)=>yA+gA,Ge,ke,ze);if(Ke[ke]!==1)for(let yA=0;yA<sA.length;++yA)sA[yA]/=Ke[ke];return new W(xA,sA,cA)}function D(Ge,ke,ze,Ke){const Pe=Ge.reduce((xA,sA)=>xA*sA,1);return new W(ze,new Ke(Pe).fill(ke),Ge)}function F(Ge,ke){let ze,Ke;if(typeof ke=="number")ze="float32",Ke=Float32Array;else if(typeof ke=="bigint")ze="int64",Ke=BigInt64Array;else{if(typeof ke!="boolean")throw new Error("Unsupported data type: "+typeof ke);ze="bool",Ke=Uint8Array}return D(Ge,ke,ze,Ke)}function Ye(Ge,ke){return F(Ge.dims,ke)}function Ne(Ge){return D(Ge,1n,"int64",BigInt64Array)}function Oe(Ge){return Ne(Ge.dims)}function AA(Ge){return D(Ge,0n,"int64",BigInt64Array)}function tA(Ge){return AA(Ge.dims)}function BA(Ge){const ke=Ge.reduce((ze,Ke)=>ze*Ke,1);return new W("float32",Float32Array.from({length:ke},()=>Math.random()),Ge)}function DA(Ge,ke){if(Ge.dims.length!==2)throw new Error("The tensor must have 2 dimensions");if(Ge.dims.at(-1)%8!=0)throw new Error("The last dimension of the tensor must be a multiple of 8");if(!["binary","ubinary"].includes(ke))throw new Error("The precision must be either 'binary' or 'ubinary'");const ze=ke==="binary",Ke=ze?"int8":"uint8",Pe=ze?Int8Array:Uint8Array,xA=Ge.data,sA=new Pe(xA.length/8);for(let cA=0;cA<xA.length;++cA){const yA=xA[cA]>0?1:0,gA=Math.floor(cA/8),He=cA%8;sA[gA]|=yA<<7-He,ze&&He===0&&(sA[gA]-=128)}return new W(Ke,sA,[Ge.dims[0],Ge.dims[1]/8])}}},Ju={};function dr(x){var C=Ju[x];if(C!==void 0)return C.exports;var d=Ju[x]={exports:{}};return od[x](d,d.exports,dr),d.exports}dr.m=od,d2=Object.getPrototypeOf?x=>Object.getPrototypeOf(x):x=>x.__proto__,dr.t=function(x,C){if(1&C&&(x=this(x)),8&C||typeof x=="object"&&x&&(4&C&&x.__esModule||16&C&&typeof x.then=="function"))return x;var d=Object.create(null);dr.r(d);var k={};_c=_c||[null,d2({}),d2([]),d2(d2)];for(var Q=2&C&&x;typeof Q=="object"&&!~_c.indexOf(Q);Q=d2(Q))Object.getOwnPropertyNames(Q).forEach(H=>k[H]=()=>x[H]);return k.default=()=>x,dr.d(d,k),d},dr.d=(x,C)=>{for(var d in C)dr.o(C,d)&&!dr.o(x,d)&&Object.defineProperty(x,d,{enumerable:!0,get:C[d]})},dr.o=(x,C)=>Object.prototype.hasOwnProperty.call(x,C),dr.r=x=>{typeof Symbol<"u"&&Symbol.toStringTag&&Object.defineProperty(x,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(x,"__esModule",{value:!0})},(()=>{var x;if(typeof import.meta.url=="string"&&(x=import.meta.url),!x)throw new Error("Automatic publicPath is not supported in this browser");x=x.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),dr.p=x})(),dr.b=new URL(import.meta.url);var I2={};(()=>{dr.r(I2),dr.d(I2,{ASTFeatureExtractor:()=>N.ASTFeatureExtractor,ASTForAudioClassification:()=>d.ASTForAudioClassification,ASTModel:()=>d.ASTModel,ASTPreTrainedModel:()=>d.ASTPreTrainedModel,AlbertForMaskedLM:()=>d.AlbertForMaskedLM,AlbertForQuestionAnswering:()=>d.AlbertForQuestionAnswering,AlbertForSequenceClassification:()=>d.AlbertForSequenceClassification,AlbertModel:()=>d.AlbertModel,AlbertPreTrainedModel:()=>d.AlbertPreTrainedModel,AlbertTokenizer:()=>k.AlbertTokenizer,AudioClassificationPipeline:()=>C.AudioClassificationPipeline,AutoConfig:()=>Q.AutoConfig,AutoFeatureExtractor:()=>K.AutoFeatureExtractor,AutoImageProcessor:()=>me.AutoImageProcessor,AutoModel:()=>d.AutoModel,AutoModelForAudioClassification:()=>d.AutoModelForAudioClassification,AutoModelForAudioFrameClassification:()=>d.AutoModelForAudioFrameClassification,AutoModelForCTC:()=>d.AutoModelForCTC,AutoModelForCausalLM:()=>d.AutoModelForCausalLM,AutoModelForDepthEstimation:()=>d.AutoModelForDepthEstimation,AutoModelForDocumentQuestionAnswering:()=>d.AutoModelForDocumentQuestionAnswering,AutoModelForImageClassification:()=>d.AutoModelForImageClassification,AutoModelForImageFeatureExtraction:()=>d.AutoModelForImageFeatureExtraction,AutoModelForImageMatting:()=>d.AutoModelForImageMatting,AutoModelForImageSegmentation:()=>d.AutoModelForImageSegmentation,AutoModelForImageToImage:()=>d.AutoModelForImageToImage,AutoModelForMaskGeneration:()=>d.AutoModelForMaskGeneration,AutoModelForMaskedLM:()=>d.AutoModelForMaskedLM,AutoModelForNormalEstimation:()=>d.AutoModelForNormalEstimation,AutoModelForObjectDetection:()=>d.AutoModelForObjectDetection,AutoModelForPoseEstimation:()=>d.AutoModelForPoseEstimation,AutoModelForQuestionAnswering:()=>d.AutoModelForQuestionAnswering,AutoModelForSemanticSegmentation:()=>d.AutoModelForSemanticSegmentation,AutoModelForSeq2SeqLM:()=>d.AutoModelForSeq2SeqLM,AutoModelForSequenceClassification:()=>d.AutoModelForSequenceClassification,AutoModelForSpeechSeq2Seq:()=>d.AutoModelForSpeechSeq2Seq,AutoModelForTextToSpectrogram:()=>d.AutoModelForTextToSpectrogram,AutoModelForTextToWaveform:()=>d.AutoModelForTextToWaveform,AutoModelForTokenClassification:()=>d.AutoModelForTokenClassification,AutoModelForUniversalSegmentation:()=>d.AutoModelForUniversalSegmentation,AutoModelForVision2Seq:()=>d.AutoModelForVision2Seq,AutoModelForXVector:()=>d.AutoModelForXVector,AutoModelForZeroShotObjectDetection:()=>d.AutoModelForZeroShotObjectDetection,AutoProcessor:()=>se.AutoProcessor,AutoTokenizer:()=>k.AutoTokenizer,AutomaticSpeechRecognitionPipeline:()=>C.AutomaticSpeechRecognitionPipeline,BartForConditionalGeneration:()=>d.BartForConditionalGeneration,BartForSequenceClassification:()=>d.BartForSequenceClassification,BartModel:()=>d.BartModel,BartPretrainedModel:()=>d.BartPretrainedModel,BartTokenizer:()=>k.BartTokenizer,BaseModelOutput:()=>d.BaseModelOutput,BaseStreamer:()=>ie.BaseStreamer,BeitFeatureExtractor:()=>Ae.BeitFeatureExtractor,BeitForImageClassification:()=>d.BeitForImageClassification,BeitModel:()=>d.BeitModel,BeitPreTrainedModel:()=>d.BeitPreTrainedModel,BertForMaskedLM:()=>d.BertForMaskedLM,BertForQuestionAnswering:()=>d.BertForQuestionAnswering,BertForSequenceClassification:()=>d.BertForSequenceClassification,BertForTokenClassification:()=>d.BertForTokenClassification,BertModel:()=>d.BertModel,BertPreTrainedModel:()=>d.BertPreTrainedModel,BertTokenizer:()=>k.BertTokenizer,BitImageProcessor:()=>Ae.BitImageProcessor,BlenderbotForConditionalGeneration:()=>d.BlenderbotForConditionalGeneration,BlenderbotModel:()=>d.BlenderbotModel,BlenderbotPreTrainedModel:()=>d.BlenderbotPreTrainedModel,BlenderbotSmallForConditionalGeneration:()=>d.BlenderbotSmallForConditionalGeneration,BlenderbotSmallModel:()=>d.BlenderbotSmallModel,BlenderbotSmallPreTrainedModel:()=>d.BlenderbotSmallPreTrainedModel,BlenderbotSmallTokenizer:()=>k.BlenderbotSmallTokenizer,BlenderbotTokenizer:()=>k.BlenderbotTokenizer,BloomForCausalLM:()=>d.BloomForCausalLM,BloomModel:()=>d.BloomModel,BloomPreTrainedModel:()=>d.BloomPreTrainedModel,BloomTokenizer:()=>k.BloomTokenizer,CLIPFeatureExtractor:()=>Ae.CLIPFeatureExtractor,CLIPImageProcessor:()=>Ae.CLIPImageProcessor,CLIPModel:()=>d.CLIPModel,CLIPPreTrainedModel:()=>d.CLIPPreTrainedModel,CLIPSegForImageSegmentation:()=>d.CLIPSegForImageSegmentation,CLIPSegModel:()=>d.CLIPSegModel,CLIPSegPreTrainedModel:()=>d.CLIPSegPreTrainedModel,CLIPTextModel:()=>d.CLIPTextModel,CLIPTextModelWithProjection:()=>d.CLIPTextModelWithProjection,CLIPTokenizer:()=>k.CLIPTokenizer,CLIPVisionModel:()=>d.CLIPVisionModel,CLIPVisionModelWithProjection:()=>d.CLIPVisionModelWithProjection,CamembertForMaskedLM:()=>d.CamembertForMaskedLM,CamembertForQuestionAnswering:()=>d.CamembertForQuestionAnswering,CamembertForSequenceClassification:()=>d.CamembertForSequenceClassification,CamembertForTokenClassification:()=>d.CamembertForTokenClassification,CamembertModel:()=>d.CamembertModel,CamembertPreTrainedModel:()=>d.CamembertPreTrainedModel,CamembertTokenizer:()=>k.CamembertTokenizer,CausalLMOutput:()=>d.CausalLMOutput,CausalLMOutputWithPast:()=>d.CausalLMOutputWithPast,ChineseCLIPFeatureExtractor:()=>Ae.ChineseCLIPFeatureExtractor,ChineseCLIPModel:()=>d.ChineseCLIPModel,ChineseCLIPPreTrainedModel:()=>d.ChineseCLIPPreTrainedModel,ClapAudioModelWithProjection:()=>d.ClapAudioModelWithProjection,ClapFeatureExtractor:()=>N.ClapFeatureExtractor,ClapModel:()=>d.ClapModel,ClapPreTrainedModel:()=>d.ClapPreTrainedModel,ClapTextModelWithProjection:()=>d.ClapTextModelWithProjection,ClassifierFreeGuidanceLogitsProcessor:()=>g.ClassifierFreeGuidanceLogitsProcessor,CodeGenForCausalLM:()=>d.CodeGenForCausalLM,CodeGenModel:()=>d.CodeGenModel,CodeGenPreTrainedModel:()=>d.CodeGenPreTrainedModel,CodeGenTokenizer:()=>k.CodeGenTokenizer,CodeLlamaTokenizer:()=>k.CodeLlamaTokenizer,CohereForCausalLM:()=>d.CohereForCausalLM,CohereModel:()=>d.CohereModel,CoherePreTrainedModel:()=>d.CoherePreTrainedModel,CohereTokenizer:()=>k.CohereTokenizer,ConvBertForMaskedLM:()=>d.ConvBertForMaskedLM,ConvBertForQuestionAnswering:()=>d.ConvBertForQuestionAnswering,ConvBertForSequenceClassification:()=>d.ConvBertForSequenceClassification,ConvBertForTokenClassification:()=>d.ConvBertForTokenClassification,ConvBertModel:()=>d.ConvBertModel,ConvBertPreTrainedModel:()=>d.ConvBertPreTrainedModel,ConvBertTokenizer:()=>k.ConvBertTokenizer,ConvNextFeatureExtractor:()=>Ae.ConvNextFeatureExtractor,ConvNextForImageClassification:()=>d.ConvNextForImageClassification,ConvNextImageProcessor:()=>Ae.ConvNextImageProcessor,ConvNextModel:()=>d.ConvNextModel,ConvNextPreTrainedModel:()=>d.ConvNextPreTrainedModel,ConvNextV2ForImageClassification:()=>d.ConvNextV2ForImageClassification,ConvNextV2Model:()=>d.ConvNextV2Model,ConvNextV2PreTrainedModel:()=>d.ConvNextV2PreTrainedModel,DPTFeatureExtractor:()=>Ae.DPTFeatureExtractor,DPTForDepthEstimation:()=>d.DPTForDepthEstimation,DPTImageProcessor:()=>Ae.DPTImageProcessor,DPTModel:()=>d.DPTModel,DPTPreTrainedModel:()=>d.DPTPreTrainedModel,DebertaForMaskedLM:()=>d.DebertaForMaskedLM,DebertaForQuestionAnswering:()=>d.DebertaForQuestionAnswering,DebertaForSequenceClassification:()=>d.DebertaForSequenceClassification,DebertaForTokenClassification:()=>d.DebertaForTokenClassification,DebertaModel:()=>d.DebertaModel,DebertaPreTrainedModel:()=>d.DebertaPreTrainedModel,DebertaTokenizer:()=>k.DebertaTokenizer,DebertaV2ForMaskedLM:()=>d.DebertaV2ForMaskedLM,DebertaV2ForQuestionAnswering:()=>d.DebertaV2ForQuestionAnswering,DebertaV2ForSequenceClassification:()=>d.DebertaV2ForSequenceClassification,DebertaV2ForTokenClassification:()=>d.DebertaV2ForTokenClassification,DebertaV2Model:()=>d.DebertaV2Model,DebertaV2PreTrainedModel:()=>d.DebertaV2PreTrainedModel,DebertaV2Tokenizer:()=>k.DebertaV2Tokenizer,DecisionTransformerModel:()=>d.DecisionTransformerModel,DecisionTransformerPreTrainedModel:()=>d.DecisionTransformerPreTrainedModel,DeiTFeatureExtractor:()=>Ae.DeiTFeatureExtractor,DeiTForImageClassification:()=>d.DeiTForImageClassification,DeiTImageProcessor:()=>Ae.DeiTImageProcessor,DeiTModel:()=>d.DeiTModel,DeiTPreTrainedModel:()=>d.DeiTPreTrainedModel,DepthAnythingForDepthEstimation:()=>d.DepthAnythingForDepthEstimation,DepthAnythingPreTrainedModel:()=>d.DepthAnythingPreTrainedModel,DepthEstimationPipeline:()=>C.DepthEstimationPipeline,DepthProForDepthEstimation:()=>d.DepthProForDepthEstimation,DepthProPreTrainedModel:()=>d.DepthProPreTrainedModel,DetrFeatureExtractor:()=>Ae.DetrFeatureExtractor,DetrForObjectDetection:()=>d.DetrForObjectDetection,DetrForSegmentation:()=>d.DetrForSegmentation,DetrImageProcessor:()=>Ae.DetrImageProcessor,DetrModel:()=>d.DetrModel,DetrObjectDetectionOutput:()=>d.DetrObjectDetectionOutput,DetrPreTrainedModel:()=>d.DetrPreTrainedModel,DetrSegmentationOutput:()=>d.DetrSegmentationOutput,Dinov2ForImageClassification:()=>d.Dinov2ForImageClassification,Dinov2Model:()=>d.Dinov2Model,Dinov2PreTrainedModel:()=>d.Dinov2PreTrainedModel,Dinov2WithRegistersForImageClassification:()=>d.Dinov2WithRegistersForImageClassification,Dinov2WithRegistersModel:()=>d.Dinov2WithRegistersModel,Dinov2WithRegistersPreTrainedModel:()=>d.Dinov2WithRegistersPreTrainedModel,DistilBertForMaskedLM:()=>d.DistilBertForMaskedLM,DistilBertForQuestionAnswering:()=>d.DistilBertForQuestionAnswering,DistilBertForSequenceClassification:()=>d.DistilBertForSequenceClassification,DistilBertForTokenClassification:()=>d.DistilBertForTokenClassification,DistilBertModel:()=>d.DistilBertModel,DistilBertPreTrainedModel:()=>d.DistilBertPreTrainedModel,DistilBertTokenizer:()=>k.DistilBertTokenizer,DocumentQuestionAnsweringPipeline:()=>C.DocumentQuestionAnsweringPipeline,DonutFeatureExtractor:()=>Ae.DonutFeatureExtractor,DonutImageProcessor:()=>Ae.DonutImageProcessor,DonutSwinModel:()=>d.DonutSwinModel,DonutSwinPreTrainedModel:()=>d.DonutSwinPreTrainedModel,EfficientNetForImageClassification:()=>d.EfficientNetForImageClassification,EfficientNetImageProcessor:()=>Ae.EfficientNetImageProcessor,EfficientNetModel:()=>d.EfficientNetModel,EfficientNetPreTrainedModel:()=>d.EfficientNetPreTrainedModel,ElectraForMaskedLM:()=>d.ElectraForMaskedLM,ElectraForQuestionAnswering:()=>d.ElectraForQuestionAnswering,ElectraForSequenceClassification:()=>d.ElectraForSequenceClassification,ElectraForTokenClassification:()=>d.ElectraForTokenClassification,ElectraModel:()=>d.ElectraModel,ElectraPreTrainedModel:()=>d.ElectraPreTrainedModel,ElectraTokenizer:()=>k.ElectraTokenizer,EosTokenCriteria:()=>ve.EosTokenCriteria,EsmForMaskedLM:()=>d.EsmForMaskedLM,EsmForSequenceClassification:()=>d.EsmForSequenceClassification,EsmForTokenClassification:()=>d.EsmForTokenClassification,EsmModel:()=>d.EsmModel,EsmPreTrainedModel:()=>d.EsmPreTrainedModel,EsmTokenizer:()=>k.EsmTokenizer,ExaoneForCausalLM:()=>d.ExaoneForCausalLM,ExaoneModel:()=>d.ExaoneModel,ExaonePreTrainedModel:()=>d.ExaonePreTrainedModel,FFT:()=>Z.FFT,FalconForCausalLM:()=>d.FalconForCausalLM,FalconModel:()=>d.FalconModel,FalconPreTrainedModel:()=>d.FalconPreTrainedModel,FalconTokenizer:()=>k.FalconTokenizer,FastViTForImageClassification:()=>d.FastViTForImageClassification,FastViTModel:()=>d.FastViTModel,FastViTPreTrainedModel:()=>d.FastViTPreTrainedModel,FeatureExtractionPipeline:()=>C.FeatureExtractionPipeline,FeatureExtractor:()=>R.FeatureExtractor,FillMaskPipeline:()=>C.FillMaskPipeline,Florence2ForConditionalGeneration:()=>d.Florence2ForConditionalGeneration,Florence2PreTrainedModel:()=>d.Florence2PreTrainedModel,Florence2Processor:()=>Ee.Florence2Processor,ForcedBOSTokenLogitsProcessor:()=>g.ForcedBOSTokenLogitsProcessor,ForcedEOSTokenLogitsProcessor:()=>g.ForcedEOSTokenLogitsProcessor,GLPNFeatureExtractor:()=>Ae.GLPNFeatureExtractor,GLPNForDepthEstimation:()=>d.GLPNForDepthEstimation,GLPNModel:()=>d.GLPNModel,GLPNPreTrainedModel:()=>d.GLPNPreTrainedModel,GPT2LMHeadModel:()=>d.GPT2LMHeadModel,GPT2Model:()=>d.GPT2Model,GPT2PreTrainedModel:()=>d.GPT2PreTrainedModel,GPT2Tokenizer:()=>k.GPT2Tokenizer,GPTBigCodeForCausalLM:()=>d.GPTBigCodeForCausalLM,GPTBigCodeModel:()=>d.GPTBigCodeModel,GPTBigCodePreTrainedModel:()=>d.GPTBigCodePreTrainedModel,GPTJForCausalLM:()=>d.GPTJForCausalLM,GPTJModel:()=>d.GPTJModel,GPTJPreTrainedModel:()=>d.GPTJPreTrainedModel,GPTNeoForCausalLM:()=>d.GPTNeoForCausalLM,GPTNeoModel:()=>d.GPTNeoModel,GPTNeoPreTrainedModel:()=>d.GPTNeoPreTrainedModel,GPTNeoXForCausalLM:()=>d.GPTNeoXForCausalLM,GPTNeoXModel:()=>d.GPTNeoXModel,GPTNeoXPreTrainedModel:()=>d.GPTNeoXPreTrainedModel,GPTNeoXTokenizer:()=>k.GPTNeoXTokenizer,Gemma2ForCausalLM:()=>d.Gemma2ForCausalLM,Gemma2Model:()=>d.Gemma2Model,Gemma2PreTrainedModel:()=>d.Gemma2PreTrainedModel,GemmaForCausalLM:()=>d.GemmaForCausalLM,GemmaModel:()=>d.GemmaModel,GemmaPreTrainedModel:()=>d.GemmaPreTrainedModel,GemmaTokenizer:()=>k.GemmaTokenizer,GlmForCausalLM:()=>d.GlmForCausalLM,GlmModel:()=>d.GlmModel,GlmPreTrainedModel:()=>d.GlmPreTrainedModel,GraniteForCausalLM:()=>d.GraniteForCausalLM,GraniteModel:()=>d.GraniteModel,GranitePreTrainedModel:()=>d.GranitePreTrainedModel,Grok1Tokenizer:()=>k.Grok1Tokenizer,GroundingDinoForObjectDetection:()=>d.GroundingDinoForObjectDetection,GroundingDinoImageProcessor:()=>Ae.GroundingDinoImageProcessor,GroundingDinoPreTrainedModel:()=>d.GroundingDinoPreTrainedModel,GroundingDinoProcessor:()=>Ee.GroundingDinoProcessor,GroupViTModel:()=>d.GroupViTModel,GroupViTPreTrainedModel:()=>d.GroupViTPreTrainedModel,HeliumForCausalLM:()=>d.HeliumForCausalLM,HeliumModel:()=>d.HeliumModel,HeliumPreTrainedModel:()=>d.HeliumPreTrainedModel,HerbertTokenizer:()=>k.HerbertTokenizer,HieraForImageClassification:()=>d.HieraForImageClassification,HieraModel:()=>d.HieraModel,HieraPreTrainedModel:()=>d.HieraPreTrainedModel,HubertForCTC:()=>d.HubertForCTC,HubertForSequenceClassification:()=>d.HubertForSequenceClassification,HubertModel:()=>d.HubertModel,HubertPreTrainedModel:()=>d.HubertPreTrainedModel,IJepaForImageClassification:()=>d.IJepaForImageClassification,IJepaModel:()=>d.IJepaModel,IJepaPreTrainedModel:()=>d.IJepaPreTrainedModel,Idefics3ForConditionalGeneration:()=>d.Idefics3ForConditionalGeneration,Idefics3ImageProcessor:()=>Ae.Idefics3ImageProcessor,Idefics3PreTrainedModel:()=>d.Idefics3PreTrainedModel,Idefics3Processor:()=>Ee.Idefics3Processor,ImageClassificationPipeline:()=>C.ImageClassificationPipeline,ImageFeatureExtractionPipeline:()=>C.ImageFeatureExtractionPipeline,ImageFeatureExtractor:()=>N.ImageFeatureExtractor,ImageMattingOutput:()=>d.ImageMattingOutput,ImageProcessor:()=>V.ImageProcessor,ImageSegmentationPipeline:()=>C.ImageSegmentationPipeline,ImageToImagePipeline:()=>C.ImageToImagePipeline,ImageToTextPipeline:()=>C.ImageToTextPipeline,InterruptableStoppingCriteria:()=>ve.InterruptableStoppingCriteria,JAISLMHeadModel:()=>d.JAISLMHeadModel,JAISModel:()=>d.JAISModel,JAISPreTrainedModel:()=>d.JAISPreTrainedModel,JinaCLIPImageProcessor:()=>Ae.JinaCLIPImageProcessor,JinaCLIPModel:()=>d.JinaCLIPModel,JinaCLIPPreTrainedModel:()=>d.JinaCLIPPreTrainedModel,JinaCLIPProcessor:()=>Ee.JinaCLIPProcessor,JinaCLIPTextModel:()=>d.JinaCLIPTextModel,JinaCLIPVisionModel:()=>d.JinaCLIPVisionModel,LlamaForCausalLM:()=>d.LlamaForCausalLM,LlamaModel:()=>d.LlamaModel,LlamaPreTrainedModel:()=>d.LlamaPreTrainedModel,LlamaTokenizer:()=>k.LlamaTokenizer,LlavaForConditionalGeneration:()=>d.LlavaForConditionalGeneration,LlavaOnevisionForConditionalGeneration:()=>d.LlavaOnevisionForConditionalGeneration,LlavaOnevisionImageProcessor:()=>Ae.LlavaOnevisionImageProcessor,LlavaPreTrainedModel:()=>d.LlavaPreTrainedModel,LogitsProcessor:()=>g.LogitsProcessor,LogitsProcessorList:()=>g.LogitsProcessorList,LogitsWarper:()=>g.LogitsWarper,LongT5ForConditionalGeneration:()=>d.LongT5ForConditionalGeneration,LongT5Model:()=>d.LongT5Model,LongT5PreTrainedModel:()=>d.LongT5PreTrainedModel,M2M100ForConditionalGeneration:()=>d.M2M100ForConditionalGeneration,M2M100Model:()=>d.M2M100Model,M2M100PreTrainedModel:()=>d.M2M100PreTrainedModel,M2M100Tokenizer:()=>k.M2M100Tokenizer,MBart50Tokenizer:()=>k.MBart50Tokenizer,MBartForCausalLM:()=>d.MBartForCausalLM,MBartForConditionalGeneration:()=>d.MBartForConditionalGeneration,MBartForSequenceClassification:()=>d.MBartForSequenceClassification,MBartModel:()=>d.MBartModel,MBartPreTrainedModel:()=>d.MBartPreTrainedModel,MBartTokenizer:()=>k.MBartTokenizer,MPNetForMaskedLM:()=>d.MPNetForMaskedLM,MPNetForQuestionAnswering:()=>d.MPNetForQuestionAnswering,MPNetForSequenceClassification:()=>d.MPNetForSequenceClassification,MPNetForTokenClassification:()=>d.MPNetForTokenClassification,MPNetModel:()=>d.MPNetModel,MPNetPreTrainedModel:()=>d.MPNetPreTrainedModel,MPNetTokenizer:()=>k.MPNetTokenizer,MT5ForConditionalGeneration:()=>d.MT5ForConditionalGeneration,MT5Model:()=>d.MT5Model,MT5PreTrainedModel:()=>d.MT5PreTrainedModel,MarianMTModel:()=>d.MarianMTModel,MarianModel:()=>d.MarianModel,MarianPreTrainedModel:()=>d.MarianPreTrainedModel,MarianTokenizer:()=>k.MarianTokenizer,Mask2FormerImageProcessor:()=>Ae.Mask2FormerImageProcessor,MaskFormerFeatureExtractor:()=>Ae.MaskFormerFeatureExtractor,MaskFormerForInstanceSegmentation:()=>d.MaskFormerForInstanceSegmentation,MaskFormerImageProcessor:()=>Ae.MaskFormerImageProcessor,MaskFormerModel:()=>d.MaskFormerModel,MaskFormerPreTrainedModel:()=>d.MaskFormerPreTrainedModel,MaskedLMOutput:()=>d.MaskedLMOutput,MaxLengthCriteria:()=>ve.MaxLengthCriteria,MgpstrForSceneTextRecognition:()=>d.MgpstrForSceneTextRecognition,MgpstrModelOutput:()=>d.MgpstrModelOutput,MgpstrPreTrainedModel:()=>d.MgpstrPreTrainedModel,MgpstrProcessor:()=>Ee.MgpstrProcessor,MgpstrTokenizer:()=>k.MgpstrTokenizer,MinLengthLogitsProcessor:()=>g.MinLengthLogitsProcessor,MinNewTokensLengthLogitsProcessor:()=>g.MinNewTokensLengthLogitsProcessor,MistralForCausalLM:()=>d.MistralForCausalLM,MistralModel:()=>d.MistralModel,MistralPreTrainedModel:()=>d.MistralPreTrainedModel,MobileBertForMaskedLM:()=>d.MobileBertForMaskedLM,MobileBertForQuestionAnswering:()=>d.MobileBertForQuestionAnswering,MobileBertForSequenceClassification:()=>d.MobileBertForSequenceClassification,MobileBertModel:()=>d.MobileBertModel,MobileBertPreTrainedModel:()=>d.MobileBertPreTrainedModel,MobileBertTokenizer:()=>k.MobileBertTokenizer,MobileLLMForCausalLM:()=>d.MobileLLMForCausalLM,MobileLLMModel:()=>d.MobileLLMModel,MobileLLMPreTrainedModel:()=>d.MobileLLMPreTrainedModel,MobileNetV1FeatureExtractor:()=>Ae.MobileNetV1FeatureExtractor,MobileNetV1ForImageClassification:()=>d.MobileNetV1ForImageClassification,MobileNetV1ImageProcessor:()=>Ae.MobileNetV1ImageProcessor,MobileNetV1Model:()=>d.MobileNetV1Model,MobileNetV1PreTrainedModel:()=>d.MobileNetV1PreTrainedModel,MobileNetV2FeatureExtractor:()=>Ae.MobileNetV2FeatureExtractor,MobileNetV2ForImageClassification:()=>d.MobileNetV2ForImageClassification,MobileNetV2ImageProcessor:()=>Ae.MobileNetV2ImageProcessor,MobileNetV2Model:()=>d.MobileNetV2Model,MobileNetV2PreTrainedModel:()=>d.MobileNetV2PreTrainedModel,MobileNetV3FeatureExtractor:()=>Ae.MobileNetV3FeatureExtractor,MobileNetV3ForImageClassification:()=>d.MobileNetV3ForImageClassification,MobileNetV3ImageProcessor:()=>Ae.MobileNetV3ImageProcessor,MobileNetV3Model:()=>d.MobileNetV3Model,MobileNetV3PreTrainedModel:()=>d.MobileNetV3PreTrainedModel,MobileNetV4FeatureExtractor:()=>Ae.MobileNetV4FeatureExtractor,MobileNetV4ForImageClassification:()=>d.MobileNetV4ForImageClassification,MobileNetV4ImageProcessor:()=>Ae.MobileNetV4ImageProcessor,MobileNetV4Model:()=>d.MobileNetV4Model,MobileNetV4PreTrainedModel:()=>d.MobileNetV4PreTrainedModel,MobileViTFeatureExtractor:()=>Ae.MobileViTFeatureExtractor,MobileViTForImageClassification:()=>d.MobileViTForImageClassification,MobileViTImageProcessor:()=>Ae.MobileViTImageProcessor,MobileViTModel:()=>d.MobileViTModel,MobileViTPreTrainedModel:()=>d.MobileViTPreTrainedModel,MobileViTV2ForImageClassification:()=>d.MobileViTV2ForImageClassification,MobileViTV2Model:()=>d.MobileViTV2Model,MobileViTV2PreTrainedModel:()=>d.MobileViTV2PreTrainedModel,ModelOutput:()=>d.ModelOutput,ModernBertForMaskedLM:()=>d.ModernBertForMaskedLM,ModernBertForSequenceClassification:()=>d.ModernBertForSequenceClassification,ModernBertForTokenClassification:()=>d.ModernBertForTokenClassification,ModernBertModel:()=>d.ModernBertModel,ModernBertPreTrainedModel:()=>d.ModernBertPreTrainedModel,Moondream1ForConditionalGeneration:()=>d.Moondream1ForConditionalGeneration,MoonshineFeatureExtractor:()=>N.MoonshineFeatureExtractor,MoonshineForConditionalGeneration:()=>d.MoonshineForConditionalGeneration,MoonshineModel:()=>d.MoonshineModel,MoonshinePreTrainedModel:()=>d.MoonshinePreTrainedModel,MoonshineProcessor:()=>Ee.MoonshineProcessor,MptForCausalLM:()=>d.MptForCausalLM,MptModel:()=>d.MptModel,MptPreTrainedModel:()=>d.MptPreTrainedModel,MultiModalityCausalLM:()=>d.MultiModalityCausalLM,MultiModalityPreTrainedModel:()=>d.MultiModalityPreTrainedModel,MusicgenForCausalLM:()=>d.MusicgenForCausalLM,MusicgenForConditionalGeneration:()=>d.MusicgenForConditionalGeneration,MusicgenModel:()=>d.MusicgenModel,MusicgenPreTrainedModel:()=>d.MusicgenPreTrainedModel,NllbTokenizer:()=>k.NllbTokenizer,NoBadWordsLogitsProcessor:()=>g.NoBadWordsLogitsProcessor,NoRepeatNGramLogitsProcessor:()=>g.NoRepeatNGramLogitsProcessor,NomicBertModel:()=>d.NomicBertModel,NomicBertPreTrainedModel:()=>d.NomicBertPreTrainedModel,NougatImageProcessor:()=>Ae.NougatImageProcessor,NougatTokenizer:()=>k.NougatTokenizer,OPTForCausalLM:()=>d.OPTForCausalLM,OPTModel:()=>d.OPTModel,OPTPreTrainedModel:()=>d.OPTPreTrainedModel,ObjectDetectionPipeline:()=>C.ObjectDetectionPipeline,Olmo2ForCausalLM:()=>d.Olmo2ForCausalLM,Olmo2Model:()=>d.Olmo2Model,Olmo2PreTrainedModel:()=>d.Olmo2PreTrainedModel,OlmoForCausalLM:()=>d.OlmoForCausalLM,OlmoModel:()=>d.OlmoModel,OlmoPreTrainedModel:()=>d.OlmoPreTrainedModel,OpenELMForCausalLM:()=>d.OpenELMForCausalLM,OpenELMModel:()=>d.OpenELMModel,OpenELMPreTrainedModel:()=>d.OpenELMPreTrainedModel,OwlViTFeatureExtractor:()=>Ae.OwlViTFeatureExtractor,OwlViTForObjectDetection:()=>d.OwlViTForObjectDetection,OwlViTImageProcessor:()=>Ae.OwlViTImageProcessor,OwlViTModel:()=>d.OwlViTModel,OwlViTPreTrainedModel:()=>d.OwlViTPreTrainedModel,OwlViTProcessor:()=>Ee.OwlViTProcessor,Owlv2ForObjectDetection:()=>d.Owlv2ForObjectDetection,Owlv2ImageProcessor:()=>Ae.Owlv2ImageProcessor,Owlv2Model:()=>d.Owlv2Model,Owlv2PreTrainedModel:()=>d.Owlv2PreTrainedModel,PaliGemmaForConditionalGeneration:()=>d.PaliGemmaForConditionalGeneration,PaliGemmaPreTrainedModel:()=>d.PaliGemmaPreTrainedModel,PaliGemmaProcessor:()=>Ee.PaliGemmaProcessor,PatchTSMixerForPrediction:()=>d.PatchTSMixerForPrediction,PatchTSMixerModel:()=>d.PatchTSMixerModel,PatchTSMixerPreTrainedModel:()=>d.PatchTSMixerPreTrainedModel,PatchTSTForPrediction:()=>d.PatchTSTForPrediction,PatchTSTModel:()=>d.PatchTSTModel,PatchTSTPreTrainedModel:()=>d.PatchTSTPreTrainedModel,Phi3ForCausalLM:()=>d.Phi3ForCausalLM,Phi3Model:()=>d.Phi3Model,Phi3PreTrainedModel:()=>d.Phi3PreTrainedModel,Phi3VForCausalLM:()=>d.Phi3VForCausalLM,Phi3VImageProcessor:()=>Ae.Phi3VImageProcessor,Phi3VPreTrainedModel:()=>d.Phi3VPreTrainedModel,Phi3VProcessor:()=>Ee.Phi3VProcessor,PhiForCausalLM:()=>d.PhiForCausalLM,PhiModel:()=>d.PhiModel,PhiPreTrainedModel:()=>d.PhiPreTrainedModel,Pipeline:()=>C.Pipeline,PreTrainedModel:()=>d.PreTrainedModel,PreTrainedTokenizer:()=>k.PreTrainedTokenizer,PretrainedConfig:()=>Q.PretrainedConfig,PretrainedMixin:()=>d.PretrainedMixin,Processor:()=>Be.Processor,PvtForImageClassification:()=>d.PvtForImageClassification,PvtImageProcessor:()=>Ae.PvtImageProcessor,PvtModel:()=>d.PvtModel,PvtPreTrainedModel:()=>d.PvtPreTrainedModel,PyAnnoteFeatureExtractor:()=>N.PyAnnoteFeatureExtractor,PyAnnoteForAudioFrameClassification:()=>d.PyAnnoteForAudioFrameClassification,PyAnnoteModel:()=>d.PyAnnoteModel,PyAnnotePreTrainedModel:()=>d.PyAnnotePreTrainedModel,PyAnnoteProcessor:()=>Ee.PyAnnoteProcessor,QuestionAnsweringModelOutput:()=>d.QuestionAnsweringModelOutput,QuestionAnsweringPipeline:()=>C.QuestionAnsweringPipeline,Qwen2ForCausalLM:()=>d.Qwen2ForCausalLM,Qwen2Model:()=>d.Qwen2Model,Qwen2PreTrainedModel:()=>d.Qwen2PreTrainedModel,Qwen2Tokenizer:()=>k.Qwen2Tokenizer,Qwen2VLForConditionalGeneration:()=>d.Qwen2VLForConditionalGeneration,Qwen2VLImageProcessor:()=>Ae.Qwen2VLImageProcessor,Qwen2VLPreTrainedModel:()=>d.Qwen2VLPreTrainedModel,Qwen2VLProcessor:()=>Ee.Qwen2VLProcessor,RTDetrForObjectDetection:()=>d.RTDetrForObjectDetection,RTDetrImageProcessor:()=>Ae.RTDetrImageProcessor,RTDetrModel:()=>d.RTDetrModel,RTDetrObjectDetectionOutput:()=>d.RTDetrObjectDetectionOutput,RTDetrPreTrainedModel:()=>d.RTDetrPreTrainedModel,RawAudio:()=>H.RawAudio,RawImage:()=>S.RawImage,RepetitionPenaltyLogitsProcessor:()=>g.RepetitionPenaltyLogitsProcessor,ResNetForImageClassification:()=>d.ResNetForImageClassification,ResNetModel:()=>d.ResNetModel,ResNetPreTrainedModel:()=>d.ResNetPreTrainedModel,RoFormerForMaskedLM:()=>d.RoFormerForMaskedLM,RoFormerForQuestionAnswering:()=>d.RoFormerForQuestionAnswering,RoFormerForSequenceClassification:()=>d.RoFormerForSequenceClassification,RoFormerForTokenClassification:()=>d.RoFormerForTokenClassification,RoFormerModel:()=>d.RoFormerModel,RoFormerPreTrainedModel:()=>d.RoFormerPreTrainedModel,RoFormerTokenizer:()=>k.RoFormerTokenizer,RobertaForMaskedLM:()=>d.RobertaForMaskedLM,RobertaForQuestionAnswering:()=>d.RobertaForQuestionAnswering,RobertaForSequenceClassification:()=>d.RobertaForSequenceClassification,RobertaForTokenClassification:()=>d.RobertaForTokenClassification,RobertaModel:()=>d.RobertaModel,RobertaPreTrainedModel:()=>d.RobertaPreTrainedModel,RobertaTokenizer:()=>k.RobertaTokenizer,SamImageProcessor:()=>Ae.SamImageProcessor,SamImageSegmentationOutput:()=>d.SamImageSegmentationOutput,SamModel:()=>d.SamModel,SamPreTrainedModel:()=>d.SamPreTrainedModel,SamProcessor:()=>Ee.SamProcessor,SapiensForDepthEstimation:()=>d.SapiensForDepthEstimation,SapiensForNormalEstimation:()=>d.SapiensForNormalEstimation,SapiensForSemanticSegmentation:()=>d.SapiensForSemanticSegmentation,SapiensPreTrainedModel:()=>d.SapiensPreTrainedModel,SeamlessM4TFeatureExtractor:()=>N.SeamlessM4TFeatureExtractor,SegformerFeatureExtractor:()=>Ae.SegformerFeatureExtractor,SegformerForImageClassification:()=>d.SegformerForImageClassification,SegformerForSemanticSegmentation:()=>d.SegformerForSemanticSegmentation,SegformerImageProcessor:()=>Ae.SegformerImageProcessor,SegformerModel:()=>d.SegformerModel,SegformerPreTrainedModel:()=>d.SegformerPreTrainedModel,Seq2SeqLMOutput:()=>d.Seq2SeqLMOutput,SequenceClassifierOutput:()=>d.SequenceClassifierOutput,SiglipImageProcessor:()=>Ae.SiglipImageProcessor,SiglipModel:()=>d.SiglipModel,SiglipPreTrainedModel:()=>d.SiglipPreTrainedModel,SiglipTextModel:()=>d.SiglipTextModel,SiglipTokenizer:()=>k.SiglipTokenizer,SiglipVisionModel:()=>d.SiglipVisionModel,SpeechT5FeatureExtractor:()=>N.SpeechT5FeatureExtractor,SpeechT5ForSpeechToText:()=>d.SpeechT5ForSpeechToText,SpeechT5ForTextToSpeech:()=>d.SpeechT5ForTextToSpeech,SpeechT5HifiGan:()=>d.SpeechT5HifiGan,SpeechT5Model:()=>d.SpeechT5Model,SpeechT5PreTrainedModel:()=>d.SpeechT5PreTrainedModel,SpeechT5Processor:()=>Ee.SpeechT5Processor,SpeechT5Tokenizer:()=>k.SpeechT5Tokenizer,SqueezeBertForMaskedLM:()=>d.SqueezeBertForMaskedLM,SqueezeBertForQuestionAnswering:()=>d.SqueezeBertForQuestionAnswering,SqueezeBertForSequenceClassification:()=>d.SqueezeBertForSequenceClassification,SqueezeBertModel:()=>d.SqueezeBertModel,SqueezeBertPreTrainedModel:()=>d.SqueezeBertPreTrainedModel,SqueezeBertTokenizer:()=>k.SqueezeBertTokenizer,StableLmForCausalLM:()=>d.StableLmForCausalLM,StableLmModel:()=>d.StableLmModel,StableLmPreTrainedModel:()=>d.StableLmPreTrainedModel,Starcoder2ForCausalLM:()=>d.Starcoder2ForCausalLM,Starcoder2Model:()=>d.Starcoder2Model,Starcoder2PreTrainedModel:()=>d.Starcoder2PreTrainedModel,StoppingCriteria:()=>ve.StoppingCriteria,StoppingCriteriaList:()=>ve.StoppingCriteriaList,StyleTextToSpeech2Model:()=>d.StyleTextToSpeech2Model,StyleTextToSpeech2PreTrainedModel:()=>d.StyleTextToSpeech2PreTrainedModel,SummarizationPipeline:()=>C.SummarizationPipeline,SuppressTokensAtBeginLogitsProcessor:()=>g.SuppressTokensAtBeginLogitsProcessor,Swin2SRForImageSuperResolution:()=>d.Swin2SRForImageSuperResolution,Swin2SRImageProcessor:()=>Ae.Swin2SRImageProcessor,Swin2SRModel:()=>d.Swin2SRModel,Swin2SRPreTrainedModel:()=>d.Swin2SRPreTrainedModel,SwinForImageClassification:()=>d.SwinForImageClassification,SwinModel:()=>d.SwinModel,SwinPreTrainedModel:()=>d.SwinPreTrainedModel,T5ForConditionalGeneration:()=>d.T5ForConditionalGeneration,T5Model:()=>d.T5Model,T5PreTrainedModel:()=>d.T5PreTrainedModel,T5Tokenizer:()=>k.T5Tokenizer,TableTransformerForObjectDetection:()=>d.TableTransformerForObjectDetection,TableTransformerModel:()=>d.TableTransformerModel,TableTransformerObjectDetectionOutput:()=>d.TableTransformerObjectDetectionOutput,TableTransformerPreTrainedModel:()=>d.TableTransformerPreTrainedModel,TemperatureLogitsWarper:()=>g.TemperatureLogitsWarper,Tensor:()=>W.Tensor,Text2TextGenerationPipeline:()=>C.Text2TextGenerationPipeline,TextClassificationPipeline:()=>C.TextClassificationPipeline,TextGenerationPipeline:()=>C.TextGenerationPipeline,TextStreamer:()=>ie.TextStreamer,TextToAudioPipeline:()=>C.TextToAudioPipeline,TokenClassificationPipeline:()=>C.TokenClassificationPipeline,TokenClassifierOutput:()=>d.TokenClassifierOutput,TokenizerModel:()=>k.TokenizerModel,TopKLogitsWarper:()=>g.TopKLogitsWarper,TopPLogitsWarper:()=>g.TopPLogitsWarper,TrOCRForCausalLM:()=>d.TrOCRForCausalLM,TrOCRPreTrainedModel:()=>d.TrOCRPreTrainedModel,TranslationPipeline:()=>C.TranslationPipeline,UniSpeechForCTC:()=>d.UniSpeechForCTC,UniSpeechForSequenceClassification:()=>d.UniSpeechForSequenceClassification,UniSpeechModel:()=>d.UniSpeechModel,UniSpeechPreTrainedModel:()=>d.UniSpeechPreTrainedModel,UniSpeechSatForAudioFrameClassification:()=>d.UniSpeechSatForAudioFrameClassification,UniSpeechSatForCTC:()=>d.UniSpeechSatForCTC,UniSpeechSatForSequenceClassification:()=>d.UniSpeechSatForSequenceClassification,UniSpeechSatModel:()=>d.UniSpeechSatModel,UniSpeechSatPreTrainedModel:()=>d.UniSpeechSatPreTrainedModel,VLChatProcessor:()=>Ee.VLChatProcessor,VLMImageProcessor:()=>Ae.VLMImageProcessor,ViTFeatureExtractor:()=>Ae.ViTFeatureExtractor,ViTForImageClassification:()=>d.ViTForImageClassification,ViTImageProcessor:()=>Ae.ViTImageProcessor,ViTMAEModel:()=>d.ViTMAEModel,ViTMAEPreTrainedModel:()=>d.ViTMAEPreTrainedModel,ViTMSNForImageClassification:()=>d.ViTMSNForImageClassification,ViTMSNModel:()=>d.ViTMSNModel,ViTMSNPreTrainedModel:()=>d.ViTMSNPreTrainedModel,ViTModel:()=>d.ViTModel,ViTPreTrainedModel:()=>d.ViTPreTrainedModel,VisionEncoderDecoderModel:()=>d.VisionEncoderDecoderModel,VitMatteForImageMatting:()=>d.VitMatteForImageMatting,VitMatteImageProcessor:()=>Ae.VitMatteImageProcessor,VitMattePreTrainedModel:()=>d.VitMattePreTrainedModel,VitPoseForPoseEstimation:()=>d.VitPoseForPoseEstimation,VitPoseImageProcessor:()=>Ae.VitPoseImageProcessor,VitPosePreTrainedModel:()=>d.VitPosePreTrainedModel,VitsModel:()=>d.VitsModel,VitsModelOutput:()=>d.VitsModelOutput,VitsPreTrainedModel:()=>d.VitsPreTrainedModel,VitsTokenizer:()=>k.VitsTokenizer,Wav2Vec2BertForCTC:()=>d.Wav2Vec2BertForCTC,Wav2Vec2BertForSequenceClassification:()=>d.Wav2Vec2BertForSequenceClassification,Wav2Vec2BertModel:()=>d.Wav2Vec2BertModel,Wav2Vec2BertPreTrainedModel:()=>d.Wav2Vec2BertPreTrainedModel,Wav2Vec2CTCTokenizer:()=>k.Wav2Vec2CTCTokenizer,Wav2Vec2FeatureExtractor:()=>N.Wav2Vec2FeatureExtractor,Wav2Vec2ForAudioFrameClassification:()=>d.Wav2Vec2ForAudioFrameClassification,Wav2Vec2ForCTC:()=>d.Wav2Vec2ForCTC,Wav2Vec2ForSequenceClassification:()=>d.Wav2Vec2ForSequenceClassification,Wav2Vec2Model:()=>d.Wav2Vec2Model,Wav2Vec2PreTrainedModel:()=>d.Wav2Vec2PreTrainedModel,Wav2Vec2Processor:()=>Ee.Wav2Vec2Processor,Wav2Vec2ProcessorWithLM:()=>Ee.Wav2Vec2ProcessorWithLM,WavLMForAudioFrameClassification:()=>d.WavLMForAudioFrameClassification,WavLMForCTC:()=>d.WavLMForCTC,WavLMForSequenceClassification:()=>d.WavLMForSequenceClassification,WavLMForXVector:()=>d.WavLMForXVector,WavLMModel:()=>d.WavLMModel,WavLMPreTrainedModel:()=>d.WavLMPreTrainedModel,WeSpeakerFeatureExtractor:()=>N.WeSpeakerFeatureExtractor,WeSpeakerResNetModel:()=>d.WeSpeakerResNetModel,WeSpeakerResNetPreTrainedModel:()=>d.WeSpeakerResNetPreTrainedModel,WhisperFeatureExtractor:()=>N.WhisperFeatureExtractor,WhisperForConditionalGeneration:()=>d.WhisperForConditionalGeneration,WhisperModel:()=>d.WhisperModel,WhisperPreTrainedModel:()=>d.WhisperPreTrainedModel,WhisperProcessor:()=>Ee.WhisperProcessor,WhisperTextStreamer:()=>ie.WhisperTextStreamer,WhisperTimeStampLogitsProcessor:()=>g.WhisperTimeStampLogitsProcessor,WhisperTokenizer:()=>k.WhisperTokenizer,XLMForQuestionAnswering:()=>d.XLMForQuestionAnswering,XLMForSequenceClassification:()=>d.XLMForSequenceClassification,XLMForTokenClassification:()=>d.XLMForTokenClassification,XLMModel:()=>d.XLMModel,XLMPreTrainedModel:()=>d.XLMPreTrainedModel,XLMRobertaForMaskedLM:()=>d.XLMRobertaForMaskedLM,XLMRobertaForQuestionAnswering:()=>d.XLMRobertaForQuestionAnswering,XLMRobertaForSequenceClassification:()=>d.XLMRobertaForSequenceClassification,XLMRobertaForTokenClassification:()=>d.XLMRobertaForTokenClassification,XLMRobertaModel:()=>d.XLMRobertaModel,XLMRobertaPreTrainedModel:()=>d.XLMRobertaPreTrainedModel,XLMRobertaTokenizer:()=>k.XLMRobertaTokenizer,XLMTokenizer:()=>k.XLMTokenizer,XLMWithLMHeadModel:()=>d.XLMWithLMHeadModel,XVectorOutput:()=>d.XVectorOutput,YolosFeatureExtractor:()=>Ae.YolosFeatureExtractor,YolosForObjectDetection:()=>d.YolosForObjectDetection,YolosImageProcessor:()=>Ae.YolosImageProcessor,YolosModel:()=>d.YolosModel,YolosObjectDetectionOutput:()=>d.YolosObjectDetectionOutput,YolosPreTrainedModel:()=>d.YolosPreTrainedModel,ZeroShotAudioClassificationPipeline:()=>C.ZeroShotAudioClassificationPipeline,ZeroShotClassificationPipeline:()=>C.ZeroShotClassificationPipeline,ZeroShotImageClassificationPipeline:()=>C.ZeroShotImageClassificationPipeline,ZeroShotObjectDetectionPipeline:()=>C.ZeroShotObjectDetectionPipeline,bankers_round:()=>Z.bankers_round,cat:()=>W.cat,cos_sim:()=>Z.cos_sim,dot:()=>Z.dot,dynamic_time_warping:()=>Z.dynamic_time_warping,env:()=>x.env,full:()=>W.full,full_like:()=>W.full_like,getKeyValueShapes:()=>Q.getKeyValueShapes,hamming:()=>H.hamming,hanning:()=>H.hanning,interpolate:()=>W.interpolate,interpolate_4d:()=>W.interpolate_4d,interpolate_data:()=>Z.interpolate_data,is_chinese_char:()=>k.is_chinese_char,layer_norm:()=>W.layer_norm,load_image:()=>S.load_image,log_softmax:()=>Z.log_softmax,magnitude:()=>Z.magnitude,matmul:()=>W.matmul,max:()=>Z.max,mean:()=>W.mean,mean_pooling:()=>W.mean_pooling,medianFilter:()=>Z.medianFilter,mel_filter_bank:()=>H.mel_filter_bank,min:()=>Z.min,ones:()=>W.ones,ones_like:()=>W.ones_like,permute:()=>W.permute,permute_data:()=>Z.permute_data,pipeline:()=>C.pipeline,quantize_embeddings:()=>W.quantize_embeddings,rand:()=>W.rand,read_audio:()=>H.read_audio,rfft:()=>W.rfft,round:()=>Z.round,slice:()=>W.slice,softmax:()=>Z.softmax,spectrogram:()=>H.spectrogram,stack:()=>W.stack,std_mean:()=>W.std_mean,topk:()=>W.topk,window_function:()=>H.window_function,zeros:()=>W.zeros,zeros_like:()=>W.zeros_like});var x=dr("./src/env.js"),C=dr("./src/pipelines.js"),d=dr("./src/models.js"),k=dr("./src/tokenizers.js"),Q=dr("./src/configs.js"),H=dr("./src/utils/audio.js"),S=dr("./src/utils/image.js"),W=dr("./src/utils/tensor.js"),Z=dr("./src/utils/maths.js"),R=dr("./src/base/feature_extraction_utils.js"),N=dr("./src/models/feature_extractors.js"),K=dr("./src/models/auto/feature_extraction_auto.js"),V=dr("./src/base/image_processors_utils.js"),Ae=dr("./src/models/image_processors.js"),me=dr("./src/models/auto/image_processing_auto.js"),Be=dr("./src/base/processing_utils.js"),Ee=dr("./src/models/processors.js"),se=dr("./src/models/auto/processing_auto.js"),ie=dr("./src/generation/streamers.js"),ve=dr("./src/generation/stopping_criteria.js"),g=dr("./src/generation/logits_process.js")})();var ep=I2.AutoTokenizer,Ap=I2.RawAudio,tp=I2.StyleTextToSpeech2Model,_u=I2.Tensor,pe=pe!==void 0?pe:{};pe.expectedDataFileDownloads||(pe.expectedDataFileDownloads=0);var rp=typeof importScripts=="function",$c=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",$u=typeof atob=="function"?atob:function(x){var C,d,k,Q,H,S,W="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",Z="",R=0;x=x.replace(/[^A-Za-z0-9\+\/\=]/g,"");do C=W.indexOf(x.charAt(R++))<<2|(Q=W.indexOf(x.charAt(R++)))>>4,d=(15&Q)<<4|(H=W.indexOf(x.charAt(R++)))>>2,k=(3&H)<<6|(S=W.indexOf(x.charAt(R++))),Z+=String.fromCharCode(C),H!==64&&(Z+=String.fromCharCode(d)),S!==64&&(Z+=String.fromCharCode(k));while(R<x.length);return Z};$c&&(process.argv.length>1&&(gg=process.argv[1].replace(/\\/g,"/")),process.argv.slice(2),process.on("uncaughtException",function(x){if(!(x instanceof np))throw x}),process.on("unhandledRejection",function(x){throw x}),pe.inspect=function(){return"[Emscripten Module object]"}),pe.expectedDataFileDownloads++,function(){if(pe.ENVIRONMENT_IS_PTHREAD)return;const x="/usr/share/espeak-ng-data",C=x+"/lang",d=x+"/voices";(function(k){var Q=null,H=null;function S(){function W(V,Ae){if(!V)throw Ae+new Error().stack}function Z(V,Ae,me){this.start=V,this.end=Ae,this.audio=me}pe.FS_createPath("/","usr",!0,!0),pe.FS_createPath("/usr","share",!0,!0),pe.FS_createPath("/usr/share","espeak-ng-data",!0,!0),pe.FS_createPath(x,"lang",!0,!0),pe.FS_createPath(C,"aav",!0,!0),pe.FS_createPath(C,"art",!0,!0),pe.FS_createPath(C,"azc",!0,!0),pe.FS_createPath(C,"bat",!0,!0),pe.FS_createPath(C,"bnt",!0,!0),pe.FS_createPath(C,"ccs",!0,!0),pe.FS_createPath(C,"cel",!0,!0),pe.FS_createPath(C,"cus",!0,!0),pe.FS_createPath(C,"dra",!0,!0),pe.FS_createPath(C,"esx",!0,!0),pe.FS_createPath(C,"gmq",!0,!0),pe.FS_createPath(C,"gmw",!0,!0),pe.FS_createPath(C,"grk",!0,!0),pe.FS_createPath(C,"inc",!0,!0),pe.FS_createPath(C,"ine",!0,!0),pe.FS_createPath(C,"ira",!0,!0),pe.FS_createPath(C,"iro",!0,!0),pe.FS_createPath(C,"itc",!0,!0),pe.FS_createPath(C,"jpx",!0,!0),pe.FS_createPath(C,"map",!0,!0),pe.FS_createPath(C,"miz",!0,!0),pe.FS_createPath(C,"myn",!0,!0),pe.FS_createPath(C,"poz",!0,!0),pe.FS_createPath(C,"roa",!0,!0),pe.FS_createPath(C,"sai",!0,!0),pe.FS_createPath(C,"sem",!0,!0),pe.FS_createPath(C,"sit",!0,!0),pe.FS_createPath(C,"tai",!0,!0),pe.FS_createPath(C,"trk",!0,!0),pe.FS_createPath(C,"urj",!0,!0),pe.FS_createPath(C,"zle",!0,!0),pe.FS_createPath(C,"zls",!0,!0),pe.FS_createPath(C,"zlw",!0,!0),pe.FS_createPath(x,"voices",!0,!0),pe.FS_createPath(d,"!v",!0,!0),pe.FS_createPath(d,"mb",!0,!0),Z.prototype={requests:{},open:function(V,Ae){this.name=Ae,this.requests[Ae]=this,pe.addRunDependency("fp "+this.name)},send:function(){},onload:function(){var V=this.byteArray.subarray(this.start,this.end);this.finish(V)},finish:function(V){pe.FS_createDataFile(this.name,null,V,!0,!0,!0),pe.removeRunDependency("fp "+this.name),this.requests[this.name]=null}};for(var R=k.files,N=0;N<R.length;++N)new Z(R[N].start,R[N].end,R[N].audio||0).open("GET",R[N].filename);function K(V){W(V,"Loading data file failed."),W(V.constructor.name===ArrayBuffer.name,"bad input to processPackageData");var Ae=new Uint8Array(V);Z.prototype.byteArray=Ae;for(var me=k.files,Be=0;Be<me.length;++Be)Z.prototype.requests[me[Be].filename].onload();pe.removeRunDependency("datafile_js/espeakng.worker.data")}pe.addRunDependency("datafile_js/espeakng.worker.data"),H?(K(H),H=null):Q=K}(async()=>{const W=function(K){if(typeof $c=="boolean"&&$c){var V=Buffer.from(K,"base64");return new Uint8Array(V.buffer,V.byteOffset,V.byteLength)}try{for(var Ae=$u(K),me=new Uint8Array(Ae.length),Be=0;Be<Ae.length;++Be)me[Be]=Ae.charCodeAt(Be);return me}catch(Ee){throw console.error($u),console.error(Ee),new Error("Converting base64 string to bytes failed.")}}(""),Z=new Blob([W]).stream().pipeThrough(new DecompressionStream("gzip")),R=[];for await(const K of Z)R.push(K);const N=await new Blob(R).arrayBuffer();Q?(Q(N),Q=null):H=N})(),pe.calledRun?S():(pe.preRun||(pe.preRun=[]),pe.preRun.push(S))})({files:[{filename:x+"/en_dict",start:0,end:167064},{filename:x+"/intonations",start:167064,end:169104},{filename:C+"/aav/vi",start:169104,end:169215},{filename:C+"/aav/vi-VN-x-central",start:169215,end:169358},{filename:C+"/aav/vi-VN-x-south",start:169358,end:169500},{filename:C+"/art/eo",start:169500,end:169541},{filename:C+"/art/ia",start:169541,end:169570},{filename:C+"/art/io",start:169570,end:169620},{filename:C+"/art/jbo",start:169620,end:169689},{filename:C+"/art/lfn",start:169689,end:169824},{filename:C+"/art/piqd",start:169824,end:169880},{filename:C+"/art/py",start:169880,end:170020},{filename:C+"/art/qdb",start:170020,end:170077},{filename:C+"/art/qya",start:170077,end:170250},{filename:C+"/art/sjn",start:170250,end:170425},{filename:C+"/azc/nci",start:170425,end:170539},{filename:C+"/bat/lt",start:170539,end:170567},{filename:C+"/bat/ltg",start:170567,end:170879},{filename:C+"/bat/lv",start:170879,end:171108},{filename:C+"/bnt/sw",start:171108,end:171149},{filename:C+"/bnt/tn",start:171149,end:171191},{filename:C+"/ccs/ka",start:171191,end:171315},{filename:C+"/cel/cy",start:171315,end:171352},{filename:C+"/cel/ga",start:171352,end:171418},{filename:C+"/cel/gd",start:171418,end:171469},{filename:C+"/cus/om",start:171469,end:171508},{filename:C+"/dra/kn",start:171508,end:171563},{filename:C+"/dra/ml",start:171563,end:171620},{filename:C+"/dra/ta",start:171620,end:171671},{filename:C+"/dra/te",start:171671,end:171741},{filename:C+"/esx/kl",start:171741,end:171771},{filename:C+"/eu",start:171771,end:171825},{filename:C+"/gmq/da",start:171825,end:171868},{filename:C+"/gmq/is",start:171868,end:171895},{filename:C+"/gmq/nb",start:171895,end:171982},{filename:C+"/gmq/sv",start:171982,end:172007},{filename:C+"/gmw/af",start:172007,end:172130},{filename:C+"/gmw/de",start:172130,end:172172},{filename:C+"/gmw/en",start:172172,end:172312},{filename:C+"/gmw/en-029",start:172312,end:172647},{filename:C+"/gmw/en-GB-scotland",start:172647,end:172942},{filename:C+"/gmw/en-GB-x-gbclan",start:172942,end:173180},{filename:C+"/gmw/en-GB-x-gbcwmd",start:173180,end:173368},{filename:C+"/gmw/en-GB-x-rp",start:173368,end:173617},{filename:C+"/gmw/en-US",start:173617,end:173874},{filename:C+"/gmw/en-US-nyc",start:173874,end:174145},{filename:C+"/gmw/lb",start:174145,end:174176},{filename:C+"/gmw/nl",start:174176,end:174199},{filename:C+"/grk/el",start:174199,end:174222},{filename:C+"/grk/grc",start:174222,end:174321},{filename:C+"/inc/as",start:174321,end:174363},{filename:C+"/inc/bn",start:174363,end:174388},{filename:C+"/inc/bpy",start:174388,end:174427},{filename:C+"/inc/gu",start:174427,end:174469},{filename:C+"/inc/hi",start:174469,end:174492},{filename:C+"/inc/kok",start:174492,end:174518},{filename:C+"/inc/mr",start:174518,end:174559},{filename:C+"/inc/ne",start:174559,end:174596},{filename:C+"/inc/or",start:174596,end:174635},{filename:C+"/inc/pa",start:174635,end:174660},{filename:C+"/inc/sd",start:174660,end:174726},{filename:C+"/inc/si",start:174726,end:174781},{filename:C+"/inc/ur",start:174781,end:174875},{filename:C+"/ine/hy",start:174875,end:174936},{filename:C+"/ine/hyw",start:174936,end:175301},{filename:C+"/ine/sq",start:175301,end:175404},{filename:C+"/ira/fa",start:175404,end:175494},{filename:C+"/ira/fa-Latn",start:175494,end:175763},{filename:C+"/ira/ku",start:175763,end:175803},{filename:C+"/iro/chr",start:175803,end:176372},{filename:C+"/itc/la",start:176372,end:176669},{filename:C+"/jpx/ja",start:176669,end:176721},{filename:C+"/ko",start:176721,end:176772},{filename:C+"/map/haw",start:176772,end:176814},{filename:C+"/miz/mto",start:176814,end:176997},{filename:C+"/myn/quc",start:176997,end:177207},{filename:C+"/poz/id",start:177207,end:177341},{filename:C+"/poz/mi",start:177341,end:177708},{filename:C+"/poz/ms",start:177708,end:178138},{filename:C+"/qu",start:178138,end:178226},{filename:C+"/roa/an",start:178226,end:178253},{filename:C+"/roa/ca",start:178253,end:178278},{filename:C+"/roa/es",start:178278,end:178341},{filename:C+"/roa/es-419",start:178341,end:178508},{filename:C+"/roa/fr",start:178508,end:178587},{filename:C+"/roa/fr-BE",start:178587,end:178671},{filename:C+"/roa/fr-CH",start:178671,end:178757},{filename:C+"/roa/ht",start:178757,end:178897},{filename:C+"/roa/it",start:178897,end:179006},{filename:C+"/roa/pap",start:179006,end:179068},{filename:C+"/roa/pt",start:179068,end:179163},{filename:C+"/roa/pt-BR",start:179163,end:179272},{filename:C+"/roa/ro",start:179272,end:179298},{filename:C+"/sai/gn",start:179298,end:179345},{filename:C+"/sem/am",start:179345,end:179386},{filename:C+"/sem/ar",start:179386,end:179436},{filename:C+"/sem/he",start:179436,end:179476},{filename:C+"/sem/mt",start:179476,end:179517},{filename:C+"/sem/ti",start:179517,end:179610},{filename:C+"/sit/cmn",start:179610,end:180296},{filename:C+"/sit/cmn-Latn-pinyin",start:180296,end:180457},{filename:C+"/sit/hak",start:180457,end:180585},{filename:C+"/sit/my",start:180585,end:180641},{filename:C+"/sit/yue",start:180641,end:180835},{filename:C+"/sit/yue-Latn-jyutping",start:180835,end:181048},{filename:C+"/tai/shn",start:181048,end:181140},{filename:C+"/tai/th",start:181140,end:181177},{filename:C+"/trk/az",start:181177,end:181222},{filename:C+"/trk/ba",start:181222,end:181247},{filename:C+"/trk/cv",start:181247,end:181287},{filename:C+"/trk/kk",start:181287,end:181327},{filename:C+"/trk/ky",start:181327,end:181370},{filename:C+"/trk/nog",start:181370,end:181409},{filename:C+"/trk/tk",start:181409,end:181434},{filename:C+"/trk/tr",start:181434,end:181459},{filename:C+"/trk/tt",start:181459,end:181482},{filename:C+"/trk/ug",start:181482,end:181506},{filename:C+"/trk/uz",start:181506,end:181545},{filename:C+"/urj/et",start:181545,end:181782},{filename:C+"/urj/fi",start:181782,end:182019},{filename:C+"/urj/hu",start:182019,end:182092},{filename:C+"/urj/smj",start:182092,end:182137},{filename:C+"/zle/be",start:182137,end:182189},{filename:C+"/zle/ru",start:182189,end:182246},{filename:C+"/zle/ru-LV",start:182246,end:182526},{filename:C+"/zle/ru-cl",start:182526,end:182617},{filename:C+"/zle/uk",start:182617,end:182714},{filename:C+"/zls/bg",start:182714,end:182825},{filename:C+"/zls/bs",start:182825,end:183055},{filename:C+"/zls/hr",start:183055,end:183317},{filename:C+"/zls/mk",start:183317,end:183345},{filename:C+"/zls/sl",start:183345,end:183388},{filename:C+"/zls/sr",start:183388,end:183638},{filename:C+"/zlw/cs",start:183638,end:183661},{filename:C+"/zlw/pl",start:183661,end:183699},{filename:C+"/zlw/sk",start:183699,end:183723},{filename:x+"/phondata",start:183723,end:734147},{filename:x+"/phonindex",start:734147,end:773403},{filename:x+"/phontab",start:773403,end:829491},{filename:d+"/!v/Alex",start:829491,end:829619},{filename:d+"/!v/Alicia",start:829619,end:830093},{filename:d+"/!v/Andrea",start:830093,end:830450},{filename:d+"/!v/Andy",start:830450,end:830770},{filename:d+"/!v/Annie",start:830770,end:831085},{filename:d+"/!v/AnxiousAndy",start:831085,end:831446},{filename:d+"/!v/Demonic",start:831446,end:835304},{filename:d+"/!v/Denis",start:835304,end:835609},{filename:d+"/!v/Diogo",start:835609,end:835988},{filename:d+"/!v/Gene",start:835988,end:836269},{filename:d+"/!v/Gene2",start:836269,end:836552},{filename:d+"/!v/Henrique",start:836552,end:836933},{filename:d+"/!v/Hugo",start:836933,end:837311},{filename:d+"/!v/Jacky",start:837311,end:837578},{filename:d+"/!v/Lee",start:837578,end:837916},{filename:d+"/!v/Marco",start:837916,end:838383},{filename:d+"/!v/Mario",start:838383,end:838653},{filename:d+"/!v/Michael",start:838653,end:838923},{filename:d+"/!v/Mike",start:838923,end:839035},{filename:d+"/!v/Mr serious",start:839035,end:842228},{filename:d+"/!v/Nguyen",start:842228,end:842508},{filename:d+"/!v/Reed",start:842508,end:842710},{filename:d+"/!v/RicishayMax",start:842710,end:842943},{filename:d+"/!v/RicishayMax2",start:842943,end:843378},{filename:d+"/!v/RicishayMax3",start:843378,end:843813},{filename:d+"/!v/Storm",start:843813,end:844233},{filename:d+"/!v/Tweaky",start:844233,end:847422},{filename:d+"/!v/UniRobot",start:847422,end:847839},{filename:d+"/!v/adam",start:847839,end:847914},{filename:d+"/!v/anika",start:847914,end:848407},{filename:d+"/!v/anikaRobot",start:848407,end:848919},{filename:d+"/!v/announcer",start:848919,end:849219},{filename:d+"/!v/antonio",start:849219,end:849600},{filename:d+"/!v/aunty",start:849600,end:849958},{filename:d+"/!v/belinda",start:849958,end:850298},{filename:d+"/!v/benjamin",start:850298,end:850499},{filename:d+"/!v/boris",start:850499,end:850723},{filename:d+"/!v/caleb",start:850723,end:850780},{filename:d+"/!v/croak",start:850780,end:850873},{filename:d+"/!v/david",start:850873,end:850985},{filename:d+"/!v/ed",start:850985,end:851272},{filename:d+"/!v/edward",start:851272,end:851423},{filename:d+"/!v/edward2",start:851423,end:851575},{filename:d+"/!v/f1",start:851575,end:851899},{filename:d+"/!v/f2",start:851899,end:852256},{filename:d+"/!v/f3",start:852256,end:852631},{filename:d+"/!v/f4",start:852631,end:852981},{filename:d+"/!v/f5",start:852981,end:853413},{filename:d+"/!v/fast",start:853413,end:853562},{filename:d+"/!v/grandma",start:853562,end:853825},{filename:d+"/!v/grandpa",start:853825,end:854081},{filename:d+"/!v/gustave",start:854081,end:854334},{filename:d+"/!v/ian",start:854334,end:857502},{filename:d+"/!v/iven",start:857502,end:857763},{filename:d+"/!v/iven2",start:857763,end:858042},{filename:d+"/!v/iven3",start:858042,end:858304},{filename:d+"/!v/iven4",start:858304,end:858565},{filename:d+"/!v/john",start:858565,end:861751},{filename:d+"/!v/kaukovalta",start:861751,end:862112},{filename:d+"/!v/klatt",start:862112,end:862150},{filename:d+"/!v/klatt2",start:862150,end:862188},{filename:d+"/!v/klatt3",start:862188,end:862227},{filename:d+"/!v/klatt4",start:862227,end:862266},{filename:d+"/!v/klatt5",start:862266,end:862305},{filename:d+"/!v/klatt6",start:862305,end:862344},{filename:d+"/!v/linda",start:862344,end:862694},{filename:d+"/!v/m1",start:862694,end:863029},{filename:d+"/!v/m2",start:863029,end:863293},{filename:d+"/!v/m3",start:863293,end:863593},{filename:d+"/!v/m4",start:863593,end:863883},{filename:d+"/!v/m5",start:863883,end:864145},{filename:d+"/!v/m6",start:864145,end:864333},{filename:d+"/!v/m7",start:864333,end:864587},{filename:d+"/!v/m8",start:864587,end:864871},{filename:d+"/!v/marcelo",start:864871,end:865122},{filename:d+"/!v/max",start:865122,end:865347},{filename:d+"/!v/michel",start:865347,end:865751},{filename:d+"/!v/miguel",start:865751,end:866133},{filename:d+"/!v/mike2",start:866133,end:866321},{filename:d+"/!v/norbert",start:866321,end:869510},{filename:d+"/!v/pablo",start:869510,end:872652},{filename:d+"/!v/paul",start:872652,end:872936},{filename:d+"/!v/pedro",start:872936,end:873288},{filename:d+"/!v/quincy",start:873288,end:873642},{filename:d+"/!v/rob",start:873642,end:873907},{filename:d+"/!v/robert",start:873907,end:874181},{filename:d+"/!v/robosoft",start:874181,end:874632},{filename:d+"/!v/robosoft2",start:874632,end:875086},{filename:d+"/!v/robosoft3",start:875086,end:875541},{filename:d+"/!v/robosoft4",start:875541,end:875988},{filename:d+"/!v/robosoft5",start:875988,end:876433},{filename:d+"/!v/robosoft6",start:876433,end:876720},{filename:d+"/!v/robosoft7",start:876720,end:877130},{filename:d+"/!v/robosoft8",start:877130,end:877373},{filename:d+"/!v/sandro",start:877373,end:877903},{filename:d+"/!v/shelby",start:877903,end:878183},{filename:d+"/!v/steph",start:878183,end:878547},{filename:d+"/!v/steph2",start:878547,end:878914},{filename:d+"/!v/steph3",start:878914,end:879291},{filename:d+"/!v/travis",start:879291,end:879674},{filename:d+"/!v/victor",start:879674,end:879927},{filename:d+"/!v/whisper",start:879927,end:880113},{filename:d+"/!v/whisperf",start:880113,end:880505},{filename:d+"/!v/zac",start:880505,end:880780},{filename:d+"/mb/mb-af1",start:880780,end:880868},{filename:d+"/mb/mb-af1-en",start:880868,end:880951},{filename:d+"/mb/mb-ar1",start:880951,end:881035},{filename:d+"/mb/mb-ar2",start:881035,end:881119},{filename:d+"/mb/mb-br1",start:881119,end:881251},{filename:d+"/mb/mb-br2",start:881251,end:881387},{filename:d+"/mb/mb-br3",start:881387,end:881519},{filename:d+"/mb/mb-br4",start:881519,end:881655},{filename:d+"/mb/mb-ca1",start:881655,end:881760},{filename:d+"/mb/mb-ca2",start:881760,end:881865},{filename:d+"/mb/mb-cn1",start:881865,end:881957},{filename:d+"/mb/mb-cr1",start:881957,end:882068},{filename:d+"/mb/mb-cz1",start:882068,end:882138},{filename:d+"/mb/mb-cz2",start:882138,end:882220},{filename:d+"/mb/mb-de1",start:882220,end:882364},{filename:d+"/mb/mb-de1-en",start:882364,end:882460},{filename:d+"/mb/mb-de2",start:882460,end:882588},{filename:d+"/mb/mb-de2-en",start:882588,end:882668},{filename:d+"/mb/mb-de3",start:882668,end:882767},{filename:d+"/mb/mb-de3-en",start:882767,end:882863},{filename:d+"/mb/mb-de4",start:882863,end:882992},{filename:d+"/mb/mb-de4-en",start:882992,end:883073},{filename:d+"/mb/mb-de5",start:883073,end:883309},{filename:d+"/mb/mb-de5-en",start:883309,end:883399},{filename:d+"/mb/mb-de6",start:883399,end:883521},{filename:d+"/mb/mb-de6-en",start:883521,end:883595},{filename:d+"/mb/mb-de6-grc",start:883595,end:883678},{filename:d+"/mb/mb-de7",start:883678,end:883828},{filename:d+"/mb/mb-de8",start:883828,end:883899},{filename:d+"/mb/mb-ee1",start:883899,end:883996},{filename:d+"/mb/mb-en1",start:883996,end:884127},{filename:d+"/mb/mb-es1",start:884127,end:884241},{filename:d+"/mb/mb-es2",start:884241,end:884349},{filename:d+"/mb/mb-es3",start:884349,end:884453},{filename:d+"/mb/mb-es4",start:884453,end:884541},{filename:d+"/mb/mb-fr1",start:884541,end:884707},{filename:d+"/mb/mb-fr1-en",start:884707,end:884811},{filename:d+"/mb/mb-fr2",start:884811,end:884914},{filename:d+"/mb/mb-fr3",start:884914,end:885014},{filename:d+"/mb/mb-fr4",start:885014,end:885141},{filename:d+"/mb/mb-fr4-en",start:885141,end:885248},{filename:d+"/mb/mb-fr5",start:885248,end:885348},{filename:d+"/mb/mb-fr6",start:885348,end:885448},{filename:d+"/mb/mb-fr7",start:885448,end:885531},{filename:d+"/mb/mb-gr1",start:885531,end:885625},{filename:d+"/mb/mb-gr2",start:885625,end:885719},{filename:d+"/mb/mb-gr2-en",start:885719,end:885807},{filename:d+"/mb/mb-hb1",start:885807,end:885875},{filename:d+"/mb/mb-hb2",start:885875,end:885958},{filename:d+"/mb/mb-hu1",start:885958,end:886060},{filename:d+"/mb/mb-hu1-en",start:886060,end:886157},{filename:d+"/mb/mb-ic1",start:886157,end:886245},{filename:d+"/mb/mb-id1",start:886245,end:886346},{filename:d+"/mb/mb-in1",start:886346,end:886415},{filename:d+"/mb/mb-in2",start:886415,end:886500},{filename:d+"/mb/mb-ir1",start:886500,end:887253},{filename:d+"/mb/mb-it1",start:887253,end:887337},{filename:d+"/mb/mb-it2",start:887337,end:887424},{filename:d+"/mb/mb-it3",start:887424,end:887566},{filename:d+"/mb/mb-it4",start:887566,end:887711},{filename:d+"/mb/mb-jp1",start:887711,end:887782},{filename:d+"/mb/mb-jp2",start:887782,end:887883},{filename:d+"/mb/mb-jp3",start:887883,end:887970},{filename:d+"/mb/mb-la1",start:887970,end:888053},{filename:d+"/mb/mb-lt1",start:888053,end:888140},{filename:d+"/mb/mb-lt2",start:888140,end:888227},{filename:d+"/mb/mb-ma1",start:888227,end:888325},{filename:d+"/mb/mb-mx1",start:888325,end:888445},{filename:d+"/mb/mb-mx2",start:888445,end:888565},{filename:d+"/mb/mb-nl1",start:888565,end:888634},{filename:d+"/mb/mb-nl2",start:888634,end:888730},{filename:d+"/mb/mb-nl2-en",start:888730,end:888821},{filename:d+"/mb/mb-nl3",start:888821,end:888906},{filename:d+"/mb/mb-nz1",start:888906,end:888974},{filename:d+"/mb/mb-pl1",start:888974,end:889073},{filename:d+"/mb/mb-pl1-en",start:889073,end:889155},{filename:d+"/mb/mb-pt1",start:889155,end:889286},{filename:d+"/mb/mb-ro1",start:889286,end:889373},{filename:d+"/mb/mb-ro1-en",start:889373,end:889454},{filename:d+"/mb/mb-sw1",start:889454,end:889552},{filename:d+"/mb/mb-sw1-en",start:889552,end:889645},{filename:d+"/mb/mb-sw2",start:889645,end:889747},{filename:d+"/mb/mb-sw2-en",start:889747,end:889846},{filename:d+"/mb/mb-tl1",start:889846,end:889931},{filename:d+"/mb/mb-tr1",start:889931,end:890016},{filename:d+"/mb/mb-tr2",start:890016,end:890130},{filename:d+"/mb/mb-us1",start:890130,end:890300},{filename:d+"/mb/mb-us2",start:890300,end:890478},{filename:d+"/mb/mb-us3",start:890478,end:890658},{filename:d+"/mb/mb-vz1",start:890658,end:890802}],remote_package_size:890802})}();var ed=Object.assign({},pe),gg="./this.program",Ic=pe.print||console.log.bind(console),w2=pe.printErr||console.warn.bind(console);Object.assign(pe,ed),ed=null,pe.arguments&&pe.arguments,pe.thisProgram&&(gg=pe.thisProgram),pe.quit&&pe.quit,pe.wasmBinary&&pe.wasmBinary,pe.noExitRuntime;var sg,k2={Memory:function(x){this.buffer=new ArrayBuffer(65536*x.initial)},Module:function(x){},Instance:function(x,C){this.exports=function(d){for(var k,Q=new Uint8Array(123),H=25;H>=0;--H)Q[48+H]=52+H,Q[65+H]=H,Q[97+H]=26+H;function S(se,ie,ve){for(var g,b,e=0,l=ie,M=ve.length,ue=ie+(3*M>>2)-(ve[M-2]=="=")-(ve[M-1]=="=");e<M;e+=4)g=Q[ve.charCodeAt(e+1)],b=Q[ve.charCodeAt(e+2)],se[l++]=Q[ve.charCodeAt(e)]<<2|g>>4,l<ue&&(se[l++]=g<<4|b>>2),l<ue&&(se[l++]=b<<6|Q[ve.charCodeAt(e+3)])}Q[43]=62,Q[47]=63;var W=new ArrayBuffer(16),Z=new Int32Array(W),R=new Float32Array(W),N=new Float64Array(W);function K(se){return Z[se]}function V(se,ie){Z[se]=ie}function Ae(){return N[0]}function me(se){N[0]=se}function Be(){throw new Error("abort")}function Ee(se){R[2]=se}return function(se){var ie=se.a,ve=ie.a.buffer,g=new Int8Array(ve),b=new Int16Array(ve),e=new Int32Array(ve),l=new Uint8Array(ve),M=new Uint16Array(ve),ue=new Uint32Array(ve),D=new Float64Array(ve),F=Math.imul,Ye=Math.fround,Ne=Math.abs,Oe=Math.clz32,AA=Math.min,tA=Math.floor,BA=Math.ceil,DA=ie.b,Ge=ie.c,ke=ie.d,ze=ie.e,Ke=ie.f,Pe=ie.g,xA=ie.h,sA=ie.i,cA=ie.j,yA=ie.k,gA=ie.l,He=ie.m,Je=ie.n,hA=ie.o,IA=ie.p,Qe=ie.q,mA=ie.r,MA=ie.s,LA=ie.t,OA=ie.u,q=294656,HA=0,ge=0,J=0;function fe(A){var t,r=0,n=0,a=0,s=0,o=0,c=0,f=0,m=0,p=0,I=0,y=0,P=0,Y=0,X=0,_=0,ce=0,he=0,ye=0,De=0,Re=0,Xe=0,nA=0,fA=0,GA=0,SA=0,At=0,ct=0,bt=0,Nt=0,qt=0,tr=0,mr=0,Cr=0,Gr=0,Dr=0,Or=0,Kr=0,on=0,$r=0,ln=0,En=0,na=0,pa=0,ha=0,Oa=0,Fs=0,hs=0,ms=0,Ss=0,_i=0,N0=0,O0=0,ti=0;if(q=t=q-16|0,(0|A)!=2)if(A=e[33283],e[A>>2]!=e[A+4>>2]){if(Cn(e[e[32972]+60>>2]),X=e[47192],ln=t+12|0,Oa=t+8|0,q=f=q-6832|0,e[f+6816>>2]=0,e[f+6808>>2]=32,e[f+6800>>2]=0,X){e[47351]=0,e[47350]=0,e[47352]=0,g[189076]=0,A=e[33284],e[47353]=(0|A)>0?A:0,e[47355]=e[47354]+1,VA(GA=f+5184|0,0,1600),Kr=f+6800|0,q=o=q-2608|0,e[o+2156>>2]=32,e[o+2148>>2]=0,l[134760]&&(g[190280]=0,g[134760]=0),e[X+8216>>2]=0,e[X+8220>>2]=0,e[X+288>>2]=0,e[f+780>>2]=0,g[189360]=0;e:if(A=e[33691])e[o+2152>>2]=A;else{A:{r:{if(!(r=e[33285])){if(A=e[33283],e[A>>2]==e[A+4>>2]){e[o+2152>>2]=0;break e}if(!(r=e[33285]))break r}e[33285]=0;break A}e[33284]=e[33284]+1,A=e[33283],r=0|pt[e[A+8>>2]](A)}e[o+2152>>2]=r}Ss=GA+2|0,Xe=32;e:{for(;;){Re=Xe;A:{r:{a:{if(r=e[33691],(a=e[33285])?A=0:(a=e[33285],A=e[33283],A=e[A>>2]==e[A+4>>2]),r|!A|a||!(e[32524]<0)){if(!Xs(e[o+2156>>2])){if((a=(0|(A=e[49828]))>0)&(0|(r=A))<(0|(A=e[33284])))break a;if(!((0|(r=e[49845]))<=0|(0|A)<(0|r))){e[49845]=0,g[134760]=1,e[33285]=e[o+2152>>2],n=16384;break e}}Xe=e[o+2156>>2],e[o+2156>>2]=e[o+2152>>2];s:{c:{o:{u:{l:{if((0|(r=e[32524]))>=0){if(l[r+134736|0])break l;e[32524]=-1}if(r=e[33285])break o;if(A=e[33283],e[A>>2]!=e[A+4>>2])break u;r=32;break s}e[33691]|r||(e[o+2156>>2]=g[134736],r=1),e[32524]=r+1,r=g[r+134736|0];break s}if(!(r=e[33285]))break c}e[33285]=0;break s}e[33284]=e[33284]+1,A=e[33283],r=0|pt[e[A+8>>2]](A)}e[o+2152>>2]=r,e[33691]=0;s:if(!(m|!e[47203])){c:{if((0|(A=e[o+2156>>2]))!=60){if((0|r)!=35&r-97>>>0>25|(0|A)!=38)break s;for(a=e[33285],s=0;;){o:{if(e[o+2156>>2]=r,!a){if(A=e[33283],e[A>>2]==e[A+4>>2])break o;r=e[o+2156>>2]}if(!(!((r=!!(0|Xs(r)))|(0|(A=e[o+2156>>2]))==35)|s>>>0>19)){g[(o+112|0)+s|0]=A,s=s+1|0,(r=e[33285])?(e[33285]=0,a=0):(e[33284]=e[33284]+1,A=e[33283],r=0|pt[e[A+8>>2]](A),a=e[33285]);continue}}break}g[(o+112|0)+s|0]=0;o:{u:{if(!(r=e[33285])){if(r=0,A=e[33283],e[A>>2]==e[A+4>>2])break o;if(!(r=e[33285]))break u}e[33285]=0;break o}e[33284]=e[33284]+1,A=e[33283],r=0|pt[e[A+8>>2]](A)}e[o+2152>>2]=r,e[o+100>>2]=e[o+2156>>2],e[o+104>>2]=r,e[o+96>>2]=o+112,QA(134736,84252,o+96|0);o:{if(e[o+2156>>2]==59){s=o+2156|0,Y=o+2152|0,q=a=q-32|0;u:if(l[0|(r=o+112|0)]!=35)A=-1,(0|(r=va(130752,r)))!=-1&&(e[s>>2]=r,e[Y>>2]||(e[Y>>2]=32),A=r);else{if(l[0|(A=r+1|0)]==120){e[a>>2]=s,A=nt(r+2|0,90005,a);break u}e[a+16>>2]=s,A=nt(A,90070,a+16|0)}if(q=a+32|0,(0|A)>0)break o}e[32524]=0,e[o+2156>>2]=38,e[o+2152>>2]=32;break s}if((0|(A=e[o+2156>>2]))>32)break s;if(!(r=e[33692]-20|0)|(0|r)==16)break c;break s}if((0|r)!=47&&!fa(r)&&(0|(A=e[o+2152>>2]))!=63&&(0|A)!=33)break s;if((0|(A=e[o+2148>>2]))>780){e[33691]=e[o+2156>>2],g[0|(A=A+189424|0)]=32,g[A+1|0]=0,e[33285]=e[o+2152>>2],n=16384;break e}for(Y=e[33285],s=0,r=e[o+2152>>2];e[o+2156>>2]=r,a=0,Y||(A=e[33283],a=e[A>>2]==e[A+4>>2],r=e[o+2156>>2]),!((0|r)==62|a|s>>>0>499);)e[(o+144|0)+(s<<2)>>2]=r,s=s+1|0,(r=e[33285])?(Y=0,e[33285]=0):(e[33284]=e[33284]+1,A=e[33283],r=0|pt[e[A+8>>2]](A),Y=e[33285]);e[(a=o+144|0)+(s<<2)>>2]=0,e[o+2152>>2]=32,nA=o+2148|0,Re=e[32525],r=0,q=De=q-560|0;o:if(Pi(a,84333,3)&&Pi(a,84477,4)){for(A=(a+(D0(a)<<2)|0)-4|0,(0|(SA=e[A>>2]))==47&&(e[A>>2]=32);;){if(A=e[a+(r<<2)>>2]){if(Rr(A))A=r;else if(g[(De+512|0)+r|0]=Wt(A<<24>>24),A=39,(0|(r=r+1|0))!=39)continue}else A=r;break}if(g[(De+512|0)+A|0]=0,l[De+512|0]!=47){if((0|(Y=va(130480,De+512|0)))!=16&&(r=e[nA>>2],e[nA>>2]=r+1,g[r+189424|0]=32),(0|SA)==47&&(r=0,!(502241>>>Y&1)))break o}else(0|(r=va(130480,De+512|1)))!=16&&(s=e[nA>>2],e[nA>>2]=s+1,g[s+189424|0]=32),Y=r+32|0;s=a+(A<<2)|0,A=e[33708],m=F(A,76)+133076|0,r=262174;u:{l:{i:{p:switch(Y-1|0){case 33:C:if(!((0|A)<=1)){for(;;){if(e[F(r=A-1|0,76)+133152>>2]==2)break C;if(e[33708]=r,a=A>>>0>2,A=r,!a)break}A=1}r=Dn(s,34,A);break o;case 32:C:if(!((0|A)<=1)){for(;;){if(e[F(r=A-1|0,76)+133152>>2]==1)break C;if(e[33708]=r,a=A>>>0>2,A=r,!a)break}A=1}r=Dn(s,33,A)+524328|0;break o;case 9:(0|(r=e[33709]))<=18&&(e[33709]=r+1),e[(A=134912+(m=r<<6)|0)>>2]=10,e[A+4>>2]=-1,e[A+8>>2]=-1,e[A+52>>2]=-1,e[A+56>>2]=-1,e[A+44>>2]=-1,e[A+48>>2]=-1,e[A+36>>2]=-1,e[A+40>>2]=-1,e[A+28>>2]=-1,e[A+32>>2]=-1,e[A+20>>2]=-1,e[A+24>>2]=-1,e[A+12>>2]=-1,e[A+16>>2]=-1,e[A+60>>2]=-1,A=Ut(s,88301),a=Ut(s,88390),Di(A,88479)?Di(A,88528)||(e[28+(134912+(r<<6)|0)>>2]=vn(a,130224)):e[24+(m+134912|0)>>2]=vn(a,130192),ea(nA,e[33709]);break i;case 2:for((0|(A=e[33709]))<=18&&(e[33709]=A+1),e[(A=134912+(Fs=A<<6)|0)>>2]=3,e[A+4>>2]=-1,e[A+8>>2]=-1,e[A+52>>2]=-1,e[A+56>>2]=-1,e[A+44>>2]=-1,e[A+48>>2]=-1,e[A+36>>2]=-1,e[A+40>>2]=-1,e[A+28>>2]=-1,e[A+32>>2]=-1,e[A+20>>2]=-1,e[A+24>>2]=-1,e[A+12>>2]=-1,e[A+16>>2]=-1,e[A+60>>2]=-1,tr=1;;){if(a=Ut(s,e[130448+(mr=tr<<2)>>2])){SA=0,A=e[mr+131072>>2];C:if(Y=e[A>>2])for(;;){for(r=0;m=g[r+Y|0],(Re=e[(r<<2)+a>>2])&&(r=r+1|0,(0|m)==(0|Re)););switch(Re-34|0){case 0:case 5:if(!m)break C}if(!(Y=e[A+((SA=SA+1|0)<<3)>>2]))break}_i=mr+(Fs+134912|0)|0;C:if((0|(A=e[4+(A+(SA<<3)|0)>>2]))>=0)A=(0|F(A,e[4+(mr+134912|0)>>2]))/100|0;else{for(;a=(A=a)+4|0,Rr(e[A>>2]););for(hs=e[A>>2]==43,a=((ms=e[(A=A+(hs<<2)|0)>>2]==45)<<2)+A|0,SA=De+96|0,q=Y=(q=m=q-16|0)-224|0,VA(Y+16|0,0,144),A=Y+160|4,e[Y+24>>2]=A,e[Y+60>>2]=A,e[Y+92>>2]=-1,e[Y+64>>2]=60,e[Y+20>>2]=A,e[Y+48>>2]=19,r=a;r=(A=r)+4|0,Re=(Re=e[A>>2])?Wr(124960,Re):0;);e[Y+100>>2]=A,Aa(r=Y+16|0,0,0),NA(Y,r,1,1),r=e[Y+8>>2],N0=e[Y+12>>2],Re=e[Y>>2],O0=e[Y+4>>2],SA&&(ti=SA,SA=e[Y+136>>2]+(e[Y+20>>2]-e[Y+60>>2]|0)|0,e[ti>>2]=SA?A+(SA<<2)|0:a),e[(A=m)+8>>2]=r,e[A+12>>2]=N0,e[A>>2]=Re,e[A+4>>2]=O0,q=Y+224|0,ye=Qa(e[A>>2],e[A+4>>2],e[A+8>>2],e[A+12>>2]),q=A+16|0;m:{r=100;b:if((0|(A=a))!=(0|(a=e[De+96>>2]))){r=ms?-1:hs;h:{if((0|(A=e[a>>2]))!=115){if((0|A)!=37)break h;if(Ne(ye=r?+(0|r)*ye+100:ye)<2147483648){r=~~ye;break b}r=-2147483648;break b}if(e[a+4>>2]==116){me(+(Nt=ye*+(0|r)/12)),A=0|K(1),K(0);E:{if((r=(A=A>>>20&2047)-969|0)>>>0>=63){if(ye=Nt+1,(0|r)<0)break E;if(me(+Nt),r=0|K(1),a=0|K(0),!(A>>>0<1033)){if(ye=0,!a&(0|r)==-1048576||(ye=Nt+1,A>>>0>=2047))break E;if((0|r)>0|(0|r)>=0){D[8+(A=q-16|0)>>3]=3105036184601418e216,ye=3105036184601418e216*D[A+8>>3];break E}if(!(r>>>0<3230714880)){D[8+(A=q-16|0)>>3]=12882297539194267e-247,ye=12882297539194267e-247*D[A+8>>3];break E}}m=A,A=!(a<<1)&(0|(A=r<<1|a>>>31))==-2129002496|A>>>0<2165964800?m:0}En=(Nt=(ye=Nt-((on=(ye=D[14416])+Nt)-ye))*ye)*Nt*(ye*D[14421]+D[14420]),Nt*=ye*D[14419]+D[14418],ye*=D[14417],me(+on),K(1),m=0|K(0),ye=En+(Nt+(ye+D[115376+(a=m<<4&2032)>>3])),Re=e[(a=a+115384|0)>>2],Y=e[a+4>>2],a=(r=Re)+(Re=0)|0,r=(m<<13)+Y|0,r=a>>>0<Re>>>0?r+1|0:r,A?(V(0,0|a),V(1,0|r),ye=(Nt=+Ae())*ye+Nt):-2147483648&m?(V(0,0|a),V(1,r+1071644672|0),(ye=(on=(Nt=+Ae())*ye)+Nt)<1&&(e[8+(A=q-16|0)>>2]=0,e[A+12>>2]=1048576,D[A+8>>3]=22250738585072014e-324*D[A+8>>3],ye=(ye=(En=ye+1)+(on+(Nt-ye)+(ye+(1-En)))+-1)==0?0:ye),ye*=22250738585072014e-324):(V(0,0|a),V(1,r+-1048576|0),ye=(Nt=+Ae())*ye+Nt,ye+=ye)}if(Ne(ye*=100)<2147483648){r=~~ye;break b}r=-2147483648;break b}}if((0|tr)!=1)break m;if(r)r=100+(A=Ne(ye=ye*+(0|r)*100)<2147483648?~~ye:-2147483648)|0;else{if(Ne(ye*=100)<2147483648){r=~~ye;break b}r=-2147483648}}A=(0|F(r,e[mr+134848>>2]))/100|0;break C}A=Ne(ye)<2147483648?~~ye:-2147483648,r&&(A=e[mr+134848>>2]+F(A,r)|0)}e[_i+4>>2]=A}if((0|(tr=tr+1|0))==5)break}ea(nA,e[33709]);break i;case 11:(0|(r=e[33709]))<=18&&(e[33709]=r+1),e[(A=134912+(r<<6)|0)>>2]=12,e[A+4>>2]=-1,e[A+8>>2]=-1,e[A+52>>2]=-1,e[A+56>>2]=-1,e[A+44>>2]=-1,e[A+48>>2]=-1,e[A+36>>2]=-1,e[A+40>>2]=-1,e[A+28>>2]=-1,e[A+32>>2]=-1,e[A+20>>2]=-1,e[A+24>>2]=-1,e[A+12>>2]=-1,e[A+16>>2]=-1,e[A+60>>2]=-1,A=(A=Ut(s,88658))?vn(A,130400):3,a=134912+(r<<6)|0,e[e[47192]+148>>2]!=1?(e[52+(134912+(r<<6)|0)>>2]=A,A=l[A+102776|0]):(e[20+(134912+(r<<6)|0)>>2]=l[A+102764|0],A=l[A+102770|0]),e[a+12>>2]=A,ea(nA,e[33709]);break i;case 34:case 41:case 43:if(!((0|(A=e[33709]))<=0)){if(s=Y-32|0,Y=0,a=0,r=0,A>>>0>=4)for(m=-4&A,SA=0;tr=2|r,mr=1|r,a=(0|s)==e[134912+((Re=3|r)<<6)>>2]?Re:(0|s)==e[134912+(tr<<6)>>2]?tr:(0|s)==e[134912+(mr<<6)>>2]?mr:(0|s)==e[134912+(r<<6)>>2]?r:a,r=r+4|0,(0|m)!=(0|(SA=SA+4|0)););if(m=3&A)for(;a=(0|s)==e[134912+(r<<6)>>2]?r:a,r=r+1|0,(0|m)!=(0|(Y=Y+1|0)););(0|a)<=0||(e[33709]=a,A=a)}ea(nA,A);break i;case 7:if(A=Ut(s,88741),r=Ut(s,88860),(0|vn(A,130176))!=1)break i;A=e[nA>>2],e[nA>>2]=A+1,g[A+189424|0]=91,A=e[nA>>2],e[nA>>2]=A+1,g[A+189424|0]=91,A=Sn((A=e[nA>>2])+189424|0,r,800-A|0)+e[nA>>2]|0,e[nA>>2]=A+1,g[A+189424|0]=93,A=e[nA>>2],e[nA>>2]=A+1,g[A+189424|0]=93;break i;case 35:e[33692]==36&&(g[e[nA>>2]+189424|0]=0,(a=va(131104,r=(A=e[33707])+189424|0))&&(e[nA>>2]=Nr(a,r)+A)),A=e[nA>>2],e[nA>>2]=A+1,g[A+189424|0]=1,A=e[nA>>2],e[nA>>2]=A+1,g[A+189424|0]=89,e[33692]=0;break i;case 8:if(!(A=Ut(s,89299)))break i;g[134824]=1,r=e[nA>>2],e[nA>>2]=Sn(r+189424|0,A,800-r|0)+e[nA>>2];break i;case 13:g[134824]=1;break i;case 40:case 45:g[134824]=0;break i;case 4:if(!(A=Ut(s,89360)))break i;if(Sn(De+352|0,A,160),l[De+352|0]&&!Mr(199328,De+352|0)){g[134760]=1,g[199328]=0,r=16384;break o}if((0|(A=Ks(De+352|0)))<0)break i;e[De+20>>2]=A,e[De+16>>2]=1,QA(A=De+352|0,89460,De+16|0),JA(e[nA>>2]+189424|0,A),e[nA>>2]=e[nA>>2]+RA(A);break i;case 10:(0|(r=e[33709]))<=18&&(e[33709]=r+1),e[(A=134912+(r<<6)|0)>>2]=11,e[A+4>>2]=-1,e[A+8>>2]=-1,e[A+52>>2]=-1,e[A+56>>2]=-1,e[A+44>>2]=-1,e[A+48>>2]=-1,e[A+36>>2]=-1,e[A+40>>2]=-1,e[A+28>>2]=-1,e[A+32>>2]=-1,e[A+20>>2]=-1,e[A+24>>2]=-1,e[A+12>>2]=-1,e[A+16>>2]=-1,e[A+60>>2]=-1;C:if(A=Ut(s,89514)){if(Sn(De+352|0,A,160),e[34441]){if((0|(A=Ks(De+352|0)))<0||0|pt[e[34441]](1,A+e[33282]|0,Re))break C;e[De+68>>2]=A,e[De+64>>2]=1,QA(De+352|0,89658,De- -64|0)}else{if(!Re|l[De+352|0]==47?A=m0(De+352|0):(e[De+48>>2]=Re,e[De+52>>2]=De+352,QA(A=De+96|0,89564,De+48|0),A=m0(A)),(0|A)<0)break C;e[De+36>>2]=A,e[De+32>>2]=1,QA(De+352|0,89623,De+32|0)}A=De+352|0,JA(e[nA>>2]+189424|0,A),e[nA>>2]=e[nA>>2]+RA(A),e[4+(134912+(r<<6)|0)>>2]=1}if(ea(nA,e[33709]),(0|SA)==47){g0(11,nA),r=16384;break o}g[134772]=1,r=16384;break o;case 42:g0(43,nA),g[134772]=0,r=16384;break o;case 12:C:{if(A=Ut(s,89714)){if(r=16384,(m=(0|(A=vn(A,130336)))<0?2:A)>>>0<=2&&(A=e[nA>>2],e[De+84>>2]=m,e[De+80>>2]=1,QA(A+189424|0,89770,De+80|0),e[nA>>2]=e[nA>>2]+3,r=0),A=e[102784+(m<<2)>>2],!(a=Ut(s,89907)))break C;break l}if(r=16384,a=Ut(s,89907))break l;A=21;break u}if(m>>>0<3)break i;break u;case 0:(A=Ut(s,89965))&&(Sn(r=De+352|0,A,160),Ks(r)),r=Dn(s,1,e[33708])?147456:0;break o;case 1:r=Dn(s,2,A)?147456:0;break o;case 5:r=0,e[m>>2]==6&&(r=Dn(s,38,A),A=e[33708]),r=524358+(Dn(s,6,A)|r)|0;break o;case 6:r=0,(0|(a=e[m>>2]))==6&&(r=Dn(s,38,A),a=e[m>>2]),(0|a)==7&&(r=Dn(s,39,e[33708])|r),r=524358+(r|Dn(s,7,e[33708]))|0;break o;case 37:if(r=524328,e[m>>2]!=6)break o;r=Dn(s,38,A)+524328|0;break o;case 38:if(r=524358,(-2&e[m>>2])!=6)break o;r=Dn(s,39,A)+524358|0;break o;case 14:case 46:break o;case 3:break p;default:break i}A=Ut(s,88893),r=Ut(s,88992),a=Ut(s,89153),s=vn(A,130272),r=vn(r,130320),A=B0(a,0),e[De>>2]=1,a=(0|A)<2?193:A- -64|0,r=(0|(A=(0|r)==1?19:s))==64?a:A,e[De+4>>2]=r,QA(A=De+352|0,89230,De),JA(e[nA>>2]+189424|0,A),A=e[nA>>2]+RA(A)|0,e[nA>>2]=A,e[33707]=A,e[33692]=r}r=0;break o}A=B0(a,1),a=e[33722],Fi(1,e[33713]),(0|(A=(0|(a=(0|F(A,a))/100<<8))/(0|F(e[36429],10))|0))<=199&&(A=(0|a)/(0|F(e[36428],10))|0),r=r||16384}a=A>>>5|0,s=A,r=((A=(0|A)>4095)?a>>>0>=4095?4095:a:s)+(A?8388608|r:r)|0}if(q=De+560|0,r){if(A=e[o+2148>>2]+189424|0,g[0|A]=32,g[A+1|0]=0,!(131072&r)){n=r;break e}JA(189360,134784),n=r;break e}e[o+2156>>2]=32;o:{u:{if(!(r=e[33285])){if(m=0,A=e[33283],e[A>>2]==e[A+4>>2])continue;if(!(r=e[33285]))break u}e[33285]=0;break o}e[33284]=e[33284]+1,A=e[33283],r=0|pt[e[A+8>>2]](A)}e[o+2152>>2]=r,m=0;continue}e[o+2156>>2]=A+57344}if(l[134824])continue;if(a=e[o+2156>>2],!((0|(A=e[o+2152>>2]))!=10|e[47268]!=-1)){(0|(n=Wa(a)))==16384?(A=e[o+2148>>2],b[GA+(A<<1)>>1]=e[33284]-e[47353],e[Kr>>2]=A,n=524328,A=Nr(e[o+2156>>2],A+189424|0)+e[o+2148>>2]|0):A=e[o+2148>>2],g[0|(A=A+189424|0)]=32,g[A+1|0]=0;break e}s:if((0|a)==1){if((0|A)!=66){if((0|A)!=86)break s;for(A=e[o+2148>>2],e[o+2148>>2]=A+1,g[A+189424|0]=0;;){c:{o:{u:{if(!(r=e[33285])){if(A=e[33283],e[A>>2]==e[A+4>>2])break c;if(!(r=e[33285]))break u}e[33285]=0;break o}e[33284]=e[33284]+1,A=e[33283],r=0|pt[e[A+8>>2]](A)}if(e[o+2156>>2]=r,!(Rr(r)||(0|(A=e[o+2148>>2]))>=799)){e[o+2148>>2]=A+1,g[A+189424|0]=e[o+2156>>2];continue}}break}g[e[o+2148>>2]+189424|0]=0,n=147456;break e}r=e[o+2148>>2],g[0|(A=r+189424|0)]=32,g[A+1|0]=32,g[A+2|0]=32,g[A+3|0]=0,e[o+2148>>2]=r+3;c:{o:{u:{l:{i:{p:{if(!(r=e[33285])){if(A=e[33283],e[A>>2]==e[A+4>>2])break l;if(!(r=e[33285]))break p}e[33285]=0;break i}e[33284]=e[33284]+1,A=e[33283],r=0|pt[e[A+8>>2]](A)}if(e[o+2152>>2]=r,a=0,(0|r)!=48)break u;break o}r=e[o+2152>>2]}if(e[47208]=0,e[47201]=1,(0|r)==49)break c;for(a=e[33285],s=0;;){u:{if(!a){if(A=e[33283],e[A>>2]==e[A+4>>2])break u;r=e[o+2152>>2]}if(!(Rr(r)|s>>>0>58)){e[188832+(s<<2)>>2]=e[o+2152>>2],(r=e[33285])?(e[33285]=0,a=0):(e[33284]=e[33284]+1,A=e[33283],r=0|pt[e[A+8>>2]](A),a=e[33285]),s=s+1|0,e[o+2152>>2]=r,A=e[o+2148>>2],e[o+2148>>2]=A+1,g[A+189424|0]=32;continue}}break}a=2,e[188832+(s<<2)>>2]=0}e[47201]=a}c:{if(!(r=e[33285])){if(A=e[33283],e[A>>2]==e[A+4>>2])continue;if(!(r=e[33285]))break c}e[33285]=0,e[o+2152>>2]=r;continue}e[33284]=e[33284]+1,A=e[33283],e[o+2152>>2]=pt[e[A+8>>2]](A);continue}Gr=Gr+1|0,r=0,A=e[X+340>>2];s:if(s=M[A>>1]){for(;;){if((65535&s)!=(0|a)){if(s=M[A+((r=r+2|0)<<1)>>1])continue;break s}break}switch(0|(A=M[A+(r<<1|2)>>1])){case 1:continue;case 0:break s}e[o+2156>>2]=A,a=A}Xs(a)?(ce=1,r=e[o+2156>>2]):ct?(e[33285]=e[o+2152>>2],r=1328,e[o+2156>>2]=1328,e[o+2152>>2]=32,ct=0):(0|(r=e[o+2156>>2]))!=3851?(ct=0,(0|r)!=3405|e[o+2152>>2]!=8205||(r=3406,e[o+2156>>2]=3406)):(r=32,e[o+2156>>2]=32,ct=0);s:if(xa(r)){if(e[X+8216>>2]=e[X+8216>>2]+1,e[33692]|e[47200]!=2||xa(Xe)||(e[o+2544>>2]=0,e[o+2548>>2]=0,e[o+2304>>2]=84731,!Br(X,o+2304|0,o+2160|0,o+2544|0,0,0))||(Ar(X,A=o+2160|0,o+2544|0,-1,0),$A(r=A,A=o+2336|0),e[o+80>>2]=A,QA(r=o+2240|0,85451,o+80|0),A=e[o+2148>>2],(0|(r=RA(r)+A|0))>=800))break s;JA(A+189424|0,o+2240|0),e[o+2148>>2]=r}else fa(e[o+2156>>2])&&(e[X+8220>>2]=e[X+8220>>2]+1);if(r=e[o+2152>>2],A=e[o+2156>>2],e[47204])if((0|m)>0)m=m-1|0;else{if(!((0|A)!=91|(0|r)!=91)){a=0,m=-1;break A}m=(0|A)==93&&(0|r)==93?2:m}if((0|A)==10){for(a=e[33285],s=0;;){s:{if(!a){if(A=e[33283],e[A>>2]==e[A+4>>2])break s;r=e[o+2152>>2]}if(Rr(r)){s=(e[o+2152>>2]==10)+s|0,(r=e[33285])?(e[33285]=0,a=0):(e[33284]=e[33284]+1,A=e[33283],r=0|pt[e[A+8>>2]](A),a=e[33285]),e[o+2152>>2]=r;continue}}break}if((0|s)>0){n&&VA(A=Dr+189424|0,32,Dt(o+2336|0,A)),A=e[o+2148>>2]+189424|0,g[0|A]=32,g[A+1|0]=0,e[33285]=e[o+2152>>2],n=e[47203]?524358:F((0|s)>=3?3:s,30)+524328|0;break e}if(A=e[47268]<(0|Gr),Gr=0,!A){A=e[o+2148>>2]+189424|0,g[0|A]=32,g[A+1|0]=0,e[33285]=e[o+2152>>2],n=262174;break e}}if(a=0,e[33692]|m)break A;if(A=0,!n)break r;if(Rr(e[o+2156>>2])){A=n;break r}if(nr(e[o+2156>>2])&&Ba(e[o+2156>>2]))break r;e[33691]=e[o+2156>>2],g[0|(A=Dr+189424|0)]=32,g[A+1|0]=0,e[33285]=e[o+2152>>2];break e}ct&&(e[o+2148>>2]=Nr(1328,e[o+2148>>2]+189424|0)+e[o+2148>>2]),n&&VA(A=Dr+189424|0,32,Dt(o+2336|0,A)),A=e[o+2148>>2]+189424|0,g[0|A]=32,g[A+1|0]=0}n=589864;break e}if(!((0|(r=e[o+2156>>2]))!=46|e[o+2152>>2]!=46)){r:{a:{s:{if(!(r=e[33285])){if(r=e[33283],e[r>>2]==e[r+4>>2])break r;if(!(r=e[33285]))break s}e[33285]=0;break a}e[33284]=e[33284]+1,r=e[33283],r=0|pt[e[r+8>>2]](r)}if(c=r,(0|r)==46)for(e[o+2152>>2]=32,e[o+2156>>2]=8230,c=e[33285];;){a:{s:{if(!c){if(r=e[33283],e[r>>2]==e[r+4>>2]){c=46;break r}if(!(c=e[33285]))break s}e[33285]=0,r=0;break a}e[33284]=e[33284]+1,r=e[33283],c=0|pt[e[r+8>>2]](r),r=e[33285]}if((0|c)!=46)break r;e[o+2152>>2]=32,e[o+2156>>2]=8230,c=r}}(0|(r=e[o+2156>>2]))!=8230?e[33285]=c:(e[o+2152>>2]=c,r=8230)}if(SA=0,(0|(Y=Wa(r)))!=16384){r:if(536621&Y)for(r=e[33285];;){if(!r&&(r=e[33283],e[r>>2]==e[r+4>>2])||!(536621&Wa(e[o+2152>>2])))break r;(c=e[33285])?(e[33285]=0,r=0):(e[33284]=e[33284]+1,r=e[33283],c=0|pt[e[r+8>>2]](r),r=e[33285]),e[o+2152>>2]=c}if(1048576&Y){e[f+780>>2]=Y>>>12&15,ct=1,m=0,n=A;continue}(Rr(e[o+2152>>2])|32768&Y||us(e[o+2152>>2])||(0|(r=e[o+2152>>2]))==63||(s=0,e[33285]||(r=e[33283],s=e[r>>2]==e[r+4>>2],r=e[o+2152>>2]),s||(0|r)==1))&&(SA=1)}if((0|(r=e[o+2156>>2]))==57404&&(e[o+2156>>2]=60,r=60),e[47201]){n=0;r:if(!(1<<(s=jn(r))&1879048255&&s>>>0<=30)){if(!((s=jn(r))>>>0>27)){if(116672&(m=1<<s))break r;if(134227968&m){n=!(1024&Te(r,s));break r}}n=1}if(!(l[134772]|!n)&&(e[47201]==1||Wr(188832,e[o+2156>>2]))){e[X+288>>2]=0,a=e[o+2156>>2],g[o+2336|0]=0,m=e[o+2152>>2],r=0;r:{a:if(!((0|(n=e[34064]))<=0))for(;;){if((0|a)==e[136272+(r<<4)>>2]){if(e[136276+(r<<4)>>2])break r;if(ts(0,r))break a;break r}if((0|n)==(0|(r=r+1|0)))break}r=-1}r:if((0|r)>=0)e[o>>2]=r,QA(o+2336|0,86007,o),e[33285]=m;else if((s=!SA)|(0|a)!=46|(0|m)==46||(e[o+2600>>2]=0,e[o+2604>>2]=0,e[o+2540>>2]=86036,!Br(X,o+2540|0,o+2544|0,o+2600|0,0,0))?r=rs(o+2240|0,X,a,0):(Ar(X,r=o+2544|0,o+2600|0,-1,0),$A(n=r,r=o+2160|0),e[o+64>>2]=r,QA(r=o+2304|0,85451,o- -64|0)),n=r,s|!e[o+2148>>2]|2&l[X+76|0]){for(r=e[33285],s=1;;){a:{s:{if(!r){if(r=e[33283],e[r>>2]==e[r+4>>2]|(0|a)==60|(0|a)!=(0|m))break a;if(s=s+1|0,m=e[33285])break s;e[33284]=e[33284]+1,r=e[33283],m=0|pt[e[r+8>>2]](r),r=e[33285];continue}if((0|a)==60|(0|a)!=(0|m))break a;m=r,s=s+1|0}r=0,e[33285]=0;continue}break}if(e[o+2152>>2]=m,SA&&(e[33285]=m),(0|s)==1){e[o+16>>2]=n,QA(o+2336|0,86219,o+16|0);break r}if((0|s)<=3){if(g[o+2336|0]=0,(0|(r=e[50786]))<=299&&(e[o+2336>>2]=l[86728]|l[86729]<<8|l[86730]<<16|l[86731]<<24,b[o+2340>>1]=l[86732]|l[86733]<<8),(0|s)>0){for(;e[o+32>>2]=n,QA(r=o+2160|0,86219,o+32|0),m=s>>>0>1,sn(o+2336|0,r),s=s-1|0,m;);r=e[50786]}if((0|r)>299)break r;e[o+2160>>2]=l[86857]|l[86858]<<8|l[86859]<<16|l[86860]<<24,r=l[86860]|l[86861]<<8|l[86862]<<16|l[86863]<<24,g[o+2163|0]=r,g[o+2164|0]=r>>>8,g[o+2165|0]=r>>>16,g[o+2166|0]=r>>>24,sn(o+2336|0,o+2160|0);break r}e[o+56>>2]=n,e[o+52>>2]=s,e[o+48>>2]=n,QA(o+2336|0,86932,o+48|0)}else e[33691]=a,e[33285]=m,b[o+2336>>1]=32;if(s=RA(n=o+2336|0),JA((r=e[o+2148>>2])+189424|0,n),e[o+2148>>2]=r+s,SA){if((0|a)==45){n=16384;break e}if(n=Wa(a),!(2&l[X+76|0]|(0|r)<=0)){n=(-32769&n)==266270?262148:(28672&n)==4096?266244:262148;break e}if(!(524288&n)){n=(28672&n)==4096?266244:262148;break e}if((0|n)>=0)break e}a=e[o+2156>>2]}}if(a|!(2097152&Y)||(r=JA(e[o+2148>>2]+189424|0,rs(o+2336|0,X,e[o+2156>>2],1)),l[0|r]?(e[o+2148>>2]=e[o+2148>>2]+RA(r),Y&=-28673,a=e[o+2156>>2]):a=0),m=0,SA){r:if(Rr(c=e[o+2152>>2]))for(s=e[33285],r=0;;){if(!s&&(n=e[33283],e[n>>2]==e[n+4>>2])||!Rr(c))break r;r=((0|c)==10)+r|0,(c=e[33285])?(e[33285]=0,s=0):(e[33284]=e[33284]+1,n=e[33283],c=0|pt[e[n+8>>2]](n),s=e[33285])}else r=0;n=(0|(m=e[o+2156>>2]))==46&&(0|r)<2?4194304|Y:Y;r:{if(!r){s=1,(0|m)!=44|(0|Xe)!=46|e[X+212>>2]!=26741|Re-48>>>0>=10||c-48>>>0>=10&&!Ba(c)||(e[o+2156>>2]=1367,s=0),(0|(Y=e[o+2156>>2]))!=46|(0|c)!=39||(m=s,Y=e[33283],(0|(De=e[Y>>2]))==e[Y+4>>2]?s=0:(s=0|pt[e[Y+8>>2]](Y),e[Y>>2]=De),Y=e[o+2156>>2],s=(0|s)!=115&m);a:if((0|Y)!=46)s&=ce;else{s:if(1&g[X+106|0]){if(!(Xe-48>>>0<10)&&((m=Xe-73|0)>>>0>15|!(1<<m&40969)||!(1<<(m=Re-73|0)&40969&&m>>>0<=15||Rr(Re))))break s;s=Xe-48>>>0>=10?0:!Ba(c)&(0|c)!=45&s}if(Ba(c)&&(s=l[X+208|0]!=0&s),ce){Y=e[o+2156>>2];break a}Y=32,e[o+2156>>2]=32,s=0}if(!(!s|(0|Y)!=46|!e[47203]|(0|c)!=60)){Dr=e[o+2148>>2],A=n;break r}if(!s)break r}if(A=e[o+2148>>2]+189424|0,g[0|A]=32,g[A+1|0]=0,e[33285]=c,Xe-48>>>0<10&&(n=nr(c)?n:-4194305&n),(0|r)<2)break e;n=(0|n)==536621?536656:(0|n)==532520?532555:524358;break e}(e[33285]||(m=0,r=e[33283],e[r>>2]!=e[r+4>>2]))&&(m=0,Rr(e[o+2152>>2])&&(e[33285]=c))}n=A}if(e[33712]!=1){if((0|a)!=(0|(r=e[o+2156>>2])))s=e[o+2148>>2],(0|r)==57404&&(r=60,e[o+2156>>2]=60);else{A:{if(us(a))r=57384;else{if(r=45,e[o+2156>>2]==45)break A;r=32}e[o+2156>>2]=r}s=e[o+2148>>2]}e[o+2148>>2]=Nr(r,s+189424|0)+e[o+2148>>2],Rr(e[o+2156>>2])||us(e[o+2156>>2])||(A=e[o+2148>>2],b[GA+(A<<1)>>1]=e[33284]-e[47353],(0|A)<=(s+1|0)||VA(Ss+(s<<1)|0,255,A+~s<<1)),r=e[o+2148>>2],e[Kr>>2]=r;A:{r:{if((0|r)>725){if(!nr(e[o+2156>>2]))break r;r=e[o+2148>>2]}if((0|r)<796)continue;break A}if(r=e[o+2148>>2],!(e[o+2156>>2]-48>>>0>=10)&&(0|r)<796)continue}break}}g[0|(A=r+189424|0)]=32,g[A+1|0]=0,e[33285]=e[o+2152>>2],n=16384}q=o+2608|0,ct=n,ln&&(A=e[f+780>>2],e[ln>>2]=A||ct>>>12&7),A=(f+5184|0)+(e[f+6800>>2]<<1)|0,b[A+6>>1]=0,b[A+2>>1]=0,b[A+4>>1]=32767,Y=F(4095&ct,8388608&ct?320:10),n=189424;e:{A:{r:if(A=l[189424]){for(;;){if(!!(255&(A=A<<24>>24))&A>>>0<33){if(A=l[0|(n=n+1|0)])continue;break r}break}if(l[0|n])break A}Y=(0|(r=Y-(A=e[47566])|0))>0?r:0,e[47566]=Y+A,ct=l[190268]?524288|ct:ct,e[X+8240>>2]=ct;break e}e[47566]=Y,A=l[190268],e[X+8240>>2]=ct,A&&(bt=1,e[47568]=e[47568]+1,(0|(A=e[47569]))<=0||(A=A-1|0,e[47569]=A,A||(g[190280]=0)))}e[49572]=1,e[47572]=655360,e[47573]=0,e[X+8184>>2]=0,e[X+8188>>2]=0,A=0,e[X+288>>2]=0,e[(r=X- -8192|0)>>2]=0,e[r+4>>2]=0,e[X+8200>>2]=0,e[X+8224>>2]=0,e[X+8228>>2]=0,e[(r=X+8232|0)>>2]=0,e[r+4>>2]=0,g[f+786|0]=32,b[f+784>>1]=8192,e[f+6812>>2]=32,b[f+1588>>1]=3,e[f+1584>>2]=0,n=0;e:if(!((0|(r=e[f+6800>>2]))<=0)){for(;;){if(b[(f+5184|0)+(n<<1)>>1]>0)break e;if((0|r)==(0|(n=n+1|0)))break}n=r}if(r=M[(f+5184|0)+(n<<1)>>1],b[f+1592>>1]=r,r)for(;A=!!(65535&~r)+A|0,r=M[(f+5184|0)+((n=n+1|0)<<1)>>1];);for(g[f+1594|0]=A,s=3,GA=1,n=0;;){Re=e[f+6808>>2],Qn(f+6808|0,(nA=(f+784|0)+s|0)-1|0),!l[X+170|0]|e[f+6808>>2]-48>>>0>=10||nr(Re)&&(e[f+6808>>2]=97),he?e[f+6812>>2]=he:I&&Qn(f+6812|0,I+189423|0),r=I;e:{A:if(n||(r=Dt(f+6816|0,I+189424|0)+I|0,n=e[f+6816>>2])){if(ce=Dt(f+6804|0,A=r+189424|0),(0|n)==1){if(a=r-1|0,he=32,Xe=0,e[f+6812>>2]!=32){r=a,A=32;break A}I=0,n=r;r:{a:switch(l[0|A]-43|0){case 0:n=r+1|0,I=64;break r;case 2:break a;default:break r}n=r+1|0,I=96}if(g[0|(A=n+189424|0)]-48>>>0>=10)c=n+1|0,ce=-1;else{for(ce=Ka(A);n=(A=n)+1|0,g[A+189424|0]-48>>>0<10;);c=n,n=A}if((0|(he=e[47350]))>247)A=0;else if(A=0,!((0|(n=g[n+189424|0]))<0)&&(n=ss(84868,255&n,14))){r=1+(A=n-84868|0)|0,(0|ce)==-1&&(ce=e[105536+(r<<2)>>2],I=0);r:{a:switch(A-8|0){case 0:e[49574]=0,e[49573]=ce;break r;case 4:break a;default:break r}g[199304]=(0|ce)>=3?1:0}A=1,e[47350]=he+1,e[198304+(he<<2)>>2]=(r+I|0)+(ce<<8),r=c}he=e[f+6812>>2],VA(a+189424|0,32,r-a|0),$r=A+$r|0,n=0;break e}he=0,(0|n)==32|e[49573]!=36?(Xe=0,A=n):(e[f+6812>>2]!=32|e[f+6804>>2]!=32||(e[49573]=20),Xe=0,A=Ts(n,X))}else e[f+6804>>2]=32,Xe=1,he=0,ce=0,A=32;A:if(Cr){if(Cr=1,GA=8,n=0,(0|A)!=93|e[f+6804>>2]!=93)break A;r=r+1|0,A=32,Cr=0}else if((240&(n=e[49573]))!=64)if(Cr=0,16&n)n=0;else{r:{a:{s:{c:{if(!((0|(c=(0|A)==8242||(0|A)==8217||(0|A)==146||(0|A)==180?39:A))!=8216&(0|c)!=63))if(nr(e[f+6808>>2])){if(c=A,nr(e[f+6804>>2])){c=39;break c}}else c=A;o:{if((0|c)!=1367){if((0|c)==1328){P|=1024,c=32;break c}if((A=c-44032|0)>>>0>11183)break c;if(a=((n=((m=65535&A)>>>0)/28|0)>>>0)%21|0,A=A-F(n,28)&65535,c-50500>>>0>587)break o;n=A?A+4519|0:0,a=a+4449|0;break a}P|=131072,Dr=e[f+6804>>2],A=e[f+6812>>2],c=32;break s}n=50500+(A+F(a,28)|0)|0,a=(m>>>0)/588|4352;break a}if(Dr=e[f+6804>>2],A=e[f+6812>>2],!((n=c-12592|0)>>>0>51)){a=4352|l[n+103296|0],n=0;break a}}o=r+189424|0;s:if(!((0|(n=e[X+212>>2]))!=28268&(0|n)!=24934|(0|c)!=39)&&!fa(A)&&(Dt(f+6820|0,o+1|0),gs(e[f+6820>>2]))){a=601,n=0;c:switch(Dr-110|0){case 6:break a;case 0:break c;default:break s}if(e[X+212>>2]!=24934)break a;g[0|o]=32;break a}if(e[f+6824>>2]=32,(0|(A=e[49897]))>0)e[49897]=A-1,n=0;else{if(!c){n=0,a=0;break r}s:{c:{o:{u:if((SA=e[X+180>>2])&&(m=c,(De=xa(c))&&(m=Ts(c,X)),!Ki(SA)))for(;;){e[f+16>>2]=0,e[f+624>>2]=m,A=Dt(f+16|0,SA)+SA|0;l:if(e[f+624>>2]==e[f+16>>2]){if(l[0|A]){for(a=1,tr=0,n=o;mr=Dt(f+16|0,A),Gr=Dt(f+624|0,n),Kr=Ts(e[f+624>>2],X),e[f+624>>2]=Kr,n=n+Gr|0,tr=(Gr=(0|Kr)==e[f+16>>2])+tr|0,a&=Gr,l[0|(A=A+mr|0)];);if(!a)break l;e[49897]=tr}if(!(A=A+1|0))break u;if(8&l[188788]&&(e[f>>2]=SA,e[f+4>>2]=A,hr(e[47195],85187,f)),A=Dt(f+6828|0,A)+A|0,l[0|A])break o;n=0;break c}for(;n=A,A=A+1|0,l[0|n];);for(;l[0|(n=(A=n)+1|0)];);if(Ki(SA=A+2|0))break}n=0,a=c;break s}Dt(f+6824|0,A),De&&xa(Dr)&&(e[f+6824>>2]=Qi(e[f+6824>>2])),n=e[f+6824>>2]}a=e[f+6828>>2],P|=2097152,De&&(a=Qi(a))}if((0|a)!=8)break a}a=r;break e}n?e[f+6804>>2]=n:n=0}nr(a)||gs(a)||Wr(e[X+336>>2],a)||!nr(e[f+6808>>2])|!(!l[X+170|0]|a-48>>>0>=10)&e[f+6804>>2]-48>>>0>=10||(a=32,fA=1);r:{a:{s:{c:{o:{if(e[f+6808>>2]-48>>>0<10){if(a-48>>>0<10){A=y;break o}if(1<<(A=a-32|0)&20481&&A>>>0<=14)break c;fA=1}else if(A=0,e[f+6812>>2]!=44||(A=y,(0|a)!=44))break o;a=32;break c}if((0|a)==91&&((0|(c=e[f+6804>>2]))==2||(a=91,(0|c)==91&&e[47204])))break s;y=A}if(nr(a)){c:{o:{u:{if(nr(e[f+6808>>2])){if(!l[X+171|0]||(A=e[f+6808>>2],!((0|a)>12352)&&(0|A)<12353))break u}else A=e[f+6808>>2];if(Or=Wr(e[X+336>>2],A)?Or:0,(0|(A=e[f+6808>>2]))!=32&&!Wr(e[X+336>>2],A)){A=32,_=us(e[f+6808>>2])?_:256|_;break o}P=xa(a)?2|P:P,e[f+6808>>2]!=32|g[nA-2|0]-48>>>0>=10|e[f+6812>>2]-48>>>0<10||(g[(f+784|0)+s|0]=32,A=1588+(F(At,12)+f|0)|0,b[A>>1]=M[A>>1]+1,s=s+1|0)}if(A=32,(0|a)==32)break c;if(Or=Or+1|0,(0|(c=e[X+600>>2]))<=0){A=a;break c}if(!((0|a)<=591&(0|(m=e[f+6808>>2]))>=(0|c))){if((0|a)<(0|c)){A=a;break c}if((0|Or)<2){A=a;break c}if(!((0|m)<=591)){A=a;break c}}if(!nr(m)){A=a;break c}P|=16384,_|=128}fA=1}if(na=na+1|0,xa(A)){if(c=Ts(A,X),e[X- -64>>2]){A=pa?c:712,n=pa?n:c,pa=1;break A}if(Ba(e[f+6812>>2])){if(e[f+6808>>2]==32){A=c;break A}if(A=32,e[X+212>>2]!=26465)break r;for(a=85240,m=(f+784|0)+s|0,ce=0;;){if(o=RA(a),l[0|(Re=m-o|0)]==32&&!yn(Re+1|0,a,o=o-1|0)){if((0|(a=g[a+o|0]))==(0|c)){A=c;break A}if((0|a)==65&&b0(X,c)){A=c;break A}}if(a=e[131184+((ce=ce+1|0)<<2)>>2],(0|ce)==11)break}break r}if(A=32,(0|c)==32)break A;if(!xa(e[f+6812>>2])){A=c;break A}if(!Ba(e[f+6804>>2])){A=c;break A}if(Dt(f+16|0,189424+(r+ce|0)|0),!(e[X+212>>2]!=28268|(0|Or)!=2|(0|c)!=106|e[f+6812>>2]!=73)){A=c;break A}if(e[f+6808>>2]==32){A=c;break A}if(!nr(e[f+16>>2])){A=c;break A}_|=256,he=32,fA=1;break A}if(!GA){GA=0;break A}if((0|Or)<3){GA=0;break A}if((0|A)!=115){GA=0;break A}if(e[X+212>>2]!=25966){GA=0;break A}if(e[f+6804>>2]!=32){GA=0;break A}if(GA|=4,A=32,l[783+(a=s+f|0)|0]!=39)break A;g[a+783|0]=32;break A}A=32;c:{o:{u:{l:{switch(a-39|0){default:if((0|a)==95)break A;case 1:case 2:case 3:case 4:case 5:if(a-48>>>0>=10||l[X+170|0]&&nr(e[f+6808>>2])&&!((c=e[f+6804>>2])-48>>>0<10|c-2406>>>0<10))break c;if((0|(m=e[f+6808>>2]))==32)break o;if(c=e[f+6808>>2],m-48>>>0<10)break u;if((0|(m=c))==(0|(c=e[X+128>>2])))break l;fA=1;break A;case 6:if(!gs(e[f+6812>>2])&&nr(e[f+6804>>2])){if(e[f+6808>>2]!=32){fA=1;break A}if(P|=128,(0|At)<=0)break A;a=1572+(F(At,12)+f|0)|0,e[a>>2]=16384|e[a>>2];break A}if(a=e[f+6804>>2],!(e[f+6812>>2]!=32|(0|a)!=32)){qt=4;break A}if((0|a)==45){r=r+1|0,qt=4;break A}if(A=45,e[f+6808>>2]!=32||!nr(Re)||nr(e[f+6812>>2]))break A;g[(f+784|0)+s|0]=32,a=1588+(F(At,12)+f|0)|0,b[a>>1]=M[a>>1]+1,s=s+1|0;break A;case 7:if(e[f+6808>>2]==46){fA=1;break A}if(A=46,(0|At)<=0||(a=1572+(F(At,12)+f|0)|0,1&g[a+1|0])||!nr(e[f+6812>>2]))break A;e[a>>2]=65536|e[a>>2],A=(A=gs(e[f+6804>>2]))||e[f+6804>>2]==45?32:46;break A;case 0:}i:{if((0|(c=e[f+6812>>2]))!=46||(a=115,e[f+6804>>2]!=115)){if(!Xs(c))break i;a=e[f+6804>>2]}if(nr(a))break a}if(1&(a=e[X+88>>2])){if(nr(e[f+6804>>2]))break a;a=e[X+88>>2]}if(2&a&&nr(e[f+6812>>2]))break a;if(!(!Wr(e[X+332>>2],e[f+6812>>2])|(0|Re)!=32)){r=(e[f+6804>>2]==32)+r|0;break a}if(c=(0|(a=e[f+6808>>2]))!=115|ha,ha=0,!(1&c))break A;ha=!!(0|gs(a)),qt=4;break A}if((0|c)==44&y){fA=1;break A}y=1;break c}if((0|c)!=32)break c}nr(Re)&&(nr(e[f+6812>>2])||(g[(f+784|0)+s|0]=32,A=1588+(F(At,12)+f|0)|0,b[A>>1]=M[A>>1]+1,s=s+1|0))}A=a;break A}Cr=1,a=r+1|0,y=A;break e}A=39,ha=0;break A}fA=1,he=32}else{if(A-48>>>0<10){n=0,a=(0|(c=e[49574]+1|0))>(15&e[49573]),e[49574]=a?0:c,A=a?32:A,fA|=a,Cr=0;break A}n=0,e[49574]=0,A=(a=e[f+6808>>2]-48>>>0<10)?32:A,fA|=a,Cr=0}if(gs(A)){if(e[f+6808>>2]==32){P|=262144,a=r;break e}if(a=e[f+6816>>2]-9>>>0<2,m=1&fA){ce=0;A:if(!((0|p)>(0|(A=r-1|0))))for(;;){if(!(c=b[(f+5184|0)+(A<<1)>>1]))break A;if(ce=((0|c)>0)+ce|0,!((0|p)<=(0|(A=A-1|0))))break}g[1594+(F(At,12)+f|0)|0]=ce}if(_=a?262144|_:_,g[(f+784|0)+s|0]=32,A=s+1|0,!((0|At)>298||(a=(f+1584|0)+F(At,12)|0,(0|(c=M[a+4>>1]))>=(0|A)))){if((0|$r)<=0?p=e[a>>2]:(p=198300+(e[47350]<<2)|0,e[p>>2]=128|e[p>>2],$r=0,p=64|e[a>>2]),o=e[47352],g[a+6|0]=o,e[a>>2]=p|(na?GA:-2&GA)|(l[199304]?2048:0)|P,(0|o)>0){for(;P=(p=f+784|0)+A|0,p=p+(A=A-1|0)|0,g[0|P]=l[0|p],(0|A)>(0|c););g[0|p]=32,b[a+4>>1]=c+1,A=s+2|0}c=(f+1584|0)+F(At=At+1|0,12)|0,e[c>>2]=0,b[c+4>>1]=A,s=r;A:if(!((0|(a=e[f+6800>>2]))<=(0|r))){for(;;){if(b[(f+5184|0)+(s<<1)>>1]>0)break A;if((0|a)==(0|(s=s+1|0)))break}s=a}if(ce=M[(f+5184|0)+(s<<1)>>1],b[c+8>>1]=ce,na=0,a=0,ce)for(;a=!!(65535&~ce)+a|0,ce=M[(f+5184|0)+((s=s+1|0)<<1)>>1];);g[c+10|0]=a,e[47352]=0,GA=1,P=_,_=0,pa=0}fA=0,n=m?0:n,a=m?I:r}else(0|s)>795?(a=r,r=p,A=s):(A=Nr(A,(f+784|0)+s|0)+s|0,a=r,r=p);e[47352]<(0|qt)&&(e[47352]=qt),qt=0,p=r,s=A}if(Xe||(I=a,!((0|s)<799)))break}(0|$r)<=0|At||(A=198300+(e[47350]<<2)|0,e[A>>2]=128|e[A>>2],e[f+1584>>2]=64|e[f+1584>>2],At=1),A=(f+784|0)+s|0,e[X+8204>>2]=A-1,r=0,g[0|A]=0,g[f+1590|0]=0,g[1590+(F(At,12)+f|0)|0]=8;e:if((0|At)<=0)e[f+1584>>2]=512|e[f+1584>>2],s=e[49572];else{A=At-1|0;A:if((0|At)!=1)for(n=A;;){if(!us(g[M[1588+(F(n,12)+f|0)>>1]+(f+784|0)|0])){r=n;break A}if(c=(0|n)>1,n=n-1|0,!c)break}if(r=(f+1584|0)+F(r,12)|0,e[r>>2]=16|e[r>>2],4194304&ct&&(A=(f+1584|0)+F(A,12)|0,256&(r=e[A>>2])||(e[A>>2]=65536|r)),e[f+1584>>2]=512|e[f+1584>>2],!((0|At)<=0|(0|(s=e[49572]))>990))for(c=3|(A=f+624|0),m=2|A,he=f+754|0,Xe=!(4194304&ct),I=0,p=0;;){e[47354]=e[47354]+1;A:{if((0|(A=e[49827]))<=0||(A=A-1|0,e[49827]=A,A)){if(l[190280])break A}else g[190280]=0;A=M[1588+(F(I,12)+f|0)>>1]+(f+784|0)|0;r:if(!(g[0|A]-48>>>0>=10)&&(r=f+624|0,n=A,e[X+112>>2]!=1227133512)){for(;;){a:{if(g[0|n]-48>>>0<10)g[0|r]=l[0|n],r=r+1|0,n=n+1|0;else{if(e[X+124>>2]!=g[0|n]|l[n+1|0]!=32||(s=n+2|0,l[n+3|0]==32|g[0|s]-48>>>0>=10|l[n+4|0]==32))break a;I=I+1|0,n=s}if(r>>>0<he>>>0)continue;break r}break}VA(A+(r=r-(y=f+624|0)|0)|0,32,(n=(s=n-A|0)-r|0)>>>0<=s>>>0?n:0),xt(A,y,r)}for(r=0;n=r,r=r+1|0,g[A+n|0]-48>>>0<10;);r:if(n-5>>>0<=27){for(g[f+626|0]=32,b[f+624>>1]=8224,l[0|A]!=48&e[X+132>>2]>=(0|n)||(r=(f+1584|0)+F(I,12)|0,e[r>>2]=524288|e[r>>2]),_=(f+1584|0)+F(I,12)|0,ce=0,s=c;r=A,!((A=g[0|A])-48>>>0>=10&(0|A)!=e[X+128>>2])&&(g[0|s]=A,A=s+1|0,y=n,(0|(n=n-1|0))<=0?s=A:e[X+112>>2]>>>n&1?(o=e[_+4>>2],P=(f+16|0)+F(ce,12)|0,e[P>>2]=e[_>>2],e[P+4>>2]=o,e[P+8>>2]=e[_+8>>2],ce=ce+1|0,(0|(P=e[X+124>>2]))!=32&&(g[s+1|0]=P,A=s+2|0),g[0|A]=32,s=A+1|0,8&l[_+2|0]||((qt=e[X+112>>2])>>>y-2&1&&(g[A+1|0]=48,g[A+2|0]=48,qt=e[X+112>>2],s=A+3|0),qt>>>y-3&1&&(g[0|s]=48,s=s+1|0))):s=A,A=r+1|0,s>>>0<he>>>0););if(n=e[_+4>>2],A=(f+16|0)+F(ce,12)|0,e[A>>2]=e[_>>2],e[A+4>>2]=n,n=e[_+20>>2],e[A+16>>2]=e[_+16>>2],e[A+20>>2]=n,n=e[_+12>>2],e[A+8>>2]=e[_+8>>2],e[A+12>>2]=n,n=1,(0|ce)>0)for(;A=(f+16|0)+F(n,12)|0,e[A>>2]=-262209&e[A>>2],(0|ce)>=(0|(n=n+1|0)););if(A=l[r+4|0]|l[r+5|0]<<8|l[r+6|0]<<16|l[r+7|0]<<24,n=l[0|r]|l[r+1|0]<<8|l[r+2|0]<<16|l[r+3|0]<<24,g[0|s]=n,g[s+1|0]=n>>>8,g[s+2|0]=n>>>16,g[s+3|0]=n>>>24,g[s+4|0]=A,g[s+5|0]=A>>>8,g[s+6|0]=A>>>16,g[s+7|0]=A>>>24,A=l[r+12|0]|l[r+13|0]<<8|l[r+14|0]<<16|l[r+15|0]<<24,r=l[r+8|0]|l[r+9|0]<<8|l[r+10|0]<<16|l[r+11|0]<<24,g[s+8|0]=r,g[s+9|0]=r>>>8,g[s+10|0]=r>>>16,g[s+11|0]=r>>>24,g[s+12|0]=A,g[s+13|0]=A>>>8,g[s+14|0]=A>>>16,g[s+15|0]=A>>>24,g[s+16|0]=0,s>>>0<=c>>>0)break r;for(A=l[_+6|0],ce=0,n=c;;){for(p=wt(X,n,(f+16|0)+F(ce,12)|0,255&A);A=l[0|n],n=n+1|0,(0|A)!=32;);if(A=0,g[_+6|0]=0,ce=ce+1|0,!(n>>>0<s>>>0))break}}else{if(e[47352]=0,p=wt(X,A,r=(f+1584|0)+F(I,12)|0,l[r+6|0]),(0|(n=e[47352]))>l[r+18|0]&&(g[r+18|0]=n,e[47352]=0),!(!(4096&p)|l[0|A]==32))for(;VA(f+624|0,0,150),e[f+624>>2]=538976288,e[f+628>>2]=538976288,g[f+632|0]=32,wt(X,xt(m,A,n=Dt(f+16|0,A)),r,0),l[0|(A=A+n|0)]!=32;);50331648&p&&(Y=(A=Xe|(~e[33264]+At|0)!=(0|I))?Y:10,A|!ln||(e[ln>>2]=4,Y=10))}if(128&p&&!((0|(r=e[33264]))<=0)){if(A=0,n=r,s=3&r)for(;y=(f+1584|0)+F(n+I|0,12)|0,e[y>>2]=1048576|e[y>>2],n=n-1|0,(0|s)!=(0|(A=A+1|0)););if(r>>>0>=4)for(;A=(f+1584|0)+F(n+I|0,12)|0,e[A>>2]=1048576|e[A>>2],e[(r=A-12|0)>>2]=1048576|e[r>>2],e[(r=A-24|0)>>2]=1048576|e[r>>2],e[(A=A-36|0)>>2]=1048576|e[A>>2],n=n-4|0;);e[33264]=n}}if(s=e[49572],(0|At)<=(0|(I=I+1|0)))break e;if(!((0|s)<991))break}}if((0|(n=e[47351]))<(0|(c=e[47350]))){for(he=e[47202],Xe=e[49846],ce=e[47352];;){A=(r=e[198304+(n<<2)>>2])>>8;e:{A:switch((31&r)-9|0){case 0:he=A;break e;case 4:Xe=A;break e;case 3:break A;default:break e}ce=r>>>0>=256?A+ce|0:0}if(!(!(128&r)&(0|c)>(0|(n=n+1|0))))break}e[47352]=ce,e[47351]=n,e[49846]=Xe,e[47202]=he}e[49572]=s+2,e[(A=190288+(s<<3)|0)>>2]=589824,b[A+4>>1]=a,e[A+8>>2]=589824,b[A+12>>1]=a,r=At&&e[47199]?Y:10,e[33285]?A=0:(A=e[33283],A=e[A>>2]==e[A+4>>2]),Y=A?r:Y,I=bt,c=0,At=0,q=m=q-32192|0,e[m+24>>2]=0,e[m+28>>2]=0,e[m+16>>2]=0,e[m+20>>2]=0,e[m+8>>2]=0,e[m+12>>2]=0,e[m>>2]=0,e[m+4>>2]=0,a=e[49572],o=M[190284+(a<<3)>>1];e:{if((0|(n=a-3|0))<0)A=n;else{for(;;){if(c=(0|(r=127&l[3+(A=190288+(n<<3)|0)|0]))<(0|c)?c:r,M[A+4>>1])A=n;else if(A=-1,r=(0|n)>0,n=n-1|0,r)continue;break}if(c>>>0>3)break e}for(;;){if((0|(A=A-1|0))<0)break e;if(64&l[0|(r=190288+(A<<3)|0)]){g[r+3|0]=4;break e}if(!(l[r+3|0]<4))break}}if(A=e[X+292>>2],n=0,(0|a)<=0)c=0;else for(y=-1,c=0;;){r=A,e[X+292>>2]!=(0|A)&&(b[(A=190288+(n<<3)|0)>>1]=32|M[A>>1]),(0|c)>0&&(_=e[4+(p=190288+(n<<3)|0)>>2],e[(s=190288+(A=n-c<<3)|0)>>2]=e[p>>2],e[s+4>>2]=_,(0|y)!=-1&&(b[4+(A+190288|0)>>1]=y),y=-1);e:{if(l[2+(190288+(s=n<<3)|0)|0]==21){if(A=l[7+(p=s+190288|0)|0],2&l[0|p])break e;A:if((0|A)!=(0|r)){if(p=l[10+(s+190288|0)|0]-9|0){if((0|p)==12)break A;break e}if(l[18+(s+190288|0)|0]!=21)break e}(0|y)==-1&&(y=(A=M[4+(s+190288|0)>>1])||-1),c=c+1|0}A=r}if((0|a)==(0|(n=n+1|0)))break}if(e[49572]=a-c,Cn(A),(r=e[X+36>>2])&&!((0|(A=(c=e[49572])-1|0))<0))for(he=256&r,P=4&r,Xe=8&r,_=15&r,fA=16&r,bt=2&r,r=r>>>8&1,n=0;;){if(s=c,a=n,c=A,(0|(A=l[2+(p=190288+(GA=A<<3)|0)|0]))==21){e:{A:{if((0|(n=s-2|0))>=0)for(;;){if(l[2+(190288+(A=n<<3)|0)|0]==21)break A;if(A=(0|n)>0,n=n-1|0,!A)break}A=e[X+292>>2];break e}A=l[7+(A+190288|0)|0]}Cn(A),A=l[p+2|0]}if(n=a,(A=e[144464+((255&A)<<2)>>2])&&(n=r,!(32&l[0|p]))){n=l[A+11|0],y=0,bt&&((0|(s=l[0|A]))!=118&(0|s)!=82||(a=fA?0:a,y=1));e:{A:{r:{a:switch((s=253&n)-4|0){case 1:break r;case 0:break a;default:break A}if(_&&(n=1,!a)||(0|(n=a))!=2||(n=2,!(A=l[A+13|0])))break e;g[p+2|0]=A;break e}if(_&&(n=2,!a)||(0|(n=a))!=1||(n=1,!(A=l[A+13|0])))break e;g[p+2|0]=A;break e}n=0,Xe&&(n=s?a:0)}n=A=y?0:n,M[4+(GA+190288|0)>>1]&&(n=A=P?0:A,he&&(n=A||1))}if(!((0|(A=c-1|0))>=0))break}if(Cn(e[X+292>>2]),e[49572]<=0)fA=-2,n=0;else{for(n=-1,a=0,p=0,Xe=0;;){A=p<<3,(0|n)!=-1&&(b[4+(A+190288|0)>>1]=n),l[2+(y=A+190288|0)|0]==21&&Cn(l[7+(A+190288|0)|0]),_=e[49572];e:{if(!(32&l[0|(s=A+190288|0)])){a=(0|(r=_-1|0))>(0|p)?e[144464+(l[10+(A+190288|0)|0]<<2)>>2]:a,!(M[s+12>>1]|(0|r)==(0|p))&&(ce=0,l[a+11|0]|!a)||(ce=1),c=l[y+2|0];A:if(!((0|(fA=e[49848]))<=0))for(r=A+190288|0,n=0;;){if(he=F(n,3),l[he+199408|0]==(255&c)&&!((P=l[2+(he+199408|0)|0])&(1^ce)|(4&l[r+3|0]?2&P:0)|(M[r+4>>1]?0:4&P))){if(c=l[1+(he+199408|0)|0],g[y+2|0]=c,!(2&l[e[144464+(c<<2)>>2]+4|0])|l[r+3|0]<2)break A;g[r+3|0]=0;break A}if((0|fA)==(0|(n=n+1|0)))break}if(!(255&c)){n=M[4+(A+190288|0)>>1];break e}}n=e[s+4>>2],A=(m+32|0)+(Xe<<5)|0,r=e[s>>2],e[A>>2]=r,e[A+4>>2]=n,r=e[144464+(r>>>14&1020)>>2],e[A+8>>2]=r,g[A+17|0]=l[r+11|0],Xe=Xe+1|0,n=-1}if(!((0|Xe)<1e3&(0|_)>(0|(p=p+1|0))))break}if(c=0,n=0,!((0|(fA=Xe-2|0))<=0))for(;;){e:if(M[4+((m+32|0)+(c<<5)|0)>>1]){for(r=(0|c)>(0|fA)?c:fA,n=0,A=c;;){if((0|A)!=(0|r)){if(n=(0|n)>(0|(s=l[3+((a=m+32|0)+(A<<5)|0)|0]))?n:s,!M[4+(a+((A=A+1|0)<<5)|0)>>1])continue}else A=r;break}if((0|A)<=(0|c))break e;if(r=~c+A|0,a=0,s=A-c&7)for(;g[6+((m+32|0)+(c<<5)|0)|0]=n,c=c+1|0,(0|s)!=(0|(a=a+1|0)););if(r>>>0<7)break e;for(;g[6+(r=(m+32|0)+(c<<5)|0)|0]=n,g[r+38|0]=n,g[r+70|0]=n,g[r+102|0]=n,g[r+134|0]=n,g[r+166|0]=n,g[r+198|0]=n,g[r+230|0]=n,(0|(c=c+8|0))!=(0|A););}else A=c+1|0;if(c=A,!((0|fA)>(0|A)))break}}for(e[m+40>>2]=e[36125],Cn(e[X+292>>2]),Re=(0|n)<4,p=1,he=1,_=0,r=0,n=0,bt=0;;){e:{A:{r:{a:{if(r){if(a=(A=m+32|0)+((y=n-1|0)<<5)|0,_=l[2+(A+(n<<5)|0)|0],(0|y)>0){if(A=p-(n=(0|p)>0)|0,y>>>0>=(c=n?p:2)>>>0)for(;s=(n=(m+32|0)+(c<<5)|0)-32|0,p=e[n+12>>2],e[s+8>>2]=e[n+8>>2],e[s+12>>2]=p,p=e[n+4>>2],e[s>>2]=e[n>>2],e[s+4>>2]=p,p=e[n+28>>2],e[s+24>>2]=e[n+24>>2],e[s+28>>2]=p,p=e[n+20>>2],e[s+16>>2]=e[n+16>>2],e[s+20>>2]=p,(0|y)>=(0|(c=c+1|0)););p=A}ce=e[144464+(_<<2)>>2],e[a>>2]=0,e[a+4>>2]=0,e[a+24>>2]=0,e[a+28>>2]=0,e[a+16>>2]=0,e[a+20>>2]=0,e[a+8>>2]=0,e[a+12>>2]=0,g[a+2|0]=r,A=e[144464+(r<<2)>>2],e[a+8>>2]=A,_=a}else{if((0|n)>=(0|fA)|(0|bt)>=997)break a;s=l[2+(a=(c=n<<5)+(m+32|0)|0)|0],A=e[144464+(s<<2)>>2],e[a+8>>2]=A,y=M[a+4>>1],(0|s)==21&&Cn(l[7+(c+(m+32|0)|0)|0]),p=y?n:p,ce=e[144464+(l[a+34|0]<<2)>>2],e[a+40>>2]=ce,y=n}if(!A){r=0,n=y+1|0;continue}if($t(X,256,a,m+32040|0,m),(0|(n=e[m+32052>>2]))>0&&(c=(m+32|0)+(y<<5)|0,ce=e[144464+(n<<2)>>2],e[c+40>>2]=ce,g[c+34|0]=n,g[c+49|0]=l[ce+11|0]),n=0,r)r=A;else if((0|(c=e[m+32056>>2]))<=0)r=A;else{r=e[144464+(c<<2)>>2],e[a+8>>2]=r,n=l[a+2|0],g[a+2|0]=c,c=M[a>>1];s:if(l[r+11|0]!=2)b[a>>1]=65531&c;else{if(b[a>>1]=4|c,l[A+11|0]==2)break s;g[a+3|0]=0}$t(X,256,a,m+32040|0,m)}if((0|(s=e[m+32048>>2]))<=0)c=r;else{if(c=e[144464+(s<<2)>>2],g[a+2|0]=s,e[a+8>>2]=c,A=l[c+11|0],Xe=1,(0|s)==1){GA=(0|A)==2;break A}s=M[a>>1];s:if((0|A)!=2)b[a>>1]=65531&s;else{if(b[a>>1]=4|s,l[r+11|0]==2)break s;g[a+3|0]=0}$t(X,256,a,m+32040|0,m)}if(GA=0,(0|(A=l[c+11|0]))!=2){Xe=0;break A}if(GA=1,Xe=0,A=2,l[a+3|0]>1){At=0;break A}s=a+3|0,At=At+1|0,r=a;s:{if(8&(P=e[X+12>>2])){for(;;){c:switch(P=r,r=r+32|0,l[P+49|0]){case 0:break A;case 2:break c;default:continue}break}if(l[0|(r=P+35|0)]>1)break A;if(l[a+6|0]<=3&&(g[0|s]=0),l[P+38|0]<4)break s;break A}if(1&At|(0|At)<2)break A;if(2&P)break r;if(Re)r=s;else if(r=s,M[a+36>>1])break r}g[0|r]=0;break A}e[36423]=bt+2,b[(A=145840+(bt<<5)|0)>>1]=0,g[A+2|0]=9,g[A+20|0]=2,e[A+12>>2]=Y,b[A+4>>1]=o,g[A+17|0]=0,g[A+18|0]=0,e[A+8>>2]=e[36125],b[A+32>>1]=0,g[A+34|0]=9,g[A+52|0]=0,e[A+44>>2]=0,b[A+36>>1]=0,g[A+49|0]=0,g[A+50|0]=0,e[A+40>>2]=e[36126],Cn(e[X+292>>2]),q=m+32192|0;break e}At=1}if(!(8&(r=M[a+32>>1]))|(0|y)<=0||(s=l[ce+11|0])>>>0>15|!(1<<s&457)||(n=l[ce+10|0],b[a+32>>1]=8^r),De=M[a+36>>1]){A:if(r=e[X+4>>2]){switch(0|A){default:n=512&r?11:n;break;case 0:break A;case 2:}if(l[ce+11|0]==2){(s=12&r)&&(n=(0|s)!=12?23:11);r:if(GA){switch(3&r){case 2:n=10;break r;case 0:break r}n=23}l[a+35|0]<4||(n=256&r?10:n)}}if(!((0|a)==(0|_)|(0|bt)<=0)){A:{r:{a:switch(0|(r=7&e[X>>2])){case 0:break A;case 1:break a;default:break r}if(n-12>>>0>4294967293)break A}n=l[r+101916|0]}n=e[47205]>0?24:n}}if(e[a+72>>2]=e[144464+(l[a+66|0]<<2)>>2],r=e[m+32060>>2],r=n||r||n,!Xe){g[17+(s=145840+(P=bt<<5)|0)|0]=A,e[s+8>>2]=c,g[s+16|0]=0,b[s>>1]=M[a>>1],g[s+3|0]=15&l[a+3|0],g[s+6|0]=l[a+6|0],n=l[a+7|0],b[s+4>>1]=0,g[s+7|0]=n,Xe=l[c+10|0],g[s+2|0]=Xe;A:if(n=M[a+4>>1]){if(b[s+4>>1]=n,I=1&I?5:1,g[20+(a=P+145840|0)|0]=I,n=he,he=0,!n){I=0;break A}g[a+20|0]=8|I,I=0}else g[20+(P+145840|0)|0]=0;e[12+(n=P+145840|0)>>2]=e[m+32084>>2]<<1,!De|(0|Xe)!=24||(0|(a=e[47205]))<=0||(e[s+8>>2]=e[36126],e[n+12>>2]=F(a,14)),(1<<A&428?A>>>0<=8:0)|2&l[c+7|0]&&(e[n+12>>2]=128,g[s+16|0]=0),g[21+(A=P+145840|0)|0]=255,g[A+22|0]=255,b[A+18>>1]=5120,bt=bt+1|0}n=y+1|0;continue}break}b[88922]=1,e[44462]=0,$r&&(b[145776+(e[36423]<<5)>>1]=2,A=198304+(e[47350]<<2)|0,e[A>>2]=128,e[(A=A-4|0)>>2]=128|e[A>>2]),g[190268]=ct>>>19&1,Oa&&(e[Oa>>2]=ct<<14>>31&189360)}q=f+6832|0,fA=e[47192],GA=e[t+12>>2],r=0,s=0,p=0,P=0,_=0,qt=0,Y=0,q=o=q-6e3|0;e:if(!((0|(a=(bt=e[36423])-1|0))<=0)){for(;g[2+(o+F(r,6)|0)|0]=0,4&l[145840+(A=r<<5)|0]?(n=o+F(P,6)|0,g[n+1|0]=0,A=A+145840|0,g[n+3|0]=l[A+49|0],A=l[A+3|0],g[0|n]=A,P=P+1|0,qt=(A>>>0>3)+qt|0):l[e[8+(A+145840|0)>>2]+10|0]!=27|(0|P)<=0||(A=(o+F(P,6)|0)-4|0,g[0|A]=4|l[0|A]),(0|a)!=(0|(r=r+1|0)););if(g[o+F(P,6)|0]=0,P)if(e[fA+148>>2]==1){if(!((0|bt)<=0)){for(A=-2&bt,n=1&bt,r=145840;p=l[r+17|0]==2&&l[r+3|0]>3?s:p,p=l[r+49|0]==2&&l[r+35|0]>3?1|s:p,r=r- -64|0,s=s+2|0,(0|A)!=(0|(_=_+2|0)););!n|l[r+17|0]!=2||(p=l[r+3|0]>3?s:p)}if(g[3+(c=145840+(A=p<<5)|0)|0]=7,e[fA+212>>2]==30313&&(l[7+(A=A+145840|0)|0]||(g[A+7|0]=nn(55),bt=e[36423])),!((0|bt)<=0)){for(_=0,r=145840,A=145840,s=y=e[36125],a=0,he=1;;){if(l[r+17|0]?I=e[36125]:(I=e[36125],y=(n=l[e[r+8>>2]+14|0]>50)?I:y,he|=n),n=l[r+20|0]?I:s,4&l[0|r]){I=l[r+7|0],s=e[144464+(I<<2)>>2];A:{if((0|(P=e[fA+212>>2]))==6840683){if(e[n>>2]!=49||(P=e[s>>2]-49|0)>>>0>5|!(1<<P&41))break A;g[A+7|0]=nn(50),P=e[fA+212>>2]}if(!((0|P)!=6516078&(0|P)!=31336)){P=0,I||(a=nn(1&(P=a|he)?13621:12593),g[r+7|0]=a,s=e[144464+(a<<2)>>2]),(0|p)!=(0|_)|(1024|e[s>>2])!=13621||(g[c+3|0]=6),e[y>>2]==3420466&&(g[A+7|0]=nn(e[s>>2]==3420466?13619:12594));r:{if(e[n>>2]==12597){if((0|(I=e[s>>2]))!=12597)break r;g[A+7|0]=nn(13109)}I=e[s>>2]}a=P,(0|I)==12593&&((0|(I=e[y>>2]))==13621&&(g[r+7|0]=nn(12850),I=e[y>>2]),(0|I)==13619&&(g[r+7|0]=nn(13107),I=e[y>>2]),(0|I)==3420466&&(g[r+7|0]=nn(13364)),g[r+3|0]=0)}}he=0,y=s,A=r}else s=n;if(r=r+32|0,!((0|(_=_+1|0))<(0|(n=e[36423]))))break}if(s=0,r=145840,!((0|n)<=0))for(;4&l[0|r]&&((A=l[r+7|0])||(g[r+7|0]=17,A=17),A=e[144464+(A<<2)>>2],g[r+21|0]=l[A+12|0],g[r+22|0]=l[A+13|0]),r=r+32|0,(0|n)!=(0|(s=s+1|0)););}}else{if(A=e[fA+152>>2],A=fA+F(Re=(0|A)>7?1:A,6)|0,X=l[0|(Re?A+637:fA+157)],ct=l[0|(Re?636+(A+GA|0):156+(fA+GA|0))],g[133068]=(0|GA)==4,!((0|P)<=0)){for(Xe=P-1|0,ce=GA-1>>>0>1,n=0,a=0;;){f=o+F(a,6)|0,Y=((A=l[0|f])<<24>>24>3)+Y|0;A:if((0|A)==6){A=a-3|0,r=a;r:{for(;;){if((0|r)<=(0|n)|(0|A)>=(0|r))break r;a:switch(c=o+F(r=r-1|0,6)|0,l[0|c]-4|0){case 2:break r;case 0:break a;default:continue}break}g[0|c]=3}r=a;r:{for(;;){if((0|P)<=(0|(r=r+1|0)))break r;a:switch(l[o+F(r,6)|0]-4|0){case 0:break r;case 2:break a;default:continue}break}g[f+2|0]=2,g[0|f]=5,A=n;break A}if(l[0|f]==6){g[f+2|0]=2,m=0;r:if((0|P)<=(0|(A=a+1|0)))c=a,Cr=0;else if(Cr=1,(0|(s=g[o+F(A,6)|0]))>4)c=a;else{for(p=(qt-Y|0)>1,c=a;;){if(r=A,(255&s)==4&&(A=p+1|0,p=1,!((0|A)<=1))){A=r;break r}if(Cr=(0|P)>(0|(A=r+1|0)),(0|A)==(0|P))break;if(c=r,(0|(s=g[o+F(A,6)|0]))>4)break r}c=Xe,A=P}s=-1,I=0,p=0,he=-1,_=0,y=-1;r:{if((0|(r=n))<(0|A)){for(;s=(De=(0|(y=g[o+F(r,6)|0]))>3)&&(0|s)<0?r-n|0:s,m=(_=(0|p)>(0|y))?m:(0|p)<(0|y)?r:I,he=De?r:he,I=_?I:r,De=(0|r)!=(0|c),p=_?p:y,r=r+1|0,De;);if(_=I,y=he,(0|s)>=0)break r}s=A,I=_,he=y}e[33269]=c-I,e[33268]=s,e[33270]=I,e[33271]=m;r:if(l[133068])e[33270]=A,e[33271]=A;else if((0|he)>=0){if((0|A)!=(0|P))break r;g[o+F(he,6)|0]=7}else g[o+F(I,6)|0]=7;qn(o,Re,n,A,ct),!Cr&!!(0|GA)||(ct=ce?l[fA+156|0]:l[fA+157|0])}else A=n}else A=n;if((0|A)>=(0|a))n=A;else if(4&l[f+2|0]){for(n=a+1|0,s=-1,he=0,I=0,p=0,r=A,m=-1;s=(_=(0|(c=g[o+F(r,6)|0]))>3)&&(0|s)<0?r-A|0:s,he=(y=(0|c)<(0|p))?he:(0|c)>(0|p)?r:I,m=_?r:m,I=y?I:r,_=(0|r)!=(0|a),p=y?p:c,r=r+1|0,_;);e[33269]=a-I,e[33270]=I,e[33271]=he,e[33268]=(0|s)<0?n:s,l[133068]?(e[33270]=n,e[33271]=n):(0|m)>=0?g[o+F(m,6)|0]=7:g[o+F(I,6)|0]=7,qn(o,Re,A,n,X)}else n=A;if((0|P)==(0|(a=a+1|0)))break}if(!((0|n)>=(0|P))){for(s=-1,he=0,I=0,p=0,r=n,m=-1;s=(c=(0|(A=g[o+F(r,6)|0]))>3)&&(0|s)<0?r-n|0:s,he=(a=(0|A)<(0|p))?he:(0|A)>(0|p)?r:I,m=c?r:m,I=a?I:r,p=a?p:A,(0|P)!=(0|(r=r+1|0)););e[33270]=I,e[33271]=he,e[33269]=~I+P,e[33268]=(0|s)<0?P:s,l[133068]?(e[33270]=P,e[33271]=P):(0|m)>=0?g[o+F(m,6)|0]=7:g[o+F(I,6)|0]=7,qn(o,Re,n,P,ct)}}if((0|bt)<=0)break e;for(r=0,_=0;;){if(y=n=145840+(c=r<<5)|0,A=o+F(_,6)|0,s=l[0|A],g[n+3|0]=s,4&l[0|n]){a=c+145840|0,n=l[A+4|0],g[a+21|0]=n,p=l[A+5|0],g[a+16|0]=0,g[a+22|0]=p;A:{if(1&(I=l[A+2|0]))A=2;else{if(s>>>0<6)break A;A=l[A+1|0]}g[a+16|0]=A}n>>>0<=(255&p)>>>0?(A=p,p=n):(g[a+21|0]=p,g[a+22|0]=n,A=n),(n=l[7+(c+145840|0)|0])&&(A=(255&A)+(255&p)>>>1|0,n=e[144464+(n<<2)>>2],g[a+22|0]=A+l[n+13|0],g[a+21|0]=A+l[n+12|0]),2&I&&(g[y+3|0]=8|s),_=_+1|0}if((0|bt)==(0|(r=r+1|0)))break}}}if(q=o+6e3|0,_=e[47192],r=0,ce=0,m=0,Y=0,q=o=q-160|0,e[36423]>=2)for(GA=e[30450],s=1;;){if(s=(A=s)+1|0,P=l[3+(a=145840+(p=A<<5)|0)|0],2&(I=M[a>>1])){for(;(31&(c=e[198304+(Y<<2)>>2]))==2&&(Ya(127&c,c>>>8|0),e[36432]=110,e[36433]=100,e[36434]=450,e[36430]=5,I=e[50786],y=e[32972],(0|(n=e[y+84>>2]))>0&&(I=(0|F(n,I))/100|0),he=l[((0|(n=(0|I)>=359?359:I))<=80?80:n)+101856|0],n=(0|(n=(0|I)>=450?450:I))>399?6:(0|n)>379?7:he,e[32526]=(0|F(n,e[y+72>>2]))/256,e[32527]=(0|F(n,e[y+76>>2]))/256,e[32528]=(0|F(n,e[y+80>>2]))/256,n>>>0>7||(y=n-1|0,e[32528]=y,e[32526]=n,e[32527]=y)),Y=Y+1|0,!(128&c););I=M[a>>1]}y=s<<5,he=A-1|0,n=7&P;e:{A:{r:{a:{s:{c:{o:{u:{l:{i:switch(ct=l[17+(p+145840|0)|0],0|(c=4&I?2:ct)){case 2:break s;case 3:case 8:break c;case 5:break o;case 6:case 7:break u;case 4:break l;case 0:break i;default:break e}r=0;break e}if((0|(A=l[17+(145840+(he<<5)|0)|0]))!=6?(n=(0|A)==4?60:e[34063]>0||n>>>0<4?48:60,g[18+(p+145840|0)|0]=n):(n=25,g[18+(p+145840|0)|0]=25),!(16&l[0|_])|!l[20+(p+145840|0)|0]||(g[18+(p+145840|0)|0]=60,n=60),64&l[e[8+(p+145840|0)>>2]+6|0]&&(n=n+30|0,g[18+(p+145840|0)|0]=n),r=0,!(8&I))break e;g[18+(p+145840|0)|0]=l[_+164|0]+n;break e}!(a=l[20+(A=p+145840|0)|0])|1&g[e[A+8>>2]+7|0]&l[17+(145840+(he<<5)|0)|0]==2||(g[18+(p+145840|0)|0]=15),n=l[17+(y+145840|0)|0],8&l[e[8+(p+145840|0)>>2]+4|0]|n|l[17+(145840+(he<<5)|0)|0]!=8||(g[18+(p+145840|0)|0]=25),64&l[e[8+(145840+(A=he<<5)|0)>>2]+5|0]&&(g[18+(p+145840|0)|0]=30),!a|!(16&e[_>>2])||(g[18+(p+145840|0)|0]=30);u:if(l[20+(y+145840|0)|0]|!(32&l[e[8+(p+145840|0)>>2]+4|0])|(0|n)!=4)e[12+(p+145840|0)>>2]=256;else{if(a=p+145840|0,l[17+(A+145840|0)|0]==2){e[a+12>>2]=200;break u}e[a+12>>2]=150}if((0|c)!=7||(ce|=(0|n)==2,(254&l[17+(A+145840|0)|0])!=2))break e;e[12+(p+145840|0)>>2]=e[12+(A+145840|0)>>2]+255>>>1;break e}(254&(n=l[17+(145840+(A=he<<5)|0)|0]))==6|(0|n)==3|32&e[e[8+(A+145840|0)>>2]+4>>2]&&(g[18+(p+145840|0)|0]=30);o:if((254&(a=l[17+(y+145840|0)|0]))==2){ce=l[20+(y+145840|0)|0]&&(0|a)!=2?ce:1,g[18+(a=p+145840|0)|0]=40,P=0;u:{switch(0|n){case 0:if((A=e[12+(A+145840|0)>>2])>>>0>39)break u;P=40-A|0;break u;case 2:break u}if(l[20+(p+145840|0)|0])break o;P=20;l:switch(n-3|0){case 1:if(P=0,!(8&l[e[8+(A+145840|0)>>2]+4|0]))break u;break o;case 0:break u;case 5:break l;default:break o}P=12}g[a+18|0]=P}if(!(16&l[0|_])|!l[20+(p+145840|0)|0]||l[18+(A=p+145840|0)|0]>19)break e;g[A+18|0]=20;break e}a=l[_+296|0],c=n=p+145840|0,e[n+12>>2]=256,g[n+19|0]=a;c:if(l[n+20|0]){I=25;o:switch(l[17+(145840+(he<<5)|0)|0]-2|0){case 0:if(I=12,1&g[e[8+(p+145840|0)>>2]+7|0])break c;break;case 1:break o;default:break c}g[18+(p+145840|0)|0]=I}if((0|(y=l[17+(y+145840|0)|0]))==2){m=1;break e}if(g[22+(a=p+145840|0)|0]=r,(254&l[17+(145840+(n=he<<5)|0)|0])==2)break a;if(n=r,(0|(c=e[36423]))<=(0|A))break A;for(;;){if(l[17+(145840+(n=A<<5)|0)|0]==2){n=l[22+(n+145840|0)|0],g[a+22|0]=n;break A}if((0|c)==(0|(A=A+1|0)))break}break r}if(fA=p+145840|0,Xe=n^n>>>0<2,n=(bt=8&P)?25:l[296+(Xe+_|0)|0]-m|0,g[fA+19|0]=n,(e[36423]-3|0)>(0|A)||(0|(c=255&n))<=(0|(n=e[_+52>>2]))||(g[fA+19|0]=n),n=0,P=0,!(I=l[a+52|0]))for(;c=e[a+40>>2],P=l[a+49|0]==2?(~e[c+4>>2]>>>20&1)+P|0:P,n=l[c+10|0]==27?2:n,c=a,a=a+32|0,!(I=l[c+84|0]););c=fA+96|0,A=145840+(Re=A+2<<5)|0,e[34063]=P,f=l[e[a+40>>2]+10|0],y=y+145840|0,l[17+(Re+145840|0)|0]|l[e[y+8>>2]+10|0]!=23?(a=c,c=A,A=y):a=p+145968|0,y=l[e[c+8>>2]+15|0];s:if(P)y=l[e[_+96>>2]+(l[e[A+8>>2]+15|0]+F(y,10)|0)|0],l[A+17|0]!=8|(254&l[c+17|0])!=4||(y=8&l[e[a+8>>2]+4|0]?y-15|0:y);else{if(X=e[_+100>>2],Re=l[e[A+8>>2]+15|0],a=l[A+20|0],y=l[X+(Re+F(a|l[c+20|0]?(0|y)==1:y,10)|0)|0],!a|!(32&l[0|_]))break s;y=l[1+(X+F(Re,10)|0)|0]+y>>>1|0}a=I>>>1|0,Re=!P,I=(0|(y=(0|F(e[130104+(P?(0|P)==1?4:8:0)>>2],y))/128|0))<=8?8:y;s:if((0|Xe)!=7)bt&&(I=e[_+200>>2]+I|0);else{if(I=(y=e[_+200>>2])+I|0,!bt)break s;I=((0|y)/2|0)+I|0}y=a&Re|(0|f)==27,(a=M[304+(_+(Xe<<1)|0)>>1])||(a=M[_+316>>1]),I=F(a<<16>>16,I),(P=l[7+(a=p+145840|0)|0])&&(Xe=l[e[144464+(P<<2)>>2]+14|0])&&(I=(0|F(I,Xe))/100|0),(y|(0|n)==2)==1&&(2097152&(n=e[_+12>>2])||(I=(0|F(262144&n?282:256+((280-(l[e[8+(p+145840|0)>>2]+14|0]<<1)|0)/3|0)&65535,I))/256|0)),Xe=p+145840|0,n=F(e[32526],e[_+196>>2]),bt=(0|ct)!=2?256:(0|((0|n)>(0|I)?I:n))/128|0,e[Xe+12>>2]=bt,(n=l[Xe+16|0])>>>0>=19&&(ji(84371,28,GA),g[Xe+16|0]=0,P=l[a+7|0],n=0),I=n+1|0,(n=255&P)?(Us(n,o+8|0),n=Vi(e[o+132>>2])):n=e[129280+((255&I)<<2)>>2],y=p+145840|0,1&(m|ce)&&(a=145840+(p=he<<5)|0,m=l[0|n],n=l[y+21|0],n=((0|F(m,l[y+22|0]-n|0))/256|0)+n|0,g[a+22|0]=n,r=(n-(r=(0|n)==255?255:r)|0)>16?n-16|0:r,g[a+21|0]=r,a=0,(0|r)<(0|n)&&(g[Xe+16|0]=I,a=2),e[12+(r=p+145840|0)>>2]=bt,g[r+16|0]=a,n=l[fA+19|0],g[r+19|0]=l[r+17|0]!=3&&n>>>0>18?18:n),r=(0|ct)!=2,a=-2&(n=M[A>>1]),b[A>>1]=a;s:{c:{o:switch(l[A+17|0]-3|0){case 5:if(l[c+17|0]==2)break s;a=1|n;break c;case 0:break o;default:break s}if(b[A>>1]=1|n,l[c+17|0]!=2&&e[e[A+8>>2]>>2]!=12146)break s}b[A>>1]=a}r?(0|(A=r<<4))<=((n=l[y+22|0])-(a=l[y+21|0])|0)||(a=(0|(A=n-A|0))>0?A:0,g[y+21|0]=a):(n=l[y+22|0],a=l[y+21|0]),A=255&a,r=((0|F(l[e[129280+(l[Xe+16|0]<<2)>>2]+127|0],n-A|0))/256|0)+A|0,m=0,ce=0;break e}a=e[12+(n+145840|0)>>2],e[c+12>>2]=a,(0|ct)==3&&(a=e[32526],e[c+12>>2]=a),n=r;a:switch(y-5|0){case 0:e[c+12>>2]=(F(a,160)>>>0)/100;break r;case 2:break a;default:break A}e[c+12>>2]=(F(a,120)>>>0)/100}n=r}ce=0,g[16+(A=p+145840|0)|0]=0,a=A,n=(A=255&n)-16|0,g[a+21|0]=A>>>0>=n>>>0?n:0}if(!(e[36423]>(0|s)))break}if(q=o+160|0,15&(a=e[47197])|e[36456]){A=0,c=0,q=n=q-80|0;e:if((r=e[33222])||(e[33223]=500,r=It(500),e[33222]=r,r)){if(!((e[36423]-2|0)<2)){for(A=a>>8,_=128&a?0:A,P=A&a<<24>>31,y=2&a,a=n+32|1,p=1;;){if(ga(n,e[8+(s=145840+(he=p<<5)|0)>>2],s,y,n+72|0),A=n+32|0,(13&(r=l[s+20|0]))==1&&(g[n+32|0]=32,A=a),!_|(0|_)!=32&!!(0|r)|p>>>0<2||(Dt(n+76|0,n),e[n+76>>2]-880>>>0>4294967103||(A=Nr(_,A)+A|0)),4&l[0|s]&&((r=l[3+(he+145840|0)|0])>>>0<2||(r=r>>>0>=5?5:r,r=y?r>>>0>3?712:716:g[r+94144|0],e[n+76>>2]=r,A=Nr(r,A)+A|0)),I=0,e[n+72>>2]=0,l[0|(r=n)])for(;r=Dt(n+76|0,r)+r|0,e[n+72>>2]>>>I-1&1|!P|(0|I)<=0||(m=e[n+76>>2])-880>>>0>4294967103||Qs(m)&&(A=Nr(P,A)+A|0),I=I+1|0,A=Nr(e[n+76>>2],A)+A|0,l[0|r];);if(l[e[s+8>>2]+10|0]!=21&&(8&(r=M[s>>1])&&(A=ga(A,e[36128],s,y,0),r=M[s>>1]),!(4&r)|l[17+(he+145840|0)|0]==2||(A=ga(A,e[36136],s,y,0)),(r=l[7+(he+145840|0)|0])&&(A=ga(A,e[144464+(r<<2)>>2],s,y,0))),(A=(s=A-(n+32|0)|0)+c|0)>>>0<ue[33223])r=e[33222];else{if(r=A+500|0,e[33223]=r,!(r=qr(e[33222],r))){e[33223]=0,r=86135;break e}e[33222]=r}if(g[(I=s)+(s=n+32|0)|0]=0,JA(r+c|0,s),c=A,!((0|(p=p+1|0))<(e[36423]-2|0)))break}if(!r){r=86135;break e}}g[A+r|0]=0}else e[33223]=0,r=86135;q=n+80|0,15&l[188788]&&(e[t>>2]=r,hr(e[47195],84367,t)),(A=e[36456])&&pt[0|A](r)}l[190280]?(e[36423]=0,A=1):(bA(0),(A=e[t+8>>2])?(q=r=q+-64|0,ar(r,A,60),Rs(r,1),n=0,(A=tt(r,0))&&(n=A,l[202976]&&(n=tt(202976,2))),q=r- -64|0,e[44468]=n):n=e[44468],A=1,n&&(r=e[32972],(n=It(1344))&&(r=xt(n,r,1344),n=216192+(e[50758]<<4)|0,e[n>>2]=11,e[n+8>>2]=r,r=e[50758]+1|0,e[50758]=(0|r)<=169?r:0),e[44468]=0))}else A=0,g[190280]=0;else A=0,e[36423]=0,e[50758]=0,e[50757]=0;return q=t+16|0,A}function Te(A,t){var r=0,n=0,a=0,s=0;r=1073741825;e:{A:{r:{a:{s:{c:{o:{u:{l:{i:{p:{C:{m:{b:{h:{E:{w:{y:{L:{W:{V:{M:{B:{D:{F:{q:{Y:{Z:{S:{ae:{H:{ye:{U:{d:{f:{$:{k:{ee:{I:{n:{We:{J:{t:{fe:{R:{pe:{he:{Ve:{le:{N:{Ee:{v:{Me:{_:{me:{Ge:{je:{De:{Qe:{Te:{Pe:{ze:{Fe:{Ce:{Ue:{Ae:{Se:{Ke:{Ne:{Oe:{G:{be:{Ze:{hA:{mA:{CA:{bA:{IA:{wA:{kA:{xA:{BA:{vA:{yA:{EA:{MA:{GA:{DA:{QA:{TA:{PA:{zA:{FA:{SA:{NA:{OA:{LA:{YA:{HA:{RA:{WA:{VA:{jA:switch(0|t){case 0:t=A-9>>>0<5?1073741825:0,t=(A=(0|A)==133)?1073741825:t;break F;case 1:g:{Q:{T:{P:{z:{O:{X:{j:{te:{se:{re:{ie:{ce:{ge:{if((0|(t=-256&A))<=2047){if(!t)break ge;if((0|t)==1536)break ce;if((0|t)!=1792||(r=0,n=1,(0|A)!=1807))break g;break t}if((0|t)<=69631){if((0|t)==2048)break ie;if((0|t)!=8192)break g;switch(r=131076,A-8204|0){case 1:break re;case 0:break t;default:break se}}if((0|t)==69632)break te;if((0|t)!=917504)break g;switch(r=8388608,A-917505|0){case 62:break T;case 58:break P;case 57:break z;case 45:break O;case 43:break X;case 32:break j;case 0:break t;default:break Q}}if(r=16,(0|A)!=173)break g;break t}if(r=0,n=1,A-1536>>>0<6)break t;n=(0|A)==1757,t=(A=(0|A)==1564)?2:0;break D}if(r=0,n=1,(0|A)!=2274)break g;break t}return J=64,4}if(r=1073741826,(-2&A)==8206)break t;if(A-8234>>>0<5)return J=0,2;if(r=128,A-8289>>>0<4||(r=2,A-8294>>>0<4))break t;if(r=8388608,A-8298>>>0>=6)break g;break t}t=!(A-69821&-17),A=0;break B}J=536870976;break M}J=268435520;break M}J=-2147483584;break M}J=134217792;break M}J=67108928;break M}J=1073741888;break M}if(r=131072,n=64,A-917536>>>0<96)break t}break n;case 2:g:{Q:{T:{P:{z:{O:{X:{if((0|(t=-256&A))<=130303){if((0|t)<=127743){if((0|t)<=64767){if((0|t)<=11007){if((0|t)==8192)break X;if((0|t)!=9216)break g;if(A-9255>>>0>=25)break O;break I}if((0|t)==11008)break z;if((0|t)!=11776||(r=-2147483648,A-11845>>>0>=59))break g;break t}if((0|t)<=126975){if((0|t)==64768)break P;if((0|t)!=65280||(r=4194304,A-65520>>>0>=9))break g;break t}if((0|t)==126976|(0|t)==127232|(0|t)==127488)break J;break g}if((0|t)<=129023){if((0|t)<=128255){if((0|t)==127744|(0|t)==128e3)break J;break g}if((0|t)==128256|(0|t)==128512|(0|t)==128768)break J;break g}if((0|t)<=129535){if((0|t)==129024|(0|t)==129280)break J;break g}if((0|t)==129536|(0|t)==129792|(0|t)==130048)break J;break g}if((0|t)<=919039){if((0|t)<=917759){if((0|t)<=130815){if((0|t)==130304)break J;if((0|t)!=130560)break g;break J}if((0|t)==130816)break J;if((0|t)!=917504)break g;if((-128&A)!=917632)break T;break ee}if((0|t)<=918271){if((0|t)==917760)break Q;if(r=4194304,(0|t)!=918016)break g;break t}if((0|t)==918272|(0|t)==918528)break ee;if(r=4194304,(0|t)!=918784)break g;break t}if((0|t)<=920319){if((0|t)<=919551){if((0|t)==919040)break ee;if(r=4194304,(0|t)!=919296)break g;break t}if((0|t)==919552|(0|t)==919808)break ee;if(r=4194304,(0|t)!=920064)break g;break t}if((0|t)<=920831){if((0|t)==920320)break ee;if(r=4194304,(0|t)!=920576)break g;break t}if((0|t)==920832|(0|t)==921088)break ee;if(r=4194304,(0|t)!=921344)break g;break t}if(r=4194304,(0|A)!=8293)break g;break t}if(r=-2147483648,A-9291>>>0>=21)break g;break t}if((-16&A)==11248|A-11219>>>0<25|(0|A)==11209|A-11194>>>0<3||(0|(t=-2&A))==11124)break I;if(r=-2147483648,(0|t)!=11158)break g;break t}if(r=65536,A-64976>>>0>=32)break g;break t}if((0|A)==917504)break ee;if(r=4194304,A-917506>>>0>=30)break g;break t}if(r=4194304,A>>>0>917999)break t}t=(A=!(65534&~A))>>>16|0,A<<=16;break B;case 6:g:{Q:{T:{P:{z:{O:{X:{j:{te:{se:{re:{ie:{if((0|(t=-256&A))<=7679){if((0|t)<=767){if(!t)break ie;if((0|t)==256)break re;if((0|t)!=512)break n;if((0|A)!=585)break se;break V}if((0|t)==768)break te;if((0|t)==1024)break j;if((0|t)!=7424||(r=16777216,(0|A)!=7574))break n;break t}if((0|t)<=119807){if((0|t)==7680)break X;if((0|t)==8448)break O;if((0|t)!=65280||(r=256,A-65345>>>0>=6))break n;break t}if((0|t)<=120319){if((0|t)==119808)break z;if((0|t)!=120064)break n;if(A>>>0>=120070)break P;break k}if((0|t)==120320)break T;if((0|t)!=120576)break n;if(A>>>0>=120597)break Q;break k}if(r=768,A-97>>>0<6)break t;if(r=16777216,A-105>>>0>=2)break n;break t}r=(t=(0|A)==329)>>>9|0,t=(A=(0|A)==303)?16777216:t<<23;break W}if((0|A)==616)break V;if(r=16777216,(0|A)!=669)break n;break t}switch(r=128,A-976|0){case 35:break g;case 0:case 1:case 2:case 5:case 32:case 33:break t}if((-2&A)!=1012)break n;break t}n=(A=!(A-1110&-3))>>>8|0,A<<=24;break L}n=(t=(0|A)==7883)>>>8|0,t=(A=(0|A)==7725)?16777216:t<<24;break D}if(A-8458>>>0<10)break k;if((t=A-8495|0)>>>0<11)break VA;break fe}if((0|(t=-2&A))==119842)break $;if(A-119808>>>0<85)break k;if(A-119894>>>0<2|A-119946>>>0<2)break $;if((0|A)==119995|A-119896>>>0<69|A-119982>>>0<12)break k;if((0|t)==119998)break $;if(A-119997>>>0<7)break k;if(r=16777344,(0|t)==120050)break t;if(r=128,A>>>0<=120004)break n;break t}if((-2&A)==120102)break $;if(A-120094>>>0<28)break k;P:{if((0|A)<=120257){if(A-120154>>>0<2)break $;if(r=16777344,A-120206>>>0>=2)break P;break t}if(A-120258>>>0<2)break $;if(r=16777344,A-120310>>>0<2)break t}if(r=128,A>>>0<=120145)break n;break t}if(A-120362>>>0<2|A-120414>>>0<2)break $;if(r=16777344,A-120466>>>0<2)break t;if(A-120540>>>0<31|A>>>0>120571|A>>>0<120486)break k;if(r=128,A-120514>>>0>=25)break n;break t}if(A-120772>>>0<8|A-120746>>>0<25|A-120714>>>0<31|A-120688>>>0<25||(0|A)!=120597&A>>>0<120629|A-120656>>>0<31)break k;if(r=128,A-120630>>>0<25)break t;break n}break V;case 7:g:{Q:{T:{P:{z:{O:{X:{j:{te:{se:{re:{ie:{ce:{ge:{x:{oe:{ne:{K:{ue:{de:{Ie:{we:{if((0|(t=-256&A))<=11263){if((0|t)<=3583){if((0|t)<=1535){if((0|t)==512)break we;if((0|t)==768)break Ie;if((0|t)!=1280||(r=4096,(0|A)!=1369))break n;break t}if((0|t)==1536)break de;if((0|t)==1792)break ue;if((0|t)!=2304||(r=4096,(0|A)!=2417))break n;break t}if((0|t)<=7167){if((0|t)==3584)break K;if((0|t)==6144)break ne;if((0|t)!=6656||(r=8192,(0|A)!=6823))break n;break t}if((0|t)==7168)break oe;if((0|t)==7424)break x;if((0|t)!=8192)break n;if(r=16793600,!(t=A-8305|0))break t;if((0|t)==14)break ge;break ce}if((0|t)<=43263){if((0|t)<=40959){if((0|t)==11264)break ie;if((0|t)==11776)break re;if((0|t)!=12288)break n;switch(r=8192,A-12293|0){case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 9:case 10:case 11:case 12:case 13:case 14:case 15:case 16:case 17:case 18:case 19:case 20:case 21:case 22:case 23:case 24:case 25:case 26:case 27:case 28:case 29:case 30:case 31:case 32:case 33:case 34:case 35:case 36:case 37:case 38:case 39:case 40:case 41:case 42:case 43:break te;case 0:case 44:case 45:case 46:case 47:case 48:break t;default:break se}}if((0|t)==40960)break j;if((0|t)==42496)break X;if((0|t)!=42752)break n;if(A-42775>>>0>=9)break O;break f}if((0|t)<=65279){if((0|t)==43264)break z;if((0|t)==43520)break P;if((0|t)!=43776||(r=20480,(-4&A)!=43868))break n;break t}if((0|t)==65280)break T;if((0|t)==92928)break Q;if((0|t)!=93952)break n;if(r=4096,A-94099>>>0<13)break t;if(r=8192,(-2&A)!=94176)break n;break t}if(r=16797696,(0|A)==690)break t;if(A-688>>>0<9)return J=0,20480;if(A-697>>>0<7)break f;if((0|(t=-2&A))==704)return J=0,20480;if(r=4096,A-710>>>0<10||(r=12288,(0|t)==720)||(r=20480,A-736>>>0<5))break t;r=(A=(-3&A)==748)>>>20|0,A<<=12;break y}t=(0|A)==890?20480:0,t=(A=(0|A)==884)?4096:t;break F}if(r=8192,(0|A)==1600)break t;if(r=4096,A-1765>>>0>=2)break n;break t}if(r=4096,(-2&A)==2036)break t;if(r=8192,(0|A)!=2042)break n;break t}t=(A=!(A-3654&-129))>>>19|0,A<<=13;break B}if(r=8192,(0|A)!=6211)break n;break t}if(r=12288,(0|A)==7291)break t;if(r=4096,A-7288>>>0>=6)break n;break t}if(r=16797696,(0|A)==7522||(r=20480,A-7468>>>0<63))break t;switch(r=16384,A-7588|0){default:if((0|A)==7544)break t;case 1:case 2:case 3:if(A-7579>>>0>=37)break n;break t;case 0:case 4:}return J=0,16793600}return J=0,16384}if(r=16384,A-8336>>>0>=13)break n;break t}t=(r=(0|A)==11389)>>>18|0,r=(A=(0|A)==11388)?16793600:r<<14;break w}if(r=-2147479552,(0|A)!=11823)break n;break t}if(A-12445>>>0<2)break t;if((0|A)==12540)break g}if(A-12541>>>0>=2)break n;break t}if(r=8192,(0|A)!=40981)break n;break t}if((0|A)==42508)break E;if((0|A)==42623)break f;if(r=20480,(-2&A)!=42652)break n;break t}if((0|A)==42864)return J=0,16384;if((0|A)==42888)break f;if(r=20480,(-2&A)!=43e3)break n;break t}r=(t=(0|A)==43494)>>>19|0,t=(A=(0|A)==43471)?8192:t<<13;break W}if((0|A)==43632||(0|A)==43741)break E;if(r=8192,A-43763>>>0>=2)break n;break t}if(r=12288,(0|A)==65392)break t;if(r=135168,(-2&A)!=65438)break n;break t}if(r=8192,(-2&A)==92994)break t;break n}return J=0,12288;case 8:r=128;g:{Q:{T:{P:{z:{O:{X:{j:{te:{if((0|(t=-256&A))<=12543){if((0|t)<=5887){if((0|t)<=3583){if(!t)break te;if((0|t)!=1536||(t=8388608,(0|A)!=1651))break v;break le}if((0|t)==3584)break j;if((0|t)!=4352||(r=4194304,A-4447>>>0>=2))break v;break N}if((0|t)<=8447){if((0|t)==5888)break X;if((0|t)!=6400||(t=A-6581|0)>>>0>=6)break v;r=e[(t=81432+(t<<3)|0)>>2],n=e[t+4>>2];break N}if((0|t)==8448)break O;if((0|t)!=12288||(t=2048,(0|A)!=12294))break v;break le}if((0|t)<=68863){if((0|t)<=63999){if((0|t)==12544)break z;if((0|t)!=43520)break v;if((t=A-43701|0)>>>0<8)break Q;break Ee}if((0|t)==64e3)break g;if((0|t)!=65280||(t=4194304,(0|A)!=65440))break v;break le}if((0|t)<=100095){if((0|t)==68864)break P;if((0|t)!=70400||(r=8192,(0|A)!=70493))break v;break he}if((0|t)==100096)break T;if((0|t)!=126464)break v;break N}n=(t=!(A-170&-17))>>>18|0,r=t<<14;break N}if(r=33554432,A-3648>>>0<5)break N;if(t=0,s=33554432,(0|A)==3759)break le;if(A-3776>>>0>=5)break v;break N}if(r=8388608,A-6051>>>0>=2)break v;break N}if(A-8501>>>0>=4)break v;break N}if(t=4194304,(0|A)!=12644)break v;break le}if(r=4096,(-2&A)!=68898)break v;break N}if(r=2048,A-100333>>>0<5)break N;break v}if(r=33554432,!(211>>>t&1))break Ee;break N}if((t=A-64014|0)>>>0>=28)break v;r=e[(t=81480+(t<<3)|0)>>2],n=e[t+4>>2];break N;case 10:g:{Q:{T:{P:{z:{O:{if((0|(t=-256&A))<=119807){if((0|t)<=8447){if(!t)break O;if((0|t)!=768)break n;switch(r=128,A-976|0){case 0:case 1:case 2:case 36:case 37:break t;default:break n}}if((0|t)==8448)break z;if((0|t)!=65280||(r=256,A-65313>>>0>=6))break n;break t}if((0|t)<=120319){if((0|t)==119808)break P;if((0|t)!=120064)break n;if(A>>>0>=120070)break T;break k}if((0|t)==120320)break Q;if((0|t)!=120576)break n;if(A-120772>>>0>=8)break g;break k}if(r=768,A-65>>>0>=6)break n;break t}switch(r=128,A-8450|0){case 0:case 5:break t}if(A-8458>>>0<10)break k;if((t=A-8469|0)>>>0<20)break WA;if((-4&A)==8508)break t;break Me}if(A-119982>>>0<12|A>>>0>120004|A-119977>>>0<4|A-119973>>>0<2||(0|A)==119970|(-2&A)==119966|A-119808>>>0<85)break k;if(r=128,A-119894>>>0>=71)break n;break t}if(A-120138>>>0<7|A>>>0>120145|(0|A)==120134|A-120128>>>0<5||A-120123>>>0<4|A-120094>>>0<28|(0|A)!=120070&A>>>0<120075|A-120086>>>0<7)break k;if(r=128,A-120077>>>0>=8)break n;break t}if(A-120540>>>0<31|A>>>0<120486)break k;if(r=128,A-120488>>>0>=25)break n;break t}if(A-120714>>>0<31|A-120598>>>0<31)break k;if(r=128,A-120656>>>0<31)break t;break n;case 11:g:{Q:{T:{P:{z:{O:{X:{j:{te:{se:{re:{ie:{ce:{ge:{x:{oe:{ne:{if((0|(t=-256&A))<=43263){if((0|t)<=3839){if((0|t)<=3071){if((0|t)==2304)break ne;if((0|t)!=2816)break d;if((0|A)>3005)break x;if((0|A)!=2878)break oe;return J=0,132096}if((0|t)==3072)break ge;if((0|t)!=3328)break d;switch(r=132096,A-3535|0){case 0:case 16:break t;case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 9:case 10:case 11:case 12:case 13:case 14:case 15:break d;default:break ce}}if((0|t)<=6911){if((0|t)==3840)break ie;if((0|t)!=4096)break d;if(r=1024,A-4139>>>0<2)break t;switch(A-4145|0){case 0:case 7:case 10:case 11:case 37:case 38:case 49:case 54:case 55:case 82:case 83:break t;case 86:case 87:case 88:case 89:case 90:case 91:case 94:case 105:case 106:break g;default:break re}}if((0|t)==6912)break se;if((0|t)==7168)break te;if((0|t)!=12288||(r=135168,(-2&A)!=12334))break d;break t}if((0|t)<=70399){if((0|t)<=43775){if((0|t)==43264)break j;if((0|t)!=43520)break d;return J=0,A-43643&-3?1024:4096}if((0|t)==43776)break X;if((0|t)==69888)break O;if((0|t)!=70144||(r=4096,(0|A)!=70197))break d;break t}if((0|t)<=70911){if((0|t)==70400)break z;if((0|t)!=70656)break d;t=(0|A)==70845?132096:1024,t=(A=(0|A)==70832)?132096:t;break F}if((0|t)==70912)break P;if((0|t)==71168)break T;if((0|t)!=119040)break d;switch(r=131072,A-119141|0){case 8:break f;case 1:break n;case 0:break t;default:break Q}}t=(0|A)==2519?132096:1024,t=(A=(0|A)==2494)?132096:t;break F}if(r=132096,(0|A)!=2903)break d;break t}if((0|A)==3006)return J=0,132096;if(r=132096,(0|A)!=3031)break d;break t}if((A=A-3266|0)>>>0>20||(r=132096,!(1<<A&1572865)))break d;break t}if((0|A)==3390)break t;if((0|A)!=3415)break d;break t}if(r=4096,(-2&A)!=3902)break d;break t}r=(A=(0|A)==4252)>>>22|0,A<<=10;break y}switch(r=1024,A-6965|0){default:if((0|A)==6916)break t;break;case 0:case 6:break t;case 1:case 2:case 3:case 4:case 5:}if(A-6973>>>0<5)break t;switch(A-6979|0){case 1:break f;case 0:break t}if((0|A)==7042|(0|A)==7073|(-2&A)==7078)break t;if((0|A)==7082)break f;if((0|A)==7143|A-7146>>>0<3)break t;r=(A=(0|A)==7150)>>>22|0,A<<=10;break y}t=(0|A)==7415?4096:1024,t=(A=(0|A)==7393)?4096:t;break F}t=(0|A)==43456?4096:1024,t=(A=(0|A)==43347)?4096:t;break F}if(r=4096,(0|A)!=44012)break d;break t}if(r=4096,(0|A)!=70080)break d;break t}r=132096;z:switch(A-70462|0){case 0:case 25:break t;case 15:break z;default:break d}break f}if(r=132096,(0|A)!=71087)break d;break t}if(r=4096,(0|A)!=71350)break d;break t}if(r=135168,A-119150>>>0<5)break t;break d}break f;case 12:t=((0|A)==8419)<<6,A=0;break B;case 13:g:{Q:{T:{P:{z:{O:{X:{j:{te:{se:{re:{ie:{ce:{ge:{x:{oe:{ne:{K:{ue:{de:{Ie:{we:{Le:{ke:{Ye:{Xe:{qe:{Je:{_e:{$e:{eA:{AA:{tA:{rA:{nA:{xe:{aA:{sA:{iA:{oA:{lA:{He:{Be:{Re:{cA:{gA:{uA:{ve:{dA:{fA:{pA:{if((0|(t=-256&A))<=43775){if((0|t)<=5887){if((0|t)<=2559){if((0|t)<=1535){if((0|t)==768)break pA;if((0|t)==1024)break fA;if((0|t)!=1280)break n;if(A-1425>>>0>=17)break dA;break f}if((0|t)<=2047){if((0|t)==1536)break ve;if((0|t)!=1792)break n;if(r=1024,(0|A)==1809)break t;if((-16&A)!=1840)break uA;return J=0,5120}if((0|t)==2048)break gA;if((0|t)!=2304)break n;if(A>>>0>=2307)break cA;break d}if((0|t)<=3583){if((0|t)<=3071){if((0|t)==2560)break Re;if((0|t)!=2816)break n;switch(r=1024,A-2876|0){case 0:break f;case 3:break t;case 1:case 2:break He;default:break Be}}if((0|t)==3072)break lA;if((0|t)!=3328)break n;if((0|(t=-2&A))!=3328)break oA;break d}if((0|t)<=4095){if((0|t)==3584)break iA;if((0|t)!=3840)break n;if((0|(t=-2&A))!=3864)break sA;break f}if((0|t)==4096)break aA;if((0|t)!=4864||(r=1024,(0|A)!=4959))break n;break t}if((0|t)<=8191){if((0|t)<=6655){if((0|t)==5888)break xe;if((0|t)==6144)break nA;if((0|t)!=6400)break n;if((t=A-6432|0)>>>0<=18&&(r=1024,1<<t&262535))break t;if(r=4096,A-6457>>>0>=3)break n;break t}if((0|t)<=7167){if((0|t)==6656)break rA;if((0|t)!=6912)break n;if(r=1024,(-4&A)==6912)break t;if((0|A)!=6964)break tA;break f}if((0|t)==7168)break AA;if((0|t)!=7424)break n;if(r=4096,A-7620>>>0<12||(r=1024,A-7655>>>0<14))break t;if((A=A-7669|0)>>>0>=11)break n;t=e[(A=82104+(A<<3)|0)>>2];break h}if((0|t)<=42495){if((0|t)<=11519){if((0|t)==8192)break eA;if((0|t)!=11264||(r=4096,A-11503>>>0>=3))break n;break t}if((0|t)==11520)break $e;if((0|t)!=12288)break n;if(A-12330>>>0>=4)break _e;break f}if((0|t)<=43263){if((0|t)==42496)break Je;if((0|t)!=43008)break n;if(A-43045>>>0>=2)break qe;break d}if((0|t)==43264)break Xe;if((0|t)!=43520)break n;switch(r=1024,A-43561|0){case 83:case 150:case 152:break f;case 0:case 1:case 2:case 3:case 4:case 5:case 8:case 9:case 12:case 13:case 26:case 35:case 135:case 137:case 138:case 139:case 142:case 143:case 149:break t;default:break Ye}}if((0|t)<=71423){if((0|t)<=69375){if((0|t)<=66047){if((0|t)==43776)break ke;if((0|t)==64256)break Le;if((0|t)!=65024)break n;if(r=536870912,A-65024>>>0<15||(n=64,(0|A)==65039))break t;if(r=4096,n=0,(-16&A)!=65056)break n;break t}if((0|t)<=68095){if((0|t)==66048)break we;if((0|t)!=66304||(r=1024,A-66422>>>0>=5))break n;break t}if((0|t)==68096)break Ie;if((0|t)!=68864||(r=5120,(-4&A)!=68900))break n;break t}if((0|t)<=70399){if((0|t)<=69887){if((0|t)==69376)break de;if((0|t)!=69632)break n;if(A-69688>>>0>=14)break ue;break d}if((0|t)==69888)break K;if((0|t)!=70144)break n;if(r=1024,A-70191>>>0<3)break t;switch(A-70196|0){case 2:break f;case 0:case 3:case 10:break t;case 1:case 4:case 5:case 6:case 7:case 8:case 9:break oe;default:break ne}}if((0|t)<=70911){if((0|t)==70400)break x;if((0|t)!=70656)break n;if((-8&A)!=70712)break ge;break d}if((0|t)==70912)break ce;if((0|t)!=71168)break n;if(r=1024,A-71219>>>0<8)break t;switch(A-71229|0){case 2:break f;case 0:case 3:break t;case 1:break re;default:break ie}}if((0|t)<=92927){if((0|t)<=72703){if((0|t)==71424)break NA;if((0|t)==71680)break se;if((0|t)!=72192)break n;if(A-72193>>>0>=10)break te;break d}if((0|t)<=73215){if((0|t)==72704)break j;if((0|t)!=72960)break n;if((t=A-73009|0)>>>0<19)break FA;break _}if((0|t)==73216)break X;if((0|t)!=92672||(r=4096,A-92912>>>0>=5))break n;break t}if((0|t)<=122879){if((0|t)<=113663){if((0|t)==92928)break O;if((0|t)!=93952||(r=4096,A-94095>>>0>=4))break n;break t}if((0|t)==113664)break z;if((0|t)!=119040)break n;switch(r=4096,A-119143|0){case 0:case 1:case 2:case 20:case 21:case 22:case 23:case 24:case 25:case 26:case 27:case 30:case 31:case 32:case 33:case 34:case 35:case 36:case 67:case 68:case 69:case 70:break t;default:break n}}if((0|t)<=125183){if((0|t)==122880)break P;if((0|t)!=124928||(r=4096,A-125136>>>0>=7))break n;break t}if((0|t)==125184)break T;if((0|t)!=917760||(r=536870912,A-917760>>>0>=240))break n;break t}if(A-768>>>0<69)break f;if(r=21504,(0|A)==837)break t;if(A-838>>>0<9)break f;if(r=4194304,(0|A)==847)break t;if((-8&A)==848)break f;if(r=4096,A-861>>>0>=6)break n;break t}if(r=4096,A-1155>>>0>=5)break n;break t}if(r=4096,A-1443>>>0<13||(r=5120,A-1456>>>0<14))break t;if((A=A-1471|0)>>>0>=9)break n;t=e[(A=81944+(A<<3)|0)>>2];break h}if(A-1552>>>0<11)break d;if(r=5120,A-1611>>>0<8)break t;if(A-1619>>>0<4)break d;switch(A-1623|0){case 1:break f;case 0:break t;case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 25:case 127:case 128:case 129:case 130:case 131:case 132:case 133:break d}if(r=4096,A-1759>>>0<2)break t;if((t=A-1761|0)>>>0<8)break RA;break me}if(A-1856>>>0<11)break f;if(r=5120,A-1958>>>0<11)break t;if(r=4096,A-2027>>>0>=9)break n;break t}switch(r=1024,(-2&A)-2070|0){case 2:break f;case 0:break t}if(A-2260>>>0<12|A-2089>>>0<4|A-2075>>>0<9|A-2085>>>0<3)break d;if(A-2275>>>0<7)return J=0,5120;if(r=4096,A-2282>>>0<6||(r=5120,A-2288>>>0<15))break t;if(r=1024,(0|A)!=2303)break n;break t}switch(r=1024,A-2362|0){case 2:break f;case 0:break t}if(A-2369>>>0<8)break d;switch(r=4096,A-2381|0){case 0:case 4:case 5:case 6:case 7:case 111:break t;case 8:case 9:case 10:case 21:case 22:case 52:break d}if(A-2497>>>0<4)break d;if((0|A)==2509)break t;if(r=1024,(-2&A)!=2530)break n;break t}if(A-2561>>>0<2)break d;switch(r=4096,A-2620|0){case 0:case 17:case 128:case 145:break t;case 5:case 6:case 11:case 12:case 15:case 16:case 21:case 52:case 53:case 57:case 69:case 70:case 133:case 134:case 135:case 136:case 137:case 139:case 140:case 166:case 167:case 190:case 191:case 192:break d}if(A-2813>>>0>=3)break n;break t}if((0|A)==2817)break d}if(A-2881>>>0<4)break d;switch(r=4096,A-2893|0){case 0:break t;case 9:break d}if((-2&A)==2914)break d;switch(r=1024,A-3008|0){default:if((0|A)!=2946)break n;break t;case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 9:case 10:case 11:case 12:break n;case 0:break t;case 13:}break f}switch(r=1024,A-3072|0){case 77:case 188:case 205:break f;case 0:case 62:case 63:case 64:case 70:case 71:case 72:case 74:case 75:case 76:case 85:case 86:case 98:case 99:case 129:case 191:case 198:case 204:break t}if((-2&A)!=3298)break n;break t}if(r=4096,A-3387>>>0<2)break t;if(A-3393>>>0<4)break d;if((0|A)==3405)break t;if((0|t)==3426)break d;switch(A-3530|0){case 0:break t;case 8:case 9:case 10:case 12:break d;default:break n}}if((t=A-3633|0)>>>0<10)break HA;break Ge}if((r=A-3893|0)>>>0>4|!(1<<r&21))break je;break f}switch(r=1024,A-4141|0){case 10:case 12:case 13:break f;case 0:case 1:case 2:case 3:case 5:case 6:case 7:case 8:case 9:case 16:case 17:case 43:case 44:case 49:case 50:case 51:case 68:case 69:case 70:case 71:case 85:case 88:case 89:break t}t=(r=(0|A)==4253)>>>22|0,r=(A=(0|A)==4237)?4096:r<<10;break w}r=1024;xe:{switch(A-5906|0){case 0:case 1:case 32:case 33:break t;case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 9:case 10:case 11:case 12:case 13:case 14:case 15:case 16:case 17:case 18:case 19:case 20:case 21:case 22:case 23:case 24:case 25:case 26:case 27:case 28:case 29:case 30:case 31:break xe}switch(A-5970|0){case 0:case 1:case 32:case 33:break t;default:break xe}}if(r=4194304,(-2&A)==6068)break t;if((t=A-6071|0)>>>0<16)break YA;break De}if(r=536870912,A-6155>>>0<3||(r=67109888,A-6277>>>0<2))break t;if(r=1024,(0|A)!=6313)break n;break t}if(A-6679>>>0<2)break d;switch(r=1024,A-6683|0){case 0:case 59:case 61:case 62:case 63:case 64:case 65:case 66:case 67:case 71:case 74:case 75:case 76:case 77:case 78:case 79:case 80:case 81:case 88:case 89:break t}if(r=4096,A-6832>>>0<14)break t;if((A=A-6773|0)>>>0>=11)break n;t=e[(A=82016+(A<<3)|0)>>2];break h}if(A-6966>>>0<5)break t;switch(A-6972|0){case 0:case 6:break t}if(A-7019>>>0<9)break f;switch(A-7040|0){case 43:break f;case 0:case 1:case 34:case 35:case 36:case 37:case 40:case 41:case 44:case 45:case 104:case 105:case 109:case 111:case 112:case 113:break t;default:break n}}if(r=1024,A-7212>>>0<8)break t;switch(r=12288,A-7222|0){case 1:break f;case 0:break t}if(A-7380>>>0<13)break f;switch(r=4096,A-7376|0){case 0:case 1:case 2:case 18:case 19:case 20:case 21:case 22:case 23:case 24:case 29:case 36:break t}if((-2&A)!=7416)break n;break t}if(r=128,A-8400>>>0<13)break t;if((A=A-8417|0)>>>0>=15)break n;t=e[(A=82192+(A<<3)|0)>>2];break h}if(r=1024,(-32&A)!=11744)break n;break t}if(r=4096,A-12441>>>0>=2)break n;break t}if((0|A)==42607)break f;if(A-42612>>>0<8)break d;if((0|(A&=-2))==42620)break f;if((0|A)==42654)break g;if(r=4096,(0|A)!=42736)break n;break t}switch(r=4096,A-43204|0){case 0:break t;case 1:break d}if(A-43232>>>0>=18)break n;break t}if(A-43302>>>0<5)break d;if(A-43307>>>0<3)break f;if(A-43335>>>0<11|A-43392>>>0<3)break d;if(r=4096,(0|A)==43443||(r=1024,A-43446>>>0<4))break t;n=(t=(0|A)==43493)>>>20|0,t=(A=(0|A)==43452)?1024:t<<12;break D}if((-2&A)==43756)break t;if(r=4096,(0|A)!=43766)break n;break t}r=1024;ke:switch(A-44005|0){case 0:case 3:break t;case 8:break ke;default:break n}break f}if(r=5120,(0|A)!=64286)break n;break t}if(r=4096,(0|A)!=66272)break n;break t}if((-4&A)==68108)break d;if((t=A-68097|0)>>>0<6)break LA;break Qe}if(r=4096,A-69446>>>0>=11)break n;break t}if(A-69811>>>0<4)break d;if(r=1024,(0|A)==69633)break t;if(r=4096,A-69817>>>0>=2)break n;break t}switch(r=1024,A-69888|0){case 51:case 52:case 115:break f;case 0:case 1:case 2:case 39:case 40:case 41:case 42:case 43:case 45:case 46:case 47:case 48:case 49:case 50:break t}if((-2&A)==70016|A-70070>>>0<9)break t;if(r=4096,A-70090>>>0>=3)break n;break t}if((0|A)==70367)break t}if(A-70371>>>0<6)break t;if(r=4096,A-70377>>>0>=2)break n;break t}if((-2&A)==70400)break d;r=4096;x:switch(A-70460|0){case 0:case 42:case 43:case 44:case 45:case 46:case 47:case 48:case 52:case 53:case 54:case 55:case 56:break t;case 4:break x;default:break n}break d}if((0|A)==70722)break f;if(A-70723>>>0<2)break d;if((t=A-70835|0)>>>0<=13)break Q;break Te}if((t=A-71090|0)>>>0<12)break OA;break Pe}switch(A-71339|0){case 0:case 2:break t;default:break re}}if(A-71344>>>0<6)break t;if(r=4096,(0|A)!=71351)break n;break t}if(r=1024,A-71727>>>0<10)break t;if(r=4096,A-71737>>>0>=2)break n;break t}if((0|A)==72244)break f;if(A-72245>>>0<10)break d;if(r=4096,(0|A)==72263)break t;if(A-72273>>>0<11)break d;if(r=1024,A-72330>>>0<13)break t;r=(t=(0|A)==72345)>>>20|0,t=(A=(0|A)==72344)?8192:t<<12;break W}if((t=A-72752|0)>>>0<16)break SA;break ze}if(r=1024,A-73459>>>0>=2)break n;break t}if(r=1024,A-92976>>>0>=7)break n;break t}if(r=1024,(0|A)!=113822)break n;break t}if(r=1024,A-122888>>>0<17)break t;if((A=A-122880|0)>>>0>=43)break n;t=e[(A=82816+(A<<3)|0)>>2];break h}if(r=12288,A-125252>>>0<3||(r=1024,(0|A)==125255)||(r=4096,A-125256>>>0<3))break t;break n}if(!(1<<t&12479))break Te;break d}break d;case 14:g:{if((0|(t=-256&A))!=120576){if((0|t)!=65280){if(t||(r=768,n=66,A-48>>>0>=10))break g;break t}if(r=256,A-65296>>>0>=10)break g;break t}if(r=128,A-120782>>>0<50)break t}break n;case 15:g:{if((0|(t=-256&A))!=12288){if((0|t)!=8448)break g;t=(A=(0|(r=-16&A))==8560)>>>18|0,n=A<<14,r=(A=(0|r)==8544)?32768:n;break w}if(A-12321>>>0<9||A-12344>>>0<3)return J=0,2048;if(r=2048,(0|A)==12295)break t}break n;case 16:g:{Q:{T:{if((0|(t=-256&A))<=9215){if((0|t)==4864)break T;if((0|t)!=6400||(r=134217728,(0|A)!=6618))break g;break t}if((0|t)==9216)break Q;if((0|t)!=127232)break g;if(r=0,n=-2147483648,(0|A)==127232)break t;if(n=268435456,A-127233>>>0>=10)break g;break t}if(r=134217728,A-4969>>>0>=9)break g;break t}if(r=0,n=-2147483648,A-9352>>>0<20)break t}break n;case 17:n=(A=(0|A)==8256)>>>25|0,A<<=7;break L;case 18:g:{Q:{T:{P:{if((0|(t=-256&A))<=11775){if((0|t)<=6143){if(r=-2147483624,!t)break t;if((0|t)!=1280||(r=24,(0|A)!=1418))break g;break t}if((0|t)==6144)break P;if((0|t)!=8192)break g;if(r=-2147483624,(-2&A)==8208)break t;A=A-8211>>>0<2,t=-2147483640;break b}if((0|t)<=65023){if((0|t)==11776)break T;if((0|t)!=12288)break g;t=(0|A)==12336,r=(A=(0|A)==12316)||t?-2147483640:8,J=A?0:t?130:0;break m}if((0|t)==65024)break Q;if((0|t)!=65280||(r=24,(0|A)!=65293))break g;break t}if(r=24,(0|A)!=6150)break g;break t}if(r=-2147483624,(0|A)==11799)break t;A=(-2&A)==11834,t=-2147483640;break b}if(r=8,n=8388608,A-65073>>>0<2||(r=152,n=0,(0|A)==65123))break t}return J=0,8;case 19:g:{Q:{T:{P:{z:{O:{if((0|(t=-256&A))<=11775){if((0|t)<=8959){if(t)break O;break I}if((0|t)==8960)break z;if((0|t)==9984)break P;if((0|t)!=10496)break n;break U}if((0|t)<=64767){if(r=-2147483648,(0|t)==11776)break t;if((0|t)!=12288)break n;switch(r=-2147483616,A-12301|0){case 0:case 2:break t;default:break T}}if((0|t)==64768)break Q;if((0|t)==65024)break g;if((0|t)!=65280)break n;if(r=32,(0|A)==65379)break t;break n}if((0|t)!=8192)break n;switch(A-8318|0){default:if(r=-2147483648,(0|A)!=8262)break n;break t;case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 9:case 10:case 11:case 12:case 13:case 14:case 15:break n;case 0:case 16:}break k}switch(r=-2147483520,A-8969|0){case 1:break n;case 0:case 2:break t}if((0|A)!=9002)break n;return J=0,-2139095040}if(r=-2147483520,(0|A)==10182)break t;break ye}return J=0,(-2&A)==12318?-2147483616:-2147483648}if(r=-2147483648,(0|A)!=64830)break n;break t}n=(A=!(A-65090&-3))>>>27|0,A<<=5;break L;case 20:case 21:if(!(A&=-256))break C;if(r=-2147483616,(0|A)==8192)break t;break We;case 22:g:{Q:{T:{P:{z:{O:{X:{j:{te:{se:{re:{ie:{ce:{ge:{x:{oe:{ne:{K:{ue:{de:{Ie:{we:{Le:{ke:{Ye:{Xe:{qe:{Je:{_e:{$e:{eA:{AA:{tA:{rA:{nA:{xe:{aA:{sA:{iA:{oA:{lA:{He:{Be:{Re:{cA:{gA:{uA:{ve:{if((0|(t=-256&A))<=43519){if((0|t)<=5887){if((0|t)<=2303){if((0|t)<=1535){if(!t)break ve;if((0|t)==768)break uA;if((0|t)!=1280)break n;if(r=0,n=538968064,A-1371>>>0<2)break t;switch(n=268435456,A-1373|0){case 0:break t;case 1:break cA;default:break gA}}if((0|t)==1536)break Be;if((0|t)==1792)break He;if((0|t)!=2048)break n;if((t=A-2103|0)>>>0<8)break PA;break Fe}if((0|t)<=3839){if((0|t)==2304)break lA;if((0|t)==3328)break oA;if((0|t)!=3584||(r=64,(-2&A)!=3674))break n;break t}if((0|t)<=4863){if((0|t)==3840)break iA;if((0|t)!=4096)break n;if(r=268435520,(-2&A)==4170)break t;if(r=0,n=16777216,(0|A)!=4347)break n;break t}if((0|t)==4864)break sA;if((0|t)!=5632)break n;switch(r=64,A-5741|0){case 1:break s;case 0:break t;default:break aA}}if((0|t)<=11263){if((0|t)<=6655){if((0|t)==5888)break xe;if((0|t)==6144)break QA;if((0|t)!=6400)break n;t=(0|A)==6469,r=(A=(0|A)==6468)||t?268435520:0,J=A?536870912:t?1073741824:0;break m}if((0|t)<=7167){if((0|t)==6656)break nA;if((0|t)!=6912)break n;if((0|(t=-2&A))!=7002)break rA;break H}if((0|t)==7168)break tA;if((0|t)!=8192)break n;switch(r=-2147483520,A-8214|0){case 1:break I;case 0:break t;case 16:break AA;default:break eA}}if((0|t)<=41983){if((0|t)==11264)break $e;if((0|t)==11776)break _e;if((0|t)!=12288)break n;switch(r=-2147483584,n=272629760,A-12289|0){case 2:break I;case 0:break t;case 1:break qe;default:break Je}}if((0|t)<=43007){if((0|t)==41984)break Xe;if((0|t)!=42496)break n;switch(r=64,n=268435456,A-42739|0){case 4:break c;case 0:break s;case 3:break r;case 2:break t;case 1:break ke;default:break Ye}}if((0|t)==43008)break Le;if((0|t)!=43264)break n;switch(r=4096,A-43310|0){case 0:break t;case 1:break H;default:break we}}if((0|t)<=70655){if((0|t)<=67839){if((0|t)<=65279){if((0|t)==43520)break Ie;if((0|t)==43776)break de;if((0|t)!=65024)break n;if(r=0,n=268435456,(0|(s=-2&A))==65040)break t;if((t=A-65042|0)>>>0<8)break GA;break Ce}if((0|t)==65280)break ue;if((0|t)==66304)break K;if((0|t)!=67584||(r=64,(0|A)!=67671))break n;break t}if((0|t)<=69375){if((0|t)==67840)break ne;if((0|t)==68096)break oe;if((0|t)!=68352)break n;switch(r=64,A-68410|0){case 0:case 1:case 2:case 3:case 4:case 5:case 95:case 96:case 97:case 98:break t;default:break n}}if((0|t)<=69887){if((0|t)==69376)break x;if((0|t)!=69632)break n;if(A-69703>>>0>=2)break ge;break H}if((0|t)==69888)break ce;if((0|t)!=70144)break n;if((t=A-70200|0)>>>0<=4)break ie;if((0|A)!=70313)break n;break H}if((0|t)<=74751){if((0|t)<=71423){if((0|t)==70656)break re;if((0|t)==70912)break se;if((0|t)!=71168||(r=268435520,A-71233>>>0>=2))break n;break t}if((0|t)<=72703){if((0|t)==71424)break te;if((0|t)!=72192)break n;if(A-72258>>>0>=2)break j;break H}if((0|t)==72704)break X;if((0|t)!=73216||(r=268435520,A-73463>>>0>=2))break n;break t}if((0|t)<=93695){if((0|t)==74752)break O;if((0|t)==92672)break P;if((0|t)!=92928)break n;if(r=268435520,A-92983>>>0<2)break t;t=(0|A)==92996?268435520:0,t=(A=(0|A)==92985)?64:t;break F}if((0|t)<=121343){if((0|t)==93696)break z;if((0|t)!=113664||(r=268435520,n=-2147483648,(0|A)!=113823))break n;break t}if((0|t)==121344)break MA;if((0|t)!=125184)break n;r=((0|A)==125279)<<30,t=0,J=(A=(0|A)==125278)?536870912:r;break i}r=-1879048128,n=536870912;ve:{dA:{fA:{pA:{switch(A-33|0){default:switch(A-183|0){case 1:case 2:case 3:case 4:case 5:case 6:case 7:break ve;case 8:break fA;case 0:break pA;default:break dA}case 2:case 9:J=66;break u;case 11:return J=268435456,-2147483584;case 13:return J=-2147483648,-1879048128;case 25:return J=134217728,-2147483584;case 26:return J=67108864,-2147483584;case 1:case 6:break C;case 0:break t;case 3:case 4:case 5:case 7:case 8:case 10:case 12:case 14:case 15:case 16:case 17:case 18:case 19:case 20:case 21:case 22:case 23:case 24:case 27:case 28:case 29:break ve;case 30:}return J=1073741824,-1879048128}return J=0,134230016}J=1078984704;break u}if((0|A)==161)break Ue}break I}t=(0|A)==903,r=(A=(0|A)==894)?64:t?134217792:0,J=A?1073741824:t?67108864:0;break m}if((0|A)==1417)break Re;if((0|A)!=1475)break n;break ae}J=1075838976;break o}J=-2143289344;break a}r=64,n=268435456;Be:switch(A-1548|0){case 15:break r;case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 9:case 10:case 11:case 12:case 13:case 14:case 16:case 17:break n;case 0:break t;case 19:break Be;case 18:break H;default:break T}break c}if((t=A-1792|0)>>>0<6)break zA;if(r=64,n=134217728,(-2&A)==1798)break t;n=67108864;He:{Be:{Re:switch(A-1800|0){default:switch(A-2040|0){case 1:break He;case 0:break Be;default:break n}case 3:break n;case 0:break t;case 1:break Re;case 2:case 4:break ae}J=1073741824;break A}J=268435456;break A}J=536870912;break a}t=(0|A)==2405,r=(A=(0|A)==2404)||t?268435520:0,J=A?-2143289344:t?16777216:0;break m}if(r=0,n=-2143289344,(0|A)!=3572)break n;break t}switch(r=64,A-3848|0){case 5:J=-2143289344;break A;case 6:J=16777216;break A;case 0:break t}if(A-3854>>>0<5)break t;if(r=0,n=268435456,(0|A)!=3860)break n;break t}if((t=A-4961|0)>>>0<4)break TA;if(r=64,n=134217728,A-4965>>>0<2)break t;t=(0|A)==4968,r=(A=(0|A)==4967)||t?268435520:0,J=A?1073741824:t?16777216:0;break m}if(A-5867>>>0>=3)break n;break t}if(r=268435520,A-5941>>>0<2)break t;if((A=A-6100|0)>>>0>=7)break n;t=e[(A=83240+(A<<3)|0)>>2];break h}if(r=268435520,(-4&A)!=6824)break n;break t}if(r=64,(0|A)==7005)break t;if(r=268435520,(0|t)!=7006)break n;break t}if(A-7227>>>0<2)break H;if(r=64,A-7229>>>0<3||(r=268435520,(-2&A)==7294))break t;if(r=4096,(0|A)!=7379)break n;break t}J=33554432;break u}if((-8&A)==8224)break I;if(A-8242>>>0<3)break t;if(A-8240>>>0<9)break I;if((t=A-8251|0)>>>0<21)break DA;break Ae}if((0|A)==11513){J=-2147483648;break o}if(r=0,n=1073741824,(-2&A)==11514)break t;if(n=-2147483648,(0|A)!=11518)break n;break t}switch(r=-1879048128,A-11822|0){case 4:case 6:J=268435456;break u;case 5:J=-2147483648;break u;case 7:J=67108864;break u;case 14:return J=-2147483648,-1879048128;case 19:return J=268435456,-2147483584;case 30:case 32:return J=0,-2147483584;case 0:break t}break I}if((0|A)==12349)break S;if((0|A)!=12539)break n;return J=0,16}return J=-2143289344,-1879048128}t=(0|A)==42239,r=(A=(0|A)==42238)?64:t?268435520:0,J=A?268435456:t?-2147483648:0;break m}Ye:switch(A-42509|0){case 1:break s;case 0:break t;case 2:break Ye;default:break n}break c}J=134217728;break A}if(A-43126>>>0<2)break H;if(r=268435520,A-43214>>>0>=2)break n;break t}if((0|A)==43463)break ae;if(r=268435520,(-2&A)!=43464)break n;break t}if(A-43613>>>0<3)break H;if(r=64,(0|A)==43743)break t;if(r=268435520,(-2&A)!=43760)break n;break t}if(r=268435520,(0|A)!=44011)break n;break t}r=268435520,n=541065216;ue:switch(A-65281|0){case 1:case 6:return J=0,32;case 11:J=272629760;break A;case 13:J=-2143289344;break a;case 100:return J=0,16;case 25:J=138412032;break A;case 26:J=71303168;break A;case 30:J=1077936128;break a;case 96:break s;case 59:break k;case 0:break t;case 99:break ue;default:break n}J=268435456;break A}r=(t=(0|A)==66512)>>>26|0,t=(A=(0|A)==66463)?64:t<<6;break W}if(r=64,(0|A)!=67871)break n;break t}if(r=268435520,(-2&A)==68182)break t;if(r=64,A-68336>>>0>=6)break n;break t}if(r=268435520,A-69461>>>0>=5)break n;break t}if(r=64,A-69705>>>0<5)break t;if(r=268435520,A-69822>>>0>=4)break n;break t}if(A-69953>>>0<2)break H;if((t=A-70085|0)>>>0<=26)break Q;break Se}if((0|t)!=2)break H;break ae}if(r=268435520,A-70731>>>0<2)break t;n=(t=(0|A)==70747)>>>26|0,t=(A=(0|A)==70733)?64:t<<6,J=A?268435456:n;break i}switch(r=268435520,(-2&A)-71106|0){case 0:break t;case 2:break g}if(r=8192,A-71110>>>0<3)break t;if(r=268435520,A-71113>>>0>=15)break n;break t}if(r=268435520,A-71484>>>0>=3)break n;break t}if(r=268435520,A-72347>>>0<2)break t;if(r=64,A-72353>>>0>=2)break n;break t}if(r=268435520,A-72769>>>0<2)break t;r=(t=(0|A)==72817)>>>26|0,t=(A=(0|A)==72771)?64:t<<6;break W}if(r=64,n=134217728,A-74865>>>0<2)break t;if(n=0,A-74864>>>0>=5)break n;break t}t=(0|A)==93848?268435520:0,t=(A=(0|A)==93847)?64:t;break F}if(r=268435520,(-2&A)==92782)break t;if(n=-2147483648,(0|A)!=92917)break n;break t}if((0|A)==1748)break s;break n}if(!(1<<t&100663555))break Se;break H}break ae;case 23:g:{Q:{T:{P:{z:{O:{if((0|(t=-256&A))<=11775){if((0|t)<=8959){if(t)break O;break I}if((0|t)==8960)break z;if((0|t)==9984)break P;if((0|t)!=10496)break n;break U}if((0|t)<=64767){if((0|t)==11776)break T;if((0|t)!=12288)break n;if((A=A-12300|0)>>>0<=17&&(r=-2147483616,1<<A&131077))break t;break I}if((0|t)==64768)break Q;if((0|t)==65024)break g;if((0|t)!=65280)break n;if(r=32,(0|A)==65378)break t;break n}if((0|t)!=8192)break n;switch(r=-2147483616,A-8218|0){case 1:case 2:case 3:break n;case 0:case 4:break t}switch(A-8317|0){default:if((0|A)!=8261)break n;break I;case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 9:case 10:case 11:case 12:case 13:case 14:case 15:break n;case 0:case 16:}break k}switch(r=-2147483520,A-8968|0){case 1:break n;case 0:case 2:break t}if((0|A)!=9001)break n;return J=0,-2139095040}if(r=-2147483520,(0|A)==10181)break t;break ye}return J=0,(0|A)==11842?-2147483616:-2147483648}if(r=-2147483648,(0|A)!=64831)break n;break t}r=(A=!(A-65089&-3))>>>27|0,A<<=5;break y;case 24:r=(A=A>>>0<256)>>>1|0,A<<=31;break y;case 25:g:{Q:{T:{P:{z:{O:{X:{j:{if((0|(t=-256&A))<=12287){if((0|t)<=767){if(!t)break j;if((0|t)!=512)break g;if(A-751>>>0>=17)break X;break f}if((0|t)==768)break O;if((0|t)!=7936)break g;switch(r=4096,A-8125|0){case 0:case 2:case 3:case 4:case 16:case 17:case 18:case 32:case 33:case 34:case 48:case 49:case 50:case 64:case 65:break t;default:break g}}if((0|t)<=43775){if((0|t)==12288)break z;if((0|t)!=42752||(r=4096,(-2&A)!=42784))break g;break t}if((0|t)==43776)break P;if((0|t)==65280)break T;if(r=0,n=78,(0|t)!=127744)break g;break t}switch(A-168|0){default:r=-2147479424;j:switch(A-94|0){case 0:break t;case 2:break j;default:break g}return J=0,-2147479552;case 0:case 7:break f;case 1:case 2:case 3:case 4:case 5:case 6:case 8:case 9:case 10:case 11:case 13:case 14:case 15:break g;case 12:case 16:}break f}if((0|A)==749|A-741>>>0<7)break f;if(A-706>>>0>=4)break Q;break f}if((A=A-885|0)>>>0>16||(r=4096,!(1<<A&98305)))break g;break t}if(r=67112960,A-12443>>>0>=2)break g;break t}if(r=4096,(0|A)!=43867)break g;break t}switch(r=4224,A-65342|0){default:if((0|A)!=65507)break g;break;case 0:break t;case 1:break g;case 2:}break f}if(r=4096,A-722>>>0<14)break t}break n;case 26:g:{Q:{T:{P:{z:{O:{if((0|(t=-256&A))<=9471){if((0|t)<=8447){if(t)break g;break I}if((0|t)==8448)break O;if((0|t)==8704)break z;if(r=-2147483648,(0|t)!=8960)break n;break t}if((0|t)<=10495){if((0|t)==9472)break P;if((0|t)==9728)break T;if((0|t)==9984)break I;break n}if((0|t)==10496)break Q;if((0|t)==10752)break I;if(r=-2147483648,(0|t)!=11008)break n;break t}if((0|A)==8472)return J=0,67108864;if((0|A)==8596)break Z;if(r=-2147483648,A>>>0<=8591)break n;break t}if(r=-2147483640,(0|A)==8722)break t;t=-2147483648,J=(A=A-8942>>>0<4)?33554432:0;break i}if(r=-2147483648,n=130,A-9723>>>0<2)break t;t=-2147483648,J=(A=A-9725>>>0<2)?134:0;break i}if(r=-2147483648,n=128,(0|A)==9839)break t;break I}if(r=-2147483648,n=130,(-2&A)==10548)break t;t=-2147483648,J=(A=(0|A)==10626)?134217728:0;break i}if((0|t)==8192)break Ke;break n;case 27:g:{Q:{T:{P:{z:{O:{X:{j:{te:{se:{re:{ie:{ce:{ge:{x:{oe:{ne:{K:{ue:{de:{Ie:{we:{Le:{ke:{if((0|(t=-256&A))<=12287){if((0|t)<=9727){if((0|t)<=8959){if(!t)break ke;if((0|t)!=8448)break n;switch(r=0,n=130,A-8482|0){case 7:break k;case 0:break t;case 1:case 2:case 3:case 4:case 5:case 6:case 8:case 9:case 10:case 11:break de;case 12:break we;default:break Le}}if((0|t)==8960)break ue;if((0|t)==9216)break K;if((0|t)!=9472)break n;switch(r=-2147483520,(-2&A)-9632|0){case 0:break t;case 10:break Z;default:break ne}}if((0|t)<=11007){if((0|t)==9728)break oe;if((0|t)==9984)break x;if(r=-2147483648,(0|t)!=10240)break n;break t}if((0|t)==11008)break ge;if((0|t)==11776)break ce;if((0|t)!=12032)break n;if(r=1048576,A>>>0<12246)break t;switch(r=262144,(-2&A)-12272|0){case 0:break t;case 2:break g;default:break ie}}if((0|t)<=127999){if((0|t)<=127231){if((0|t)==12288)break re;if((0|t)==12800)break se;if((0|t)!=126976)break n;t=(0|A)==127183,r=0,J=(A=(0|A)==126980)||t?134:128;break m}if((0|t)==127232)break te;if((0|t)==127488)break j;if((0|t)!=127744)break n;if(A>>>0>=127777)break X;break Y}if((0|t)<=128767){if((0|t)==128e3)break O;if((0|t)==128256)break z;if((0|t)!=128512)break n;if((t=A-128581|0)>>>0<11)break CA;break Ne}if((0|t)==128768)break P;if((0|t)==129280)break T;if((0|t)!=129536)break n;J=128;break o}t=(0|A)==174,r=-2147483648,J=(A=(0|A)==169)||t?130:0;break m}switch(A-8616|0){case 0:break I;case 1:case 2:break Ie;default:break de}}return J=0,67108864}return J=130,-2147483520}if(r=-2147483520,A-8597>>>0<5)break t;if(A-8604>>>0<18)break U;if((t=A-8624|0)>>>0<8)break EA;break Oe}if(A>>>0<8968)break I;if((0|(t=-2&A))==8986)break l;if(A-8972>>>0<20|A-8994>>>0<6)break I;if((0|A)==9e3)break Z;if(A-9003>>>0<81)break I;if(r=-2147483648,n=128,(0|A)==9096)break t;if(A-9085>>>0<30)break I;if(r=-2147483520,n=0,(0|t)==9140)break t;switch(A-9143|0){case 0:case 25:break t;case 24:break Z}if(A-9140>>>0<40)break I;if((0|A)==9186)break t;if((t=A-9193|0)>>>0<4)break l;switch(r=-2147483648,n=134,A-9200|0){case 0:case 3:break t}if(t>>>0<11)break Z;if(n=130,A-9208>>>0<3)break t;if(n=0,A>>>0<=9186)break n;break t}if(r=-2147483648,A-9216>>>0<75||(r=33792,n=130,(0|A)==9410)||(n=0,A-9398>>>0<26))break t;if(r=17408,A-9424>>>0>=26)break n;break t}if(A-9646>>>0<8)break U;if(n=130,(0|A)==9654)break t;if((-4&A)==9660)break U;switch(A-9664|0){case 0:break t;case 6:case 7:case 10:case 11:case 15:case 16:case 17:case 18:case 19:case 34:case 36:break U}return J=0,A-9703>>>0<6?-2147483520:-2147483648}oe:switch((-16&A)-9728>>>4|0){case 0:if(A>>>0<9733)break Z;r=-2147483520,n=128;ne:switch(A-9733|0){case 0:break t;case 9:break ne;case 1:break U;default:break G}break Z;case 2:if((t=A-9760|0)>>>0<11)break vA;if(r=-2147483648,n=130,A>>>0<=9773)break G;break t;case 3:if(r=-2147483648,n=130,A-9784>>>0>=3)break G;break t;case 4:switch(r=-2147483520,n=130,A-9792|0){case 0:case 2:break t}if(r=-2147483648,n=134,A>>>0<=9799)break G;break t;case 5:if(r=-2147483648,n=134,A>>>0<9812)break t;if(n=130,(0|A)!=9823)break G;break t;case 6:if((0|A)==9734)break U;if((0|A)==9824)return J=130,-2147483520;if(r=-2147483520,n=128,A-9825>>>0<2)break t;if((t=A-9827|0)>>>0<6)break BA;break be;case 8:if(r=-2147483648,A>>>0<=9861)break G;break t;case 10:switch(r=-2147483648,n=130,A-9888|0){case 1:break l;case 0:break t}if(n=134,(-2&A)!=9898)break G;break t;case 11:if(r=-2147483648,n=130,(-2&A)==9904)break t;if(n=134,A-9917>>>0>=2)break G;break t;case 12:if((-2&A)==9924)break l;r=-2147483648,n=130;ne:switch(A-9928|0){case 0:case 7:break t;case 6:break ne;default:break G}break l;case 14:t=(0|A)==9962,r=-2147483648,J=(A=(0|A)==9961)?130:t?134:128;break m;case 13:break wA;case 9:break kA;case 15:break oe;case 7:break xA;case 1:break yA;default:break G}if((0|A)==9972|A>>>0<9970)break Z;if(r=-2147483648,n=134,A>>>0<9974||(0|A)!=9974&&(n=130,A>>>0<9977))break t;if((A=A-9977|0)>>>0<5)break IA;break G}x:{oe:{ne:{K:{ue:switch((-16&A)-9984>>>4|0){case 0:if(r=0,n=130,(0|A)==9986||(n=128,A>>>0<9989)||(n=134,(0|A)==9989))break x;switch(n=150,(-2&A)-9994|0){case 0:break x;case 2:break ne}if(n=130,A-9992>>>0<6)break x;t=(0|A)==9999,r=0,n=(A=(0|A)==9998)?128:t?130:0;break x;case 1:if(r=0,n=128,A>>>0<10002)break x;if((A=A-10002|0)>>>0>11||(n=130,!(1<<A&2069)))break K;break x;case 2:t=(0|A)==10024,r=0,n=(A=(0|A)==10017)?130:t?134:0;break x;case 4:r=0,n=130;de:switch(A-10052|0){case 0:case 3:break x;case 8:case 10:break de;default:break K}n=134;break x;case 5:if(r=0,n=1073741958,A-10067>>>0<2)break x;n=(A=A-10069&-3)?0:536871046;break x;case 6:if((t=A-10082|0)>>>0<3)break oe;if(r=0,n=128,A>>>0<=10084)break K;break x;case 9:if(r=0,n=134,A-10133>>>0>=3)break K;break x;case 10:if(r=0,n=130,(0|A)!=10145)break K;break x;case 11:t=(0|A)==10175,r=0,n=(A=(0|A)==10160)||t?134:0;break x;case 3:break ue;default:break K}if(r=0,n=130,A-10035>>>0<2)break x}r=0,n=0;break x}n=146;break x}r=e[(A=83992+(t<<3)|0)>>2],n=e[A+4>>2]}return J=n,-2147483648|r}if(r=-2147483648,n=130,A-11013>>>0<3||(n=134,A-11035>>>0<2))break t;t=(0|A)==11093,r=-2147483648,J=(A=(0|A)==11088)||t?134:0;break m}if(A-11904>>>0>=26)break Q;return J=0,1048576}if(A-12276>>>0>=8)break n;break t}if((A=A-12306|0)>>>0>14||(r=-2147483648,!(1<<A&16387)))break n;break t}t=0,J=(A=A-12951&-3)?0:130;break i}if(r=0,n=128,(0|A)==127279)break t;if(A-127280>>>0<26||A-127312>>>0<26)return J=0,33792;if((t=A-127344|0)>>>0<=15&&(r=33792,n=130,1<<t&49155)||(r=33792,n=0,t>>>0<26))break t;if((0|A)==127374)break Y;if(r=0,n=134,A-127377>>>0<10)break t;if(n=102,A>>>0<=127461)break n;break t}r=0,n=134;j:{switch(A-127489|0){case 0:case 25:break t;case 1:break S;case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 9:case 10:case 11:case 12:case 13:case 14:case 15:case 16:case 17:case 18:case 19:case 20:case 21:case 22:case 23:case 24:break j}switch(A-127535|0){case 0:break t;case 8:break S;default:break j}}if((-2&A)==127568|A-127538>>>0<9)break t;if(n=128,A>>>0<=127583)break n;break t}if((0|A)==127777)break S;if(A-127789>>>0<9|A-127799>>>0<70)break Y;if((0|A)==127877)break q;if(A-127870>>>0<22)break Y;if(A-127780>>>0<112)break S;switch(r=0,n=130,A-127894|0){case 44:case 45:case 46:case 49:break q;case 0:case 1:case 3:case 4:case 5:break t}if(A-127904>>>0<42)break Y;if(n=150,(0|A)==127946||(n=146,A-127947>>>0<2))break t;if(A-127951>>>0<5)break Y;if(n=134,A-127968>>>0<17||(n=130,A-127902>>>0<83))break t;if((t=A-127987|0)>>>0<5)break bA;break Ze}switch(r=0,n=130,A-128063|0){case 0:case 2:break t}if((0|A)==128124|(-5&A)-128129>>>0<3|(0|A)==128110|A-128112>>>0<9||(-2&A)==128066|A-128102>>>0<4|A-128070>>>0<11)break q;switch(A-128253|0){case 1:J=128;break o;case 0:break S}if(n=150,(0|A)==128170)break t;break Y}if(A>>>0<128318)break Y;if(r=0,A>>>0<128326)break t;if(A-128329>>>0<2)break S;if(A-128331>>>0<4|A-128336>>>0<24)break Y;if(A-128367>>>0<2)break S;if((-2&A)==128372){J=146;break o}if(A-128371>>>0<7)break S;if(n=150,!(t=A-128378|0))break t;if((0|t)==13|A-128394>>>0<4)break S;if(n=146,(0|A)==128400||(n=150,A-128405>>>0<2))break t;switch(n=134,A-128420|0){case 0:break t;case 1:case 4:case 13:case 14:case 24:case 30:case 31:case 32:case 45:case 46:case 47:case 56:case 57:case 58:case 61:case 63:case 68:case 75:case 79:case 86:break S}A=A>>>0>128506,t=0;break p}if(r=0,n=128,A-128981>>>0>=4)break n;break t}if(A>>>0<129292)break n;if(A-129328>>>0<10)break q;switch(r=0,n=150,A-129304|0){case 35:break n;case 0:case 1:case 2:case 3:case 4:case 6:case 7:case 14:break t}if(A-129341>>>0<2)break q;if(n=0,(0|A)==129350||(n=198,(-4&A)==129456))break t;if((t=A-129461|0)>>>0<5)break mA;break hA}if(r=1048576,A-11931>>>0<89)break t;break n}return J=0,524288;case 29:return J=16777216,1073741825;case 28:break t;case 30:break jA;default:break n}return J=0,(0|A)==32?1073741825:1}if(!(1079>>>t&1))break fe;t=e[(A=81344+(t<<3)|0)>>2];break h}if(557553>>>t&1)break k;if((-4&A)!=8508)break Me;break t}if(!(207>>>t&1))break me;break d}if(r=1024,!(1017>>>t&1))break Ge;break t}if(r=1024,!(32895>>>t&1))break De;break t}if(r=1024,!(55>>>t&1))break Qe;break t}if(r=1024,!(3087>>>t&1))break Pe;break t}if((A=A-71453|0)>>>0>=15)break n;t=e[(A=82312+(A<<3)|0)>>2];break h}if(!(49023>>>t&1))break ze;t=e[(A=82432+(t<<3)|0)>>2];break h}if(!(514623>>>t&1))break _;t=e[(A=82664+(t<<3)|0)>>2];break h}t=e[(A=83160+(t<<3)|0)>>2];break h}if(r=268435520,!(197>>>t&1))break Fe;break t}t=e[(A=83208+(t<<3)|0)>>2];break h}if((A=A-6145|0)>>>0>=10)break n;t=e[(A=83296+(A<<3)|0)>>2];break h}if(!(1077711>>>t&1))break Ae;t=e[(A=83376+(t<<3)|0)>>2];break h}if(!(159>>>t&1))break Ce;t=e[(A=83544+(t<<3)|0)>>2];break h}if((A=A-121479|0)>>>0>=4)break n;t=e[(A=83608+(A<<3)|0)>>2];break h}if(!(195>>>t&1))break Oe;break U}if((A=A-9745|0)>>>0>=13)break G;t=e[(A=83640+(A<<3)|0)>>2];break h}if(1101>>>t&1)break Z;if(r=-2147483648,n=130,A>>>0<=9773)break G;break t}if(!(45>>>t&1))break be;t=e[(A=83744+(t<<3)|0)>>2];break h}if((A=A-9851|0)>>>0>=5)break G;t=e[(A=83792+(A<<3)|0)>>2];break h}if((A=A-9874|0)>>>0>=11)break G;t=e[(A=83832+(A<<3)|0)>>2];break h}if((A=A-9937|0)>>>0>=4)break G;t=e[(A=83920+(A<<3)|0)>>2];break h}t=e[(A=83952+(A<<3)|0)>>2];break h}if(!(23>>>t&1))break Ze;t=e[(A=84016+(t<<3)|0)>>2];break h}if(r=0,n=150,!(1991>>>t&1))break Ne;break t}if(n=150,27>>>t&1)break t}t=0,J=(A=A-129489>>>0<13)?150:134;break i}A=A-127992>>>0<3,t=0;break p}if(A-9837>>>0<2)break t}J=128;break u}if(A-8623>>>0<13)break I;if(A-8636>>>0<18)break U;if((t=A-8656|0)>>>0<22&&(n=0,3157995>>>t&1)||(r=-2147483648,n=0,A-8661>>>0<31))break t;break n}if(A>>>0<128592)break Y;if(r=0,n=0,A>>>0<128640)break t;if(!((t=A-128675|0)>>>0>29|!(1<<t&537788417)))break q;if(A>>>0<128710)break Y;if(n=150,(0|A)==128716)break t;if(A-128715>>>0<5)break S;if(A-128720>>>0<3)break Y;if(!((t=A-128736|0)>>>0>=10|!(575>>>t&1)))break S;if(n=134,A-128747>>>0<2)break t;switch(n=130,A-128752|0){case 0:case 3:break t}A=A-128756>>>0<6,t=0;break p}switch(r=-2147483648,A-8260|0){case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 9:case 10:case 11:case 12:case 13:break n;case 0:case 14:break t}if((0|(A=A-8315|0))!=16&&A)break n;return J=0,8}if(r=268435520,n=1073741824,(0|A)!=69955)break n;break t}if(A-8266>>>0<8)break I;if(r=-2147483640,(0|A)==8275)break t;if(r=-2147483648,A-8277>>>0>=10)break n;break t}J=542113792;break u}if(r=-2147483648,n=0,A-65093>>>0<2||(r=64,n=268435456,(0|s)==65104))break t;r=268435520,n=-2147483648;Ce:switch(A-65106|0){case 3:J=134217728;break A;case 5:J=536870912;break a;case 4:break c;case 2:break r;case 0:break t;case 15:case 22:break Ce;default:break n}break k}if((0|A)==2142)break ae;if(r=64,A-2096>>>0<15)break t;break n}if(r=1024,A-72850>>>0<22)break t;if((A=A-72874|0)>>>0>=13)break n;t=e[(A=82560+(A<<3)|0)>>2];break h}if(r=4096,A-71103>>>0<2)break t;if(r=1024,(-2&A)!=71132)break n;break t}if((0|A)==70726)break f;if(r=4096,(-2&A)!=70850)break n;break t}if(r=4096,A-68325>>>0>=2)break n;break t}if((0|A)==6109)break f;if(r=4096,A-6089>>>0>=11)break n;break t}switch(A-3959|0){case 0:case 2:return J=0,8389632}if((0|t)==3968|A-3953>>>0<14)break d;if(!((t=A-3970|0)>>>0>=6|!(55>>>t&1)))break f;if(A-3981>>>0<11)break d;if(r=1024,A-3993>>>0<36)break t;if(r=4096,(0|A)!=4038)break n;break t}if(A-3655>>>0<6)break f;if(!((t=A-3761|0)>>>0>11|!(1<<t&3577)))break d;switch(r=1024,A-3661|0){case 1:break f;case 0:break t}if(r=4096,A-3784>>>0<5)break t;if(r=1024,(0|A)!=3789)break n;break t}if(A-1770>>>0<3)break t;if(r=1024,(0|A)!=1773)break n;break t}if((-2&A)==73028)break f;switch(r=1024,A-73104|0){default:if((0|A)!=73031)break n;break t;case 2:case 3:case 4:case 6:break n;case 0:case 1:case 5:break t;case 7:}break f}if((A=A-8492|0)>>>0>=30)break n;t=e[(A=81704+(A<<3)|0)>>2];break h}r=0;break N}n=(t=(-3&A)==43712)>>>20|0,r=t<<12}if((0|(a=-65536&A))==131072)break Ve;if((0|a)==65536)break he;if(t=r,s=n,a)break pe}if(A-13312>>>0<6582||A-19968>>>0<20976)break e;if(a=2048,A-63744>>>0<366)return J=s,2048|t;if(r=t,n=s,A-64112>>>0>=106)break pe;break R}if(a=2099200,A-183984>>>0<7473|A-178208>>>0<5762|A-177984>>>0<222|A-131072>>>0<42711||A-173824>>>0<4149||(a=2048,A-194560>>>0<542))break R;break pe}if(a=2048,A-110960>>>0<396|A-94208>>>0<6125|A-100352>>>0<755)break R}a=0}return J=n,r|a}if((-4&A)==8508)break k;if(r=128,!(A-8517>>>0<3)&&(r=16777344,(-2&A)!=8520))break n}J=n;break m}t=(A=A>>>0>131069)?65536:0,J=A?0:128;break i}if((0|A)==11776)break I}J=0;break o}J=0;break u}return J=0,4194304}return J=0,128}return J=0,16777344}return J=0,4096}return J=0,1024}return J=0,-2147483520}return J=0,A-10214>>>0<10?-2147483520:-2147483648}J=0;break a}J=0;break A}J=130;break o}J=130;break u}J=134;break o}return J=150,0}J=0;break i}J=A?0:n;break i}return J=t,A}return 131072}return J=0,16777216}J=A?0:r;break i}return J=n,A}return J=r,A}J=A?0:t;break m}return J=0,8192}J=e[A+4>>2];break i}J=A?8388608:0;break i}return r}return J=0,-2147483616}J=A?134:128}return t}J=134}return-2147483648}return 0}J=1073741824;break a}J=-2147483648}return 268435520}J=67108864}return 64}return J=s,2099200|t}function _e(A){var t,r=0,n=0,a=0,s=0,o=0;(t=It(8244))&&(e[t+328>>2]=2,g[132848]=0,e[t+684>>2]=0,e[t+688>>2]=0,e[t+320>>2]=0,e[t+324>>2]=0,g[t+268|0]=0,g[t+228|0]=0,e[t+8216>>2]=0,e[t+8220>>2]=0,e[t+224>>2]=104944,e[t+216>>2]=383,e[t+220>>2]=96,VA(t+344|0,0,292),e[t+8196>>2]=0,e[(r=t+8188|0)>>2]=0,e[r+4>>2]=0,e[t+8180>>2]=0,e[t+8184>>2]=0,g[t+460|0]=22,g[t+461|0]=129,g[t+466|0]=38,g[t+462|0]=38,g[t+463|0]=36,g[t+464|0]=22,g[t+465|0]=224,g[t+456|0]=22,g[t+457|0]=22,g[t+458|0]=44,g[t+459|0]=22,g[t+454|0]=46,g[t+455|0]=129,g[t+446|0]=22,g[t+447|0]=38,g[t+448|0]=28,g[t+449|0]=193,g[t+450|0]=38,g[t+451|0]=22,g[t+452|0]=46,g[t+453|0]=46,g[t+441|0]=129,g[t+442|0]=38,g[t+443|0]=22,g[t+444|0]=38,g[t+445|0]=193,e[t+332>>2]=104912,e[t+336>>2]=104916,e[t+340>>2]=105232,g[t+296|0]=18,g[t+297|0]=18,b[t+304>>1]=182,b[t+306>>1]=140,g[t+298|0]=20,b[t+308>>1]=220,b[t+310>>1]=220,b[t+312>>1]=220,g[t+299|0]=20,g[t+300|0]=20,b[t+314>>1]=240,g[t+301|0]=22,b[t+316>>1]=260,b[t+318>>1]=280,g[t+302|0]=22,g[t+303|0]=20,r=VA(t,0,212),e[r+200>>2]=20,e[r+192>>2]=25966,e[r+196>>2]=500,e[r+80>>2]=95,e[r+16>>2]=1,e[r+20>>2]=3,e[r+8>>2]=2,e[r+52>>2]=19,g[r+168|0]=3,e[r+92>>2]=2,e[r+72>>2]=4,e[r+40>>2]=115,e[r+44>>2]=95,e[r+140>>2]=105244,Ni(r,201),e[r+120>>2]=2,e[r+124>>2]=44,e[r+164>>2]=100,e[r+128>>2]=46,e[r+132>>2]=14,e[r+112>>2]=1227133512,e[r+116>>2]=49,e[r+104>>2]=1,n=e[26313],e[r+636>>2]=e[26312],e[r+640>>2]=n,n=e[26315],e[r+644>>2]=e[26314],e[r+648>>2]=n,n=e[26317],e[r+652>>2]=e[26316],e[r+656>>2]=n,n=e[26319],e[r+660>>2]=e[26318],e[r+664>>2]=n,n=e[26321],e[r+668>>2]=e[26320],e[r+672>>2]=n,n=e[26323],e[r+676>>2]=e[26322],e[r+680>>2]=n,n=l[104928]|l[104929]<<8,g[r+160|0]=n,g[r+161|0]=n>>>8,n=l[104924]|l[104925]<<8|l[104926]<<16|l[104927]<<24,g[r+156|0]=n,g[r+157|0]=n>>>8,g[r+158|0]=n>>>16,g[r+159|0]=n>>>24),a=JA(t+228|0,A),r=0;e:{A:if(n=l[0|A]){for(;r=(n<<24>>24)+(r<<8)|0,n=l[0|(A=A+1|0)];);r:{a:{s:{c:{o:{u:{l:{i:{p:{C:{m:{b:{h:{E:{w:{y:{L:{W:{V:{M:{B:{D:{F:{q:{Y:{Z:{S:{ae:{H:{ye:{U:{d:{f:{$:{k:{ee:{I:{n:{We:{J:{t:{fe:{R:{pe:{he:{Ve:{le:{N:{Ee:{v:{Me:{_:{me:{Ge:{je:{De:{Qe:{Te:{Pe:{ze:{Fe:{Ce:{Ue:{Ae:{Se:{Ke:{Ne:{Oe:{G:{be:{if((0|r)<=28008){if((0|r)<=26464){if((0|r)<=25696){switch(r-24934|0){case 20:break i;case 1:case 2:case 3:case 4:case 5:case 6:case 9:case 10:case 11:case 14:case 15:case 16:case 17:case 18:case 19:break A;case 8:break _;case 12:break Fe;case 7:break Ce;case 0:break Ue;case 13:break be}switch(r-25189|0){case 1:case 3:case 4:case 5:case 6:case 7:case 8:case 10:case 11:case 12:case 13:break A;case 14:break fe;case 2:break Pe;case 0:break ze;case 9:break be}switch(r-25441|0){case 18:break y;case 0:break _;case 24:break Qe;default:break A}}switch(r-25964|0){case 1:case 4:case 5:case 6:break A;case 8:break Ee;case 9:break Me;case 7:break _;case 3:break me;case 2:break Ge;case 0:break Oe}switch(r-26209|0){case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 9:case 10:case 11:case 12:case 13:case 14:case 15:case 16:break A;case 17:break le;case 8:break N;case 0:break v}switch(r-25697|0){case 4:break je;case 0:break De;default:break A}}if((0|r)<=27488){switch(r-26729|0){case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 10:case 13:case 14:case 15:break A;case 16:break We;case 12:break J;case 11:break t;case 9:break fe;case 0:break R}switch(r-26977|0){case 1:case 2:case 4:case 5:case 6:case 7:case 8:case 9:case 10:case 11:case 12:case 13:case 15:case 16:case 17:break A;case 19:break k;case 18:break ee;case 3:break I;case 14:break n;case 0:break _}switch(r-26465|0){case 20:break R;case 13:break pe;case 0:case 3:break he;default:break A}}switch(r-27489|0){case 13:break p;case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 9:case 12:case 15:case 16:case 17:case 18:case 19:case 21:case 22:case 23:break A;case 24:break ae;case 20:break H;case 14:break ye;case 11:break U;case 10:break d;case 0:break f}switch(r-27745|0){case 19:break Z;case 0:break S;case 21:break Ke;default:break A}}if((0|r)<=29792){if((0|r)<=28768){switch(r-28009|0){case 3:break p;case 11:break q;case 2:break Y;case 1:case 4:case 5:case 6:case 7:case 8:case 12:case 13:case 14:case 15:break A;case 10:break I;case 9:break R;case 0:case 16:break Ae}switch(r-28258|0){case 0:break D;case 10:break F;case 1:case 2:case 4:case 5:case 6:case 7:case 8:case 9:break A;case 3:break R}switch(r-28525|0){case 0:break B;case 5:break R;default:break A}}if((0|r)<=29539){switch(r-28769|0){case 19:break V;case 11:break M;case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 9:case 10:case 12:case 13:case 14:case 15:case 16:case 17:case 18:case 20:case 21:case 22:case 23:break A;case 0:break R;case 24:break Ae}switch(r-29295|0){case 6:break L;case 0:break W;case 1:case 2:case 3:case 4:case 5:break A}if((0|r)==29045)break Ae;break A}switch(r-29540|0){case 19:break C;case 18:break m;case 13:break b;case 8:break E;case 5:break w;case 7:break y;case 14:break fe;case 0:break o;default:break A}}if((0|r)>6514801)break G;if((0|r)<=30058)switch(r-29793|0){case 19:break l;case 17:break i;case 0:case 4:break p;case 13:break C;case 7:break Ae;default:break A}if((0|r)<=30312)switch(r-30059|0){case 0:break u;case 15:break Ae;case 7:break o;default:break A}if((0|r)==30313)break c;if((0|r)==31336)break s;if((0|r)!=6451321)break A}if(e[t+296>>2]=303174162,e[t+300>>2]=370545684,e[t+600>>2]=2432,e[t+8>>2]=0,e[t+12>>2]=65540,e[t+100>>2]=e[t+96>>2],A=e[25889],e[t+304>>2]=e[25888],e[t+308>>2]=A,A=e[25891],e[t+312>>2]=e[25890],e[t+316>>2]=A,ba(t),g[t+345|0]=2|l[t+345|0],g[t+406|0]=16|l[t+406|0],g[t+407|0]=16|l[t+407|0],g[t+408|0]=16|l[t+408|0],g[t+409|0]=16|l[t+409|0],g[t+410|0]=16|l[t+410|0],g[t+411|0]=16|l[t+411|0],g[t+412|0]=16|l[t+412|0],g[t+413|0]=16|l[t+413|0],g[t+414|0]=16|l[t+414|0],g[t+415|0]=16|l[t+415|0],g[t+416|0]=16|l[t+416|0],g[t+417|0]=16|l[t+417|0],g[t+418|0]=16|l[t+418|0],g[t+419|0]=16|l[t+419|0],g[t+420|0]=16|l[t+420|0],g[t+456|0]=4|l[t+456|0],g[t+457|0]=4|l[t+457|0],e[t+112>>2]=613567144,e[t+104>>2]=16,(0|r)!=6451321)break e;e[t+104>>2]=1,e[t+108>>2]=512,r=6451321;break e}if((0|r)>7364975)break Se;if((0|r)>6840682)break Ne;if((0|r)==6514802)break Te;if((0|r)==6516078)break s;if((0|r)!=6779491)break A}if(e[t+600>>2]=896,e[t+328>>2]=8,e[t+296>>2]=336858127,e[t+300>>2]=353768980,e[t+332>>2]=103632,A=e[25905],e[t+304>>2]=e[25904],e[t+308>>2]=A,A=e[25907],e[t+312>>2]=e[25906],e[t+316>>2]=A,VA(t+344|0,0,256),g[t+388|0]=129,g[t+389|0]=129,g[t+390|0]=129,g[t+391|0]=129,g[t+420|0]=129,g[t+421|0]=129,g[t+422|0]=129,g[t+423|0]=129,g[t+360|0]=129,g[t+392|0]=129,g[t+393|0]=129,g[t+417|0]=129,g[t+418|0]=129,g[t+419|0]=129,g[t+420|0]=129,g[t+408|0]=6,g[t+409|0]=4,g[t+410|0]=6,g[t+411|0]=6,g[t+412|0]=6,g[t+413|0]=193,g[t+414|0]=6,g[t+415|0]=6,g[t+406|0]=6,g[t+407|0]=129,g[t+398|0]=4,g[t+399|0]=193,g[t+400|0]=6,g[t+401|0]=193,g[t+402|0]=6,g[t+403|0]=4,g[t+404|0]=4,g[t+405|0]=4,g[t+394|0]=4,g[t+395|0]=4,g[t+396|0]=4,g[t+397|0]=193,e[t+44>>2]=130,e[t+8>>2]=2,e[t+12>>2]=6,e[t+16>>2]=0,e[t+20>>2]=2,e[t+104>>2]=264,e[t+108>>2]=6146,g[t+391|0]=193,g[t+389|0]=193,g[t+390|0]=193,g[t+421|0]=193,e[t+100>>2]=e[t+96>>2],g[t+416|0]=4|l[t+416|0],(0|r)!=6779491)break e;e[t+40>>2]=1,r=6779491;break e}if((0|r)==6840683)break Ve;if((0|r)==6972015)break $;if((0|r)!=7107687)break A}e[t+296>>2]=134875662,e[t+300>>2]=252968960,e[t+328>>2]=5,g[t+169|0]=1,e[t+132>>2]=33,e[t+104>>2]=99336,e[t+8>>2]=0,e[t+12>>2]=262182,A=e[26069],e[t+304>>2]=e[26068],e[t+308>>2]=A,A=e[26071],e[t+312>>2]=e[26070],e[t+316>>2]=A;break e}if((0|r)<=7564649){if((0|r)==7364976)break _;if((0|r)==7435619)break Ae;if((0|r)!=7563374)break A;e[t+148>>2]=1,e[t+112>>2]=24,e[t+104>>2]=1,e[t+100>>2]=e[t+96>>2],r=7563374;break e}if((0|r)==7564650)break h;if((0|r)==7959909)break s;if((0|r)!=1885958500)break A}e[t+104>>2]=0;break e}e[t+4>>2]=48,e[t+8>>2]=0,e[t+144>>2]=1,e[t+104>>2]=16779472,e[t+32>>2]=1,e[t+24>>2]=1,A=e[25881],e[t+304>>2]=e[25880],e[t+308>>2]=A,A=e[25883],e[t+312>>2]=e[25882],e[t+316>>2]=A,g[t+465|0]=64&l[t+465|0]|129,r=24934;break e}e[t+600>>2]=4608,e[t+296>>2]=303173650,e[t+300>>2]=303174162,e[t+8>>2]=0,e[t+12>>2]=36,e[t+104>>2]=1024,e[t+100>>2]=e[t+96>>2],e[t+40>>2]=1,A=e[25865],e[t+304>>2]=e[25864],e[t+308>>2]=A,A=e[25867],e[t+312>>2]=e[25866],e[t+316>>2]=A,r=24941;break e}for(e[t+600>>2]=1536,e[t+224>>2]=0,e[t+216>>2]=1631,e[t+220>>2]=1536,e[t+104>>2]=2884720,e[t+328>>2]=7,e[t+40>>2]=1,q=r=q-16|0,e[r+12>>2]=-1,A=89684;a=Dt(r+12|0,A),(0|(n=e[r+12>>2]))>=33&&(g[0|(s=(t+n|0)-1192|0)]=1|l[0|s]),A=A+a|0,n;);for(e[r+12>>2]=-1,A=89743;a=Dt(r+12|0,A),(0|(n=e[r+12>>2]))>=33&&(g[0|(s=(t+n|0)-1192|0)]=2|l[0|s]),A=A+a|0,n;);for(e[r+12>>2]=-1,A=89795;a=Dt(r+12|0,A),(0|(n=e[r+12>>2]))>=33&&(g[0|(s=(t+n|0)-1192|0)]=4|l[0|s]),A=A+a|0,n;);for(e[r+12>>2]=-1,A=89941;a=Dt(r+12|0,A),(0|(n=e[r+12>>2]))>=33&&(g[0|(s=(t+n|0)-1192|0)]=16|l[0|s]),A=A+a|0,n;);for(e[r+12>>2]=-1,A=90045;a=Dt(r+12|0,A),(0|(n=e[r+12>>2]))>=33&&(g[0|(s=(t+n|0)-1192|0)]=32|l[0|s]),A=A+a|0,n;);for(e[r+12>>2]=-1,A=90045;a=Dt(r+12|0,A),(0|(n=e[r+12>>2]))>=33&&(g[0|(s=(t+n|0)-1192|0)]=8|l[0|s]),A=A+a|0,n;);for(e[r+12>>2]=-1,A=90045;a=Dt(r+12|0,A),(0|(n=e[r+12>>2]))>=33&&(g[0|(s=(t+n|0)-1192|0)]=64|l[0|s]),A=A+a|0,n;);q=r+16|0,r=24946;break e}e[t+600>>2]=1056,e[t+12>>2]=34,e[t+216>>2]=1118,e[t+220>>2]=1072,VA(t+344|0,0,256),g[t+406|0]=4,g[t+366|0]=4,g[t+367|0]=4,g[t+369|0]=4,g[t+370|0]=4,g[t+371|0]=4,g[t+372|0]=4,g[t+361|0]=4,g[t+362|0]=4,g[t+363|0]=4,g[t+364|0]=4,g[t+373|0]=4,g[t+380|0]=4,g[t+381|0]=4,g[t+382|0]=4,g[t+383|0]=4,g[t+375|0]=4,g[t+376|0]=4,g[t+377|0]=4,g[t+378|0]=4,g[t+384|0]=4,g[t+360|0]=129,e[t+328>>2]=6,e[t+296>>2]=134744588,e[t+300>>2]=286261248,e[t+40>>2]=1,e[t+8>>2]=0,e[t+104>>2]=1032,e[t+108>>2]=66,A=e[25885],e[t+304>>2]=e[25884],e[t+308>>2]=A,A=e[25887],e[t+312>>2]=e[25886],e[t+316>>2]=A,r=25189;break e}Ma(t),e[t+328>>2]=6,e[t+56>>2]=2,e[t+36>>2]=263,e[t+40>>2]=1074,e[t+124>>2]=32,e[t+104>>2]=184554728,e[t+8>>2]=2,g[t+386|0]=64&l[t+386|0]|129,r=25191;break e}e[t+12>>2]=262182,e[t+40>>2]=1,r=6514802;break e}e[t+328>>2]=14,e[t+296>>2]=303173393,e[t+300>>2]=336986112,e[t+104>>2]=1024,e[t+16>>2]=0,e[t+20>>2]=2,e[t+8>>2]=2,e[t+12>>2]=22,e[t+44>>2]=120,A=e[25893],e[t+304>>2]=e[25892],e[t+308>>2]=A,A=e[25895],e[t+312>>2]=e[25894],e[t+316>>2]=A,g[t+463|0]=64&l[t+463|0]|129,g[t+465|0]=64&l[t+465|0]|129,r=25465;break e}e[t+8>>2]=0,e[t+104>>2]=184618072,e[t+32>>2]=1,A=e[26101],e[t+304>>2]=e[26100],e[t+308>>2]=A,A=e[26103],e[t+312>>2]=e[26102],e[t+316>>2]=A,g[t+465|0]=64&l[t+465|0]|129,r=25697;break e}e[t+296>>2]=336860180,e[t+300>>2]=336991764,e[t+8>>2]=0,e[t+104>>2]=16846872,e[t>>2]=8,e[t+4>>2]=48,e[t+80>>2]=87,e[t+32>>2]=1,e[t+36>>2]=256,e[t+40>>2]=2,A=e[25897],e[t+304>>2]=e[25896],e[t+308>>2]=A,A=e[25899],e[t+312>>2]=e[25898],e[t+316>>2]=A,g[t+465|0]=64&l[t+465|0]|129,r=25701;break e}e[t+132>>2]=33,e[t+104>>2]=16779328,e[t+8>>2]=0,e[t+12>>2]=8,e[t+204>>2]=101,e[t+60>>2]=2,e[t+40>>2]=2,A=e[25901],e[t+304>>2]=e[25900],e[t+308>>2]=A,A=e[25903],e[t+312>>2]=e[25902],e[t+316>>2]=A,g[t+441|0]=64|l[t+441|0],g[t+445|0]=64|l[t+445|0],g[t+449|0]=64|l[t+449|0],g[t+455|0]=64|l[t+455|0],g[t+461|0]=64|l[t+461|0],g[t+465|0]=64|l[t+465|0],r=25966;break e}e[t+328>>2]=4,e[t+296>>2]=336858640,e[t+300>>2]=353768980,e[t+104>>2]=16782344,e[t+20>>2]=2,e[t+12>>2]=22,e[t+4>>2]=2,e[t+8>>2]=2,e[t+332>>2]=103640,A=e[25997],e[t+304>>2]=e[25996],e[t+308>>2]=A,A=e[25999],e[t+312>>2]=e[25998],e[t+316>>2]=A,r=25967;break e}e[t+296>>2]=269422096,e[t+300>>2]=370545684,e[t+104>>2]=86017320,e[t+108>>2]=6144,e[t+16>>2]=0,e[t+20>>2]=2,e[t+8>>2]=2,e[t+12>>2]=534,e[t+100>>2]=e[t+96>>2],e[t+44>>2]=120,A=e[25913],e[t+304>>2]=e[25912],e[t+308>>2]=A,A=e[25915],e[t+312>>2]=e[25914],e[t+316>>2]=A;_:{me:{if((0|r)<=26976){if((0|r)==24942)break me;if((0|r)!=25441)break _;e[t+12>>2]=566,e[t+336>>2]=103664,r=25441;break e}if((0|r)!=26977){if((0|r)!=7364976)break _;e[t+8>>2]=3,e[t+12>>2]=310,r=7364976;break e}e[t+104>>2]=85984264,r=26977;break e}e[t+104>>2]=153093416,e[t+108>>2]=2048,e[t+140>>2]=103676,r=24942;break e}e[t+40>>2]=2;break e}e[t+296>>2]=303173648,e[t+300>>2]=303174162,e[t+104>>2]=3147080,e[t+12>>2]=65792,e[t+84>>2]=1,A=e[25921],e[t+304>>2]=e[25920],e[t+308>>2]=A,A=e[25923],e[t+312>>2]=e[25922],e[t+316>>2]=A,r=25973;break e}e[t+600>>2]=1536,e[t+216>>2]=1740,e[t+220>>2]=1568,e[t+104>>2]=96,e[t+224>>2]=103696,e[t+340>>2]=103872,e[t+40>>2]=1,r=26209;break e}e[t+328>>2]=5}e[t+104>>2]=86024,e[t+164>>2]=130,g[t+465|0]=64&l[t+465|0]|129;break e}e[t+296>>2]=303173650,e[t+300>>2]=303174162,e[t+8>>2]=3,e[t+12>>2]=36,e[t+144>>2]=2,e[t+104>>2]=118658312,e[t+28>>2]=1,e[t+100>>2]=e[t+96>>2],A=e[25865],e[t+304>>2]=e[25864],e[t+308>>2]=A,A=e[25867],e[t+312>>2]=e[25866],e[t+316>>2]=A,g[t+465|0]=64&l[t+465|0]|129,r=26226;break e}b[t+170>>1]=257,e[t+148>>2]=1,e[t+12>>2]=2,r=6840683;break e}e[t+144>>2]=2,e[t+104>>2]=2098176,e[t+8>>2]=0,e[t+12>>2]=32,e[t+40>>2]=3,e[t+28>>2]=1;break e}e[t+8>>2]=3,e[t+100>>2]=e[t+96>>2],r=26478;break e}e[t+328>>2]=18,e[t+296>>2]=320081425,e[t+300>>2]=353768980,e[t+600>>2]=2304,e[t+112>>2]=84648,e[t+104>>2]=16,e[t+8>>2]=6,e[t+12>>2]=65540,e[t+100>>2]=e[t+96>>2],A=e[25973],e[t+304>>2]=e[25972],e[t+308>>2]=A,A=e[25975],e[t+312>>2]=e[25974],e[t+316>>2]=A;R:{pe:{he:{if((0|r)<=28529){if((0|r)==26485)break he;if((0|r)!=28261)break R;A=e[25861],e[t+304>>2]=e[25860],e[t+308>>2]=A,A=e[25863],e[t+312>>2]=e[25862],e[t+316>>2]=A,e[t+296>>2]=320017171,e[t+300>>2]=320017171,e[t+132>>2]=22,e[t+112>>2]=-1431655768,e[t+108>>2]=32768|e[t+108>>2],ba(t);break e}if((0|r)==28530)break pe;if((0|r)!=28769)break R;e[t+600>>2]=2560,ba(t);break e}A=e[25861],e[t+304>>2]=e[25860],e[t+308>>2]=A,A=e[25863],e[t+312>>2]=e[25862],e[t+316>>2]=A,e[t+600>>2]=2688,e[t+296>>2]=320017171,e[t+300>>2]=320017171,e[t+8>>2]=2,ba(t);break e}e[t+600>>2]=2816}ba(t);break e}g[0|a]=104,g[a+1|0]=98,g[a+2|0]=115,g[a+3|0]=0,(0|r)!=29554?(A=e[26093],e[t+304>>2]=e[26092],e[t+308>>2]=A,A=e[26095],e[t+312>>2]=e[26094],e[t+316>>2]=A):(A=e[25977],e[t+304>>2]=e[25976],e[t+308>>2]=A,A=e[25979],e[t+312>>2]=e[25978],e[t+316>>2]=A),e[t+328>>2]=3,e[t+296>>2]=336859409,e[t+300>>2]=353768980,b[t+168>>1]=261,e[t+8>>2]=0,e[t+12>>2]=16,e[t+144>>2]=1,e[t+184>>2]=1056,e[t+104>>2]=33572172,e[t+108>>2]=330,e[t+36>>2]=3,g[t+465|0]=64&l[t+465|0]|129,g[t+458|0]=64&l[t+458|0]|129;break e}e[t+104>>2]=17990912,e[t+8>>2]=3,e[t+12>>2]=36,r=26740;break e}e[t+328>>2]=3,e[t+296>>2]=320016657,e[t+300>>2]=353768980,e[t+124>>2]=32,e[t+128>>2]=44,e[t+104>>2]=186758144,e[t+12>>2]=1081398,e[t+16>>2]=2,e[t+4>>2]=32,e[t+8>>2]=0,e[t+116>>2]=899,e[t+120>>2]=1,g[t+169|0]=1,e[t+76>>2]=2,A=e[25981],e[t+304>>2]=e[25980],e[t+308>>2]=A,A=e[25983],e[t+312>>2]=e[25982],e[t+316>>2]=A,g[t+465|0]=64&l[t+465|0]|129,Ni(t,3),r=26741;break e}for(e[t+600>>2]=1328,e[t+8>>2]=3,A=e[25985],e[t+304>>2]=e[25984],e[t+308>>2]=A,A=e[25987],e[t+312>>2]=e[25986],e[t+316>>2]=A,a=VA(t+344|0,0,256),g[t+429|0]=129,g[t+416|0]=129,g[t+403|0]=129,g[t+399|0]=129,g[t+400|0]=129,g[t+397|0]=129,g[t+393|0]=129,n=103952,s=50,o=50;g[0|(A=a+o|0)]=2|l[0|A],A=a+l[n+1|0]|0,g[0|A]=2|l[0|A],A=a+l[n+2|0]|0,g[0|A]=2|l[0|A],o=l[0|(n=n+3|0)],A=103952,(0|n)!=103982;);for(n=t+344|0;g[0|(a=n+s|0)]=4|l[0|a],a=n+l[A+1|0]|0,g[0|a]=4|l[0|a],a=n+l[A+2|0]|0,g[0|a]=4|l[0|a],s=l[0|(A=A+3|0)],(0|A)!=103982;);g[t+168|0]=6,e[t+104>>2]=5128,g[t+413|0]=4|l[t+413|0];break e}e[t+328>>2]=4,e[t+296>>2]=336858640,e[t+300>>2]=353768980,e[t+104>>2]=16782440,e[t+20>>2]=2,e[t+12>>2]=22,e[t+4>>2]=2,e[t+8>>2]=2,e[t+332>>2]=104e3,A=e[25997],e[t+304>>2]=e[25996],e[t+308>>2]=A,A=e[25999],e[t+312>>2]=e[25998],e[t+316>>2]=A,r=26991;break e}e[t+296>>2]=303174160,e[t+300>>2]=353768980,e[t+104>>2]=16781320,e[t+144>>2]=2,e[t+8>>2]=2,e[t+12>>2]=22,A=e[26005],e[t+304>>2]=e[26004],e[t+308>>2]=A,A=e[26007],e[t+312>>2]=e[26006],e[t+316>>2]=A;break e}for(e[t+8>>2]=0,e[t+12>>2]=16,e[t+56>>2]=2,e[t+28>>2]=17,A=e[26009],e[t+304>>2]=e[26008],e[t+308>>2]=A,A=e[26011],e[t+312>>2]=e[26010],e[t+316>>2]=A,A=0,n=t+344|0;g[0|(a=A+n|0)]=231&l[0|a],g[0|(a=n+(1|A)|0)]=231&l[0|a],g[0|(a=n+(2|A)|0)]=231&l[0|a],g[0|(a=n+(3|A)|0)]=231&l[0|a],(0|(A=A+4|0))!=256;);e[t+104>>2]=2280,e[t+108>>2]=2,e[t+608>>2]=104048,g[t+451|0]=16|l[t+451|0],g[t+456|0]=16|l[t+456|0],g[t+459|0]=16|l[t+459|0],g[t+460|0]=16|l[t+460|0],g[t+450|0]=8|l[t+450|0],g[t+462|0]=8|l[t+462|0],g[t+458|0]=8|l[t+458|0],g[t+465|0]=64&l[t+465|0]|129;break e}e[t+296>>2]=269618961,e[t+300>>2]=370546196,e[t+12>>2]=131110,e[t+144>>2]=2,e[t+104>>2]=184559112,e[t+108>>2]=8192,e[t+16>>2]=0,e[t+20>>2]=2,e[t+4>>2]=1,e[t+8>>2]=2,e[t+100>>2]=e[t+96>>2],e[t+140>>2]=103676,e[t+68>>2]=2,e[t+56>>2]=1,e[t+44>>2]=130,e[t+28>>2]=2,A=e[26025],e[t+304>>2]=e[26024],e[t+308>>2]=A,A=e[26027],e[t+312>>2]=e[26026],e[t+316>>2]=A,g[t+465|0]=64&l[t+465|0]|129,r=26996;break e}e[t+4>>2]=524,e[t+8>>2]=2,e[t+196>>2]=368,e[t+104>>2]=0,e[t+336>>2]=104128,e[t- -64>>2]=1,A=e[26029],e[t+304>>2]=e[26028],e[t+308>>2]=A,A=e[26031],e[t+312>>2]=e[26030],e[t+316>>2]=A,g[t+465|0]=64&l[t+465|0]|129,r=6972015;break e}for(e[t+296>>2]=303174162,e[t+300>>2]=370545684,A=e[25873],e[t+304>>2]=e[25872],e[t+308>>2]=A,A=e[25875],e[t+312>>2]=e[25874],e[t+316>>2]=A,a=VA(t+344|0,0,256),g[t+431|0]=1,g[t+429|0]=1,g[t+411|0]=1,g[t+405|0]=1,g[t+400|0]=1,g[t+396|0]=1,g[t+392|0]=1,A=104160,n=49;g[0|(n=n+a|0)]=4|l[0|n],n=a+l[A+1|0]|0,g[0|n]=4|l[0|n],n=a+l[A+2|0]|0,g[0|n]=4|l[0|n],n=l[0|(A=A+3|0)],(0|A)!=104193;);e[t+600>>2]=4256,e[t+8>>2]=0,e[t+12>>2]=16,g[t+168|0]=7,e[t+132>>2]=32,g[t+392|0]=128|l[t+392|0],g[t+396|0]=128|l[t+396|0],g[t+400|0]=128|l[t+400|0],g[t+405|0]=128|l[t+405|0],g[t+411|0]=128|l[t+411|0],g[t+429|0]=128|l[t+429|0],g[t+431|0]=128|l[t+431|0],e[t+188>>2]=1056,e[t+192>>2]=29301,e[t+104>>2]=19964960;break e}for(e[t+600>>2]=1056,a=VA(t+344|0,0,256),g[t+393|0]=1,g[t+365|0]=1,g[t+360|0]=1,g[t+545|0]=1,g[t+529|0]=1,g[t+391|0]=1,g[t+389|0]=1,g[t+390|0]=1,g[t+387|0]=1,g[t+379|0]=1,g[t+374|0]=1,g[t+368|0]=1,g[t+489|0]=1,g[t+487|0]=1,g[t+398|0]=1,A=104224,n=17;g[0|(n=n+a|0)]=4|l[0|n],n=a+l[A+1|0]|0,g[0|n]=4|l[0|n],n=a+l[A+2|0]|0,g[0|n]=4|l[0|n],n=l[0|(A=A+3|0)],(0|A)!=104251;);g[t+360|0]=128|l[t+360|0],g[t+365|0]=128|l[t+365|0],g[t+393|0]=128|l[t+393|0],g[t+368|0]=128|l[t+368|0],g[t+374|0]=128|l[t+374|0],g[t+379|0]=128|l[t+379|0],g[t+387|0]=128|l[t+387|0],g[t+389|0]=128|l[t+389|0],g[t+390|0]=128|l[t+390|0],g[t+391|0]=128|l[t+391|0],g[t+529|0]=128|l[t+529|0],g[t+545|0]=128|l[t+545|0],g[t+489|0]=128|l[t+489|0],g[t+487|0]=128|l[t+487|0],g[t+398|0]=128|l[t+398|0],A=e[26055],e[t+312>>2]=e[26054],e[t+316>>2]=A,A=e[26053],e[t+304>>2]=e[26052],e[t+308>>2]=A,e[t+296>>2]=353636370,e[t+300>>2]=336925972,e[t+200>>2]=0,e[t+8>>2]=7,e[t+12>>2]=2097184,g[t+168|0]=2,e[t+104>>2]=50176,e[t+84>>2]=1,Ni(t,3);break e}e[t+296>>2]=320017171,e[t+300>>2]=320017171,e[t+104>>2]=184618072,e[t+8>>2]=12,e[t+12>>2]=32,A=e[25861],e[t+304>>2]=e[25860],e[t+308>>2]=A,A=e[25863],e[t+312>>2]=e[25862],e[t+316>>2]=A,r=27500;break e}e[t+184>>2]=42752,e[t+600>>2]=4352,VA(t+344|0,0,256),g[t+456|0]=1,g[t+457|0]=1,g[t+458|0]=1,g[t+459|0]=1,g[t+449|0]=1,g[t+450|0]=1,g[t+451|0]=1,g[t+452|0]=1,g[t+453|0]=1,g[t+454|0]=1,g[t+455|0]=1,g[t+456|0]=1,g[t+441|0]=1,g[t+442|0]=1,g[t+443|0]=1,g[t+444|0]=1,g[t+445|0]=1,g[t+446|0]=1,g[t+447|0]=1,g[t+448|0]=1,g[t+460|0]=65,g[t+461|0]=65,g[t+532|0]=32,g[t+527|0]=32,g[t+519|0]=32,g[t+515|0]=32,g[t+349|0]=32,g[t+350|0]=32,g[t+346|0]=32,e[t+132>>2]=20,e[t+112>>2]=286331152,e[t+104>>2]=1024,e[t+108>>2]=16384,e[t+40>>2]=1,e[t+8>>2]=8,g[t+458|0]=65,g[t+453|0]=65,g[t+447|0]=65,g[t+448|0]=65,g[t+443|0]=65,g[t+444|0]=65,r=27503;break e}e[t+328>>2]=10,e[t+296>>2]=336859666,e[t+300>>2]=353768980,g[t+168|0]=2,e[t+104>>2]=263264,e[t+8>>2]=7,A=e[26065],e[t+304>>2]=e[26064],e[t+308>>2]=A,A=e[26067],e[t+312>>2]=e[26066],e[t+316>>2]=A,r=27509;break e}e[t+104>>2]=1,r=27513;break e}e[t+116>>2]=5e3,e[t+104>>2]=16777216,e[t+24>>2]=1,e[t+16>>2]=0,e[t+20>>2]=2,e[t+8>>2]=2,e[t+12>>2]=32,e[t+328>>2]=5,r=27745;break e}e[t+116>>2]=5e3,e[t+104>>2]=99336,e[t+108>>2]=256,e[t+24>>2]=1,e[t+16>>2]=0,e[t+20>>2]=2,e[t+8>>2]=2,e[t+12>>2]=32,e[t+328>>2]=5,r=27764;break e}e[t+328>>2]=6,e[t+296>>2]=336859409,e[t+300>>2]=353768980,e[t+600>>2]=1056,e[t+104>>2]=2114600,e[t+108>>2]=138,e[t+8>>2]=4,e[t+632>>2]=104288,e[t+604>>2]=104288,A=e[26093],e[t+304>>2]=e[26092],e[t+308>>2]=A,A=e[26095],e[t+312>>2]=e[26094],e[t+316>>2]=A,r=28011;break e}e[t+328>>2]=4,e[t+104>>2]=1,e[t+8>>2]=2,e[t+36>>2]=256,r=28020;break e}e[t+4>>2]=48,e[t+8>>2]=0,e[t+12>>2]=128,e[t+104>>2]=2169880,e[t+32>>2]=1,e[t+36>>2]=256,e[t+24>>2]=1,e[t+136>>2]=85767,A=e[26097],e[t+304>>2]=e[26096],e[t+308>>2]=A,A=e[26099],e[t+312>>2]=e[26098],e[t+316>>2]=A,g[t+465|0]=64&l[t+465|0]|129,r=28268;break e}e[t+8>>2]=0,e[t+104>>2]=71752,A=e[26101],e[t+304>>2]=e[26100],e[t+308>>2]=A,A=e[26103],e[t+312>>2]=e[26102],e[t+316>>2]=A,g[t+465|0]=64&l[t+465|0]|129,r=28258;break e}e[t+296>>2]=336858898,e[t+300>>2]=370546196,e[t+104>>2]=1088,e[t+108>>2]=512,e[t+8>>2]=2,e[t+12>>2]=524310,A=e[26105],e[t+304>>2]=e[26104],e[t+308>>2]=A,A=e[26107],e[t+312>>2]=e[26106],e[t+316>>2]=A,r=28525;break e}e[t+328>>2]=3,e[t+296>>2]=320015633,e[t+300>>2]=353768980,g[t+168|0]=7,e[t+8>>2]=2,e[t+12>>2]=6,e[t+104>>2]=20488,e[t+108>>2]=192,e[t+36>>2]=9,e[t+60>>2]=260,A=e[26109],e[t+304>>2]=e[26108],e[t+308>>2]=A,A=e[26111],e[t+312>>2]=e[26110],e[t+316>>2]=A,g[t+465|0]=64&l[t+465|0]|129,r=28780;break e}for(e[t+296>>2]=353569552,e[t+300>>2]=353768980,e[t+116>>2]=5e3,e[t+104>>2]=33570920,e[t+108>>2]=14336,e[t+8>>2]=3,e[t+12>>2]=139286,e[t+100>>2]=e[t+96>>2],A=e[26113],e[t+304>>2]=e[26112],e[t+308>>2]=A,A=e[26115],e[t+312>>2]=e[26114],e[t+316>>2]=A,g[t+465|0]=64&l[t+465|0]|129,A=0,n=t+344|0;g[0|(a=A+n|0)]=253&l[0|a],g[0|(a=n+(1|A)|0)]=253&l[0|a],g[0|(a=n+(2|A)|0)]=253&l[0|a],g[0|(a=n+(3|A)|0)]=253&l[0|a],(0|(A=A+4|0))!=256;);g[t+442|0]=2|l[t+442|0],g[t+443|0]=2|l[t+443|0],g[t+444|0]=2|l[t+444|0],g[t+446|0]=2|l[t+446|0],g[t+447|0]=2|l[t+447|0],g[t+450|0]=2|l[t+450|0],g[t+451|0]=2|l[t+451|0],g[t+453|0]=2|l[t+453|0],g[t+454|0]=2|l[t+454|0],g[t+456|0]=2|l[t+456|0],g[t+457|0]=2|l[t+457|0],g[t+459|0]=2|l[t+459|0],g[t+460|0]=2|l[t+460|0],g[t+462|0]=2|l[t+462|0],g[t+464|0]=2|l[t+464|0],g[t+466|0]=2|l[t+466|0],e[t+144>>2]=2,e[t+68>>2]=2;break e}e[t+296>>2]=303172879,e[t+300>>2]=353768980,e[t+328>>2]=3,e[t+8>>2]=3,e[t+12>>2]=262,e[t+104>>2]=16805928,e[t+108>>2]=30,A=e[26117],e[t+304>>2]=e[26116],e[t+308>>2]=A,A=e[26119],e[t+312>>2]=e[26118],e[t+316>>2]=A,r=29295;break e}Ii(t),r=29301;break e}for(e[t+328>>2]=3,e[t+296>>2]=336859153,e[t+300>>2]=353768980,b[t+168>>1]=261,e[t+8>>2]=0,e[t+12>>2]=22,e[t+124>>2]=0,e[t+128>>2]=44,e[t+104>>2]=16794624,e[t+108>>2]=128,e[t+36>>2]=3,e[t+60>>2]=4,A=e[25869],e[t+304>>2]=e[25868],e[t+308>>2]=A,A=e[25871],e[t+312>>2]=e[25870],e[t+316>>2]=A,(0|r)==25459&&(e[t+108>>2]=136),g[t+465|0]=64&l[t+465|0]|129,g[t+458|0]=64&l[t+458|0]|129,A=0,n=t+344|0;g[0|(a=A+n|0)]=223&l[0|a],g[0|(a=n+(1|A)|0)]=223&l[0|a],g[0|(a=n+(2|A)|0)]=223&l[0|a],g[0|(a=n+(3|A)|0)]=223&l[0|a],(0|(A=A+4|0))!=256;);g[t+442|0]=32|l[t+442|0],g[t+444|0]=32|l[t+444|0],g[t+447|0]=32|l[t+447|0],g[t+450|0]=32|l[t+450|0],g[t+452|0]=32|l[t+452|0],g[t+453|0]=32|l[t+453|0],g[t+454|0]=32|l[t+454|0],g[t+458|0]=32|l[t+458|0],g[t+462|0]=32|l[t+462|0],g[t+463|0]=32|l[t+463|0],g[t+466|0]=32|l[t+466|0],g[t+441|0]=32|l[t+441|0],g[t+445|0]=32|l[t+445|0],g[t+449|0]=32|l[t+449|0],g[t+455|0]=32|l[t+455|0],g[t+461|0]=32|l[t+461|0],g[t+465|0]=32|l[t+465|0];break e}for(e[t+296>>2]=303174162,e[t+300>>2]=370545684,e[t+600>>2]=3456,g[t+169|0]=1,e[t+8>>2]=0,e[t+12>>2]=22,e[t+100>>2]=e[t+96>>2],A=e[25873],e[t+304>>2]=e[25872],e[t+308>>2]=A,A=e[25875],e[t+312>>2]=e[25874],e[t+316>>2]=A,VA(t+344|0,0,256),g[t+365|0]=1,g[t+366|0]=1,g[t+357|0]=1,g[t+358|0]=1,g[t+359|0]=1,g[t+360|0]=1,g[t+361|0]=1,g[t+362|0]=1,g[t+363|0]=1,g[t+364|0]=1,g[t+349|0]=1,g[t+350|0]=1,g[t+351|0]=1,g[t+352|0]=1,g[t+353|0]=1,g[t+354|0]=1,g[t+355|0]=1,g[t+356|0]=1,A=74,n=74;g[344+(a=t+n|0)|0]=1|l[a+344|0],g[a+345|0]=1|l[a+345|0],g[a+346|0]=1|l[a+346|0],(0|(n=n+3|0))!=116;);for(;g[344+(n=A+t|0)|0]=2|l[n+344|0],g[n+345|0]=2|l[n+345|0],g[n+346|0]=2|l[n+346|0],(0|(A=A+3|0))!=116;);for(n=26;g[344+(A=t+n|0)|0]=4|l[A+344|0],g[A+345|0]=4|l[A+345|0],g[A+346|0]=4|l[A+346|0],g[A+347|0]=4|l[A+347|0],g[A+348|0]=4|l[A+348|0],(0|(n=n+5|0))!=71;);e[t+112>>2]=84648,e[t+104>>2]=270589952,e[t+108>>2]=65536,e[t+40>>2]=1,e[t+204>>2]=e[t+600>>2]+74;break e}e[t+8>>2]=2,e[t+12>>2]=32,e[t+328>>2]=3,e[t+124>>2]=32,e[t+104>>2]=16864280,e[t+108>>2]=256,e[t+68>>2]=2,e[t+36>>2]=259,e[t+40>>2]=118,e[t+28>>2]=1,g[t+458|0]=128|l[t+458|0],r=29548;break e}e[t+296>>2]=370544658,e[t+300>>2]=370546196,e[t+164>>2]=130,e[t+8>>2]=0,e[t+12>>2]=86,e[t+104>>2]=87064,g[t+169|0]=1,e[t+152>>2]=3,A=e[26121],e[t+304>>2]=e[26120],e[t+308>>2]=A,A=e[26123],e[t+312>>2]=e[26122],e[t+316>>2]=A,g[t+465|0]=64&l[t+465|0]|129,r=7564650;break e}e[t+296>>2]=269487120,e[t+300>>2]=320148500,e[t+8>>2]=3,e[t+12>>2]=278,e[t+144>>2]=2,e[t+104>>2]=32872,A=e[26125],e[t+304>>2]=e[26124],e[t+308>>2]=A,A=e[26127],e[t+312>>2]=e[26126],e[t+316>>2]=A,g[t+465|0]=64&l[t+465|0]|129,r=29553;break e}e[t+296>>2]=336859152,e[t+300>>2]=353768980,e[t+8>>2]=0,e[t+144>>2]=1,e[t+104>>2]=6408,A=e[26129],e[t+304>>2]=e[26128],e[t+308>>2]=A,A=e[26131],e[t+312>>2]=e[26130],e[t+316>>2]=A,g[t+465|0]=64&l[t+465|0]|129,r=29558;break e}e[t+296>>2]=320015376,e[t+300>>2]=353768980,g[t+168|0]=4,e[t+12>>2]=22,e[t+4>>2]=1,e[t+8>>2]=2,e[t+104>>2]=1248,e[t+100>>2]=e[t+96>>2],A=e[26133],e[t+304>>2]=e[26132],e[t+308>>2]=A,A=e[26135],e[t+312>>2]=e[26134],e[t+316>>2]=A;break e}e[t+296>>2]=303174162,e[t+300>>2]=370545684,g[t+169|0]=1,e[t+8>>2]=0,e[t+12>>2]=22,e[t+112>>2]=5288,e[t+100>>2]=e[t+96>>2],A=e[25877],e[t+304>>2]=e[25876],e[t+308>>2]=A,A=e[25879],e[t+312>>2]=e[25878],e[t+316>>2]=A;p:switch(r-29793|0){default:if((0|r)!=27502){if((0|r)!=28012)break r;A=e[26137],e[t+304>>2]=e[26136],e[t+308>>2]=A,A=e[26139],e[t+312>>2]=e[26138],e[t+316>>2]=A,e[t+600>>2]=3328,e[t+296>>2]=320017171,e[t+300>>2]=320017171,e[t+104>>2]=2098176,e[t+108>>2]=131072,e[t+8>>2]=13;break r}e[t+104>>2]=1,e[t+600>>2]=3200;break r;case 4:break p;case 1:case 2:case 3:break r;case 0:break a}e[t+104>>2]=1,e[t+108>>2]=524288,e[t+600>>2]=3072;break r}e[t+328>>2]=10,e[t+296>>2]=353636370,e[t+300>>2]=336925972,g[t+173|0]=1,e[t+8>>2]=7,e[t+12>>2]=32,g[t+168|0]=2,e[t+84>>2]=1,A=e[26141],e[t+304>>2]=e[26140],e[t+308>>2]=A,e[t+104>>2]=(0|r)==24954?2118920:2114824,A=e[26143],e[t+312>>2]=e[26142],e[t+316>>2]=A;break e}Ma(t),e[t+296>>2]=303173650,e[t+300>>2]=303174162,e[t+104>>2]=2131208,e[t+8>>2]=3,e[t+12>>2]=32,A=e[25865],e[t+304>>2]=e[25864],e[t+308>>2]=A,A=e[25867],e[t+312>>2]=e[25866],e[t+316>>2]=A,r=29812;break e}Ii(t),r=30059;break e}e[t+112>>2]=21160,e[t+104>>2]=16,e[t+600>>2]=1536,e[t+40>>2]=1;break e}e[t+296>>2]=269488144,e[t+300>>2]=370546198,e[t+8>>2]=0,e[t>>2]=33,e[t+148>>2]=1,e[t+104>>2]=12615688,e[t+16>>2]=2,e[t+100>>2]=e[t+96>>2],e[t+632>>2]=104592,e[t+604>>2]=104592,A=e[26145],e[t+304>>2]=e[26144],e[t+308>>2]=A,A=e[26147],e[t+312>>2]=e[26146],e[t+316>>2]=A,r=30313;break e}if(e[t+296>>2]=370544662,e[t+300>>2]=370546198,e[t+8>>2]=3,e[t+12>>2]=2,e[t+148>>2]=1,e[t+184>>2]=12544,b[t+170>>1]=257,e[t+176>>2]=1,g[t+172|0]=1,e[t>>2]=33,e[t+4>>2]=0,e[t+100>>2]=e[t+96>>2],A=e[26225],e[t+304>>2]=e[26224],e[t+308>>2]=A,A=e[26227],e[t+312>>2]=e[26226],e[t+316>>2]=A,(0|r)!=7959909)break e;e[t+112>>2]=24,e[t+104>>2]=1,e[t+108>>2]=1048576,r=7959909;break e}A=e[25873],e[t+304>>2]=e[25872],e[t+308>>2]=A,A=e[25875],e[t+312>>2]=e[25874],e[t+316>>2]=A,e[t+600>>2]=2944,e[t+104>>2]=2097152,e[t+108>>2]=262144,e[t+48>>2]=1}ba(t),g[t+422|0]=2|l[t+422|0];break e}e[t+40>>2]=1}return e[t+212>>2]=r,8&(A=e[t+104>>2])&&(e[t+124>>2]=46,e[t+128>>2]=44),4&A&&(e[t+124>>2]=0),t}function dA(A){var t=0,r=0,n=0,a=0,s=0,o=0,c=0,f=0,m=0,p=0,I=0,y=0,P=0,Y=0,X=0,_=0,ce=0,he=0,ye=0,De=0,Re=0,Xe=0,nA=0,fA=0,GA=0;e:{r=e[32538],e[47354]=0,e[47568]=0,e[49828]=0,e[47569]=0,g[199328]=0,e[49827]=0,e[49845]=0,g[190280]=0,g[190268]=1,e[47202]=0,e[49573]=0,e[49846]=0,g[199304]=0,g[199388]=0,e[33691]=0,e[33285]=0,e[33708]=1,e[33709]=1,e[33288]=0,t=e[33730],e[33712]=e[33729],e[33713]=t,t=e[33732],e[33714]=e[33731],e[33715]=t,t=e[33734],e[33716]=e[33733],e[33717]=t,t=e[33736],e[33718]=e[33735],e[33719]=t,t=e[33738],e[33720]=e[33737],e[33721]=t,t=e[33740],e[33722]=e[33739],e[33723]=t,t=e[33742],e[33724]=e[33741],e[33725]=t,e[33726]=e[33743],g[134784]=0,g[134824]=0,g[134772]=0,g[134760]=0,e[33284]=-1,e[33692]=0,e[32525]=0,e[47201]=e[33717],e[47200]=e[33718],Un(),e[34438]=0,e[34437]=0,t=e[33730],e[34048]=e[33729],e[34049]=t,t=e[33732],e[34050]=e[33731],e[34051]=t,t=e[33734],e[34052]=e[33733],e[34053]=t,t=e[33736],e[34054]=e[33735],e[34055]=t,t=e[33738],e[34056]=e[33737],e[34057]=t,t=e[33740],e[34058]=e[33739],e[34059]=t,t=e[33742],e[34060]=e[33741],e[34061]=t,e[34062]=e[33743];A:{r:{if(1&r){if(e[e[32539]>>2]=0,e[47569]|e[49845]|e[49827])break r;break A}if(e[e[32539]>>2]=0,!(e[49845]|e[49827]||e[47569]))break A}g[190280]=1}e[49828]=0,t=268436735;A:if(!(!e[34391]|!e[34388])&&(e[47204]=0,e[47203]=0,e[47199]=0,e[34439]=0,(e[47192]||!(t=u0(86228)))&&((t=e[33283])||((t=It(16))&&(e[t>>2]=0,e[t+4>>2]=0,e[t+8>>2]=0,e[t+12>>2]=0),e[33283]=t),s=268439807,(r=e[e[47192]+328>>2])>>>0>20|!e[129104+(r<<3)>>2]?t=s:(A?(s=4,a=RA(A)+1|0):(s=2,a=0),e[t+8>>2]=s,e[t>>2]=A,e[t+12>>2]=e[129108+(r<<3)>>2],e[t+4>>2]=A?A+a|0:0,t=0),!t))){fe(0);r:{for(;;){e[34436]=0,A=e[34391],e[51290]=A,e[54046]=A+e[34390],e[50767]<=102399&&(e[50767]=102400);a:if(!((o=e[51290])>>>0>=ue[54046]))for(;;){if((((0|(A=(a=e[50757])-(c=e[50758])|0))<=0?A+170|0:A)-171|0)>=-1){if((0|(A=e[54731]))<=0)break a;s=0,e[50763]=0,e[50762]=0,e[50765]=2147483647,A=l[218920]?e[54732]:A;s:{for(;;){if(r=A-1|0,e[54732]=r,(0|A)<=0)break s;if(e[51290]=o+1,t=(A=e[51293])+1|0,e[51293]=(0|t)<=5499?t:0,t=(A=F(e[50755],b[205184+(A<<1)>>1]))>>8,g[0|o]=t,a=e[51290],e[51290]=a+1,g[0|a]=A>>>16,(a=e[50756])?(A=r,(r=e[a+4>>2])&&(pt[0|r](t<<16>>16),A=e[54732])):A=r,a=(r=e[51292])+1|0,e[51292]=a,b[205184+(r<<1)>>1]=t,(0|a)>=5500&&(e[51292]=0),o=e[51290],!(ue[54046]>=o+2>>>0))break}s=1}g[218920]=s;break a}A=e[4+(r=216192+(a<<4)|0)>>2];s:{c:{o:{u:{l:{i:{p:{C:{m:{b:{h:{E:{w:{y:{L:{W:switch((255&(t=e[r>>2]))-1|0){case 9:break o;case 7:break u;case 10:break l;case 11:break i;case 13:break p;case 0:break C;case 1:break m;case 2:break b;case 3:break h;case 6:break E;case 5:break w;case 4:break y;case 15:break L;case 8:break W;default:break c}if(!e[50759])break c;t=e[r+12>>2],r=e[r+8>>2],e[50768]=0,o=r||99232,e[50766]=o,e[50769]=A?2097152/(0|A)|0:0,A=e[50971],a=(0|F(A,e[50788]))/50|0,r=F(a-A|0,-18),A=((0|(A=e[50785]))>=101?101:A)-e[50790]|0,t=(s=r+((0|F(e[50970],l[((0|A)>0?A:0)+105680|0]))/128|0)|0)+((0|F(a,(0|(A=t>>16))<(0|(r=65535&t))?A:r))/2|0)|0,e[50770]=t,A=(s+((0|F(a,(0|A)>(0|r)?A:r))/2|0)|0)-t|0,e[50771]=A,r=l[0|o],e[33072]=e[50976],e[50767]=t+(F(A,r)>>8);break c}pt[e[e[50756]>>2]](A,e[r+8>>2]),yt(A);break c}if(l[218920]||(e[54731]=e[54731]-A),e[50781]=100,e[50773]=0,re(),e[50763]=0,e[50762]=0,e[50765]=2147483647,!A)break c;for(A=l[218920]?e[54732]:A;;){if(r=A-1|0,e[54732]=r,(0|A)<=0)break c;if(A=e[51290],e[51290]=A+1,a=(t=e[51293])+1|0,e[51293]=(0|a)<=5499?a:0,a=A,t=(A=F(e[50755],b[205184+(t<<1)>>1]))>>8,g[0|a]=t,a=e[51290],e[51290]=a+1,g[0|a]=A>>>16,(a=e[50756])?(A=r,(r=e[a+4>>2])&&(pt[0|r](t<<16>>16),A=e[54732])):A=r,a=(r=e[51292])+1|0,e[51292]=a,b[205184+(r<<1)>>1]=t,(0|a)>=5500&&(e[51292]=0),a=1,!(ue[54046]>=e[51290]+2>>>0))break}break s}for(e[50773]=0,e[54731]=e[54729],re(),t=e[r+12>>2],a=e[r+8>>2],l[218920]?A=e[54733]:e[54734]=0,c=t>>8,s=255&t,e[50762]=0,e[50763]=0;;){if(r=A-1|0,e[54733]=r,(0|A)<=0)break c;if(t=(A=e[54734])+1|0,s?o=F(s,g[A+a|0]):(o=l[A+a|0]|g[t+a|0]<<8,t=A+2|0),e[54734]=t,f=(A=e[51293])+1|0,e[51293]=f,t=(0|(A=(0|(A=((0|F(c,F(e[33037],F(e[33038],o))>>10))/32|0)+(F(e[50755],b[205184+(A<<1)>>1])>>8)|0))<=-32768?-32768:A))>=32767?32767:A,(0|f)>=5500&&(e[51293]=0),g[e[51290]]=t,g[e[51290]+1|0]=t>>>8,(o=e[50756])?(A=r,(r=e[o+12>>2])&&(pt[0|r](t<<16>>16),A=e[54733])):A=r,r=e[51290],e[51290]=r+2,f=(o=e[51292])+1|0,e[51292]=f,b[205184+(o<<1)>>1]=(0|F(t,3))/4,(0|f)>=5500&&(e[51292]=0),!(ue[54046]>=r+4>>>0))break}a=1;break s}t=e[r+12>>2],a=A>>>16|0,e[50777]=a,A&=65535,e[50773]=A,s=255&t,e[50774]=s,e[50775]=t>>8,s||(e[50777]=a<<1,e[50773]=A<<1),e[50778]=0,e[50776]=0,e[50772]=e[r+8>>2];break c}e[50773]=0}if(e[54731]=e[54729],t=e[50759],l[218920]){if(!t)break c}else{if(!t)break c;for(s=e[r+12>>2],o=e[r+8>>2],r=A>>16,e[55912]=255&r,g[218960]=1,e[55908]=0,67108864&A&&(e[55908]=3,e[55909]=e[110496+(r>>>6&12)>>2]),134217728&A&&(e[55908]=4,e[55909]=e[110512+(r>>>6&12)>>2]),A&=65504;;){if((0|c)!=(0|(a=(0|(r=a+1|0))<=169?r:0)))if((0|(r=e[216192+(a<<4)>>2]))!=3){if(r-5>>>0>1)continue}else g[218960]=0;break}for(e[55913]=e[50762],A=(A=A+32&131008)||64,e[50763]=A+e[50763],e[55684]=F(b[101997],7800)+(M[102024]<<8)<<8,e[55704]=F(b[101998],9e3)+(M[102025]<<8)<<8,P=e[50980],n=+(0|A),I=+(A>>>2|0),A=0;(0|A)!=7&&(a=b[218+(f=(r=A<<1)+t|0)>>1]<<8,c=F(A,80)+222176|0,f=b[f+164>>1],y=a+F(f,b[2+(r+o|0)>>1])<<8,e[c>>2]=y,p=+(0|y),D[c+16>>3]=p,D[c+48>>3]=16*(+(a+F(f,b[2+(r+s|0)>>1])<<8)-p)/I),a=(r=F(A,80))+222176|0,f=b[182+(y=t+(A<<1)|0)>>1],X=F(f,l[18+(c=A+o|0)|0])<<6,e[a+4>>2]=X,p=+(0|X),D[a+24>>3]=p,Y=a,a=A+s|0,D[Y+56>>3]=64*(+(F(f,l[a+18|0])<<6)-p)/n,(0|A)>(0|P)|A>>>0>5||(f=r+222176|0,X=b[y+200>>1],y=F(X,l[c+26|0])<<10,e[f+8>>2]=y,p=+(0|y),D[f+32>>3]=p,Y=f- -64|0,f=X<<10,D[Y>>3]=64*(+(0|F(f,l[a+26|0]))-p)/n,A>>>0<=2?(r=r+222176|0,c=F(f,l[c+32|0]),e[r+12>>2]=c,p=+(0|c),D[r+40>>3]=p,D[r+72>>3]=64*(+(0|F(f,l[a+32|0]))-p)/n):e[r+222188>>2]=y),(0|(A=A+1|0))!=8;);}for(;;){if(A=e[50762],!l[218960]&(0|A)==e[50763])break c;b:{h:{if(63&A){if(7&A)break b;E:if(!((0|(r=e[54736]))<=0||(0|(t=e[54735]))<=0))for(a=e[50826],A=1;;){if(e[(o=(s=A<<2)+a|0)>>2]=e[o>>2]+e[s+203312>>2],A>>>0>28|(0|A)>=(0|r))break E;if(s=(0|A)<(0|t),A=A+1|0,!s)break}if((0|(A=e[33073]))>255)break b;e[33073]=A+1;break b}if(A)if(e[50759]){if(r=e[50768]+e[50769]|0,e[50768]=r,r=(t=e[50766])?F(l[t+((0|(r>>=8))>=127?127:r)|0],e[50771])>>8:0,e[55911]=e[55911]+e[55915],t=(0|(t=e[55914]))<=23551?t:0,e[55914]=t+e[50761],t=(r+e[50770]|0)+F(e[33072],l[110528+(t>>6)|0]-128|0)|0,e[50767]=t,!(a=e[51291])&(0|(r=a?a<<12:t))>102399||(t=(0|r)<=102400?102400:r,e[50767]=t),(0|A)!=e[55913]){if(A=0,!((0|(c=e[50980]))<0)){for(;o=F(A,80),n=D[48+(r=o+222176|0)>>3]+D[r+16>>3],D[r+16>>3]=n,I=D[r+56>>3]+D[r+24>>3],D[r+24>>3]=I,p=D[r- -64>>3]+D[r+32>>3],D[r+32>>3]=p,a=Ne(n)<2147483648?~~n:-2147483648,e[r>>2]=a,a=Ne(p)<2147483648?~~p:-2147483648,e[r+8>>2]=a,s=Ne(I)<2147483648?~~I:-2147483648,e[r+4>>2]=(0|s)>0?s:0,(0|A)>2||(n=D[72+(r=o+222176|0)>>3]+D[r+40>>3],D[r+40>>3]=n,a=Ne(n)<2147483648?~~n:-2147483648),e[o+222188>>2]=a,(0|c)>=(0|(A=A+1|0)););if((0|A)>=8)break h}for(;(0|A)!=7&&(r=F(A,80)+222176|0,n=D[r+48>>3]+D[r+16>>3],D[r+16>>3]=n,a=Ne(n)<2147483648?~~n:-2147483648,e[r>>2]=a),r=F(A,80)+222176|0,n=D[r+56>>3]+D[r+24>>3],D[r+24>>3]=n,a=Ne(n)<2147483648?~~n:-2147483648,e[r+4>>2]=(0|a)>0?a:0,(0|(A=A+1|0))!=8;);}}else t=e[50767];else e[50826]=218976,e[54742]=0,e[54736]=Ia(e[50767]<<4,218976,0),t=e[50767],e[54737]=890/(t>>12),e[54739]=(0|F(e[50781],F(e[50779],t>>8)))/8e4}if(e[55906]=t>>11,e[54735]=e[54736],e[55904]=F(e[50760],t>>7),e[55905]=e[50754]/(t>>12),r=1^(A=e[54742]),e[54742]=r,e[50826]=F(A,1600)+218976,e[54736]=Ia(t<<4,F(r,1600)+218976|0,1),!(!(t=e[50759])|!e[51022]))for(I=D[25430],p=D[25429],A=1;e[272+(r=t+(A<<2)|0)>>2]&&(a=e[r+308>>2],r=F(A,40)+203456|0,m=Tn(I*+b[2+(F(A,80)+222176|0)>>1]),m*=n=Ft(p*+(0|a)),m+=m,D[r+8>>3]=m,n*=-n,D[r+16>>3]=n,D[r>>3]=1-m-n),(0|(A=A+1|0))!=9;);}if(s=e[50762]+1|0,e[50762]=s,o=(A=e[50765])+e[55904]|0,e[50765]=o,(0|o)<0&(0|A)>0){if(f=e[55905],t=e[50800]+((0|f)/-2|0)|0,e[55907]=t,(0|(y=e[50763]))<(0|s))break c;if(P=e[54738]+1|0,e[54738]=P,c=e[50767],!((0|(A=(r=e[50980])+1|0))>8)&&(a=c<<3,1&r&&(e[203264+(A<<2)>>2]=(1+(e[F(A,80)+222176>>2]/(0|a)|0)|0)/2,A=r+2|0),(0|r)!=7))for(;r=203264+(A<<2)|0,X=F(A,80)+222176|0,e[r>>2]=(1+(e[X>>2]/(0|a)|0)|0)/2,e[r+4>>2]=(1+(e[X+80>>2]/(0|a)|0)|0)/2,(0|(A=A+2|0))!=9;);A=(0|F(e[50781],F(e[50779],c>>8)))/8e4|0,e[54739]=A;b:if(!((0|(r=e[55908]))<=0)){switch(r-3|0){case 0:if((y-s|0)>=f<<1)break b;e[55908]=2,A=(0|F(e[55909],A))/256|0,e[54739]=A;break b;case 1:e[55908]=2,A=(0|F(e[55909],A))/256|0,e[54739]=A;break b}e[55908]=r-1}(r=e[55910])&&(a=A,A=e[55911]>>8,A=(0|F(a,l[r+((0|A)>=127?127:A)|0]))/128|0,e[54739]=A),(0|(r=e[e[32972]+92>>2]))>7||(r=15&(a=l[e[55912]+(106336+(r<<3)|0)|0]),(a=a>>>4|0)&&((0|a)!=15?(0|P)%(0|a)|0||(e[54739]=(0|F(A,r))/16):(e[55912]=0,e[54739]=(0|F(A,r))/16)))}else t=e[55907];if(s=t+1|0,e[55907]=s,r=o>>>16|0,a=0,!((0|s)<0|(0|s)>=e[50799])){if(!((0|(A=(t=e[50980])+1|0))>8)){if(c=1&(o=8-t|0),(0|t)!=7)for(f=-2&o,t=0;a=F(e[203216+(y=4+(o=A<<2)|0)>>2],b[106400+(F(r,e[y+203264>>2])>>>4&4094)>>1])+(F(e[o+203216>>2],b[106400+(F(r,e[o+203264>>2])>>>4&4094)>>1])+a|0)|0,A=A+2|0,(0|f)!=(0|(t=t+2|0)););c&&(a=F(e[203216+(A<<=2)>>2],b[106400+(F(r,e[A+203264>>2])>>>4&4094)>>1])+a|0)}a=F(l[s+132160|0],(0|a)/e[55906]|0)}if(A=1,(0|(s=e[54737]))<=0)t=r;else for(o=e[50826],t=r;a=F(e[o+(A<<2)>>2],b[106400+((65504&t)>>>4|0)>>1])+a|0,t=t+r|0,(0|s)>=(0|(A=A+1|0)););if((0|(s=e[54735]))>=(0|A))for(o=e[50826];a=a-F(e[o+(A<<2)>>2],b[106400+((65504&t)>>>4|0)>>1])|0,t=t+r|0,(0|s)>=(0|(A=A+1|0)););if(s=(0|(A=e[54728]))==64?a:F(A,a>>6),e[51022]){if(e[50759])for(r=kt(e[33209],0,1103515245,0),A=J,A=Zi(r=r+12345|0,A=r>>>0<12345?A+1|0:A),e[33209]=A,I=+((16383&A)- -8192|0),t=e[50759],o=0,A=1;(a=e[272+(t+(A<<2)|0)>>2])&&(c=e[F(A,80)+222180>>2],r=F(A,40)+203456|0,n=D[r+32>>3],p=D[r+24>>3],D[r+32>>3]=p,n=n*D[r+16>>3]+(D[r>>3]*I+p*D[r+8>>3]),D[r+24>>3]=n,r=Ne(n)<2147483648?~~n:-2147483648,o=F(r,F(a,c>>14))+o|0),(0|(A=A+1|0))!=9;);else o=0;s=s+o|0}t=0,(0|(A=e[50776]))>=e[50773]||(r=e[50778],t=e[50772],(o=e[50774])?(a=A+1|0,e[50776]=a,A=F(o,g[t+(A+r|0)|0])):(o=l[0|(t=t+(A+r|0)|0)],t=g[t+1|0],a=A+2|0,e[50776]=a,A=o|t<<8),t=(0|F(F(A,e[50780])>>10,e[50775]))/32|0,(0|(A=e[50777]))>(r+a|0)||(e[50778]=r+((0|F(A,3))/-4|0))),r=(A=e[51293])+1|0,e[51293]=r,A=((F(e[54739],s>>8)>>13)+t|0)+(F(e[50755],b[205184+(A<<1)>>1])>>8)|0,(0|r)>=5500&&(e[51293]=0),r=e[33073];b:{h:{if((0|(t=F(r,A)))>=8388608){if((0|r)>=(0|(o=8388608/(0|A)|0)))break h;break b}if((0|t)>-8388353||(0|r)<(0|(o=-8388608/(0|A)|0)))break b}r=o-1|0,e[33073]=r,t=F(A,r)}if(A=e[51290],e[51290]=A+1,r=A,A=t>>8,g[0|r]=A,r=e[51290],e[51290]=r+1,g[0|r]=t>>>16,(r=e[50756])&&(r=e[r+8>>2])&&pt[0|r](A<<16>>16),t=(r=e[51292])+1|0,e[51292]=t,b[205184+(r<<1)>>1]=A,(0|t)>=5500&&(e[51292]=0),!(ue[54046]>=e[51290]+2>>>0))break}a=1;break s}e[50773]=0}e[54731]=e[54729],a=1,c=65535&A,t=l[218920],o=e[r+8>>2],s=e[r+12>>2],n=0,p=0,q=r=q+-64|0,f=e[50759];C:if((0|(A=e[f+132>>2]))!=6){if(!t){for(A-1>>>0<=4&&(e[55921]=A,e[55964]=e[110896+(A<<2)>>2]),A=e[f+88>>2],e[54741]=1,e[55922]=(0|A)/32,t=e[50758],A=e[50757];;){m:if((0|t)!=(0|(A=(0|(A=A+1|0))<=169?A:0)))if((0|(y=e[216192+(A<<4)>>2]))!=1){if(y-5>>>0>1)continue}else{if(e[54741]=0,A=e[8+(216192+(A<<4)|0)>>2],!(M[s+4>>1]!=M[A+4>>1]|M[A+6>>1]!=M[s+6>>1]|M[A+8>>1]!=M[s+8>>1]|M[A+10>>1]!=M[s+10>>1])&&M[A+12>>1]==M[s+12>>1])break m;e[54741]=2}break}for((M[o+4>>1]!=M[113564]|M[o+6>>1]!=M[113565]|M[o+8>>1]!=M[113566]|M[o+10>>1]!=M[113567]||M[o+12>>1]!=M[113568])&&(qs(),e[55974]=0,e[55975]=0,e[55972]=0,e[55973]=0,e[55988]=0,e[55989]=0,e[55990]=0,e[55991]=0,e[56004]=0,e[56005]=0,e[56006]=0,e[56007]=0,e[56020]=0,e[56021]=0,e[56022]=0,e[56023]=0,e[56036]=0,e[56037]=0,e[56038]=0,e[56039]=0,e[56052]=0,e[56053]=0,e[56054]=0,e[56055]=0,e[56068]=0,e[56069]=0,e[56070]=0,e[56071]=0,e[56086]=0,e[56087]=0,e[56084]=0,e[56085]=0,e[56102]=0,e[56103]=0,e[56100]=0,e[56101]=0,e[56118]=0,e[56119]=0,e[56116]=0,e[56117]=0,e[56134]=0,e[56135]=0,e[56132]=0,e[56133]=0,e[56150]=0,e[56151]=0,e[56148]=0,e[56149]=0,e[56166]=0,e[56167]=0,e[56164]=0,e[56165]=0,e[56182]=0,e[56183]=0,e[56180]=0,e[56181]=0,e[56198]=0,e[56199]=0,e[56196]=0,e[56197]=0,e[56214]=0,e[56215]=0,e[56212]=0,e[56213]=0,e[56230]=0,e[56231]=0,e[56228]=0,e[56229]=0),A=M[s+4>>1]|M[s+6>>1]<<16,t=M[s>>1]|M[s+2>>1]<<16,b[113562]=t,b[113563]=t>>>16,b[113564]=A,b[113565]=A>>>16,A=M[s+60>>1]|M[s+62>>1]<<16,t=M[s+56>>1]|M[s+58>>1]<<16,b[113590]=t,b[113591]=t>>>16,b[113592]=A,b[113593]=A>>>16,A=M[s+52>>1]|M[s+54>>1]<<16,t=M[s+48>>1]|M[s+50>>1]<<16,b[113586]=t,b[113587]=t>>>16,b[113588]=A,b[113589]=A>>>16,A=M[s+44>>1]|M[s+46>>1]<<16,t=M[s+40>>1]|M[s+42>>1]<<16,b[113582]=t,b[113583]=t>>>16,b[113584]=A,b[113585]=A>>>16,A=M[s+36>>1]|M[s+38>>1]<<16,t=M[s+32>>1]|M[s+34>>1]<<16,b[113578]=t,b[113579]=t>>>16,b[113580]=A,b[113581]=A>>>16,A=M[s+28>>1]|M[s+30>>1]<<16,t=M[s+24>>1]|M[s+26>>1]<<16,b[113574]=t,b[113575]=t>>>16,b[113576]=A,b[113577]=A>>>16,A=M[s+20>>1]|M[s+22>>1]<<16,t=M[s+16>>1]|M[s+18>>1]<<16,b[113570]=t,b[113571]=t>>>16,b[113572]=A,b[113573]=A>>>16,A=M[s+12>>1]|M[s+14>>1]<<16,t=M[s+8>>1]|M[s+10>>1]<<16,b[113566]=t,b[113567]=t>>>16,b[113568]=A,b[113569]=A>>>16,I=+(0|c),(Y=1&b[o>>1])?(A=l[o+39|0],e[56680]=A,D[28364]=A>>>0,D[28354]=+(l[s+39|0]-A<<6)/I,A=l[o+40|0],D[28366]=A>>>0,D[28356]=+(l[s+40|0]-A<<6)/I,A=l[o+41|0],e[56682]=A,D[28368]=A>>>0,D[28358]=+(l[s+41|0]-A<<6)/I,t=l[o+42|0],e[56684]=t,D[28370]=t>>>0,A=l[o+43|0],n=+(l[s+43|0]-A<<6)/I,p=+(l[s+42|0]-t<<6)/I,m=+(A>>>0)):(e[56728]=0,e[56729]=0,A=0,e[56680]=0,e[56708]=0,e[56709]=0,e[56732]=0,e[56733]=0,e[56712]=0,e[56713]=0,e[56682]=0,e[56736]=0,e[56737]=0,e[56716]=0,e[56717]=0,e[56684]=0,e[56740]=0,e[56741]=0,m=0),e[56688]=A,D[28360]=p,D[28372]=m,D[28362]=n,e[56692]=0,e[56748]=0,e[56749]=0,e[56694]=0,e[56752]=0,e[56753]=0,e[56696]=0,e[56756]=0,e[56757]=0,e[56700]=0,e[56760]=0,e[56761]=0,e[56704]=0,e[56764]=0,e[56765]=0,e[50764]=c,A=1;P=b[164+(y=(c=A<<1)+f|0)>>1],t=(De=F(A,80))+222896|0,p=+b[y+218>>1],n=.00390625*+(0|F(P,b[2+(o+c|0)>>1]))+p,D[t+16>>3]=n,X=Ne(n)<2147483648?~~n:-2147483648,e[t>>2]=X,D[t+48>>3]=64*(.00390625*+(0|F(P,b[2+(s+c|0)>>1]))+p-n)/I,A>>>0<=3&&(t=De+222896|0,n=.00390625*+b[y+200>>1]*+(l[35+(A+o|0)|0]<<1),D[t+24>>3]=n,c=Ne(n)<2147483648?~~n:-2147483648,e[t+4>>2]=c,D[t+56>>3]=64*(+(l[35+(A+s|0)|0]<<1)-n)/I),(0|(A=A+1|0))!=6;);if(n=+((A=l[o+40|0])<<1),D[27864]=n,t=e[56618],A||(n=+(0|t),D[27864]=n),A=Ne(n)<2147483648?~~n:-2147483648,e[55724]=A,c=l[s+40|0],e[55730]=0,e[55731]=1079394304,e[55738]=0,e[55739]=0,e[55725]=89,A=1,D[27868]=64*(+(0|(c?c<<1:t))-n)/I,Y)for(;t=F(A,80)+222896|0,f=l[56+(c=A+o|0)|0]<<2,e[t+12>>2]=f,n=+(0|f),D[t+40>>3]=n,f=A+s|0,D[t+72>>3]=64*(+(l[f+56|0]<<2)-n)/I,c=l[c+49|0],e[t+8>>2]=c,n=+(c>>>0),D[t+32>>3]=n,D[t- -64>>3]=64*(+l[f+49|0]-n)/I,(0|(A=A+1|0))!=7;);e[56606]=0}for(;;){if((0|(X=e[50764]))>(0|(s=e[56606]))){for(A=e[50767],e[56609]=e[55724],e[56619]=e[55725],e[56610]=e[55744],e[56611]=e[55764],e[56612]=e[55784],e[56613]=e[55804],Y=F(A,10),e[56607]=(0|Y)/4096,e[56620]=e[55745],e[56621]=e[55765],e[56622]=e[55785],e[56614]=e[55824],e[56630]=e[55746],e[56631]=e[55766],e[56632]=e[55786],e[56633]=e[55806],e[56634]=e[55826],e[56635]=e[55846],De=e[56680],e[56608]=De,o=e[56694],e[56656]=o,c=e[56696],e[56653]=c,f=e[56700],e[56655]=f,y=e[56684],e[56649]=y,e[56651]=e[56704],e[56654]=e[56688],e[56652]=e[56682],e[56650]=e[56692],A=0;t=F(A,80)+222896|0,n=D[t+48>>3]+D[t+16>>3],D[t+16>>3]=n,I=D[t+56>>3]+D[t+24>>3],D[t+24>>3]=I,p=D[t+72>>3]+D[t+40>>3],D[t+40>>3]=p,m=D[t- -64>>3]+D[t+32>>3],D[t+32>>3]=m,P=Ne(n)<2147483648?~~n:-2147483648,e[t>>2]=P,P=Ne(I)<2147483648?~~I:-2147483648,e[t+4>>2]=P,P=Ne(p)<2147483648?~~p:-2147483648,e[t+12>>2]=P,P=Ne(m)<2147483648?~~m:-2147483648,e[t+8>>2]=P,(0|(A=A+1|0))!=9;);for(n=D[28354]+D[28364],D[28364]=n,D[28366]=D[28356]+D[28366],I=D[28358]+D[28368],D[28368]=I,p=D[28360]+D[28370],D[28370]=p,m=D[28362]+D[28372],D[28372]=m,A=Ne(n)<2147483648?~~n:-2147483648,e[56680]=A,A=Ne(I)<2147483648?~~I:-2147483648,e[56682]=A,A=Ne(p)<2147483648?~~p:-2147483648,e[56684]=A,A=Ne(m)<2147483648?~~m:-2147483648,e[56688]=A,n=D[28374]+0,D[28374]=n,A=Ne(n)<2147483648?~~n:-2147483648,e[56692]=A,n=D[28376]+0,D[28376]=n,A=Ne(n)<2147483648?~~n:-2147483648,e[56694]=A,n=D[28378]+0,D[28378]=n,A=Ne(n)<2147483648?~~n:-2147483648,e[56696]=A,n=D[28380]+0,D[28380]=n,A=Ne(n)<2147483648?~~n:-2147483648,e[56700]=A,n=D[28382]+0,D[28382]=n,A=Ne(n)<2147483648?~~n:-2147483648,e[56704]=A,e[56659]=e[55724],e[56669]=e[55725],e[56660]=e[55744],e[56670]=e[55745],e[56661]=e[55764],e[56671]=e[55765],e[56662]=e[55784],e[56672]=e[55785],e[56663]=e[55804],e[56664]=e[55824],e[56665]=e[55844],A=e[50768]+e[50769]|0,e[50768]=A,A>>=8,e[50767]=e[50770]+(F(e[50771],l[e[50766]+((0|A)>=127?127:A)|0])>>8),A=X-s|0,e[55923]=(0|A)>=64?64:A,e[55961]=(0|Y)/40960,A=De-7|0,e[56658]=(0|A)>0?A:0,D[27974]=y>>>0<=87?.001*+b[111136+(y<<1)>>1]*.05:0,D[27975]=c>>>0<=87?.001*+b[111136+(c<<1)>>1]*.25:0,D[27973]=o>>>0<=87?.001*+b[111136+(o<<1)>>1]:0,D[27971]=f>>>0<=87?.001*+b[111136+(f<<1)>>1]*.05:0,n=(A=e[56629])>>>0<=87?.001*+b[111136+(A<<1)>>1]*.6:0,D[r>>3]=n,n=(A=e[56630])>>>0<=87?.001*+b[111136+(A<<1)>>1]*.4:0,D[r+8>>3]=n,n=(A=e[56631])>>>0<=87?.001*+b[111136+(A<<1)>>1]*.15:0,D[r+16>>3]=n,n=(A=e[56632])>>>0<=87?.001*+b[111136+(A<<1)>>1]*.06:0,D[r+24>>3]=n,n=(A=e[56633])>>>0<=87?.001*+b[111136+(A<<1)>>1]*.04:0,D[r+32>>3]=n,n=(A=e[56634])>>>0<=87?.001*+b[111136+(A<<1)>>1]*.022:0,D[r+40>>3]=n,n=(A=e[56635])>>>0<=87?.001*+b[111136+(A<<1)>>1]*.03:0,D[r+48>>3]=n,n=(A=(0|(A=e[56657]-3|0))<=0?57:A)>>>0<=87?.001*+b[111136+(A<<1)>>1]:0,D[27977]=n/+e[55964],I=D[27968],p=D[27967],A=1;t=223664+(s=A<<6)|0,m=(n=Ft(p*+e[48+(c=226428+(o=A<<2)|0)>>2]))*-n,D[t+216>>3]=m,n*=Tn(I*+e[c+8>>2]),n+=n,D[t+208>>3]=n,he=1-n-m,D[t+200>>3]=he,A>>>0<=5&&(c=e[208+(o=o+226428|0)>>2],t=s+223664|0,ce=(_=Ft(p*+e[o+248>>2]))*Tn(I*+(0|c)),ce+=ce,D[t+1488>>3]=ce,_*=-_,D[t+1496>>3]=_,ye=1-ce-_,D[t+1480>>3]=ye,D[t+256>>3]=.015625*(_-m),D[t+248>>3]=.015625*(ce-n),D[t+240>>3]=.015625*(ye-he)),(0|(A=A+1|0))!=10;);for(_=(n=Ft(p*+e[56619]))*-n,D[27985]=_,ce=(n*=Tn(I*+(0-e[56609]|0)))+n,D[27984]=ce,n=1-ce-_,D[27983]=n,n!=0&&(n=1/n,D[27983]=n,_*=m=-n,D[27985]=_,ce*=m,D[27984]=ce),he=(m=Ft(p*+e[56669]))*-m,D[28145]=he,ye=(m*=Tn(I*+(0-e[56659]|0)))+m,D[28144]=ye,m=1-ye-he,D[28143]=m,m!=0&&(m=1/m,D[28143]=m,he*=nA=-m,D[28145]=he,ye*=nA,D[28144]=ye),D[27990]=.015625*(he-_),D[27989]=.015625*(ye-ce),D[27988]=.015625*(m-n),A=0;o=e[8+(s=226428+(A<<2)|0)>>2],t=223664+(A<<6)|0,m=(n=Ft(p*+e[s+128>>2]))*Tn(I*+(0|o)),m+=m,D[t+848>>3]=m,n*=-n,D[t+856>>3]=n,D[t+840>>3]=D[r+(A<<3)>>3]*(1-m-n),(0|(A=A+1|0))!=7;);if(p=(n=Ft(p*+(e[55918]/2|0)))*-n,D[28137]=p,n*=Tn(0*I),n+=n,D[28136]=n,D[28135]=1-n-p,A=1,(0|qA())!=1)continue;break C}break}A=1,e[54741]>0&&(e[54741]=0,e[55963]=64,e[56606]=s+-64,e[55923]=64,(0|qA())==1)||(A=0)}else{if(q=y=q-752|0,!t){VA(A=y+376|0,0,376),Ga(f,o,A),Ga(f,s,A=VA(y,0,376)),t=e[50768]+F(e[50769],c>>>6|0)|0,e[50768]=t,t>>=8,t=e[50770]+(F(e[50771],l[e[50766]+((0|t)>=127?127:t)|0])>>8)|0,e[50767]=t,D[A+368>>3]=(0|t)/4096|0,e[50773]&&(D[A+736>>3]=D[A+736>>3]/5,D[A+360>>3]=D[A+360>>3]/5),t=e[e[56797]+4>>2],pt[e[e[t>>2]>>2]](t,A+376|0,110,110,-1,0),s=c-110|0,f=e[50758],t=e[50757];m:{for(;;){if((0|f)!=(0|(t=(t+1|0)%170|0))&&!((P=e[216192+(t<<4)>>2])-5>>>0<2)){if(o=1,(0|P)!=1)continue;break m}break}s=c-220|0,o=0}(0|s)>0&&(t=e[e[56797]+4>>2],pt[e[e[t>>2]>>2]](t,A,s,s||1,-1,0)),o||(e[A+352>>2]=0,e[A+356>>2]=0,D[A>>3]=D[A+368>>3],t=e[e[56797]+4>>2],pt[e[e[t>>2]>>2]](t,A,55,55,-1,0),e[A+360>>2]=0,e[A+364>>2]=0,t=e[e[56797]+4>>2],pt[e[e[t>>2]>>2]](t,A,55,55,-1,0))}A=e[e[56797]+8>>2],t=e[51290],c=0|pt[e[e[A>>2]>>2]](A,e[54046]-t>>>1|0,t),f=e[51290];m:if(c&&!((0|(t=e[50776]))>=(0|(De=e[50773]))))for(Re=e[50777],fA=(0|F(Re,3))/-4|0,n=.0009765625*+e[50780],P=e[50772],s=e[50778],GA=e[50775],X=e[50774],A=0;;){if(Y=l[P+(o=t+s|0)|0],X?Y=F(X,Y<<24>>24):(t=t+1|0,e[50776]=t,Y|=g[P+(o=t+s|0)|0]<<8),Y=Ne(I=n*+(0|Y))<2147483648?~~I:-2147483648,b[(Xe=f+(A<<1)|0)>>1]=M[Xe>>1]+((0|F(Y,GA))/40|0),(0|o)>=(0|Re)&&(s=s+fA|0,e[50778]=s),t=t+1|0,e[50776]=t,(0|t)>=(0|De))break m;if(!(c>>>0>(A=A+1|0)>>>0))break}A=f+(c<<1)|0,e[51290]=A,q=y+752|0,A=ue[54046]<=A>>>0}if(q=r- -64|0,A)break s;break c}e[50781]=A||100;break c}Ya(A,e[r+8>>2]);break c}A=e[r+8>>2],e[50759]=xt(203816,A,1344),e[50801]=e[A+108>>2]?105792:106064,A=(0|F(e[A+120>>2],26))/100|0,e[33038]=A,(0|(a=e[50754]))<=11e3&&(g[203300]=1,e[33038]=A<<1),e[54728]=e[50982],A=e[50979],t=e[50978],VA(205184,0,11e3),e[51293]=0,A=(t=(o=(0|(s=e[50789]))>0)?130:(0|t)>=5499?5499:t)?o?s:(0|A)>=100?100:A:0,e[50755]=A,t=(0|F(t,a))/1e3|0,e[51292]=t,e[54729]=(0|A)>20?t<<1:A?t:0,e[33037]=(0|F(500-A|0,(0|F(l[e[50797]+105596|0],(0|F(e[50787],55))/100|0))/16|0))/500,A=256,(0|(t=(0|(t=e[50785]))>=101?101:t))>=51&&(A=256+(((F(t,25)-1250&65535)>>>0)/50|0)|0),b[101990]=(0|F(b[102026],A))/256,b[101991]=(0|F(b[102027],A))/256,b[101992]=(0|F(b[102028],A))/256,b[101993]=(0|F(b[102029],A))/256,b[101994]=(0|F(b[102030],A))/256,b[101995]=(0|F(b[102031],A))/256,A=e[50790],b[101999]=(0|F(b[102035],F(A,-6)+256|0))/256,b[102e3]=(0|F(b[102036],F(A,-3)+256|0))/256,as(8,0,e[50986],0,e[51290]),yt(e[r+8>>2]);break c}if(!e[50759])break c;t=e[r+12>>2],r=e[r+8>>2],e[55911]=0,e[55915]=A?2097152/(0|A)|0:0,e[55910]=r,A=(0|F(t,e[33037]))/16|0,e[50779]=A,e[50780]=(0|F(F(A,e[50985]),15))/100;break c}as(t>>8,A,e[r+8>>2],e[r+12>>2],o)}a=0,A=e[50757]+1|0,e[50757]=(0|A)<=169?A:0}if(g[218920]=a,!((o=e[51290])>>>0<ue[54046]))break}s=e[34391],r=(e[51290]-s|0)/2|0,e[34439]=r+e[34439],t=e[34436],A=e[34388]+F(t,36)|0,e[A+4>>2]=0,e[A>>2]=0,e[A+24>>2]=e[34438];a:if(2&(A=e[32538])){if(o=e[34388],(-2&A)==2&&(!(r=t?o:0)|e[r>>2]!=8||(0|(r=e[r+28>>2]))!=e[34389]&&(e[34389]=r)),a=1,(0|t)<2)break a;for(;;){r=t?o+F(a,36)|0:0;s:{c:switch(0|A){case 2:case 3:if(!r|e[r>>2]!=8||(0|(r=e[r+28>>2]))==e[34389])break s;e[34389]=r;break s;case 0:break c;default:break s}(A=e[34440])?(pt[0|A](s,0,r),t=e[34436],A=e[32538]):A=0}if(!((0|(a=a+1|0))<(0|t)))break}}else if((A=e[34440])&&0|pt[0|A](s,r,e[34388]))break r;if(!bA(1)&&!(170-((0|(A=e[50757]-e[50758]|0))<=0?A+170|0:A)|0||(A=e[34388],e[A>>2]=0,e[A+4>>2]=e[34437],e[A+24>>2]=e[34438],fe(1))))break}if(t=0,2&l[130152]||!(A=e[34440])||!(0|pt[0|A](0,0,e[34388])))break A}fe(2),t=268439295}if((0|t)<=268437502){if(!t|(0|t)==268436479|(0|t)!=268437247)break e;return}}}function bA(A){var t,r=0,n=0,a=0,s=0,o=0,c=0,f=0,m=0,p=0,I=0,y=0,P=0,Y=0,X=0,_=0,ce=0,he=0,ye=0,De=0,Re=0,Xe=0;q=t=q-720|0,r=e[47198],A||(e[36443]=0,e[36442]=1,e[36444]=0,e[36440]=0,e[36441]=0,A=e[50758],e[36454]=A,e[36427]=-1,e[36424]=-1,e[36446]=0,e[36447]=0,e[36439]=-1,e[36426]=0,e[36455]=A,e[36448]=0,e[36449]=0,e[36450]=0,e[36451]=0,e[36452]=0,e[36453]=0,Yn(),e[36427]=-1,A=216192+(e[50758]<<4)|0,e[A>>2]=5,e[A+4>>2]=0,A=e[50758]+1|0,e[50758]=(0|A)<=169?A:0,e[36426]=0,e[36438]&&(e[36438]=0,A=216192+(e[50758]<<4)|0,e[A>>2]=14,e[A+4>>2]=0,A=e[50758]+1|0,e[50758]=(0|A)<=169?A:0));e:{A:if(!((0|(A=e[36442]))>997|e[36423]<=(0|A)))for(Y=r>>>1&1,X=t+48|4,_=t+348|0,ce=t+652|0,he=e[32322],I=e[32320],ye=t+60|0,De=t+648|0,Re=t+56|0,Xe=t+620|0,y=t- -64|0;;){if(n=145840+(A<<5)|0,!(A=e[50756])|!e[A>>2]||(e[t+12>>2]=0,ga(A=t+16|0,e[n+8>>2],n,0,t+12|0),r=ei(A),a=l[n+17|0],A=216192+(e[50758]<<4)|0,e[A>>2]=16,e[A+8>>2]=a,e[A+4>>2]=r,A=e[50758]+1|0,e[50758]=(0|A)<=169?A:0),A=1,(0|(a=(0|(r=e[50757]-e[50758]|0))<=0?r+170|0:r))<=(0|((r=l[n+17|0])?(0|r)==2?25:15:10)))break e;if(m=e[36442],2&l[0|n])for(p=2047&M[n+4>>1];;){if(a=e[36443],c=127&(r=e[198304+(a<<2)>>2])){A=r>>>8|0,e[36443]=a+1;r:{a:{switch((31&r)-2|0){case 0:Ya(96&r|8,A),Ra(2);break r;case 5:if((0|A)>=e[34064]||!e[4+(c=136272+(a=A<<4)|0)>>2])break r;pr(10,0),A=216192+(e[50758]<<4)|0,e[A>>2]=6,c=e[c+4>>2],e[A+8>>2]=e[8+(a+136272|0)>>2]+44,e[A+12>>2]=5376,e[A+4>>2]=c;break a;case 8:if((0|((0|(a=e[50757]-e[50758]|0))<=0?a+170:a))<6)break r;c=e[47353],a=216192+(e[50758]<<4)|0,e[a>>2]=778,e[a+8>>2]=A,e[a+4>>2]=c+p&16777215;break a;case 9:if((0|((0|(a=e[50757]-e[50758]|0))<=0?a+170:a))<6)break r;c=e[33284],a=216192+(e[50758]<<4)|0,e[a>>2]=1034,e[a+8>>2]=A,e[a+4>>2]=c+1&16777215;break a}pr(10,0),a=216192+(e[50758]<<4)|0,e[a>>2]=12,e[a+8>>2]=A,e[a+4>>2]=c}A=e[50758]+1|0,e[50758]=(0|A)<=169?A:0}if(!(128&r))continue}break}(A=l[n+20|0])&&(1&g[e[47192]+48|0]&l[n+17|0]==2|1&g[e[n+8>>2]+7|0]||(e[36426]=0),r=e[47353]+(2047&M[n+4>>1])|0,e[36445]=r,4&A&&((0|((0|(A=e[50757]-e[50758]|0))<=0?A+170:A))<6||(a=e[47568],A=216192+(e[50758]<<4)|0,e[A>>2]=522,e[A+8>>2]=a,e[A+4>>2]=16777215&r,A=e[50758]+1|0,e[50758]=(0|A)<=169?A:0)),1&g[n+20|0]&&(r=M[n+4>>1],a=e[36444],e[36444]=a+1,(0|((0|(A=e[50757]-e[50758]|0))<=0?A+170:A))<6||(p=e[36445],c=e[47355],A=216192+(e[50758]<<4)|0,e[A>>2]=266,e[A+8>>2]=a+c,e[A+4>>2]=16777215&p|(63488&r)<<13,A=e[50758]+1|0,e[50758]=(0|A)<=169?A:0))),(0|(A=e[36441]))>0&&(r=216192+(e[36425]<<4)|0,e[r+4>>2]||(e[r+4>>2]=A),e[36441]=0),A=m+1<<5,r=m-1<<5,!(a=l[n+18|0])|2&l[e[n+8>>2]+7|0]||pr(a,1),c=A+145840|0,s=r+145840|0,p=1;r:{a:{if(e[47198]&&(f=e[n+8>>2],l[f+10|0]!=15)){s:if(l[n+17|0]==2)switch(l[s+17|0]-3|0){case 0:case 5:break a;default:break s}p=0,ga(t+704|0,f,n,Y,0),(0|((0|(A=e[50757]-e[50758]|0))<=0?A+170:A))<6||(r=e[36445],A=216192+(e[50758]<<4)|0,e[A>>2]=1802,e[A+4>>2]=16777215&r,r=e[t+708>>2],e[A+8>>2]=e[t+704>>2],e[A+12>>2]=r,A=e[50758]+1|0,e[50758]=(0|A)<=169?A:0)}s:switch(l[n+17|0]){case 0:pr(e[n+12>>2],0),g[n+23|0]=l[e[n+8>>2]+14|0];break r;case 4:r=e[n+8>>2],(0|(A=l[c+17|0]))==2|!l[c+20|0]&(0|A)==3||(b[n>>1]=8192|M[n>>1]),2&l[r+7|0]&&(e[t+88>>2]=0,e[t+92>>2]=0,e[t+80>>2]=0,e[t+84>>2]=0,e[t+72>>2]=0,e[t+76>>2]=0,e[y>>2]=0,e[y+4>>2]=0,e[t+56>>2]=0,e[t+60>>2]=0,e[t+48>>2]=0,e[t+52>>2]=0,$t(0,1,n,t+552|0,145784),e[t+56>>2]=e[t+620>>2],e[y>>2]=e[t+640>>2],e[36424]<0&&(a=l[c+19|0],A=e[50758],e[36425]=A,e[36441]=0,e[12+(A=216192+(A<<4)|0)>>2]=a,e[A+8>>2]=0,e[A>>2]=8,e[A+4>>2]=0,A=e[50758]+1|0,e[50758]=(0|A)<=169?A:0,p=l[c+22|0],a=l[c+21|0],c=e[129280+(l[n+16|0]<<2)>>2],(0|(A=e[36424]))<0|(0|(f=e[36440]))<=0||e[4+(A=216192+(A<<4)|0)>>2]||(e[A+4>>2]=f),A=e[50758],e[36424]=A,e[36440]=0,e[(A=216192+(A<<4)|0)>>2]=9,e[A+4>>2]=0,p|=a<<16,a=(0|a)==255,e[A+12>>2]=a?3604556:p,e[A+8>>2]=a?I:c,A=e[50758]+1|0,e[50758]=(0|A)<=169?A:0),XA(r,0,t+48|0,n,0)),$t(0,0,n,t+552|0,145784),e[t+552>>2]=4|e[t+552>>2],(0|(A=e[36440]))<=0||(0|(r=e[36424]))<0||(e[4+(r=216192+(r<<4)|0)>>2]||(e[r+4>>2]=A),e[36440]=0),e[36426]=0,e[36439]=-1,e[36455]=e[50758],Yn(),e[36427]=-1,e[36422]=0,(A=e[t+624>>2])&&(a=A,A=e[t+644>>2],Da(a,2,e[t+596>>2]<<1,e[t+552>>2],0,A?(A<<5)/100|0:32)),e[36426]=0;break r;case 6:$t(0,0,n,t+552|0,145784),8&l[0|n]&&(A=e[n+12>>2],(0|(r=e[36440]))<=0||(0|(a=e[36424]))<0||(e[4+(a=216192+(a<<4)|0)>>2]||(e[a+4>>2]=r),e[36440]=0),e[36426]=0,e[36439]=-1,e[36455]=e[50758],Yn(),e[36427]=-1,e[36422]=0,(r=e[t+624>>2])&&(a=A,A=e[t+644>>2],Da(r,2,e[t+596>>2]<<1,e[t+552>>2],a,A?(A<<5)/100|0:32))),A=e[n+12>>2],(0|(r=e[36440]))<=0||(0|(a=e[36424]))<0||(e[4+(a=216192+(a<<4)|0)>>2]||(e[a+4>>2]=r),e[36440]=0),e[36426]=0,e[36439]=-1,e[36455]=e[50758],Yn(),e[36427]=-1,e[36422]=0,(r=e[t+624>>2])&&(a=A,A=e[t+644>>2],Da(r,2,e[t+596>>2]<<1,e[t+552>>2],a,A?(A<<5)/100|0:32)),e[36426]=0;break r;case 5:a=e[n+8>>2],e[X+40>>2]=0,e[(A=X)+32>>2]=0,e[A+36>>2]=0,e[A+24>>2]=0,e[A+28>>2]=0,e[A+16>>2]=0,e[A+20>>2]=0,e[A+8>>2]=0,e[A+12>>2]=0,e[A>>2]=0,e[A+4>>2]=0,e[t+48>>2]=4;c:{o:{u:{l:switch(l[c+17|0]-2|0){case 0:r=l[n+19|0],A=e[50758],e[36425]=A,e[36441]=0,e[12+(A=216192+(A<<4)|0)>>2]=r,e[A+8>>2]=0,e[A>>2]=8,e[A+4>>2]=0,A=e[50758]+1|0,e[50758]=(0|A)<=169?A:0,r=l[n+22|0],f=l[n+21|0],p=e[129280+(l[n+16|0]<<2)>>2],(0|(A=e[36424]))<0|(0|(o=e[36440]))<=0||e[4+(A=216192+(A<<4)|0)>>2]||(e[A+4>>2]=o),A=(o=!(255&~f))?I:p,p=1;break o;case 1:break l;default:break u}if(!l[c+20|0]){r=l[c+19|0],A=e[50758],e[36425]=A,e[36441]=0,e[12+(A=216192+(A<<4)|0)>>2]=r,e[A+8>>2]=0,e[A>>2]=8,e[A+4>>2]=0,A=e[50758]+1|0,e[50758]=(0|A)<=169?A:0,r=l[c+22|0],f=l[c+21|0],p=e[129280+(l[c+16|0]<<2)>>2],(0|(A=e[36424]))<0|(0|(o=e[36440]))<=0||e[4+(A=216192+(A<<4)|0)>>2]||(e[A+4>>2]=o),A=(o=!(255&~f))?I:p,p=1;break o}}if(p=0,e[36424]>=0)break c;r=l[c+19|0],A=e[50758],e[36425]=A,e[36441]=0,e[12+(A=216192+(A<<4)|0)>>2]=r,e[A+8>>2]=0,e[A>>2]=8,e[A+4>>2]=0,A=e[50758]+1|0,e[50758]=(0|A)<=169?A:0,r=l[n+22|0],f=l[n+21|0],p=e[129280+(l[n+16|0]<<2)>>2],(0|(A=e[36424]))<0|(0|(o=e[36440]))<=0||e[4+(A=216192+(A<<4)|0)>>2]||(e[A+4>>2]=o),A=(o=!(255&~f))?I:p,p=0}P=e[50758],e[36424]=P,e[36440]=0,e[(P=216192+(P<<4)|0)>>2]=9,e[P+4>>2]=0,e[P+12>>2]=o?3604556:255&r|(255&f)<<16,e[P+8>>2]=A,A=e[50758]+1|0,e[50758]=(0|A)<=169?A:0}c:if(!(2&l[a+7|0])&l[s+17|0]!=2)8&l[0|n]&&pr(50,0);else{if($t(0,1,n,t+552|0,145784),e[t+56>>2]=e[t+620>>2],e[t+64>>2]=e[t+640>>2],XA(a,0,t+48|0,n,0),!(8&l[0|n]))break c;pr(25,1),XA(a,0,t+48|0,n,0)}c:if(p){if(e[36455]!=e[36454])break c;e[36455]=e[50758]}else b[n>>1]=8192|M[n>>1];if($t(0,0,n,t+552|0,145784),e[t+56>>2]=e[t+620>>2],e[t+64>>2]=e[t+640>>2],e[t+76>>2]=e[t+636>>2],e[t+80>>2]=e[t+656>>2],XA(a,0,t+48|0,n,0),l[n+20|0]|l[84+(145840+(m<<5)|0)|0]||((0|(A=l[c+17|0]))==7&&(pr(20,0),A=l[c+17|0]),(255&A)!=6))break r;pr(12,0);break r;case 7:c:{o:{u:{l:{i:switch((A=l[c+17|0])-2|0){case 1:break l;case 0:break i;default:break u}r=l[n+19|0],A=e[50758],e[36425]=A,e[36441]=0,e[12+(A=216192+(A<<4)|0)>>2]=r,e[A+8>>2]=0,e[A>>2]=8,e[A+4>>2]=0,A=e[50758]+1|0,e[50758]=(0|A)<=169?A:0,p=l[n+22|0],A=l[n+21|0],a=e[129280+(l[n+16|0]<<2)>>2],(0|(r=e[36424]))<0|(0|(f=e[36440]))<=0||e[4+(r=216192+(r<<4)|0)>>2]||(e[r+4>>2]=f),r=(f=!(255&~A))?I:a;break o}r=l[c+19|0],A=e[50758],e[36425]=A,e[36441]=0,e[12+(A=216192+(A<<4)|0)>>2]=r,e[A+8>>2]=0,e[A>>2]=8,e[A+4>>2]=0,A=e[50758]+1|0,e[50758]=(0|A)<=169?A:0,p=l[c+22|0],A=l[c+21|0],a=e[129280+(l[c+16|0]<<2)>>2],(0|(r=e[36424]))<0|(0|(f=e[36440]))<=0||e[4+(r=216192+(r<<4)|0)>>2]||(e[r+4>>2]=f),r=(f=!(255&~A))?I:a;break o}if(e[36424]>=0)break c;r=l[n+19|0],A=e[50758],e[36425]=A,e[36441]=0,e[12+(A=216192+(A<<4)|0)>>2]=r,e[A+8>>2]=0,e[A>>2]=8,e[A+4>>2]=0,A=e[50758]+1|0,e[50758]=(0|A)<=169?A:0,p=l[n+22|0],A=l[n+21|0],a=e[129280+(l[n+16|0]<<2)>>2],(0|(r=e[36424]))<0|(0|(f=e[36440]))<=0||e[4+(r=216192+(r<<4)|0)>>2]||(e[r+4>>2]=f),r=(f=!(255&~A))?I:a}a=e[50758],e[36424]=a,e[36440]=0,e[(a=216192+(a<<4)|0)>>2]=9,e[a+4>>2]=0,e[a+12>>2]=f?3604556:(255&A)<<16|p,e[a+8>>2]=r,A=e[50758]+1|0,e[50758]=(0|A)<=169?A:0,A=l[c+17|0]}c:{o:{u:switch((255&A)-2|0){case 1:if(l[c+20|0])break o;break;case 0:break u;default:break o}if(e[36455]!=e[36454])break c;e[36455]=e[50758];break c}b[n>>1]=8192|M[n>>1]}$t(0,0,n,t+552|0,145784),e[t+56>>2]=0,e[t+60>>2]=0,e[y>>2]=0,e[y+4>>2]=0,e[t+80>>2]=0,e[t+84>>2]=0,e[t+72>>2]=0,e[t+76>>2]=0,e[t+88>>2]=0,e[t+56>>2]=e[t+620>>2],e[y>>2]=e[t+640>>2],e[t+80>>2]=e[t+656>>2],e[t+48>>2]=0,e[t+52>>2]=0,e[t+76>>2]=e[t+636>>2],e[t+92>>2]=e[t+596>>2]<<1,8&l[0|n]&&XA(e[n+8>>2],0,t+48|0,n,0),XA(e[n+8>>2],0,t+48|0,n,0);break r;case 8:if(e[t+88>>2]=0,e[t+92>>2]=0,e[t+80>>2]=0,e[t+84>>2]=0,e[t+72>>2]=0,e[t+76>>2]=0,e[y>>2]=0,e[y+4>>2]=0,e[t+56>>2]=0,e[t+60>>2]=0,e[t+48>>2]=0,e[t+52>>2]=0,1&g[0|n]||(r=l[n+19|0],A=e[50758],e[36425]=A,e[36441]=0,e[12+(A=216192+(A<<4)|0)>>2]=r,e[A+8>>2]=0,e[A>>2]=8,e[A+4>>2]=0,A=e[50758]+1|0,e[50758]=(0|A)<=169?A:0,a=l[n+22|0],r=l[n+21|0],p=e[129280+(l[n+16|0]<<2)>>2],(0|(A=e[36424]))<0|(0|(f=e[36440]))<=0||e[4+(A=216192+(A<<4)|0)>>2]||(e[A+4>>2]=f),A=e[50758],e[36424]=A,e[36440]=0,e[(A=216192+(A<<4)|0)>>2]=9,e[A+4>>2]=0,a|=r<<16,r=(0|r)==255,e[A+12>>2]=r?3604556:a,e[A+8>>2]=r?I:p,A=e[50758]+1|0,e[50758]=(0|A)<=169?A:0),l[s+17|0]==8&&(e[36426]=0),$t(0,0,n,t+552|0,145784),e[t+56>>2]=e[t+620>>2],e[t+64>>2]=e[t+640>>2],e[t+92>>2]=e[t+596>>2]<<1,l[c+17|0]==2){e[36455]==e[36454]&&(e[36455]=e[50758]),XA(e[n+8>>2],0,t+48|0,n,0);break r}if(!(!(1&g[0|n])|l[s+17|0]!=2)){XA(e[n+8>>2],0,t+48|0,n,0);break r}e[36426]=0,XA(e[n+8>>2],0,t+48|0,n,0),e[36426]=0;break r;case 3:e[t+88>>2]=0,e[t+92>>2]=0,e[t+80>>2]=0,e[t+84>>2]=0,e[t+72>>2]=0,e[t+76>>2]=0,e[y>>2]=0,e[y+4>>2]=0,e[t+56>>2]=0,e[t+60>>2]=0,e[t+48>>2]=0,e[t+52>>2]=0,a=e[e[n+8>>2]+4>>2],1&g[0|n]||(r=l[n+19|0],A=e[50758],e[36425]=A,e[36441]=0,e[12+(A=216192+(A<<4)|0)>>2]=r,e[A+8>>2]=0,e[A>>2]=8,e[A+4>>2]=0,A=e[50758]+1|0,e[50758]=(0|A)<=169?A:0,p=l[n+22|0],r=l[n+21|0],f=e[129280+(l[n+16|0]<<2)>>2],(0|(A=e[36424]))<0|(0|(o=e[36440]))<=0||e[4+(A=216192+(A<<4)|0)>>2]||(e[A+4>>2]=o),A=e[50758],e[36424]=A,e[36440]=0,e[(A=216192+(A<<4)|0)>>2]=9,e[A+4>>2]=0,p|=r<<16,r=(0|r)==255,e[A+12>>2]=r?3604556:p,e[A+8>>2]=r?I:f,A=e[50758]+1|0,e[50758]=(0|A)<=169?A:0),l[s+17|0]==8&&(e[36426]=0),l[c+17|0]!=2|e[36455]!=e[36454]||(e[36455]=e[50758]),$t(0,0,n,t+552|0,145784),(0|(A=e[t+584>>2]-l[n+18|0]|0))>0&&pr(A,1),e[t+56>>2]=e[t+620>>2],e[t+64>>2]=e[t+640>>2],e[t+76>>2]=e[t+636>>2],e[t+80>>2]=e[t+656>>2],e[t+92>>2]=e[t+596>>2]<<1,XA(e[n+8>>2],0,t+48|0,n,a<<24>>31&5);break r;case 2:break s;default:break r}f=e[n+8>>2]}m=l[n+3|0],e[t+88>>2]=0,e[t+92>>2]=0,e[t+80>>2]=0,e[t+84>>2]=0,e[t+72>>2]=0,e[t+76>>2]=0,e[y>>2]=0,e[y+4>>2]=0,e[t+56>>2]=0,e[t+60>>2]=0,e[t+48>>2]=0,e[t+52>>2]=0,$t(0,0,n,t+552|0,145784),A=e[t+628>>2],e[t+56>>2]=A,e[t+92>>2]=e[t+596>>2]<<1;a:{if(!A||(o=0,a=De,r=ye,2&l[t+552|0])){if(l[s+17|0]?(o=0,$t(0,0,s,t+400|0,0),A=e[t+476>>2],e[t+56>>2]=A,!A|!(2&l[t+400|0])||(e[t+72>>2]=e[t+496>>2],o=1),r=e[t+512>>2],e[t+84>>2]=e[t+508>>2],e[t+88>>2]=r):o=0,A)break a;e[t+48>>2]=1,e[t+52>>2]=1,a=Xe,r=Re}e[r>>2]=e[a>>2]}e[t+64>>2]=e[t+640>>2],r=l[n+16|0],A=0,(a=l[n+7|0])?(Us(a,t+96|0),r=Vi(e[t+220>>2]),(0|(a=e[t+224>>2]))<=0||(A=Vi(a))):r=e[129280+(r<<2)>>2],e[36455]==e[36454]&&(e[36455]=e[50758]),a=(a=15&m)>>>0<2?1:a>>>0>6?3:2;a:{switch(l[s+17|0]-3|0){case 2:case 4:o=l[n+19|0],s=e[50758],e[36425]=s,e[36441]=0,e[12+(s=216192+(s<<4)|0)>>2]=o,e[s+8>>2]=A,e[s>>2]=8,e[s+4>>2]=0,A=e[50758]+1|0,e[50758]=(0|A)<=169?A:0,o=l[n+22|0],s=l[n+21|0],(0|(A=e[36440]))<=0||(0|(m=e[36424]))<0||e[4+(m=216192+(m<<4)|0)>>2]||(e[m+4>>2]=A),A=e[50758],e[36424]=A,e[36440]=0,e[(A=216192+(A<<4)|0)>>2]=9,e[A+4>>2]=0,o|=s<<16,s=(0|s)==255,e[A+12>>2]=s?3604556:o,e[A+8>>2]=s?I:r,A=e[50758]+1|0,e[50758]=(0|A)<=169?A:0,XA(f,1,t+48|0,n,a);break a;case 0:case 5:o=l[n+19|0],s=e[50758],e[36425]=s,e[36441]=0,e[12+(s=216192+(s<<4)|0)>>2]=o,e[s+8>>2]=A,e[s>>2]=8,e[s+4>>2]=0,A=e[50758]+1|0,e[50758]=(0|A)<=169?A:0,XA(f,1,t+48|0,n,a),o=l[n+22|0],s=l[n+21|0],(0|(A=e[36440]))<=0||(0|(m=e[36424]))<0||e[4+(m=216192+(m<<4)|0)>>2]||(e[m+4>>2]=A),A=e[50758],e[36424]=A,e[36440]=0,e[(A=216192+(A<<4)|0)>>2]=9,e[A+4>>2]=0,o|=s<<16,s=(0|s)==255,e[A+12>>2]=s?3604556:o,e[A+8>>2]=s?I:r,A=e[50758]+1|0,e[50758]=(0|A)<=169?A:0;break a}o?(o=l[n+22|0],(0|(s=e[36440]))<=0||(0|(m=e[36424]))<0||e[4+(m=216192+(m<<4)|0)>>2]||(e[m+4>>2]=s),s=e[50758],e[36424]=s,e[36440]=0,e[(s=216192+(s<<4)|0)>>2]=9,e[s+4>>2]=0,e[s+12>>2]=(o|o<<16)-983040,e[s+8>>2]=he,s=e[50758]+1|0,e[50758]=(0|s)<=169?s:0,o=l[n+19|0],s=e[50758],e[36425]=s,e[36441]=0,e[(s=216192+(s<<4)|0)>>2]=8,e[s+4>>2]=0,e[s+12>>2]=o-1,e[s+8>>2]=A,A=e[50758]+1|0,e[50758]=(0|A)<=169?A:0,XA(f,1,t+48|0,n,a),s=l[n+21|0],o=l[n+22|0],(0|(A=e[36440]))<=0||(0|(m=e[36424]))<0||e[4+(m=216192+(m<<4)|0)>>2]||(e[m+4>>2]=A),A=e[50758],e[36424]=A,e[36440]=0,e[(A=216192+(A<<4)|0)>>2]=9,e[A+4>>2]=0,o|=s<<16,s=(0|s)==255,e[A+12>>2]=s?3604556:o,e[A+8>>2]=s?I:r,A=e[50758]+1|0,e[50758]=(0|A)<=169?A:0):(1&g[0|n]||(o=l[n+19|0],s=e[50758],e[36425]=s,e[36441]=0,e[12+(s=216192+(s<<4)|0)>>2]=o,e[s+8>>2]=A,e[s>>2]=8,e[s+4>>2]=0,A=e[50758]+1|0,e[50758]=(0|A)<=169?A:0,o=l[n+22|0],s=l[n+21|0],(0|(A=e[36440]))<=0||(0|(m=e[36424]))<0||e[4+(m=216192+(m<<4)|0)>>2]||(e[m+4>>2]=A),A=e[50758],e[36424]=A,e[36440]=0,e[(A=216192+(A<<4)|0)>>2]=9,e[A+4>>2]=0,o|=s<<16,s=(0|s)==255,e[A+12>>2]=s?3604556:o,e[A+8>>2]=s?I:r,A=e[50758]+1|0,e[50758]=(0|A)<=169?A:0),XA(f,1,t+48|0,n,a))}!e[47198]|1^p||(ga(t+704|0,e[n+8>>2],n,Y,0),(0|((0|(A=e[50757]-e[50758]|0))<=0?A+170:A))<6||(r=e[36445],A=216192+(e[50758]<<4)|0,e[A>>2]=1802,e[A+4>>2]=16777215&r,r=e[t+708>>2],e[A+8>>2]=e[t+704>>2],e[A+12>>2]=r,A=e[50758]+1|0,e[50758]=(0|A)<=169?A:0)),e[t+56>>2]=e[t+620>>2],e[t+84>>2]=0,e[t+88>>2]=0,e[t+64>>2]=e[t+640>>2],r=e[t+632>>2],e[t+68>>2]=r,A=ce;a:{if(!r&&(!l[c+17|0]||(e[t+72>>2]=0,$t(0,0,c,t+248|0,0),e[t+52>>2]=1,A=e[t+368>>2],e[t+84>>2]=e[t+364>>2],e[t+88>>2]=A,r=e[t+328>>2],e[t+68>>2]=r,A=_,!r)))break a;e[t+72>>2]=e[A>>2]}XA(f,2,t+48|0,n,a)}if(A=e[36442]+1|0,e[36442]=A,(0|A)>997)break A;if(!(e[36423]>(0|A)))break}(0|(A=e[36440]))<=0||(0|(r=e[36424]))<0||(e[4+(r=216192+(r<<4)|0)>>2]||(e[r+4>>2]=A),e[36440]=0),e[36426]=0,e[36439]=-1,e[36455]=e[50758],Yn(),e[36427]=-1,A=0,e[36423]<=0||(r=e[47568],a=e[33284],(0|((0|(A=e[50757]-e[50758]|0))<=0?A+170:A))>=6&&(A=216192+(e[50758]<<4)|0,e[A>>2]=1290,e[A+8>>2]=r,e[A+4>>2]=16777215&a,A=e[50758]+1|0,e[50758]=(0|A)<=169?A:0),e[36423]=0,A=0)}return q=t+720|0,A}function NA(A,t,r,n){var a,s=0,o=0,c=0,f=0,m=0,p=0,I=0,y=0,P=0,Y=0,X=0,_=0,ce=0,he=0,ye=0,De=0,Re=0,Xe=0,nA=0,fA=0,GA=0,SA=0,At=0,ct=0,bt=0;q=a=q-48|0;e:{if(r>>>0<=2){for(GA=e[124732+(r<<=2)>>2],SA=e[r+124720>>2];(0|(r=e[t+4>>2]))==e[t+104>>2]?r=vA(t):(e[t+4>>2]=r+1,r=l[0|r]),(0|r)==32|r-9>>>0<5;);P=1;A:{r:switch(r-43|0){case 0:case 2:break r;default:break A}P=(0|r)==45?-1:1,(0|(r=e[t+4>>2]))==e[t+104>>2]?r=vA(t):(e[t+4>>2]=r+1,r=l[0|r])}A:{r:{for(;;){if(g[c+84056|0]==(32|r)){if(c>>>0>6||((0|(r=e[t+4>>2]))==e[t+104>>2]?r=vA(t):(e[t+4>>2]=r+1,r=l[0|r])),(0|(c=c+1|0))!=8)continue;break r}break}if((0|c)!=3){if((0|c)==8)break r;if(!n|c>>>0<4)break A;if((0|c)==8)break r}if((0|(r=e[t+116>>2]))>0|(0|r)>=0&&(e[t+4>>2]=e[t+4>>2]-1),!(!n|c>>>0<4))for(r=(0|r)<0;r||(e[t+4>>2]=e[t+4>>2]-1),(c=c-1|0)>>>0>3;);}q=I=q-16|0,Ee(Ye(Ye(0|P)*Ye(1/0))),(t=2147483647&(f=K(2)))-8388608>>>0<=2130706431?(r=t,r<<=25,n=1065353216+(t=t>>>7|0)|0):(r=f<<25,n=f>>>7|2147418112,t>>>0>=2139095040||(r=0,n=0,t&&(An(I,r=t,0,0,0,(t=Oe(t))+81|0),p=e[I>>2],m=e[I+4>>2],r=e[I+8>>2],n=65536^e[I+12>>2]|16265-t<<16))),e[a>>2]=p,e[a+4>>2]=m,e[a+8>>2]=r,e[a+12>>2]=-2147483648&f|n,q=I+16|0,p=e[a+8>>2],m=e[a+12>>2],f=e[a>>2],y=e[a+4>>2];break e}A:{r:{a:if(!c){for(c=0;;){if(g[c+84473|0]!=(32|r))break a;if(c>>>0>1||((0|(r=e[t+4>>2]))==e[t+104>>2]?r=vA(t):(e[t+4>>2]=r+1,r=l[0|r])),(0|(c=c+1|0))==3)break}break r}switch(0|c){case 0:if((0|r)==48){if((0|(c=e[t+4>>2]))==e[t+104>>2]?c=vA(t):(e[t+4>>2]=c+1,c=l[0|c]),(-33&c)==88){q=o=q-432|0,(0|(r=e[t+4>>2]))==e[t+104>>2]?c=vA(t):(e[t+4>>2]=r+1,c=l[0|r]);a:{s:{for(;;){if((0|c)!=48){if((0|c)!=46)break a;if((0|(r=e[t+4>>2]))!=e[t+104>>2]){e[t+4>>2]=r+1,c=l[0|r];break s}break}(0|(r=e[t+4>>2]))!=e[t+104>>2]?(fA=1,e[t+4>>2]=r+1,c=l[0|r]):(fA=1,c=vA(t))}c=vA(t)}if(_=1,(0|c)==48){for(;ce=(r=ce)-1|0,he=he-!r|0,(0|(r=e[t+4>>2]))==e[t+104>>2]?c=vA(t):(e[t+4>>2]=r+1,c=l[0|r]),(0|c)==48;);fA=1}}for(y=1073676288;;){a:{r=32|c;s:{if(!((At=c-48|0)>>>0<10)){if((0|c)!=46&r-97>>>0>=6)break a;if((0|c)==46){if(_)break a;_=1,ce=p,he=m;break s}}r=(0|c)>57?r-87|0:At,(0|m)<=0&p>>>0<=7|(0|m)<0?s=r+(s<<4)|0:!m&p>>>0<=28?(Nn(o+48|0,r),FA(o+32|0,Xe,nA,f,y,0,0,0,1073414144),Xe=e[o+32>>2],nA=e[o+36>>2],f=e[o+40>>2],y=e[o+44>>2],FA(o+16|0,e[o+48>>2],e[o+52>>2],e[o+56>>2],e[o+60>>2],Xe,nA,f,y),Yr(o,e[o+16>>2],e[o+20>>2],e[o+24>>2],e[o+28>>2],I,X,De,Re),De=e[o+8>>2],Re=e[o+12>>2],I=e[o>>2],X=e[o+4>>2]):Y|!r||(FA(o+80|0,Xe,nA,f,y,0,0,0,1073610752),Yr(o- -64|0,e[o+80>>2],e[o+84>>2],e[o+88>>2],e[o+92>>2],I,X,De,Re),De=e[o+72>>2],Re=e[o+76>>2],Y=1,I=e[o+64>>2],X=e[o+68>>2]),m=(p=p+1|0)?m:m+1|0,fA=1}(0|(r=e[t+4>>2]))!=e[t+104>>2]?(e[t+4>>2]=r+1,c=l[0|r]):c=vA(t);continue}break}a:if(fA){if((0|m)<=0&p>>>0<=7|(0|m)<0)for(f=p,y=m;s<<=4,(0|(f=f+1|0))!=8|(y=f?y:y+1|0););s:{c:{o:{if((-33&c)==80){if(f=Bs(t,n),y=r=J,f|(0|r)!=-2147483648)break s;if(n){if((0|(r=e[t+116>>2]))>0|(0|r)>=0)break o;break c}I=0,X=0,Aa(t,0,0),r=0,t=0;break a}if(f=0,y=0,e[t+116>>2]<0)break s}e[t+4>>2]=e[t+4>>2]-1}f=0,y=0}if(s)if(r=f+((t=_?ce:p)<<2)|0,t=(m=(_?he:m)<<2|t>>>30)+y|0,(p=r-32|0)>>>0>0-GA>>>0&(0|(t=m=(r>>>0<f>>>0?t+1|0:t)-(r>>>0<32)|0))>=0|(0|t)>0)e[56798]=68,Nn(o+160|0,P),FA(o+144|0,e[o+160>>2],e[o+164>>2],e[o+168>>2],e[o+172>>2],-1,-1,-1,2147418111),FA(o+128|0,e[o+144>>2],e[o+148>>2],e[o+152>>2],e[o+156>>2],-1,-1,-1,2147418111),I=e[o+128>>2],X=e[o+132>>2],r=e[o+140>>2],t=e[o+136>>2];else if((0|m)>=(0|(r=(t=GA-226|0)>>31))&t>>>0<=p>>>0|(0|r)<(0|m)){if((0|s)>=0)for(;Yr(o+416|0,I,X,De,Re,0,0,0,-1073807360),Yr(o+400|0,I,X,De,Re,(t=r=(0|(t=p0(I,X,De,Re,1073610752)))>=0)?e[o+416>>2]:I,t?e[o+420>>2]:X,t?e[o+424>>2]:De,t?e[o+428>>2]:Re),p=(t=p)-1|0,m=m-!t|0,De=e[o+408>>2],Re=e[o+412>>2],I=e[o+400>>2],X=e[o+404>>2],(0|(s=r|s<<1))>=0;);t=m-((GA>>31)+(p>>>0<GA>>>0)|0)|0,(0|(r=(r=32+(p-GA|0)|0)>>>0<SA>>>0&(0|(t=r>>>0<32?t+1|0:t))<=0|(0|t)<0?(0|r)>0?r:0:SA))>=113?(Nn(o+384|0,P),ce=e[o+392>>2],he=e[o+396>>2],Xe=e[o+384>>2],nA=e[o+388>>2],f=0,t=0):(Hr(o+352|0,Ua(1,144-r|0)),Nn(o+336|0,P),Xe=e[o+336>>2],nA=e[o+340>>2],ce=e[o+344>>2],he=e[o+348>>2],Yi(o+368|0,e[o+352>>2],e[o+356>>2],e[o+360>>2],e[o+364>>2],Xe,nA,ce,he),ye=e[o+376>>2],ct=e[o+380>>2],f=e[o+372>>2],t=e[o+368>>2]),os(o+320|0,(n=!(1&s)&!!(0|pA(I,X,De,Re,0,0,0,0))&(0|r)<32)+s|0),FA(o+304|0,Xe,nA,ce,he,e[o+320>>2],e[o+324>>2],e[o+328>>2],e[o+332>>2]),r=t,Yr(o+272|0,e[o+304>>2],e[o+308>>2],e[o+312>>2],e[o+316>>2],t,f,ye,ct),FA(o+288|0,Xe,nA,ce,he,(t=n)?0:I,t?0:X,t?0:De,t?0:Re),Yr(o+256|0,e[o+288>>2],e[o+292>>2],e[o+296>>2],e[o+300>>2],e[o+272>>2],e[o+276>>2],e[o+280>>2],e[o+284>>2]),Zs(o+240|0,e[o+256>>2],e[o+260>>2],e[o+264>>2],e[o+268>>2],r,f,ye,ct),pA(t=e[o+240>>2],n=e[o+244>>2],r=e[o+248>>2],f=e[o+252>>2],0,0,0,0)||(e[56798]=68),jt(o+224|0,t,n,r,f,p),I=e[o+224>>2],X=e[o+228>>2],r=e[o+236>>2],t=e[o+232>>2]}else e[56798]=68,Nn(o+208|0,P),FA(o+192|0,e[o+208>>2],e[o+212>>2],e[o+216>>2],e[o+220>>2],0,0,0,65536),FA(o+176|0,e[o+192>>2],e[o+196>>2],e[o+200>>2],e[o+204>>2],0,0,0,65536),I=e[o+176>>2],X=e[o+180>>2],r=e[o+188>>2],t=e[o+184>>2];else Hr(o+112|0,0*+(0|P)),I=e[o+112>>2],X=e[o+116>>2],r=e[o+124>>2],t=e[o+120>>2]}else{s:{c:{if((0|(r=e[t+116>>2]))>0|(0|r)>=0){if(r=e[t+4>>2],e[t+4>>2]=r-1,!n)break c;if(e[t+4>>2]=r-2,!_)break s;e[t+4>>2]=r-3;break s}if(n)break s}Aa(t,0,0)}Hr(o+96|0,0*+(0|P)),I=e[o+96>>2],X=e[o+100>>2],r=e[o+108>>2],t=e[o+104>>2]}e[a+16>>2]=I,e[a+20>>2]=X,e[a+24>>2]=t,e[a+28>>2]=r,q=o+432|0,p=e[a+24>>2],m=e[a+28>>2],f=e[a+16>>2],y=e[a+20>>2];break e}e[t+116>>2]<0||(e[t+4>>2]=e[t+4>>2]-1)}c=t,ye=P,o=n,t=0,P=0,q=s=q-8976|0,ct=(At=0-GA|0)-SA|0;a:{s:{for(;;){if((0|r)!=48){if((0|r)!=46)break a;if((0|(r=e[c+4>>2]))!=e[c+104>>2]){e[c+4>>2]=r+1,r=l[0|r];break s}break}(0|(t=e[c+4>>2]))!=e[c+104>>2]?(e[c+4>>2]=t+1,r=l[0|t]):r=vA(c),t=1}r=vA(c)}if(Y=1,(0|r)==48){for(;p=(t=p)-1|0,m=m-!t|0,(0|(t=e[c+4>>2]))==e[c+104>>2]?r=vA(c):(e[c+4>>2]=t+1,r=l[0|t]),(0|r)==48;);t=1}}e[s+784>>2]=0;a:{s:{c:{o:{u:{if((n=(0|r)==46)|(I=r-48|0)>>>0<=9)for(;;){l:{if(1&n){if(!Y){p=f,m=y,Y=1;break l}n=!t;break u}y=(f=f+1|0)?y:y+1|0,(0|P)<=2044?(fA=(0|r)==48?fA:f,t=(s+784|0)+(P<<2)|0,_&&(I=(F(e[t>>2],10)+r|0)-48|0),e[t>>2]=I,t=1,_=(r=(0|(n=_+1|0))==9)?0:n,P=r+P|0):(0|r)!=48&&(e[s+8960>>2]=1|e[s+8960>>2],fA=18396)}if((0|(r=e[c+4>>2]))==e[c+104>>2]?r=vA(c):(e[c+4>>2]=r+1,r=l[0|r]),!((n=(0|r)==46)|(I=r-48|0)>>>0<10))break}if(p=Y?p:f,m=Y?m:y,!(!t|(-33&r)!=69)){if(I=Bs(c,o),X=t=J,!(I|(0|t)!=-2147483648)){if(!o)break c;I=0,X=0,e[c+116>>2]<0||(e[c+4>>2]=e[c+4>>2]-1)}m=m+X|0,m=(p=p+I|0)>>>0<I>>>0?m+1|0:m;break s}if(n=!t,(0|r)<0)break o}e[c+116>>2]<0||(e[c+4>>2]=e[c+4>>2]-1)}if(!n)break s;e[56798]=28}f=0,y=0,Aa(c,0,0),r=0,t=0;break a}if(t=e[s+784>>2])if(f>>>0>9&(0|y)>=0|(0|y)>0|(0|f)!=(0|p)|(0|m)!=(0|y)|(t>>>SA|0?(0|SA)<=30:0))if(p>>>0>At>>>1>>>0&(0|m)>=0|(0|m)>0)e[56798]=68,Nn(s+96|0,ye),FA(s+80|0,e[s+96>>2],e[s+100>>2],e[s+104>>2],e[s+108>>2],-1,-1,-1,2147418111),FA(s- -64|0,e[s+80>>2],e[s+84>>2],e[s+88>>2],e[s+92>>2],-1,-1,-1,2147418111),f=e[s+64>>2],y=e[s+68>>2],r=e[s+76>>2],t=e[s+72>>2];else if((r=p>>>0<(t=GA-226|0)>>>0)&(0|m)<=(0|(t>>=31))|(0|t)>(0|m))e[56798]=68,Nn(s+144|0,ye),FA(s+128|0,e[s+144>>2],e[s+148>>2],e[s+152>>2],e[s+156>>2],0,0,0,65536),FA(s+112|0,e[s+128>>2],e[s+132>>2],e[s+136>>2],e[s+140>>2],0,0,0,65536),f=e[s+112>>2],y=e[s+116>>2],r=e[s+124>>2],t=e[s+120>>2];else{if(_){if((0|_)<=8){for(c=e[(t=(s+784|0)+(P<<2)|0)>>2];c=F(c,10),(0|(_=_+1|0))!=9;);e[t>>2]=c}P=P+1|0}if(Y=p,!((0|fA)>(0|p)|(0|fA)>=9|(0|p)>17)){if((0|Y)==9){Nn(s+192|0,ye),os(s+176|0,e[s+784>>2]),FA(s+160|0,e[s+192>>2],e[s+196>>2],e[s+200>>2],e[s+204>>2],e[s+176>>2],e[s+180>>2],e[s+184>>2],e[s+188>>2]),f=e[s+160>>2],y=e[s+164>>2],r=e[s+172>>2],t=e[s+168>>2];break a}if((0|Y)<=8){Nn(s+272|0,ye),os(s+256|0,e[s+784>>2]),FA(s+240|0,e[s+272>>2],e[s+276>>2],e[s+280>>2],e[s+284>>2],e[s+256>>2],e[s+260>>2],e[s+264>>2],e[s+268>>2]),Nn(s+224|0,e[124720+(0-Y<<2)>>2]),Vr(s+208|0,e[s+240>>2],e[s+244>>2],e[s+248>>2],e[s+252>>2],e[s+224>>2],e[s+228>>2],e[s+232>>2],e[s+236>>2]),f=e[s+208>>2],y=e[s+212>>2],r=e[s+220>>2],t=e[s+216>>2];break a}if(t=27+(F(Y,-3)+SA|0)|0,!((r=e[s+784>>2])>>>t|0&&(0|t)<=30)){Nn(s+352|0,ye),os(s+336|0,r),FA(s+320|0,e[s+352>>2],e[s+356>>2],e[s+360>>2],e[s+364>>2],e[s+336>>2],e[s+340>>2],e[s+344>>2],e[s+348>>2]),Nn(s+304|0,e[124648+(Y<<2)>>2]),FA(s+288|0,e[s+320>>2],e[s+324>>2],e[s+328>>2],e[s+332>>2],e[s+304>>2],e[s+308>>2],e[s+312>>2],e[s+316>>2]),f=e[s+288>>2],y=e[s+292>>2],r=e[s+300>>2],t=e[s+296>>2];break a}}for(;!e[(s+784|0)+((P=(r=P)-1|0)<<2)>>2];);if(_=0,t=(0|Y)%9|0){if(n=0,t=(0|Y)<0?t+9|0:t,r){for(m=1e9/(0|(p=e[124720+(0-t<<2)>>2]))|0,I=0,c=0;f=(f=I)+(P=((y=e[(I=(s+784|0)+(c<<2)|0)>>2])>>>0)/(p>>>0)|0)|0,e[I>>2]=f,n=(f=!f&(0|n)==(0|c))?n+1&2047:n,Y=f?Y-9|0:Y,I=F(m,y-F(p,P)|0),(0|(c=c+1|0))!=(0|r););I&&(e[(s+784|0)+(r<<2)>>2]=I,r=r+1|0)}else r=0;Y=9+(Y-t|0)|0}else n=0;for(;;){c=(s+784|0)+(n<<2)|0;s:{for(;;){if(((0|Y)!=36|ue[c>>2]>=10384593)&(0|Y)>=36)break s;for(P=r+2047|0,I=0,t=r;r=t,p=I,I=(t=e[(P=(s+784|0)+((f=2047&P)<<2)|0)>>2])<<29,t=y=t>>>3|0,!(m=(p=p+I|0)>>>0<I>>>0?t+1|0:t)&p>>>0<1000000001?I=0:p=(t=p)-kt(I=fs(t,m,1e9),J,1e9,0)|0,e[P>>2]=p,t=(0|f)!=(r-1&2047)||(0|n)==(0|f)||p?r:f,P=f-1|0,(0|n)!=(0|f););if(_=_-29|0,I)break}(0|(n=n-1&2047))==(0|t)&&(c=r=(p=s+784|0)+((t+2046&2047)<<2)|0,m=e[r>>2],r=t-1&2047,e[c>>2]=m|e[p+(r<<2)>>2]),Y=Y+9|0,e[(s+784|0)+(n<<2)>>2]=I;continue}break}s:{c:for(;;){for(p=r+1&2047,I=(s+784|0)+((r-1&2047)<<2)|0;;){f=(0|Y)>45?9:1;o:{for(;;){t=n,c=0;u:{for(;;){if((0|(n=t+c&2047))!=(0|r)&&!((n=e[(s+784|0)+(n<<2)>>2])>>>0<(m=e[124672+(c<<2)>>2])>>>0)){if(n>>>0>m>>>0)break u;if((0|(c=c+1|0))!=4)continue}break}if((0|Y)==36){for(p=0,m=0,c=0,f=0,y=0;(0|(n=t+c&2047))==(0|r)&&(e[780+(s+((r=r+1&2047)<<2)|0)>>2]=0),os(s+768|0,e[(s+784|0)+(n<<2)>>2]),FA(s+752|0,p,m,f,y,0,0,1342177280,1075633366),Yr(s+736|0,e[s+752>>2],e[s+756>>2],e[s+760>>2],e[s+764>>2],e[s+768>>2],e[s+772>>2],e[s+776>>2],e[s+780>>2]),f=e[s+744>>2],y=e[s+748>>2],p=e[s+736>>2],m=e[s+740>>2],(0|(c=c+1|0))!=4;);if(Nn(s+720|0,ye),FA(s+704|0,p,m,f,y,e[s+720>>2],e[s+724>>2],e[s+728>>2],e[s+732>>2]),f=e[s+712>>2],y=e[s+716>>2],p=0,m=0,I=e[s+704>>2],X=e[s+708>>2],(0|(n=(P=(0|(c=(o=_+113|0)-GA|0))<(0|SA))?(0|c)>0?c:0:SA))<=112)break o;break s}}if(_=f+_|0,n=r,(0|t)!=(0|r))break}for(y=1e9>>>f|0,P=~(-1<<f),c=0,n=t;m=(m=c)+((o=e[(c=(s+784|0)+(t<<2)|0)>>2])>>>f|0)|0,e[c>>2]=m,n=(m=!m&(0|t)==(0|n))?n+1&2047:n,Y=m?Y-9|0:Y,c=F(y,o&P),(0|r)!=(0|(t=t+1&2047)););if(!c)continue;if((0|n)!=(0|p)){e[(s+784|0)+(r<<2)>>2]=c,r=p;continue c}e[I>>2]=1|e[I>>2];continue}break}break}Hr(s+656|0,Ua(1,225-n|0)),Yi(s+688|0,e[s+656>>2],e[s+660>>2],e[s+664>>2],e[s+668>>2],I,X,f,y),Xe=e[s+696>>2],nA=e[s+700>>2],De=e[s+688>>2],Re=e[s+692>>2],Hr(s+640|0,Ua(1,113-n|0)),ks(s+672|0,I,X,f,y,e[s+640>>2],e[s+644>>2],e[s+648>>2],e[s+652>>2]),Zs(s+624|0,I,X,f,y,p=e[s+672>>2],m=e[s+676>>2],ce=e[s+680>>2],he=e[s+684>>2]),Yr(s+608|0,De,Re,Xe,nA,e[s+624>>2],e[s+628>>2],e[s+632>>2],e[s+636>>2]),f=e[s+616>>2],y=e[s+620>>2],I=e[s+608>>2],X=e[s+612>>2]}if((0|(Y=t+4&2047))!=(0|r)){s:if((Y=e[(s+784|0)+(Y<<2)>>2])>>>0<=499999999){if(!Y&(t+5&2047)==(0|r))break s;Hr(s+496|0,.25*+(0|ye)),Yr(s+480|0,p,m,ce,he,e[s+496>>2],e[s+500>>2],e[s+504>>2],e[s+508>>2]),ce=e[s+488>>2],he=e[s+492>>2],p=e[s+480>>2],m=e[s+484>>2]}else(0|Y)==5e8?(bt=+(0|ye),(t+5&2047)!=(0|r)?(Hr(s+560|0,.75*bt),Yr(s+544|0,p,m,ce,he,e[s+560>>2],e[s+564>>2],e[s+568>>2],e[s+572>>2]),ce=e[s+552>>2],he=e[s+556>>2],p=e[s+544>>2],m=e[s+548>>2]):(Hr(s+528|0,.5*bt),Yr(s+512|0,p,m,ce,he,e[s+528>>2],e[s+532>>2],e[s+536>>2],e[s+540>>2]),ce=e[s+520>>2],he=e[s+524>>2],p=e[s+512>>2],m=e[s+516>>2])):(Hr(s+592|0,.75*+(0|ye)),Yr(s+576|0,p,m,ce,he,e[s+592>>2],e[s+596>>2],e[s+600>>2],e[s+604>>2]),ce=e[s+584>>2],he=e[s+588>>2],p=e[s+576>>2],m=e[s+580>>2]);(0|n)>111||(ks(s+464|0,p,m,ce,he,0,0,0,1073676288),pA(e[s+464>>2],e[s+468>>2],e[s+472>>2],e[s+476>>2],0,0,0,0)||(Yr(s+448|0,p,m,ce,he,0,0,0,1073676288),ce=e[s+456>>2],he=e[s+460>>2],p=e[s+448>>2],m=e[s+452>>2]))}Yr(s+432|0,I,X,f,y,p,m,ce,he),Zs(s+416|0,e[s+432>>2],e[s+436>>2],e[s+440>>2],e[s+444>>2],De,Re,Xe,nA),f=e[s+424>>2],y=e[s+428>>2],I=e[s+416>>2],X=e[s+420>>2],(ct-2|0)>=(2147483647&o)||(e[s+408>>2]=f,e[s+412>>2]=2147483647&y,e[s+400>>2]=I,e[s+404>>2]=X,FA(s+384|0,I,X,f,y,0,0,0,1073610752),f=(t=(0|(t=p0(e[s+400>>2],e[s+404>>2],e[s+408>>2],e[s+412>>2],1081081856)))>=0)?e[s+392>>2]:f,y=t?e[s+396>>2]:y,I=t?e[s+384>>2]:I,X=t?e[s+388>>2]:X,_=t+_|0,!(!!(0|pA(p,m,ce,he,0,0,0,0))&(t?P&(0|n)!=(0|c):P))&(_+110|0)<=(0|ct)||(e[56798]=68)),jt(s+368|0,I,X,f,y,_),f=e[s+368>>2],y=e[s+372>>2],r=e[s+380>>2],t=e[s+376>>2]}else Nn(s+48|0,ye),os(s+32|0,t),FA(s+16|0,e[s+48>>2],e[s+52>>2],e[s+56>>2],e[s+60>>2],e[s+32>>2],e[s+36>>2],e[s+40>>2],e[s+44>>2]),f=e[s+16>>2],y=e[s+20>>2],r=e[s+28>>2],t=e[s+24>>2];else Hr(s,0*+(0|ye)),f=e[s>>2],y=e[s+4>>2],r=e[s+12>>2],t=e[s+8>>2]}e[a+40>>2]=t,e[a+44>>2]=r,e[a+32>>2]=f,e[a+36>>2]=y,q=s+8976|0,p=e[a+40>>2],m=e[a+44>>2],f=e[a+32>>2],y=e[a+36>>2];break e;case 3:break r}(0|(r=e[t+116>>2]))>0|(0|r)>=0&&(e[t+4>>2]=e[t+4>>2]-1);break A}if((0|(r=e[t+4>>2]))==e[t+104>>2]?r=vA(t):(e[t+4>>2]=r+1,r=l[0|r]),(0|r)!=40){if(m=2147450880,e[t+116>>2]<0)break e;e[t+4>>2]=e[t+4>>2]-1;break e}for(c=1;(0|(r=e[t+4>>2]))==e[t+104>>2]?r=vA(t):(e[t+4>>2]=r+1,r=l[0|r]),r-48>>>0<10|r-65>>>0<26|(0|r)==95||!(r-97>>>0>=26);)c=c+1|0;if(m=2147450880,(0|r)==41)break e;(0|(r=e[t+116>>2]))>0|(0|r)>=0&&(e[t+4>>2]=e[t+4>>2]-1);r:{if(n){if(c)break r;break e}break A}for(;c=c-1|0,(0|r)>0|(0|r)>=0&&(e[t+4>>2]=e[t+4>>2]-1),c;);break e}e[56798]=28,Aa(t,0,0)}m=0}e[A>>2]=f,e[A+4>>2]=y,e[A+8>>2]=p,e[A+12>>2]=m,q=a+48|0}function XA(A,t,r,n,a){var s,o=0,c=0,f=0,m=0,p=0,I=0,y=0,P=0,Y=0,X=0,_=0,ce=0,he=0,ye=0,De=0,Re=0,Xe=0,nA=0,fA=0,GA=0,SA=0;if(q=s=q-112|0,e[r+8>>2]){GA=e[50754]/70|0,X=(I=e[n+12>>2])||256;e:if((0|t)!=2){if((0|t)==1){A:if(l[A+11|0]!=3)switch(l[n-15|0]-3|0){case 0:case 5:break A;default:break e}X=(0|(I=e[e[47192]+44>>2]))<(0|X)?X:I}}else{if((0|(I=e[e[47192]+80>>2]))<=0|!(8&l[0|n]|I>>>0<=l[A+14|0]|32&l[A+6|0]))break e;GA<<=1}if(e[36436]=0,he=A,SA=t,p=n,q=Y=q-16|0,A=e[34460]+e[r+8>>2]|0,t=(t=l[A+2|0])>>>0>=24?24:t,e[Y+12>>2]=t,c=e[r+12>>2]+e[r+24>>2]|0,e[36422]=c,t){for(I=A+4|0,o=1&b[A+4>>1];A=145488+(m<<3)|0,n=I+(o?m<<6:F(m,44))|0,e[A+4>>2]=n,P=M[n>>1],b[A+2>>1]=P,b[A>>1]=l[n+16|0],f=2&P?m:f,(0|(m=m+1|0))!=(0|t););I=145488,(0|f)<=0||((0|SA)!=1?(t=t-f|0,e[Y+12>>2]=t,I=145488+(f<<3)|0):(t=f+1|0,e[Y+12>>2]=t,I=145488))}else t=0,I=145488;if(!(!e[r+4>>2]|e[r+20>>2]|l[he+11|0]!=2)){if(o=e[r+36>>2],n=e[r+40>>2],A=0,(0|(t=e[Y+12>>2]))>=2){f=o>>>12|0,P=n>>>26&7,ye=n>>>18&248,_=F(ce=63&n,50),Re=63&(Xe=o>>>6|0),m=o<<1&126,nA=F(n>>>16&31,50)-750|0,fA=F(n>>>11&31,50)-750|0,De=F(n>>>6&31,50)-750|0;e:{A:if((0|SA)!=1){if(!(f|ce))break e;if(8&f?(t=e[4+(I+((c=t-1|0)<<3)|0)>>2],b[t>>1]<0?A=t:(A=(0|(A=e[44469]+1|0))<=169?A:0,e[44469]=A,c=M[t+20>>1]|M[t+22>>1]<<16,A=177888+(A<<6)|0,o=M[t+16>>1]|M[t+18>>1]<<16,b[A+16>>1]=o,b[A+18>>1]=o>>>16,b[A+20>>1]=c,b[A+22>>1]=c>>>16,c=M[t+4>>1]|M[t+6>>1]<<16,o=M[t>>1]|M[t+2>>1]<<16,b[A>>1]=o,b[A+2>>1]=o>>>16,b[A+4>>1]=c,b[A+6>>1]=c>>>16,c=M[t+12>>1]|M[t+14>>1]<<16,o=M[t+8>>1]|M[t+10>>1]<<16,b[A+8>>1]=o,b[A+10>>1]=o>>>16,b[A+12>>1]=c,b[A+14>>1]=c>>>16,c=M[t+28>>1]|M[t+30>>1]<<16,o=M[t+24>>1]|M[t+26>>1]<<16,b[A+24>>1]=o,b[A+26>>1]=o>>>16,b[A+28>>1]=c,b[A+30>>1]=c>>>16,c=M[t+36>>1]|M[t+38>>1]<<16,o=M[t+32>>1]|M[t+34>>1]<<16,b[A+32>>1]=o,b[A+34>>1]=o>>>16,b[A+36>>1]=c,b[A+38>>1]=c>>>16,c=M[t+44>>1]|M[t+46>>1]<<16,o=M[t+40>>1]|M[t+42>>1]<<16,b[A+40>>1]=o,b[A+42>>1]=o>>>16,b[A+44>>1]=c,b[A+46>>1]=c>>>16,c=M[t+52>>1]|M[t+54>>1]<<16,o=M[t+48>>1]|M[t+50>>1]<<16,b[A+48>>1]=o,b[A+50>>1]=o>>>16,b[A+52>>1]=c,b[A+54>>1]=c>>>16,c=M[t+60>>1]|M[t+62>>1]<<16,t=M[t+56>>1]|M[t+58>>1]<<16,b[A+56>>1]=t,b[A+58>>1]=t>>>16,b[A+60>>1]=c,b[A+62>>1]=c>>>16,g[A+16|0]=0,b[A>>1]=32768|M[A>>1],c=e[Y+12>>2]-1|0),e[4+(I+(c<<3)|0)>>2]=A,t=1792,(0|(c=b[A+4>>1]))<300||(t=1536,c>>>0<400||(t=c>>>0<500?1280:1024)),e[36436]=t,o=35):(e[Y+12>>2]=t+1,b[(A=(c=I+(t<<3)|0)-8|0)>>1]=m,t=e[A+4>>2],A=(0|(A=e[44469]+1|0))<=169?A:0,e[44469]=A,(A=177888+(Xe=A<<6)|0)&&(o=M[t+4>>1]|M[t+6>>1]<<16,y=M[t>>1]|M[t+2>>1]<<16,b[A>>1]=y,b[A+2>>1]=y>>>16,b[A+4>>1]=o,b[A+6>>1]=o>>>16,o=M[t+60>>1]|M[t+62>>1]<<16,y=M[t+56>>1]|M[t+58>>1]<<16,b[A+56>>1]=y,b[A+58>>1]=y>>>16,b[A+60>>1]=o,b[A+62>>1]=o>>>16,o=M[t+52>>1]|M[t+54>>1]<<16,y=M[t+48>>1]|M[t+50>>1]<<16,b[A+48>>1]=y,b[A+50>>1]=y>>>16,b[A+52>>1]=o,b[A+54>>1]=o>>>16,o=M[t+44>>1]|M[t+46>>1]<<16,y=M[t+40>>1]|M[t+42>>1]<<16,b[A+40>>1]=y,b[A+42>>1]=y>>>16,b[A+44>>1]=o,b[A+46>>1]=o>>>16,o=M[t+36>>1]|M[t+38>>1]<<16,y=M[t+32>>1]|M[t+34>>1]<<16,b[A+32>>1]=y,b[A+34>>1]=y>>>16,b[A+36>>1]=o,b[A+38>>1]=o>>>16,o=M[t+28>>1]|M[t+30>>1]<<16,y=M[t+24>>1]|M[t+26>>1]<<16,b[A+24>>1]=y,b[A+26>>1]=y>>>16,b[A+28>>1]=o,b[A+30>>1]=o>>>16,o=M[t+20>>1]|M[t+22>>1]<<16,y=M[t+16>>1]|M[t+18>>1]<<16,b[A+16>>1]=y,b[A+18>>1]=y>>>16,b[A+20>>1]=o,b[A+22>>1]=o>>>16,o=M[t+12>>1]|M[t+14>>1]<<16,t=M[t+8>>1]|M[t+10>>1]<<16,b[A+8>>1]=t,b[A+10>>1]=t>>>16,b[A+12>>1]=o,b[A+14>>1]=o>>>16,g[Xe+177904|0]=0,b[A>>1]=32768|M[A>>1]),b[c>>1]=0,e[c+4>>2]=A,m>>>0>=37&&(e[36422]=(m+e[36422]|0)-36),o=Re<<1,ce&&Le(A,_,De,fA,P,nA,ye,f)),e[e[32972]+132>>2]||(t=l[A+17|0])&&(t=b[102896+(((0|(t=(o<<6>>>0)/(t>>>0)|0))>=199?199:t)<<1)>>1],g[A+18|0]=(0|F(t,l[A+18|0]))/512,g[A+19|0]=(0|F(t,l[A+19|0]))/512,g[A+20|0]=(0|F(t,l[A+20|0]))/512,g[A+21|0]=(0|F(t,l[A+21|0]))/512,g[A+22|0]=(0|F(t,l[A+22|0]))/512,g[A+23|0]=(0|F(t,l[A+23|0]))/512,g[A+24|0]=(0|F(t,l[A+24|0]))/512,g[A+25|0]=(0|F(t,l[A+25|0]))/512),n-536870912>>>0<=1073741823){if(P=e[44469],(0|(c=e[Y+12>>2]))>0)for(A=F(n>>>29|0,10)+102854|0,ye=b[A+4>>1],ce=b[A+2>>1],_=b[A>>1],nA=b[A+6>>1],fA=b[A+8>>1],o=0;t=e[4+(De=I+(o<<3)|0)>>2],b[t>>1]<0?A=t:(A=177888+(Re=(P=(0|(A=P+1|0))<=169?A:0)<<6)|0)?(n=M[t+4>>1]|M[t+6>>1]<<16,c=M[t>>1]|M[t+2>>1]<<16,b[A>>1]=c,b[A+2>>1]=c>>>16,b[A+4>>1]=n,b[A+6>>1]=n>>>16,n=M[t+60>>1]|M[t+62>>1]<<16,c=M[t+56>>1]|M[t+58>>1]<<16,b[A+56>>1]=c,b[A+58>>1]=c>>>16,b[A+60>>1]=n,b[A+62>>1]=n>>>16,n=M[t+52>>1]|M[t+54>>1]<<16,c=M[t+48>>1]|M[t+50>>1]<<16,b[A+48>>1]=c,b[A+50>>1]=c>>>16,b[A+52>>1]=n,b[A+54>>1]=n>>>16,n=M[t+44>>1]|M[t+46>>1]<<16,c=M[t+40>>1]|M[t+42>>1]<<16,b[A+40>>1]=c,b[A+42>>1]=c>>>16,b[A+44>>1]=n,b[A+46>>1]=n>>>16,n=M[t+36>>1]|M[t+38>>1]<<16,c=M[t+32>>1]|M[t+34>>1]<<16,b[A+32>>1]=c,b[A+34>>1]=c>>>16,b[A+36>>1]=n,b[A+38>>1]=n>>>16,n=M[t+28>>1]|M[t+30>>1]<<16,c=M[t+24>>1]|M[t+26>>1]<<16,b[A+24>>1]=c,b[A+26>>1]=c>>>16,b[A+28>>1]=n,b[A+30>>1]=n>>>16,n=M[t+20>>1]|M[t+22>>1]<<16,c=M[t+16>>1]|M[t+18>>1]<<16,b[A+16>>1]=c,b[A+18>>1]=c>>>16,b[A+20>>1]=n,b[A+22>>1]=n>>>16,n=M[t+12>>1]|M[t+14>>1]<<16,t=M[t+8>>1]|M[t+10>>1]<<16,b[A+8>>1]=t,b[A+10>>1]=t>>>16,b[A+12>>1]=n,b[A+14>>1]=n>>>16,g[Re+177904|0]=0,b[A>>1]=32768|M[A>>1],c=e[Y+12>>2]):A=0,e[De+4>>2]=A,b[A+8>>1]=(0|F(ye,b[A+8>>1]))/256,b[A+6>>1]=(0|F(ce,b[A+6>>1]))/256,b[A+4>>1]=(0|F(_,b[A+4>>1]))/256,b[A+12>>1]=(0|F(fA,b[A+12>>1]))/256,b[A+10>>1]=(0|F(nA,b[A+10>>1]))/256,(0|c)>(0|(o=o+1|0)););e[44469]=P}if(!A)break e}else{t=e[I+4>>2],(0|(c=b[t>>1]))<0?A=t:(n=(0|(n=e[44469]+1|0))<=169?n:0,e[44469]=n,(n=177888+(c=n<<6)|0)&&(A=M[t+4>>1]|M[t+6>>1]<<16,y=M[t>>1]|M[t+2>>1]<<16,b[n>>1]=y,b[n+2>>1]=y>>>16,b[n+4>>1]=A,b[n+6>>1]=A>>>16,A=M[t+60>>1]|M[t+62>>1]<<16,y=M[t+56>>1]|M[t+58>>1]<<16,b[n+56>>1]=y,b[n+58>>1]=y>>>16,b[n+60>>1]=A,b[n+62>>1]=A>>>16,A=M[t+52>>1]|M[t+54>>1]<<16,y=M[t+48>>1]|M[t+50>>1]<<16,b[n+48>>1]=y,b[n+50>>1]=y>>>16,b[n+52>>1]=A,b[n+54>>1]=A>>>16,A=M[t+44>>1]|M[t+46>>1]<<16,y=M[t+40>>1]|M[t+42>>1]<<16,b[n+40>>1]=y,b[n+42>>1]=y>>>16,b[n+44>>1]=A,b[n+46>>1]=A>>>16,A=M[t+36>>1]|M[t+38>>1]<<16,y=M[t+32>>1]|M[t+34>>1]<<16,b[n+32>>1]=y,b[n+34>>1]=y>>>16,b[n+36>>1]=A,b[n+38>>1]=A>>>16,A=M[t+28>>1]|M[t+30>>1]<<16,y=M[t+24>>1]|M[t+26>>1]<<16,b[n+24>>1]=y,b[n+26>>1]=y>>>16,b[n+28>>1]=A,b[n+30>>1]=A>>>16,A=M[t+20>>1]|M[t+22>>1]<<16,y=M[t+16>>1]|M[t+18>>1]<<16,b[n+16>>1]=y,b[n+18>>1]=y>>>16,b[n+20>>1]=A,b[n+22>>1]=A>>>16,A=M[t+12>>1]|M[t+14>>1]<<16,t=M[t+8>>1]|M[t+10>>1]<<16,b[n+8>>1]=t,b[n+10>>1]=t>>>16,b[n+12>>1]=A,b[n+14>>1]=A>>>16,g[c+177904|0]=0,c=-32768|M[n>>1],b[n>>1]=c,A=n)),e[I+4>>2]=A,b[I>>1]=m||50,b[I+2>>1]=16384|M[I+2>>1],b[A>>1]=16384|c,c=e[I+12>>2],t=l[c+17|0],n=e[32972],e[n+132>>2]&&(g[A+39|0]=l[c+39|0]-4);r:if(ce){if(2048&o){t=(F(t,31&Xe)>>>0)/30|0,e[n+132>>2]||(n=l[A+17|0])&&(t=b[102896+(((0|(t=(t<<6>>>0)/(n>>>0)|0))>=199?199:t)<<1)>>1],g[A+18|0]=(0|F(t,l[A+18|0]))/512,g[A+19|0]=(0|F(t,l[A+19|0]))/512,g[A+20|0]=(0|F(t,l[A+20|0]))/512,g[A+21|0]=(0|F(t,l[A+21|0]))/512,g[A+22|0]=(0|F(t,l[A+22|0]))/512,g[A+23|0]=(0|F(t,l[A+23|0]))/512,g[A+24|0]=(0|F(t,l[A+24|0]))/512,g[A+25|0]=(0|F(t,l[A+25|0]))/512),Le(A,_,De,fA,P,nA,ye,f);break r}if(Le(A,_,De,fA,P,nA,ye,f),e[e[32972]+132>>2]||!(t=l[A+17|0]))break r;t=b[102896+(((0|(t=(Re<<7>>>0)/(t>>>0)|0))>=199?199:t)<<1)>>1],g[A+18|0]=(0|F(t,l[A+18|0]))/512,g[A+19|0]=(0|F(t,l[A+19|0]))/512,g[A+20|0]=(0|F(t,l[A+20|0]))/512,g[A+21|0]=(0|F(t,l[A+21|0]))/512,g[A+22|0]=(0|F(t,l[A+22|0]))/512,g[A+23|0]=(0|F(t,l[A+23|0]))/512,g[A+24|0]=(0|F(t,l[A+24|0]))/512,g[A+25|0]=(0|F(t,l[A+25|0]))/512}else if(n=e[n+132>>2],8&f){if(n||!(n=l[A+17|0]))break r;t=((16320&F(t,48))>>>0)/(n>>>0)|0,t=b[102896+((t>>>0>=199?199:t)<<1)>>1],g[A+18|0]=(0|F(t,l[A+18|0]))/512,g[A+19|0]=(0|F(t,l[A+19|0]))/512,g[A+20|0]=(0|F(t,l[A+20|0]))/512,g[A+21|0]=(0|F(t,l[A+21|0]))/512,g[A+22|0]=(0|F(t,l[A+22|0]))/512,g[A+23|0]=(0|F(t,l[A+23|0]))/512,g[A+24|0]=(0|F(t,l[A+24|0]))/512,g[A+25|0]=(0|F(t,l[A+25|0]))/512}else n||(t=l[A+17|0])&&(t=b[102896+(((t=1792/(t>>>0)|0)>>>0>=199?199:t)<<1)>>1],g[A+18|0]=(0|F(t,l[A+18|0]))/512,g[A+19|0]=(0|F(t,l[A+19|0]))/512,g[A+20|0]=(0|F(t,l[A+20|0]))/512,g[A+21|0]=(0|F(t,l[A+21|0]))/512,g[A+22|0]=(0|F(t,l[A+22|0]))/512,g[A+23|0]=(0|F(t,l[A+23|0]))/512,g[A+24|0]=(0|F(t,l[A+24|0]))/512,g[A+25|0]=(0|F(t,l[A+25|0]))/512);if(!(8&f))break A;t=2816,(0|(n=b[A+4>>1]))<300||(t=2560,n>>>0<400||(t=n>>>0<500?2304:2048)),e[36436]=t}4&f&&(b[A>>1]=32|M[A>>1]),2&f&&(b[A>>1]=16|M[A>>1])}64&f&&pr(20,0),A=m&f<<27>>31}else A=0;c=A+e[36422]|0,e[36422]=c,t=e[Y+12>>2]}if((0|(n=t-1|0))<=0)o=0;else{if(A=0,m=0,o=0,t-2>>>0>=3)for(ye=-4&n,P=0;o=(((b[(f=m<<3)+I>>1]+o|0)+b[I+(8|f)>>1]|0)+b[I+(16|f)>>1]|0)+b[I+(24|f)>>1]|0,m=m+4|0,(0|ye)!=(0|(P=P+4|0)););if(f=3&n)for(;o=b[I+(m<<3)>>1]+o|0,m=m+1|0,(0|f)!=(0|(A=A+1|0)););}if(A=t,(f=e[r+20>>2])&&(A=n,m=f+e[34460]|0,(P=l[m+2|0])&&(ce=M[m+4>>1],b[I+(n<<3)>>1]=l[m+20|0],f=1,A=t,(0|P)!=1))){if(ye=m+4|0,ce&=1,nA=1&(m=P-1|0),(0|P)!=2)for(fA=-2&m,P=0;De=ye+(f<<6)|0,Re=ye+F(f,44)|0,Xe=l[(_=ce?De:Re)+16|0],e[4+(m=I+(A<<3)|0)>>2]=_,b[m>>1]=Xe,b[m+2>>1]=M[_>>1],De=l[16+(_=ce?De- -64|0:Re+44|0)|0],e[m+12>>2]=_,b[m+8>>1]=De,b[m+10>>1]=M[_>>1],f=f+2|0,A=A+2|0,(0|fA)!=(0|(P=P+2|0)););nA&&(f=ye+(ce?f<<6:F(f,44))|0,P=l[f+16|0],e[4+(m=I+(A<<3)|0)>>2]=f,b[m>>1]=P,b[m+2>>1]=M[f>>1],A=A+1|0)}e:if(!((0|o)<=0)){A:{switch(SA-1|0){case 1:if(f=(0|(f=(e[r+44>>2]+c|0)-45|0))<=10?10:f,8&l[0|p]&&(f=f+(l[e[36128]+14|0]<<1)|0),(0|n)<=0)break e;if(p=(f<<8)/(0|o)|0,m=0,(0|t)!=2)for(t=-2&n,f=0;b[(o=(c=m<<3)+I|0)>>1]=(0|F(p,b[o>>1]))/256,b[(c=I+(8|c)|0)>>1]=(0|F(p,b[c>>1]))/256,m=m+2|0,(0|t)!=(0|(f=f+2|0)););if(!(1&n))break e;b[(t=I+(m<<3)|0)>>1]=(0|F(p,b[t>>1]))/256;break e;case 0:if(e[r>>2]!=1||(0|(f=e[r+44>>2]))>129)break A;b[I>>1]=(0|F(f,b[I>>1]))/130;break A}(0|(f=e[r+44>>2]))<=0||(c=(f-o|0)+c|0,e[36422]=c)}if(!(!c|(0|n)<=0)){if(p=(o+c<<8)/(0|o)|0,m=0,(0|t)!=2)for(t=-2&n,f=0;b[(o=(c=m<<3)+I|0)>>1]=(0|F(p,b[o>>1]))/256,b[(c=I+(8|c)|0)>>1]=(0|F(p,b[c>>1]))/256,m=m+2|0,(0|t)!=(0|(f=f+2|0)););1&n&&(b[(t=I+(m<<3)|0)>>1]=(0|F(p,b[t>>1]))/256)}}if(e[s+108>>2]=A,q=Y+16|0,I){if((0|(A=e[r+16>>2]))!=e[36438]&&(e[36438]=A,t=216192+(e[50758]<<4)|0,e[t>>2]=14,e[t+4>>2]=A,A=e[50758]+1|0,e[50758]=(0|A)<=169?A:0),m=(A=e[e[32972]+132>>2])?1:3,t=e[I+4>>2],e[r+28>>2]|!l[145748]||(g[145748]=0,m=A?2:4),(n=e[36426])&&(!((2&(A=M[n>>1]))>>>1|l[n+16|0]<2)|16&A||(c=216192+(e[36439]<<4)|0,e[c+12>>2]=t,8&A&&(A=(0|(A=e[44469]+1|0))<=169?A:0,e[44469]=A,(A=177888+(f=A<<6)|0)&&(p=M[t+4>>1]|M[t+6>>1]<<16,o=M[t>>1]|M[t+2>>1]<<16,b[A>>1]=o,b[A+2>>1]=o>>>16,b[A+4>>1]=p,b[A+6>>1]=p>>>16,p=M[t+60>>1]|M[t+62>>1]<<16,o=M[t+56>>1]|M[t+58>>1]<<16,b[A+56>>1]=o,b[A+58>>1]=o>>>16,b[A+60>>1]=p,b[A+62>>1]=p>>>16,p=M[t+52>>1]|M[t+54>>1]<<16,o=M[t+48>>1]|M[t+50>>1]<<16,b[A+48>>1]=o,b[A+50>>1]=o>>>16,b[A+52>>1]=p,b[A+54>>1]=p>>>16,p=M[t+44>>1]|M[t+46>>1]<<16,o=M[t+40>>1]|M[t+42>>1]<<16,b[A+40>>1]=o,b[A+42>>1]=o>>>16,b[A+44>>1]=p,b[A+46>>1]=p>>>16,p=M[t+36>>1]|M[t+38>>1]<<16,o=M[t+32>>1]|M[t+34>>1]<<16,b[A+32>>1]=o,b[A+34>>1]=o>>>16,b[A+36>>1]=p,b[A+38>>1]=p>>>16,p=M[t+28>>1]|M[t+30>>1]<<16,o=M[t+24>>1]|M[t+26>>1]<<16,b[A+24>>1]=o,b[A+26>>1]=o>>>16,b[A+28>>1]=p,b[A+30>>1]=p>>>16,p=M[t+20>>1]|M[t+22>>1]<<16,o=M[t+16>>1]|M[t+18>>1]<<16,b[A+16>>1]=o,b[A+18>>1]=o>>>16,b[A+20>>1]=p,b[A+22>>1]=p>>>16,p=M[t+12>>1]|M[t+14>>1]<<16,o=M[t+8>>1]|M[t+10>>1]<<16,b[A+8>>1]=o,b[A+10>>1]=o>>>16,b[A+12>>1]=p,b[A+14>>1]=p>>>16,g[f+177904|0]=0,b[A>>1]=32768|M[A>>1]),b[8+(f=f+177888|0)>>1]=M[n+8>>1],g[f+21|0]=l[n+21|0],b[f+10>>1]=M[n+10>>1],g[f+22|0]=l[n+22|0],b[f+12>>1]=M[n+12>>1],g[f+23|0]=l[n+23|0],b[f+14>>1]=M[n+14>>1],g[f+24|0]=l[n+24|0],g[f+25|0]=l[n+25|0],e[c+12>>2]=A))),(0|SA)!=2|l[he+11|0]!=2||(Yn(),e[36427]=e[50758]),!((0|(he=e[s+108>>2]))<2)){for(A=e[36433],p=(F(256-A|0,X)+(A<<8)|0)/256|0,A=e[36432],c=(F(256-A|0,X)+(A<<8)|0)/256|0,o=e[50754],A=0,n=1;f=M[2+(Y=(I+(n<<3)|0)-8|0)>>1],f=(0|F((0|F(o,b[Y>>1]))/1e3|0,4&f?c:16384&f?p:X))/256|0,e[(n<<2)+s>>2]=f,A=A+f|0,(0|he)!=(0|(n=n+1|0)););if(!((0|A)<=0|(0|A)>=(0|GA)|(0|he)<2)){if(n=1,p=1&(f=he-1|0),(0|he)!=2)for(c=-2&f,X=0;e[(f=(n<<2)+s|0)>>2]=(0|F(e[f>>2],GA))/(0|A),e[f+4>>2]=(0|F(e[f+4>>2],GA))/(0|A),n=n+2|0,(0|c)!=(0|(X=X+2|0)););p&&(e[(n=(n<<2)+s|0)>>2]=(0|F(e[n>>2],GA))/(0|A))}if(X=0,!((0|he)<2))for(he=SA+256|0,n=1;A=e[4+(I+(n<<3)|0)>>2],!(f=e[r+28>>2])|128&l[0|t]||(e[36422]=0,Da(f,he,0,o=e[r>>2],0,p=(p=e[r+32>>2])?(p<<5)/100|0:32),g[145748]=1,e[r+28>>2]=0),(0|a)<0||(a=64&l[0|t]?6:a,(e[s+108>>2]-1|0)==(0|n)&&(a=(f=a)|(3840&(a=e[36436])?a:0))),f=e[(n<<2)+s>>2],e[36440]=f+e[36440],e[36441]=f+e[36441],f?(p=e[50758],e[36439]=p,(0|a)>=0&&(e[(p=216192+(p<<4)|0)>>2]=m,e[p+12>>2]=A,e[p+8>>2]=t,e[p+4>>2]=f+(a<<16),t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0),e[36426]=A,X=f+X|0):e[36426]=0,t=A,(0|(n=n+1|0))<e[s+108>>2];);}!e[36438]|(0|SA)==1||(e[36438]=0,A=216192+(e[50758]<<4)|0,e[A>>2]=14,e[A+4>>2]=0,A=e[50758]+1|0,e[50758]=(0|A)<=169?A:0)}}q=s+112|0}function TA(A,t,r,n){var a,s=0,o=0,c=0,f=0,m=0,p=0,I=0,y=0,P=0,Y=0,X=0,_=0,ce=0,he=0,ye=0,De=0,Re=0,Xe=0,nA=0,fA=0,GA=0,SA=0;q=a=q-1856|0,e[a+164>>2]=0,r?y=e[r>>2]:VA(r=a- -64|0,0,96),e[33264]=0,e[a+1824>>2]=0,e[a+1828>>2]=0,e[a+1832>>2]=0,e[a+1836>>2]=0,g[a+1616|0]=0,g[a+992|0]=0,g[a+1200|0]=0,g[a+784|0]=0;e:if(e[A+688>>2]){for(e[a+1840>>2]=t,l[0|(s=t)]==32&&(s=t+1|0,e[a+1840>>2]=s),P=a+416|1,Xe=a+1844|1,fA=a+1848|1,GA=a+1852|1,e[a+1820>>2]=s,Dt(a+168|0,s),s=e[a+1820>>2];(32|l[0|s])!=32;)s=Dt(a+164|0,s)+e[a+1820>>2]|0,e[a+1820>>2]=s,_=_+1|0;xt(a+256|0,t,nA=(0|(c=s-t|0))>=159?159:c),!(De=4194304&y)|(0|_)!=1?(he=((0|(s=e[47202]))==36)<<2,(0|_)==1|(0|s)!=36||(s=e[a+1840>>2]-1|0,e[a+1840>>2]=s,g[0|s]=95,he=0,o=!!(0|Br(A,a+1840|0,a+1616|0,a+1832|0,0,r)),s=e[47202])):(o=1,Dt(a+172|0,s+1|0),nr(e[a+172>>2])&&(0|Ta(e[a+164>>2]))==(0|Ta(e[a+172>>2]))&&(o=0),he=(0|(s=e[47202]))==36?4:o,o=0);A:{r:{a:{s:{c:if(16&s)Y=15&s,he=0;else{if(ce=1,o||(ce=!!(0|Br(A,a+1840|0,a+1616|0,a+1832|0,2,r))),50331648&(s=e[a+1832>>2])&&(c=e[a+1820>>2],l[c+1|0]==46&&(g[c+1|0]=32,s=e[a+1832>>2])),536870912&s){if(!n)break e;JA(n,e[a+1840>>2]);break e}if(8192&s|!(128&s)|ce)n=e[33264];else if(s=e[a+1840>>2],e[a+1820>>2]=s,!((0|(n=e[33264]))<=0))for(o=0;l[0|s]==32&&(g[0|s]=45,o=o+1|0,s=e[a+1820>>2],n=e[33264]),s=s+1|0,e[a+1820>>2]=s,(0|n)>(0|o););o:if(!(n|(0|_)!=1)&&(c=Dt(a+576|0,I=e[a+1840>>2]),l[c+I|0]==32)){o=a+1408|0,n=I;u:{l:{i:{for(;;){p:if(nr(e[a+576>>2])){C:{if(l[1+(f=n+c|0)|0]==46){Y=0;m:switch(l[(s=c+2|0)+n|0]-32|0){case 0:break C;case 7:break m;default:break p}if(Y=1,c=s,l[f+3|0]==115)break C;break p}if(Y=1,(0|p)<=0)break i}if(!((0|c)<=0)){if(X=3&c,m=0,c>>>0<4)s=0;else for(ye=-4&c,s=0,f=0;g[0|o]=l[n+s|0],g[o+1|0]=l[(1|s)+n|0],g[o+2|0]=l[(2|s)+n|0],g[o+3|0]=l[(3|s)+n|0],s=s+4|0,o=o+4|0,(0|ye)!=(0|(f=f+4|0)););if(X)for(;g[0|o]=l[n+s|0],s=s+1|0,o=o+1|0,(0|X)!=(0|(m=m+1|0)););}if(p=p+1|0,Y)n=n+c|0;else if(c=Dt(a+576|0,n=3+(n+c|0)|0),l[n+c|0]==32)continue}break}if(!((0|p)<2)){(c=(c=o-(s=a+1408|0)|0)+(s=xt(I,s,c))|0)>>>0<n>>>0&&VA(c,32,(a+1408|0)+n-(s+o)|0),e[33264]=(p<<1)-2,e[a+1836>>2]=0;break l}}if(!p)break o;if(e[a+1832>>2]=0,e[a+1836>>2]=0,!e[33264])break u}e[a+1832>>2]=128}he=1}if(l[a+1616|0]==21){JA(189088,a+1616|0),s=0;break e}if(SA=l[a+1833|0],o=1,!ce){if(e[a+168>>2]-48>>>0<10){if(UA(A,84174,189088),s=0,l[189088]==21)break e;if(!(!(128&l[A+109|0])|32&l[r+2|0])){g[189088]=21,g[189089]=0;break e}o=!!(0|Pr(A,e[a+1840>>2],a+1616|0,a+1832|0,r,0))}else o=0;if(!(o|(3&y)==2)&&(16777216&(n=e[A+104>>2])||(o=0,!(!(33554432&n)|!(1&y))))&&(16&y||(o=0,!(1&g[r+13|0])))){ye=e[a+1840>>2],s=0,p=0,f=0,q=X=q-224|0,g[0|(m=a+1616|0)]=0,e[X+216>>2]=0,e[X+220>>2]=0;o:if(!(g[ye-2|0]-48>>>0<10|(1&g[0|r]?0:2&l[A+107|0])||(n=l[0|(c=ye+1|0)],(!(2561&M[A+106>>1])|!(1&g[r+2|0]))&(0|n)==32))){if((0|(p=l[0|ye]))!=32){for(Y=32767,n=0;;){if(!(s=ss(101868,p<<24>>24,8))){p=0;break o}if(I=0,(0|(s=e[(s<<2)-305584>>2]))==(0|n)&&!((0|(I=f+1|0))<=2)){p=0;break o}u:{l:{i:{p:{if(!((0|n)<2)){if((0|n)==10|(0|n)==100)break p;if(!((0|n)>(0|s))){p=0;break o}}if(!n)break l;if((0|n)<(0|s))break i;break l}if((0|n)>=(0|s))break l}if(p=0,(0|Re)%10|(0|F(n,10))<(0|s))break o;s=s-n|0,Y=n;break u}if((0|s)>=(0|Y)){p=0;break o}Re=n+Re|0}if(p=l[0|c],c=o=c+1|0,n=s,f=I,(0|p)==32)break}n=l[0|o]}else o=c;if((n<<24>>24)-48>>>0<10)p=0;else if((0|(n=s+Re|0))<e[A+120>>2])p=0;else if((0|n)>e[A+116>>2])p=0;else if(UA(A,85600,X+176|0),s=m,4&l[A+107|0]||(s=JA(m,s=X+176|0)+RA(s)|0),e[X+4>>2]=e[A+140>>2],e[X>>2]=n,QA(X+16|0,85839,X),p=0,l[0|o]!=46){hn(A,ye,o,r,1)&&(e[r>>2]=32768|e[r>>2]),c=0;u:if(8&l[A+107|0]){if(f=e[r>>2],e[A+212>>2]==26741){if(32768&f)break u;if(!(16384&f))break o;c=1,f=0;l:{i:switch(l[0|o]-97|0){case 0:case 4:break i;default:break l}i:{p:{C:{m:switch((Y=l[o+1|0])-116|0){case 6:break l;case 1:case 2:case 3:case 4:case 5:break p;case 0:break m;default:break C}if(l[o+2|0]!=116)break i;break l}if((0|Y)==32)break l}if(!((0|n)%1e3|0)&&(0|Y)==108)break l}f=1}if(f)break u;break o}e[r>>2]=32768|f}e[(n=A+8232|0)>>2]=0,e[n+4>>2]=0,Pr(A,X+16|2,s,X+216|0,r,c),p=1,4&l[A+107|0]&&sn(m,X+176|0)}}q=X+224|0,p?(e[a+1832>>2]=8192|e[a+1832>>2],o=1):o=0}}if(Y=ce?he:32&SA?1:he,he=0,!(!(1&y)|(0|_)<2)&&fa(e[a+168>>2])){o:{if(1&g[188785]){if(!(!(n=8192&(s=e[a+1832>>2]))|o))break o;he=n>>>2^2048;break c}if(o)break s;s=e[a+1832>>2]}if(!(128&s|_>>>0>3)&&!((0|(s=e[A+8220>>2]))<4)&&(n=1,(0|s)>=e[A+8216>>2]))break A}}if(m=0,(0|Y)<=0)break a;n=Y;break A}if((0|(n=Y))>0)break A;m=0,I=0,f=0,p=0;break r}if(o)I=0,f=0,p=0;else{n=e[a+1840>>2],e[a+1820>>2]=n,s=999,p=0,I=0,P=0;a:{s:{c:{for(;;){o:{u:{l:{if(s-1>>>0>=2){if((0|_)<2||(Dt(a+1408|0,n),(0|(s=e[a+1408>>2]))<577&e[A+600>>2]>0)||(s=Ta(s),(e[s+4>>2]!=e[A+600>>2]?s:0)|e[A+40>>2]==1))break l;switch(s=l[0|n],e[a+1408>>2]=s<<24>>24,s-32|0){default:if(!s)break l;break;case 0:case 7:break l;case 1:case 2:case 3:case 4:case 5:case 6:}m=Dt(a+1408|0,n),ce=9;i:{p:{C:{m:if(-33&(s=e[a+1408>>2])){for(o=0,f=0;;){b:{h:{if((0|s)==39){if((0|I)>0|(0|o)>1)break m;if(f=o?f:39,e[A+40>>2]!=3)break h;break b}f=o?f:s}o=o+1|0}if(!b0(A,s)){if((0|(s=e[a+1408>>2]))!=39&&!fa(s))break l;if(m=Dt(a+1408|0,n+m|0)+m|0,-33&(s=e[a+1408>>2]))continue;break m}break}if((0|o)<=2)break C;ce=o}else f=0;if((0|(s=e[A+40>>2]))!=2)break p;q=s=q-208|0,g[0|s]=0,o=l[0|(c=n-1|0)],g[0|c]=32,n=Kt(A,n,s,200,0,-2147483648,0),g[0|c]=o,q=s+208|0,n=!n|(32768&n)>>>15;break i}s=e[A+40>>2],ce=o}n=(g[A+168|0]+1|0)<(ce-((0|s)==(0|f))|0)}if(!n)break l;n=e[a+1820>>2]}if(l[0|n]!=39)break u;p=67108864,he=0}if(m=0,it(A,a+992|0,0,I),n=e[a+1820>>2],(0|(s=l[0|n]))!=32)break o;I=0,f=0;break r}if(he=0,n=oa(A,n,a+992|0,1&(P|=(0|I)>0))+e[a+1820>>2]|0,e[a+1820>>2]=n,l[a+992|0]==21)break c;for(I=I+1|0,o=0;o=(s=o)+1|0,l[n+s|0]!=32;);p=67108864;continue}break}if(!l[a+992|0]|(0|s)==39||(g[n-1|0]=32,n=e[a+1820>>2]),c=Kt(A,n,a+1616|0,200,a+784|0,y,a+1832|0),(0|(n=l[a+1616|0]))==21){JA(189088,a+1616|0),s=0;break e}if(!(n|l[a+784|0])&&(Dt(a+1408|0,e[a+1820>>2]),(0|_)==1&&(nr(e[a+1408>>2])||y0(e[a+1408>>2])))){Mi(A,e[a+1820>>2],a+1616|0,Y)&&JA(189088,a+1616|0),s=0;break e}e[a+172>>2]=g[e[a+1820>>2]-1|0];o:if(1024&c)for(ye=a+176|1,Y=0,s=1,P=0,I=0;;){if((ce=131072&c)|!(1&s)||(g[a+1408|0]=0,!(n=Kt(A,e[a+1820>>2],a+1408|0,200,a+576|0,805306368|y,a+1832|0)))){2048&c&&(e[A+8184>>2]=1),g[e[a+1820>>2]-1|0]=e[a+172>>2];u:{l:{i:{p:if(ce){if(g[a+176|0]=0,s=e[a+1820>>2],n=1,f=63&c){if(X=1&c,I=f-1|0,o=0,(0|f)!=1)for(Re=f-X|0,f=0;m=s,e[a+1820>>2]=s+1,g[0|(De=(a+176|0)+n|0)]=(0|o)!=(0|I)?l[0|s]:0,s=s+2|0,e[a+1820>>2]=s,g[De+1|0]=(0|I)!=(1|o)?l[m+1|0]:0,o=o+2|0,n=n+2|0,(0|Re)!=(0|(f=f+2|0)););X&&(f=s+1|0,e[a+1820>>2]=f,g[(a+176|0)+n|0]=(0|o)!=(0|I)?l[0|s]:0,n=n+1|0,s=f)}g[(a+176|0)+n|0]=0}else{if(s=e[a+1820>>2],!(f=15&c))break i;if(n=0,o=f,m=3&c)for(;s=s+1|0,e[a+1820>>2]=s,(192&l[0|s])==128||(o=o-1|0,(0|m)!=(0|(n=n+1|0))););if(f>>>0<4)break p;for(;;)if(s=s+1|0,e[a+1820>>2]=s,(192&l[0|s])!=128){for(;s=s+1|0,e[a+1820>>2]=s,(192&l[0|s])==128;);for(;s=s+1|0,e[a+1820>>2]=s,(192&l[0|s])==128;);for(;s=s+1|0,e[a+1820>>2]=s,(192&l[0|s])==128;);if(n=(0|o)>4,o=o-4|0,!n)break}}if(n=s-1|0,e[a+172>>2]=g[0|n],g[0|n]=32,n=y|=8388608,!ce)break l;if(ar(a+576|0,a+784|0,12),e[a+1852>>2]=ye,n=JA(a+1200|0,s=a+1616|0),Br(A,a+1852|0,s,a+1832|0,0,r)&&JA(n,a+1616|0),!(32&l[a+1833|0]))break u;g[0|n]=0,Mi(A,e[a+1852>>2],n,1);break u}n=s-1|0,e[a+172>>2]=g[0|n],g[0|n]=32,n=8388608|y}y=n,sn(a+1200|0,a+784|0)}if(g[a+784|0]=0,f=1,n=Br(A,a+1820|0,a+1616|0,a+1824|0,1024,r),e[a+1832>>2]||(s=e[a+1828>>2],e[a+1832>>2]=e[a+1824>>2],e[a+1836>>2]=s,f=P),n){m=0,I=c;break a}if(m=Kt(A,e[a+1820>>2],a+1616|0,200,a+784|0,8404992&y,a+1832|0),s=1,I=c,P=f,l[a+1616|0]==21){g[e[a+1820>>2]-1|0]=e[a+172>>2],JA(189088,a+1616|0),s=0;break e}}else s=a+416|0,la(A,e[a+1820>>2],n,s),m=Kt(A,e[a+1820>>2],a+1616|0,200,a+784|0,268435456|y,a+1832|0),xt(e[a+1820>>2],s,RA(s)),1024&m||(JA(a+1616|0,a+1408|0),s=JA(a+784|0,a+576|0),8&l[188788]&&($A(f=s,s=a+576|0),c=e[47195],e[a+48>>2]=s,hr(c,85205,a+48|0)),m=n),s=0;if(n=(o=1024&m)>>>10|0,Y>>>0>48)break o;if(Y=Y+1|0,c=m,!o)break}else m=c,I=0,P=0,n=0;if(n|!m)break s;for(c=JA(a+1408|0,a+1616|0),o=la(A,e[a+1820>>2],m,a+416|0),f=P,s=m;;){o:{if(g[a+1616|0]=0,l[a+1200|0]){if(g[e[a+1820>>2]-1|0]=e[a+172>>2],n=Br(A,a+1840|0,a+1616|0,a+1824|0,o,r),g[e[a+1820>>2]-1|0]=32,l[a+1616|0]==21){A=a+416|0,xt(e[a+1820>>2],A,RA(A)),JA(189088,a+1616|0),s=0;break e}if(e[a+1832>>2]||(P=e[a+1828>>2],e[a+1832>>2]=e[a+1824>>2],e[a+1836>>2]=P),n){g[a+1200|0]=0;break o}f=e[a+1824>>2]?1:f}if(n=Br(A,a+1820|0,a+1616|0,a+1824|0,o,r),l[a+1616|0]==21){A=a+416|0,xt(e[a+1820>>2],A,RA(A)),JA(189088,a+1616|0),s=0;break e}if(e[a+1832>>2]||(P=e[a+1828>>2],e[a+1832>>2]=e[a+1824>>2],e[a+1836>>2]=P),!n)if(16384&s)JA(a+1616|0,c);else{y|=o<<11&8192|s<<9&134217728;u:if(524288&s){if(P=JA(a+576|0,n=a+784|0),s=Kt(A,e[a+1820>>2],a+1616|0,200,n,y,a+1832|0),sn(n,P),n=0,!s){s=0;break u}if(1024&s)break u;n=1,o=la(A,e[a+1820>>2],s,0)}else s=0,Kt(A,e[a+1820>>2],a+1616|0,200,0,y,a+1832|0),n=0;if(l[a+1616|0]==21){JA(189088,a+1616|0),A=a+416|0,xt(e[a+1820>>2],A,RA(A)),g[e[a+1820>>2]-1|0]=e[a+172>>2],s=0;break e}if(n)continue}}break}65536&m||(bi(A,a+1616|0,200,a+784|0),g[a+784|0]=0),n=a+416|0,xt(e[a+1820>>2],n,RA(n));break a}JA(189088,A=a+992|0),s=!yn(1|A,84744,3)<<12;break e}m=0,f=P}g[e[a+1820>>2]-1|0]=e[a+172>>2]}}if(n=e[a+164>>2],e[a+1852>>2]=8026656,e[a+1848>>2]=8022304,e[a+1844>>2]=7566112,4&y){r:{if((s=255&n)&&((0|s)==102||(Xe=fA,Ui(n<<24>>24))))break r;Xe=GA}Kt(A,Xe,189088,200,0,0,0)}for(n=0,s=a+1200|0,P=l[a+784|0];;){r:{a:{s:switch(0|(c=l[0|s])){case 0:break r;case 6:case 7:break s;default:break a}n=c}s=s+1|0;continue}break}r:if(n|f){if(e[A+32>>2]|65536&I){for(o=0,Ar(A,a+1616|0,a+1832|0,3,0),s=a+1200|0;;){switch(l[0|s]){case 6:o&&(g[0|s]=5),o=1;default:s=s+1|0;continue;case 0:}break}e[a+24>>2]=a+1616,e[a+20>>2]=a+1200,e[a+16>>2]=a+992,ua(189088,200,85233,a+16|0),g[189287]=0,Ar(A,189088,a+1832|0,-1,0);break r}e[a+8>>2]=a+1616,e[a+4>>2]=a+1200,e[a>>2]=a+992,ua(189088,200,85233,a),g[189287]=0,Ar(A,189088,a+1832|0,-1,0)}else Ar(A,n=a+1616|0,a+1832|0,-1,!!(0|P)<<1),e[a+40>>2]=n,e[a+36>>2]=a+1200,e[a+32>>2]=a+992,ua(189088,200,85233,a+32|0),g[189287]=0;l[a+784|0]&&(n=RA(189088),g[983+(a-n|0)|0]=0,JA(n+189088|0,a+784|0)),16&(n=y|he)&&(e[a+1832>>2]=-268435457&e[a+1832>>2]);r:if(!(128&n)|!(16&l[A+14|0]))if(3072&n){if(Ze(A,6),!(2048&n))break r;e[a+1832>>2]=268435456|e[a+1832>>2]}else 16&l[F(e[33264],12)+r|0]&&(1536&(r=e[a+1832>>2])?Ze(A,4):2048&r&&Ze(A,3));else Ze(A,3);8192&m&&(e[A+8192>>2]=2,e[A+8184>>2]=2);r:{if(8&(r=e[a+1836>>2]))e[A+8184>>2]=0,e[A+8188>>2]=3,n=A+8196|0;else if(1&r)e[A+8192>>2]=0,e[A+8184>>2]=2,n=A+8196|0;else if(2&r)e[A+8192>>2]=2,e[A+8184>>2]=0,e[A+8188>>2]=0,n=A+8196|0;else{if(!(4&r))break r;e[A+8184>>2]=0,e[A+8192>>2]=0,e[A+8196>>2]=2,n=A+8188|0}e[n>>2]=0}!l[e[a+1820>>2]]|256&r||((0|(r=e[A+8184>>2]))>0&&(e[A+8184>>2]=r-1),(0|(r=e[A+8192>>2]))>0&&(e[A+8192>>2]=r-1),(0|(r=e[A+8196>>2]))>0&&(e[A+8196>>2]=r-1),(0|(r=e[A+8188>>2]))<=0||(e[A+8188>>2]=r-1)),(0|_)!=1|e[A+212>>2]!=25966||!fa(e[a+168>>2])|e[a+168>>2]==105||(e[a+1832>>2]=16777216|e[a+1832>>2]);r:if(2&l[A+68|0]&&98304&(n=e[a+1832>>2])&&!((0|(r=RA(189088)-1|0))<=0))for(s=0;;){if(A=s+1|0,l[s+189088|0]==6){r=g[0|(A=A+189088|0)];a:{if(65536&n){if((0|nn(69))==(0|r)?(_=nn(101),g[0|A]=_):_=l[0|A],o=111,(0|nn(79))==_<<24>>24)break a;break r}if((0|nn(101))==(0|r)?(_=nn(69),g[0|A]=_):_=l[0|A],o=79,(0|nn(111))!=_<<24>>24)break r}g[0|A]=nn(o);break r}if((0|r)==(0|(s=A)))break}A=e[a+1832>>2],xt(t,a+256|0,nA),s=A|p;break e}if(s=0,g[a+1616|0]=0,Mi(A,e[a+1840>>2],a+1616|0,n)){if(c=JA(189088,a+1616|0),!De){if(n=e[a+164>>2],e[a+1408>>2]=8026656,e[a+576>>2]=8022304,e[a+416>>2]=7566112,4&y){t=a+576|1,r=a+1408|1;A:{if((s=255&n)&&((0|s)==102||(P=t,Ui(n<<24>>24))))break A;P=r}Kt(A,P,c,200,0,0,0)}s=128&e[a+1832>>2]}}else s=((0|_)>1)<<12}else g[189088]=0;return q=a+1856|0,s}function st(A,t,r,n,a,s,o,c){var f,m,p=0,I=0,y=0,P=0,Y=0,X=0,_=0,ce=0,he=0,ye=0,De=0,Re=0,Xe=0,nA=0,fA=0,GA=0,SA=0,At=0,ct=0,bt=0,Nt=0,qt=0,tr=0,mr=0,Cr=0,Gr=0,Dr=0,Or=0,Kr=0,on=0,$r=0,ln=0,En=0,na=0,pa=0,ha=0,Oa=0,Fs=0,hs=0,ms=0,Ss=0;q=f=q-384|0,m=e[t>>2];e:{A:{r:{a:{if(a){if(l[0|a]!=7)break a;e[t>>2]=(n||1)+m;break r}e[s>>2]=0,e[t>>2]=m+1;break e}Nt=86135,Kr=268435456&o,on=134217728&o,$r=8388608&o,ln=16384&o,En=8192&o,mr=r-1|0,Cr=n-r|0,na=2&o,pa=128&o,ha=o>>>31|0,Oa=-2147483648&o,Gr=f+96|1;a:for(;;)for(e[f+268>>2]=0,_=(y=e[t>>2])+n|0,fA=-2,Xe=-6,r=a,GA=Oa,At=0,qt=0,nA=1,p=0,SA=0,bt=0;;){P=y,ce=p;s:{c:{o:{u:{l:{i:{p:{C:{m:{b:{h:{E:{w:{y:{L:{W:{for(;ye=r,r=r+1|0,!((I=l[0|ye])>>>0>9);)switch(Y=r,0|I){case 0:if(!(r=Dr)){Dr=0,r=86135;break L}for(;;){I=1;V:{M:switch(0|(p=l[0|r])){case 0:case 3:break W;case 5:break M;default:break V}I=2}r=(r+I|0)+(((0|p)==9)<<1)|0}case 1:if(bt=1,!ha)continue;break l;case 2:bt=2;continue;case 4:Dr=r;continue;case 5:r=ye+2|0,p=e[A+320>>2];V:{if((y=l[ye+1|0])>>>0>=32){if(!(p>>>y-32&1))break V;break l}if(!(p>>>y&1))break l}nA=nA+1|0;continue;case 9:r=ye+3|0;continue;case 8:bt=1,qt=1,GA=0;break;case 3:break y}Y=0,p=ce,y=P;V:switch(0|bt){case 0:M:{B:{if((0|(p=l[0|_]))!=(0|I)){if((0|p)!=69)break l;if((0|I)==101)break B;break l}if(Y=0,(192&I)==128)break M}Y=21}_=_+1|0,At=At+1|0;break s;case 1:break w;case 2:break V;default:break b}if(e[f+264>>2]=e[f+268>>2],!l[_-1|0])break l;Xe=(0|(p=Xe+6|0))>=19?19:p,Re=_+1|0,De=Dt(f+268|0,_),he=l[0|_],Y=20,p=ce;V:{M:switch(I-11|0){case 6:r=ye+2|0,p=e[f+268>>2],y=g[ye+1|0];B:if(I=e[604+(((y=((0|y)<65?191:-65)+y|0)<<2)+A|0)>>2])p=!!(0|Wr(I,p));else{if((0|y)>7)break l;D:{if((0|(I=e[A+600>>2]))>0){if((p=p-I|0)-1>>>0<255)break D;break l}if((I=p-192|0)>>>0<=413){p=l[344+(l[I+94240|0]+A|0)|0]&1<<y;break B}if(p>>>0>255)break l}p=l[344+(A+p|0)|0]&1<<y}if(!p)break l;_=_+De|0,Y=((0|y)==2?19:20)-Xe|0;break s;case 7:if(r=ye+2|0,p=g[ye+1|0],!(p=e[4788+((((0|p)<65?191:-65)+p<<2)+A|0)>>2]))break l;B:for(;;){if((0|(Y=l[0|p]))==7)break l;if((0|Y)==126){Y=20-Xe|0;break s}D:if(he){if(X=_,I=p,(0|Y)==(0|he))for(;;){if((0|(Y=l[0|(I=I+1|0)]))!=(0|(p=l[0|(X=X+1|0)])))break D;if(!p)break}}else I=p,X=_;if(Y){for(;;)if(y=l[0|I],I=p=I+1|0,!y)continue B}break}if((0|(p=X-_|0))<0)break l;_=p+_|0,Y=20-Xe|0;break s;case 14:I=e[f+268>>2];B:{D:if(p=e[A+604>>2])p=!!(0|Wr(p,I));else{F:{if((0|(p=e[A+600>>2]))>0){if((X=I-p|0)-1>>>0<255)break F;break B}if((p=I-192|0)>>>0<=413){p=1&g[344+(l[p+94240|0]+A|0)|0];break D}if(X=I,I>>>0>255)break c}p=1&g[344+(A+X|0)|0]}if(p)break l;I=e[f+268>>2]}if(!on)break c;if((0|I)==32)break l;break c;case 4:if((p=e[f+268>>2])-48>>>0<10|p-2406>>>0<10)break c;if(!l[A+170|0])break l;Y=20-Xe|0;break s;case 5:if(Qs(e[f+268>>2]))break l;break o;case 0:if(e[f+268>>2]==e[f+264>>2])break o;break l;case 17:r=ye+2|0,p=32768,Y=0;B:{D:switch((I=l[ye+1|0])-1|0){case 0:break b;case 1:break D;default:break B}if(Y=1,p=ce,!$r)break b;break l}if((0|(p=240&I))==16){if(Y=23,p=ce,c>>>(15&I)&16384)break b;break l}if((0|I)!=3&(0|p)!=32||(xt(p=f+96|0,mr,y=1+(e[t>>2]+(At+Cr|0)|0)|0),g[0|(p=p+y|0)]=32,g[p+1|0]=0,e[33265]=0,e[33266]=0,e[f+16>>2]=Gr,Br(A,f+16|0,f+272|0,133060,0,0),Y=23,!((0|I)!=3|(0|(X=e[33265]))>=0|16384&e[33266])))break s;if(p=ce,y=P,X>>>(15&I)&16384)break b;break l;case 34:B:{if(p=he-32|0){if((0|p)==13)break B;break l}if(!ln)break l}X=22-Xe|0;break u;case 10:if(p=1,l[0|r]==21)break V;break i;case 18:if((0|(X=e[f+268>>2]))!=32)for(I=_+De|0;;){B:{D:if(p=e[A+632>>2])p=!!(0|Wr(p,X));else{F:{if((0|(p=e[A+600>>2]))>0){if((X=X-p|0)-1>>>0<255)break F;break B}if((p=X-192|0)>>>0<=413){p=128&l[344+(l[p+94240|0]+A|0)|0];break D}if(X>>>0>255)break B}p=128&l[344+(A+X|0)|0]}if(p)break l}if(I=Dt(f+268|0,I)+I|0,(0|(X=e[f+268>>2]))==32)break}X=19-Xe|0;break u;case 49:break p;case 2:break C;case 3:break m;case 1:break b;case 13:break h;case 12:break M;default:break E}Dt(f+272|0,r),De=-1;M:if((0|(p=e[f+272>>2]))!=(0|(I=e[f+268>>2])))if(-33&I)for(;;){he=_,De=-1;B:if((0|p)==18&&(p=g[ye+2|0],Y=e[4788+((((0|p)<65?191:-65)+p<<2)+A|0)>>2])){for(;;){if((0|(y=l[0|Y]))==7)break B;if((0|y)==126){De=0;break B}D:if((0|(_=l[0|he]))==(0|y)){if(p=he,I=Y,_)for(;;){if((0|(y=l[0|(I=I+1|0)]))!=(0|(Y=l[0|(p=p+1|0)])))break D;if(!Y)break}}else I=Y,p=he;if(!y){p=p-he|0;break}for(;p=l[0|I],I=Y=I+1|0,p;);}De=p}if(y=Dt(f+268|0,he),(0|(p=e[f+272>>2]))==(0|(I=e[f+268>>2]))|!(-33&I))break M;if(_=y+he|0,(0|De)!=-1)break}else he=_;else he=_;_=(0|p)==(0|I)||(0|De)>=0?he:Re,Y=0;break s}for(;p=p+1|0,l[0|(r=r+1|0)]==21;);break i}r=r+1|0}Y=ye}if(!(l[P-1|0]!=32&qt|GA||((0|(I=qt?nA+4|0:nA))>=(0|tr)&&(Fs=SA,hs=ce,tr=I,ms=At,Nt=r),!(8&e[47197])|Kr|(0|I)<=0))){for($A(r,ye=f+272|0),Re=e[47195],y=f+16|0,r=0,he=0,GA=0,SA=0,q=_=q-496|0,g[_+80|0]=0,(0|n)>0?(xt(_+288|0,m,n),ce=n):ce=0,g[ce+(p=_+288|0)|0]=0,P=RA(p)+p|0,De=(0|o)<0;;){if(X=l[0|a],ce=a,a=a+1|0,X>>>0>9)for(;;){y:{L:{W:{V:{M:{B:switch((p=255&X)-14|0){case 4:break W;case 3:break V;case 0:break M;case 14:break B;default:break L}if(ce=ce+2|0,X=32,!De&(0|(a=l[0|a]))==1)break y;g[0|P]=36,JA(p=P+1|0,a=Gs(128960,a)),P=RA(a)+p|0;break y}p=l[ce+2|0],X=l[0|a],e[_+36>>2]=127&l[ce+3|0],e[_+32>>2]=4&p?80:83,QA(_+48|0,85131,_+32|0),1&p&&(a=RA(a=_+48|0)+a|0,g[0|a]=101,g[a+1|0]=0),2&(a=127&p)&&(p=RA(p=_+48|0)+p|0,g[0|p]=105,g[p+1|0]=0),4&a&&(p=RA(p=_+48|0)+p|0,g[0|p]=112,g[p+1|0]=0),8&a&&(p=RA(p=_+48|0)+p|0,g[0|p]=118,g[p+1|0]=0),16&a&&(p=RA(p=_+48|0)+p|0,g[0|p]=100,g[p+1|0]=0),32&a&&(p=RA(p=_+48|0)+p|0,g[0|p]=102,g[p+1|0]=0),a>>>0>=64&&(a=RA(a=_+48|0)+a|0,g[0|a]=113,g[a+1|0]=0),1&X&&(a=RA(a=_+48|0)+a|0,g[0|a]=116,g[a+1|0]=0),ce=ce+4|0,P=JA(P,a=_+48|0)+RA(a)|0,X=32;break y}ce=ce+2|0,X=l[g[0|a]+93871|0];break y}a=g[0|a],g[0|P]=76,p=((a=a+((0|a)<65?191:-65)|0)>>>0)/10|0,g[P+1|0]=p+48,X=a-F(p,10)|48,(0|SA)==1&&(g[0|P]=X,X=76),ce=ce+2|0,P=P+2|0;break y}X=p>>>0<=31?l[p+93904|0]:(0|p)==32?95:X,ce=a}if(g[0|P]=X,a=ce+1|0,P=P+1|0,!((X=l[0|ce])>>>0>=10))break}p=1;y:switch(0|X){case 1:p=r;case 8:g[0|P]=0,P=_+80|0,r=p,SA=1;continue;case 2:g[0|P]=0,ce=RA(p=_+288|0)+p|0,P=l[84899]|l[84900]<<8,g[0|ce]=P,g[ce+1|0]=P>>>8,SA=2,g[ce+2|0]=l[84901],P=RA(p)+p|0;continue;case 5:he=g[0|a],a=ce+2|0;continue;case 9:GA=(l[0|a]+F(l[ce+2|0],255)|0)-256|0,a=ce+3|0;continue;case 0:case 3:break y;default:continue}break}if(g[0|P]=0,P=y,(0|GA)>0&&(e[_+16>>2]=GA,QA(y,85581,_+16|0),P=y+7|0),(0|he)>0&&(e[_>>2]=he,QA(P,85694,_),P=RA(P)+P|0),1&((0|(a=RA(_+80|0)))>0|r)){1&r&&(g[0|P]=95,P=P+1|0);y:if(!((0|(ce=a-1|0))<0|P>>>0>=y>>>0))for(;;){if(g[0|P]=l[(_+80|0)+ce|0],P=P+1|0,(0|ce)<=0)break y;if(ce=ce-1|0,!(P>>>0<y>>>0))break}g[0|P]=41,g[P+1|0]=32,P=P+2|0}g[0|P]=0,g[(r=_+288|0)+((y+3|0)-P|0)|0]=0,sn(P,r),(0|(r=RA(y)))<=7&&(VA(r+y|0,32,8-r|0),r=8),g[r+y|0]=0,q=_+496|0,e[f+4>>2]=y,e[f>>2]=(0|n)>1?I+35|0:I,e[f+8>>2]=ye,hr(Re,89088,f)}r=Y;break l}if(!l[0|P])break l;fA=(0|(p=fA+2|0))>=19?19:p,Dt(f+264|0,P),p=Qn(f+268|0,y=P-1|0),he=l[0|y],Re=y;w:{y:{L:{W:{V:{M:switch(I-10|0){case 13:if(p=(0|(ct=l[0|r]))==(0|(I=l[0|P])),De=-1,(0|I)==32|(0|I)==(0|ct))break W;if(I)break V;break L;case 7:r=ye+2|0,Y=e[f+268>>2],P=g[ye+1|0];B:if(I=e[604+(((P=((0|P)<65?191:-65)+P|0)<<2)+A|0)>>2])I=!!(0|Wr(I,Y));else{if((0|P)>7)break l;D:{if((0|(I=e[A+600>>2]))>0){if((Y=Y-I|0)-1>>>0<255)break D;break l}if((I=Y-192|0)>>>0<=413){I=l[344+(l[I+94240|0]+A|0)|0]&1<<P;break B}if(Y>>>0>255)break l}I=l[344+(A+Y|0)|0]&1<<P}if(!I)break l;y=1+(y-p|0)|0,Y=((0|P)==2?19:20)-fA|0;break w;case 8:if(r=ye+2|0,p=g[ye+1|0],!(p=e[4788+((((0|p)<65?191:-65)+p<<2)+A|0)>>2]))break l;B:{for(;;){if((0|(he=l[0|p]))==7)break l;if((0|he)==126){De=0;break B}I=y;D:{F:{if((0|(ye=(De=RA(p))-1|0))>0)for(I=P-De|0,Y=0,X=y;;){if(!l[0|(X=X-1|0)])break F;if((0|ye)==(0|(Y=Y+1|0)))break}q:if(!((0|(Y=l[0|I]))!=(0|he)|!Y))for(;;){if((0|(he=l[0|(p=p+1|0)]))!=(0|(Y=l[0|(I=I+1|0)])))break q;if(!Y)break}if(!he)break D}for(I=p;Y=l[0|I],I=p=I+1|0,Y;);continue}break}if((0|De)<0)break l}Y=20-Xe|0,y=1+(y-De|0)|0;break w;case 15:I=e[f+268>>2];B:{D:if(P=e[A+604>>2])P=!!(0|Wr(P,I));else{F:{if((0|(P=e[A+600>>2]))>0){if((I=I-P|0)-1>>>0<255)break F;break B}if((P=I-192|0)>>>0<=413){P=1&g[344+(l[P+94240|0]+A|0)|0];break D}if(I>>>0>255)break B}P=1&g[344+(A+I|0)|0]}if(P)break l}Y=20-fA|0,y=1+(y-p|0)|0;break w;case 1:if(e[f+268>>2]!=e[f+264>>2])break l;Y=21-fA|0,y=1+(y-p|0)|0;break w;case 5:if(!((P=e[f+268>>2])-48>>>0<10|P-2406>>>0<10))break l;Y=21-fA|0,y=1+(y-p|0)|0;break w;case 6:if(Qs(e[f+268>>2]))break l;Y=21-Xe|0,y=1+(y-p|0)|0;break w;case 18:if(r=ye+2|0,!((0|(I=l[ye+1|0]))==3|(240&I)==32)||(xt(p=f+96|0,mr,y=1+(e[t>>2]+(At+Cr|0)|0)|0),g[0|(p=p+y|0)]=32,g[p+1|0]=0,e[33265]=0,e[33266]=0,e[f+16>>2]=Gr,Br(A,f+16|0,f+272|0,133060,0,0),Y=23,!((0|I)!=3|(0|(X=e[33265]))>=0|16384&e[33266])))break s;if(p=ce,y=P,X>>>(15&I)&16384)break b;break l;case 11:if(I=1,l[0|r]==21)for(;I=I+1|0,l[0|(r=r+1|0)]==21;);if(e[A+8208>>2]<(0|I))break l;Y=18+(I-fA|0)|0;break w;case 0:if(Y=19,p=ce,y=P,e[A+8212>>2]>0)break b;break l;case 19:if(Y=3,(0|(X=e[f+268>>2]))==32)break w;for(I=1+(y-p|0)|0;;){B:{D:if(p=e[A+632>>2])p=!!(0|Wr(p,X));else{F:{if((0|(p=e[A+600>>2]))>0){if((X=X-p|0)-1>>>0<255)break F;break B}if((p=X-192|0)>>>0<=413){p=128&l[344+(l[p+94240|0]+A|0)|0];break D}if(X>>>0>255)break B}p=128&l[344+(A+X|0)|0]}if(p)break l}if(I=I-Qn(f+268|0,I-1|0)|0,(0|(X=e[f+268>>2]))==32)break}break w;case 16:if(Y=1,p=ce,y=P,e[A+8184>>2])break b;break l;case 9:if(Y=1,p=ce,y=P,na)break b;break l;case 36:for(;;){if(Y=50,p=ce,!(P=(255&he)-32|0))break l;if((0|P)==14)break b;he=l[0|(Re=Re-1|0)]}case 35:break M;default:break y}M:{if(p=he-32|0){if((0|p)==13)break M;break l}if(!pa)break l}Y=22-Xe|0;break w}V:{for(;;){De=-1,X=P,P=P-1|0;M:if((0|ct)==18&&(p=g[ye+2|0],Y=e[4788+((((0|p)<65?191:-65)+p<<2)+A|0)>>2]))for(Ss=X+1|0;;){if((0|(Re=l[0|Y]))==7){De=-1;break M}if((0|Re)==126){De=0;break M}I=X;B:{if((0|(Or=(De=RA(Y))-1|0))>0)for(I=Ss-De|0,he=0,p=X;;){if(!l[0|(p=p-1|0)])break B;if((0|Or)==(0|(he=he+1|0)))break}D:if(!((0|(p=l[0|I]))!=(0|Re)|!p))for(;;){if((0|(Re=l[0|(Y=Y+1|0)]))!=(0|(p=l[0|(I=I+1|0)])))break D;if(!p)break}if(!Re)break M}for(I=Y;p=l[0|I],I=Y=I+1|0,p;);}if(p=(0|(I=l[0|P]))==(0|ct),(0|I)==32|(0|I)==(0|ct))break V;if(!I){P=X;break L}if((0|De)!=-1)break}P=X;break L}P=X}y=p?P:y}Y=0,y=(0|De)<0?y:P+1|0;break w}if((0|I)!=(0|he))break l;Y=4,(0|I)!=32&&(Y=(192&I)!=128?21-fA|0:0)}p=ce;break b}if((0|I)!=(0|he))break l;X=(192&I)!=128?21-Xe|0:0;break u}if(Y=1,En)break l}nA=Y+nA|0;continue}if(p=g[ye+1|0],ce=l[ye+3|0],y=l[ye+2|0],1&!(e[A+8208>>2]|4&y)&g[A+84|0])break l;r=ye+4|0,X=0,ce=127&ce|(127&y)<<8|p<<16;break u}C:if(!(Re>>>0<=(I=e[t>>2]+n|0)>>>0)){for(;;){if(l[0|I]!=101){if(p=I>>>0<_>>>0,I=I+1|0,p)continue;break C}break}X=0,SA=I;break u}X=0;break u}Y=-20;break s}if(he=0,(0|(I=e[f+268>>2]))!=32)for(X=_+De|0,Y=0;;){if(!Y){i:{p:if(y=e[A+632>>2])I=!!(0|Wr(y,I));else{C:{if((0|(y=e[A+600>>2]))>0){if((I=I-y|0)-1>>>0<255)break C;break i}if((y=I-192|0)>>>0<=413){I=128&l[344+(l[y+94240|0]+A|0)|0];break p}if(I>>>0>255)break i}I=128&l[344+(A+I|0)|0]}I&&(he=he+1|0)}I=e[f+268>>2]}i:if(y=e[A+632>>2])Y=!!(0|Wr(y,I));else{p:{if((0|(y=e[A+600>>2]))>0){if(Y=0,(I=I-y|0)-1>>>0<255)break p;break i}if((y=I-192|0)>>>0<=413){Y=128&l[344+(l[y+94240|0]+A|0)|0];break i}if(Y=0,I>>>0>255)break i}Y=128&l[344+(A+I|0)|0]}if(X=Dt(f+268|0,X)+X|0,(0|(I=e[f+268>>2]))==32)break}if(!((0|p)>(0|he))){X=18+(p-Xe|0)|0;break u}}for(;p=l[0|r],r=a=r+1|0,p;);if(l[0|a]!=7)continue a;if(A=n+ms|0,e[t>>2]=e[t>>2]+(A||1),tr)break A;break r}p=ce,_=Re,y=P,nA=X+nA|0;continue}_=_+De|0,Y=21-Xe|0;break s}_=_+De|0,Y=20-Xe|0}p=ce,y=P,nA=Y+nA|0}}Nt=86135}e[s+12>>2]=Fs,e[s+8>>2]=hs,e[s+4>>2]=Nt,e[s>>2]=tr}q=f+384|0}function tt(A,t){var r,n=0,a=0,s=0,o=0,c=0,f=0,m=0,p=0,I=0,y=0,P=0,Y=0,X=0,_=0,ce=0,he=0,ye=0,De=0,Re=0,Xe=0,nA=0,fA=0,GA=0,SA=0,At=0,ct=0,bt=0,Nt=0,qt=0,tr=0;q=r=q-1168|0,e[r+928>>2]=0,e[r+932>>2]=0,e[r+920>>2]=0,e[r+924>>2]=0,e[r+912>>2]=0,e[r+916>>2]=0,e[r+904>>2]=0,e[r+908>>2]=0,e[r+896>>2]=0,e[r+900>>2]=0;e:{A:{if(A){if(l[0|A]|8&t)break A;break e}if(!(8&t))break e}if(ar(r+1088|0,A,40),16&t){if((0|da(JA(r+704|0,A)))<=0)break e;X=8&t}else(X=8&t)|l[r+1088|0]||(b[r+1088>>1]=l[85055]|l[85056]<<8,g[r+1090|0]=l[85057]),e[r+496>>2]=137584,e[r+500>>2]=47,e[r+504>>2]=47,QA(n=r+512|0,85286,r+496|0),e[r+484>>2]=r+1088,e[r+480>>2]=n,QA(n=r+704|0,85425,r+480|0),(0|da(n))>0||(e[r+468>>2]=47,e[r+472>>2]=47,e[r+464>>2]=137584,QA(n=r+512|0,85648,r+464|0),e[r+452>>2]=r+1088,e[r+448>>2]=n,QA(r+704|0,85425,r+448|0));if(a=X?86012:85055,!(_=xn(r+704|0,85712))){if(n=0,3&t)break e;a=(0|Es(n=r+1088|0))<0?a:n}if((Y=2&t)||(n=e[47192])&&(T0(n),e[47192]=0),ye=JA(r+992|0,a),he=JA(r+944|0,a),Y?((n=ra(200992,43))&&(g[0|n]=0),e[r+432>>2]=A+3,QA(A=r+704|0,86030,r+432|0),sn(200992,A)):(e[32972]=199592,ar(200992,A,40),g[201088]=0,g[201040]=0,e[50299]=200992,e[50298]=201088,e[50297]=201040),Xt(Y),_){for(Re=e[30450],Xe=r+548|0,nA=r+544|0,fA=r+540|0,GA=r+536|0,SA=r+532|0,At=r+528|0,ct=12|(A=r+512|0),bt=8|A,Nt=4|A;Zt(r+704|0,190,_);){A=r+704|0;A:{if(l[r+704|0]!=35){r:if(!((0|(A=RA(r+704|0)-1|0))<=0))for(;;){if(!((0|(a=g[0|(n=(r+704|0)+A|0)]))==32|a-9>>>0<5))break r;if(g[0|n]=0,!((0|(A=A-1|0))>0))break}if(!(A=jr(r+704|0)))break A}g[0|A]=0}A=r+704|0;A:if(n=l[r+704|0])for(;;){if((0|(n=n<<24>>24))==32|n-9>>>0<5)break A;if(!(n=l[0|(A=A+1|0)]))break}if(g[0|A]=0,l[r+704|0])if(A=A+1|0,n=va(129744,r+704|0)){s=0,q=a=q-416|0;A:if(o=e[47192]){switch(n-19|0){case 16:if(e[a+32>>2]=a+412,(0|nt(A,84249,a+32|0))!=1)break A;e[o+324>>2]=e[a+412>>2];break A;case 8:J0(A,o+320|0,27);break A;case 2:if(e[a+48>>2]=188784,nt(A,84249,a+48|0),!(A=l[188784]))break A;e[o+152>>2]=A;break A;case 11:if(l[0|A]){for(c=e[30450];;)if(n=A,A=A+1|0,!((0|(s=g[0|n]))==32|s-9>>>0<5)){for(s=Ka(n),e[a+412>>2]=s,(0|s)>0&&(s>>>0<=31?e[o+104>>2]=e[o+104>>2]|1<<s:s>>>0<=63?e[o+108>>2]=e[o+108>>2]|1<<s-32:(e[a+64>>2]=s,hr(c,84700,a- -64|0)),n=A);n=(A=n)+1|0,(s=g[0|A])-48>>>0<10|(32|s)-97>>>0<26;);if(!s)break}}8&(A=e[o+104>>2])&&(e[o+124>>2]=46,e[o+128>>2]=44),4&A&&(e[o+124>>2]=0);break A;default:if((65280&n)!=256)break A;e[a+16>>2]=24+(o+((255&n)<<2)|0),nt(A,84249,a+16|0);break A;case 1:e[a+144>>2]=o,e[a+148>>2]=o+4,nt(A,85642,a+144|0);break A;case 3:if(n=0,VA(s=a+160|0,0,240),e[a+132>>2]=a+360,e[a+128>>2]=a+320,e[a+124>>2]=a+280,e[a+120>>2]=a+240,e[a+116>>2]=a+200,e[a+112>>2]=s,s=nt(A,85037,a+112|0),e[a+412>>2]=s,e[o+152>>2]=0,(0|s)<=0)break A;for(p=e[30450];;){r:if(Mr(c=(a+160|0)+F(n,40)|0,85301)){a:{if((0|(m=e[34454]))>0)for(P=e[34455],A=0;;){if(!Mr(c,P+F(A,68)|0))break a;if((0|m)==(0|(A=A+1|0)))break}e[a+96>>2]=c,hr(p,85562,a+96|0),s=e[a+412>>2];break r}g[156+(n+o|0)|0]=A}if(!((0|s)>(0|(n=n+1|0))))break}break A;case 9:e[a+88>>2]=o+20,e[a+84>>2]=o+16,e[a+80>>2]=o+8,nt(A,84778,a+80|0);break A;case 10:J0(A,o+12|0,29);break A;case 5:if((0|(p=Bi(A,a+160|0)))<=0)break A;if(n=0,A=0,p>>>0>=4)for(P=-4&p,c=o+304|0;m=a+160|0,b[c+(A<<1)>>1]=e[m+(A<<2)>>2],b[c+((f=1|A)<<1)>>1]=e[m+(f<<2)>>2],b[c+((f=2|A)<<1)>>1]=e[m+(f<<2)>>2],b[c+((f=3|A)<<1)>>1]=e[m+(f<<2)>>2],A=A+4|0,(0|P)!=(0|(s=s+4|0)););if(!(s=3&p))break A;for(;b[304+(o+(A<<1)|0)>>1]=e[(a+160|0)+(A<<2)>>2],A=A+1|0,(0|s)!=(0|(n=n+1|0)););break A;case 6:if((0|(p=Bi(A,a+160|0)))<=0)break A;if(n=0,A=0,p>>>0>=4)for(P=-4&p,c=o+296|0;m=a+160|0,g[A+c|0]=e[m+(A<<2)>>2],g[(f=1|A)+c|0]=e[m+(f<<2)>>2],g[(f=2|A)+c|0]=e[m+(f<<2)>>2],g[(f=3|A)+c|0]=e[m+(f<<2)>>2],A=A+4|0,(0|P)!=(0|(s=s+4|0)););if(!(s=3&p))break A;for(;g[296+(A+o|0)|0]=e[(a+160|0)+(A<<2)>>2],A=A+1|0,(0|s)!=(0|(n=n+1|0)););break A;case 7:if((0|(p=Bi(A,a+160|0)))<=0)break A;if(n=0,A=0,p>>>0>=4)for(P=-4&p,c=o+304|0;f=m=c+(A<<1)|0,I=M[m>>1],m=a+160|0,b[f>>1]=I+M[m+(A<<2)>>1],b[(I=c+((f=1|A)<<1)|0)>>1]=M[I>>1]+M[m+(f<<2)>>1],b[(I=c+((f=2|A)<<1)|0)>>1]=M[I>>1]+M[m+(f<<2)>>1],b[(I=c+((f=3|A)<<1)|0)>>1]=M[I>>1]+M[m+(f<<2)>>1],A=A+4|0,(0|P)!=(0|(s=s+4|0)););if(!(s=3&p))break A;for(;b[304+(c=o+(A<<1)|0)>>1]=M[c+304>>1]+M[(a+160|0)+(A<<2)>>1],A=A+1|0,(0|s)!=(0|(n=n+1|0)););break A;case 4:g[o+169|0]=1;break A;case 0:}g[o+208|0]=1}else e[a>>2]=Gs(129568,n),hr(e[30450],89101,a);q=a+416|0}else{switch(va(131904,r+704|0)-1|0){case 1:if(Y||(g[r+1040|0]=0,e[r+512>>2]=5,e[r+32>>2]=r+1040,e[r+36>>2]=r+512,nt(A,86237,r+32|0),e[r+1040>>2]==1769103734&e[r+1044>>2]==7630433))continue;if((A=RA(r+1040|0)+2|0)>>>0<99-ce>>>0&&(g[0|(n=ce+201088|0)]=e[r+512>>2],JA(n+1|0,r+1040|0),ce=A+ce|0),!qt){if(A=0,(n=c=r+1040|0)||(n=e[57150])){if(A=86875,e[24+(a=q-32|0)>>2]=0,e[a+28>>2]=0,e[a+16>>2]=0,e[a+20>>2]=0,e[a+8>>2]=0,e[a+12>>2]=0,e[a>>2]=0,e[a+4>>2]=0,o=0,s=l[86875])if(l[86876]){for(;e[(o=a+(s>>>3&28)|0)>>2]=e[o>>2]|1<<s,s=l[A+1|0],A=A+1|0,s;);A:if(s=l[0|(A=n)])for(;;){if(!(e[a+(s>>>3&28)>>2]>>>s&1))break A;if(s=l[A+1|0],A=A+1|0,!s)break}o=A-n|0}else{for(A=n;a=A,A=A+1|0,l[0|a]==(0|s););o=a-n|0}if(l[0|(A=o+n|0)]){n=86875,q=s=q-32|0,a=g[86875];A:if(l[86876]&&a){if(VA(s,0,32),a=l[86875])for(;e[(o=s+(a>>>3&28)|0)>>2]=e[o>>2]|1<<a,a=l[n+1|0],n=n+1|0,a;);if(n=A,a=l[0|A])for(;;){if(e[s+(a>>>3&28)>>2]>>>a&1)break A;if(a=l[n+1|0],n=n+1|0,!a)break}}else n=ja(A,a);q=s+32|0,l[0|(n=(n-A|0)+A|0)]?(e[57150]=n+1,g[0|n]=0):e[57150]=0}else e[57150]=0,A=0}n=JA(ye,A),JA(he,A),Es(JA(r+896|0,A)),e[47192]=_e(n),ar(e[32972]+40|0,c,20)}qt=1;continue;case 0:if(Y)continue;for(;n=A,A=A+1|0,(0|(a=g[0|n]))==32|a-9>>>0<5;);ar(201040,n,40);continue;case 2:e[r+1152>>2]=0,n=r+512|0,e[r+48>>2]=n,e[r+52>>2]=r+1152,nt(A,86237,r+48|0),g[201200]=va(132112,n),g[201201]=e[r+1152>>2];continue;case 4:e[r+64>>2]=he,nt(A,86939,r- -64|0);continue;case 3:e[r+80>>2]=r+896,nt(A,86939,r+80|0);continue;case 8:if(e[r+1152>>2]=100,e[r+1164>>2]=100,e[r+1148>>2]=100,e[r+112>>2]=r+1144,e[r+1144>>2]=0,e[r+96>>2]=r+512,e[r+100>>2]=r+1152,e[r+104>>2]=r+1164,e[r+108>>2]=r+1148,(0|nt(A,91156,r+96|0))<2||(A=e[r+512>>2])>>>0>8||((0|(n=e[r+1152>>2]))>=0&&(a=e[32972]+(A<<1)|0,n=Ne(y=2.56001*+(0|n))<2147483648?~~y:-2147483648,b[a+236>>1]=n,b[a+164>>1]=n),(0|(n=e[r+1164>>2]))>=0&&(a=e[32972]+(A<<1)|0,n=Ne(y=2.56001*+(0|n))<2147483648?~~y:-2147483648,b[a+254>>1]=n,b[a+182>>1]=n),(0|(a=e[r+1148>>2]))<0?n=e[32972]:(c=(n=e[32972])+(A<<1)|0,a=Ne(y=2.56001*+(0|a))<2147483648?~~y:-2147483648,b[c+200>>1]=a),b[218+((A<<1)+n|0)>>1]=e[r+1144>>2],A))continue;b[n+200>>1]=(0|F(b[n+200>>1],105))/100;continue;case 9:if(e[r+132>>2]=r+696,e[r+128>>2]=r+700,(0|nt(A,87106,r+128|0))!=2)continue;if(A=e[32972],n=e[r+700>>2],e[A+64>>2]=(n<<12)-36864,e[A+68>>2]=F(e[r+696>>2]-n|0,108),Ne(y=256*(+(n-82|0)/82*.25+1))<2147483648){e[A+116>>2]=~~y;continue}e[A+116>>2]=-2147483648;continue;case 35:tr||Es(r+896|0),e[r+1164>>2]=0,g[r+1156|0]=l[91267],e[r+1152>>2]=l[91263]|l[91264]<<8|l[91265]<<16|l[91266]<<24,e[r+144>>2]=r+1164,e[r+148>>2]=r+512,e[r+152>>2]=r+1152,(0|nt(A,91302,r+144|0))<2|e[49848]>59||(A=vi(r+512|0))&&(g[F(e[49848],3)+199408|0]=A,A=vi(r+1152|0),n=e[49848],a=F(n,3)+199408|0,g[a+1|0]=A,e[49848]=n+1,g[a+2|0]=e[r+1164>>2]),tr=1;continue;case 10:e[r+1140>>2]=0,n=e[32972],e[n+100>>2]=0,e[r+164>>2]=n+100,e[r+160>>2]=n+96,nt(A,87106,r+160|0);continue;case 11:if(e[r+176>>2]=r+1140,(0|nt(A,87268,r+176|0))!=1)continue;e[e[32972]+88>>2]=e[r+1140>>2]<<5;continue;case 12:if(e[r+192>>2]=r+1140,(0|nt(A,87268,r+192|0))!=1)continue;e[e[32972]+92>>2]=e[r+1140>>2];continue;case 13:if(e[r+208>>2]=r+1140,(0|nt(A,87268,r+208|0))!=1)continue;n=e[32972],(0|(A=e[r+1140>>2]))>=5&&(e[n+108>>2]=1,e[r+1140>>2]=4,A=4),e[n+104>>2]=A+1;continue;case 14:for(e[r+552>>2]=-1,e[r+556>>2]=-1,e[r+544>>2]=-1,e[r+548>>2]=-1,e[r+536>>2]=-1,e[r+540>>2]=-1,e[r+528>>2]=-1,e[r+532>>2]=-1,e[r+240>>2]=At,e[r+244>>2]=SA,e[r+248>>2]=GA,e[r+252>>2]=fA,e[r+256>>2]=nA,e[r+260>>2]=Xe,e[r+520>>2]=-1,e[r+524>>2]=-1,e[r+512>>2]=-1,e[r+516>>2]=-1,e[r+228>>2]=Nt,e[r+232>>2]=bt,e[r+236>>2]=ct,e[r+224>>2]=r+512,nt(A,84222,r+224|0),P=e[32972],A=0,s=e[r+516>>2],a=0;;){if(n=a,o=s,c=A,(0|(a=e[(s=(A<<=2)+(r+512|0)|0)>>2]))==-1&&(a=8e3,e[s>>2]=8e3,c&&(e[(r+512|0)+(4|A)>>2]=e[508+(A+r|0)>>2])),s=e[(r+512|0)+(4|A)>>2],!((0|n)>=(0|(a=(0|a)/8|0))||(0|(m=a-n|0))<=0||(p=n+1|0,A=n,1&m&&(g[344+(n+P|0)|0]=(0|o)>=255?255:o,A=p),(0|a)==(0|p))))for(p=s-o|0;I=P+344|0,f=o+((0|F(p,A-n|0))/(0|m)|0)|0,g[I+A|0]=(0|f)>=255?255:f,f=o+((0|F(p,(De=A+1|0)-n|0))/(0|m)|0)|0,g[I+De|0]=(0|f)>=255?255:f,(0|a)!=(0|(A=A+2|0)););if(A=c+2|0,!(c>>>0<10))break}continue;case 15:if(e[r+272>>2]=r+1140,(0|nt(A,87268,r+272|0))!=1)continue;e[e[32972]+112>>2]=(e[r+1140>>2]<<6)/100;continue;case 16:n=e[32972],e[(a=n+300|0)>>2]=0,e[a+4>>2]=0,e[(s=n+292|0)>>2]=0,e[s+4>>2]=0,e[(o=n+284|0)>>2]=0,e[o+4>>2]=0,e[(c=n+276|0)>>2]=0,e[c+4>>2]=0,e[r+316>>2]=n+304,e[r+312>>2]=a,e[r+308>>2]=n+296,e[r+304>>2]=s,e[r+300>>2]=n+288,e[r+296>>2]=o,e[r+292>>2]=n+280,e[r+288>>2]=c,n=nt(A,84553,r+288|0),A=e[32972],e[A+272>>2]=n,e[A+276>>2]=0-e[A+276>>2],e[A+284>>2]=0-e[A+284>>2],e[A+292>>2]=0-e[A+292>>2],e[A+300>>2]=0-e[A+300>>2];continue;case 17:n=e[32972],e[(a=n+336|0)>>2]=0,e[a+4>>2]=0,e[(s=n+328|0)>>2]=0,e[s+4>>2]=0,e[(o=n+320|0)>>2]=0,e[o+4>>2]=0,e[(c=n+312|0)>>2]=0,e[c+4>>2]=0,e[r+348>>2]=n+340,e[r+344>>2]=a,e[r+340>>2]=n+332,e[r+336>>2]=s,e[r+332>>2]=n+324,e[r+328>>2]=o,e[r+324>>2]=n+316,e[r+320>>2]=c,A=nt(A,84553,r+320|0),e[e[32972]+308>>2]=A;continue;case 36:n=e[32972],e[r+352>>2]=n+120,e[r+356>>2]=n+124,e[r+1140>>2]=nt(A,87106,r+352|0);continue;case 33:e[r+368>>2]=e[32972]+84,nt(A,87268,r+368|0),Ra(3);continue;case 31:n=e[32972],e[(a=n+156|0)>>2]=0,e[a+4>>2]=0,e[(s=n+148|0)>>2]=0,e[s+4>>2]=0,e[(o=n+140|0)>>2]=0,e[o+4>>2]=0,e[(c=n+132|0)>>2]=0,e[c+4>>2]=0,e[r+412>>2]=n+160,e[r+408>>2]=a,e[r+404>>2]=n+152,e[r+400>>2]=s,e[r+396>>2]=n+144,e[r+392>>2]=o,e[r+388>>2]=n+136,e[r+384>>2]=c,nt(A,84553,r+384|0),A=e[32972],e[A+152>>2]=e[A+152>>2]-40;continue;case 32:e[r+416>>2]=145740,nt(A,87268,r+416|0),Ra(3);continue;case 6:case 7:continue}e[r+16>>2]=r+704,hr(Re,87359,r+16|0)}}rn(_)}A:{if((A=e[47192])|Y){if(Y)break A}else A=_e(ye),e[47192]=A;r:{if(!X){if((0|(A=Es(r+896|0)))<0&&(e[r>>2]=r+896,hr(e[30450],87567,r),A=0),e[e[32972]+60>>2]=A,n=e[47192],e[n+292>>2]=A,$n(n,he,4&t),l[132848])break r;T0(e[47192]),n=0;break e}e[e[32972]+60>>2]=0,e[A+292>>2]=0}g[ce+201088|0]=0}n=e[32972]}return q=r+1168|0,n}function nt(A,t,r){var n,a,s,o=0,c=0,f=0,m=0,p=0,I=0,y=0,P=0,Y=0,X=0,_=0,ce=0,he=0,ye=0,De=0,Re=0,Xe=0,nA=0,fA=0;q=s=q-16|0,e[s+12>>2]=r,q=o=q-144|0,n=VA(o,0,144),e[n+76>>2]=-1,e[n+44>>2]=A,e[n+32>>2]=18,e[n+84>>2]=A,o=t,Xe=r,A=0,q=a=q-304|0;e:{A:{r:if(e[n+4>>2]||(js(n),e[n+4>>2])){if(!(t=l[0|o]))break e;a:{s:{c:{o:{for(;;){u:{l:if((0|(t&=255))==32|t-9>>>0<5){for(;t=o,o=o+1|0,(0|(r=l[t+1|0]))==32|r-9>>>0<5;);for(Aa(n,0,0);(0|(r=e[n+4>>2]))==e[n+104>>2]?r=vA(n):(e[n+4>>2]=r+1,r=l[0|r]),(0|r)==32|r-9>>>0<5;);o=e[n+4>>2],(0|(r=e[n+116>>2]))>0|(0|r)>=0&&(o=o-1|0,e[n+4>>2]=o),o=r=o-e[n+44>>2]|0,p=ce+e[n+124>>2]|0,p=(c=r>>31)+((r=Y+e[n+120>>2]|0)>>>0<Y>>>0?p+1|0:p)|0,ce=(Y=r+o|0)>>>0<r>>>0?p+1|0:p}else{i:{p:{C:{if(l[0|o]==37){if((0|(t=l[o+1|0]))==42)break C;if((0|t)!=37)break p}if(Aa(n,0,0),l[0|o]!=37)(0|(t=e[n+4>>2]))==e[n+104>>2]?t=vA(n):(e[n+4>>2]=t+1,t=l[0|t]);else{for(;(0|(t=e[n+4>>2]))==e[n+104>>2]?t=vA(n):(e[n+4>>2]=t+1,t=l[0|t]),(0|t)==32|t-9>>>0<5;);o=o+1|0}if(l[0|o]!=(0|t)){if((0|(r=e[n+116>>2]))>0|(0|r)>=0&&(e[n+4>>2]=e[n+4>>2]-1),(0|t)>=0||(f=0,nA))break e;break r}m=(c=t=e[n+4>>2]-e[n+44>>2]|0)>>31,t=ce+e[n+124>>2]|0,f=((r=Y+e[n+120>>2]|0)>>>0<Y>>>0?t+1|0:t)+m|0,ce=(Y=r+c|0)>>>0<r>>>0?f+1|0:f,t=o;break l}I=0,t=o+2|0;break i}l[o+2|0]!=36|t-48>>>0>=10?(I=e[Xe>>2],Xe=Xe+4|0,t=o+1|0):(t=l[o+1|0]-48|0,e[12+(r=q-16|0)>>2]=Xe,t=(t>>>0>1?(t<<2)-4|0:0)+Xe|0,e[r+8>>2]=t+4,I=e[t>>2],t=o+3|0)}if(y=0,o=0,l[0|t]-48>>>0<10)for(;o=(l[0|t]+F(o,10)|0)-48|0,r=l[t+1|0],t=t+1|0,r-48>>>0<10;);(0|(X=l[0|t]))==109&&(P=0,y=!!(0|I),X=l[t+1|0],A=0,t=t+1|0),t=(r=t)+1|0,c=3,f=y;i:{p:switch(X-65|0){case 39:c=r+2|0,t=(r=l[r+1|0]==104)?c:t,c=r?-2:-1;break i;case 43:c=r+2|0,t=(r=l[r+1|0]==108)?c:t,c=r?3:1;break i;case 51:case 57:c=1;break i;case 11:c=2;break i;case 41:break i;case 0:case 2:case 4:case 5:case 6:case 18:case 23:case 26:case 32:case 34:case 35:case 36:case 37:case 38:case 40:case 45:case 46:case 47:case 50:case 52:case 55:break p;default:break a}c=0,t=r}f=c,De=(c=(47&(r=l[0|t]))==3)?1:f;i:if((0|(ye=c?32|r:r))!=91){p:{if((0|ye)!=110){if((0|ye)!=99)break p;o=(0|o)<=1?1:o;break i}M0(I,De,Y,ce);break l}for(Aa(n,0,0);(0|(r=e[n+4>>2]))==e[n+104>>2]?r=vA(n):(e[n+4>>2]=r+1,r=l[0|r]),(0|r)==32|r-9>>>0<5;);r=e[n+4>>2],(0|(c=e[n+116>>2]))>0|(0|c)>=0&&(r=r-1|0,e[n+4>>2]=r),c=r=r-e[n+44>>2]|0,p=ce+e[n+124>>2]|0,ce=(f=r>>31)+((r=Y+e[n+120>>2]|0)>>>0<Y>>>0?p+1|0:p)|0,ce=(Y=r+c|0)>>>0<r>>>0?ce+1|0:ce}if(_=o,Aa(n,o,he=o>>31),(0|(r=e[n+4>>2]))==e[n+104>>2]){if((0|vA(n))<0)break s}else e[n+4>>2]=r+1;(0|(r=e[n+116>>2]))>0|(0|r)>=0&&(e[n+4>>2]=e[n+4>>2]-1),r=16;i:{p:{C:{m:{switch(ye-88|0){default:if((r=ye-65|0)>>>0>6|!(1<<r&113))break i;case 9:case 13:case 14:case 15:if(NA(a+8|0,n,De,0),r=e[n+4>>2]-e[n+44>>2]|0,e[n+120>>2]!=(0-r|0)|e[n+124>>2]!=(0-((r>>31)+!!(0|r)|0)|0))break C;break c;case 3:case 11:case 27:if((16|ye)==115){if(VA(a+32|0,-1,257),g[a+32|0]=0,(0|ye)!=115)break p;g[a+65|0]=0,g[a+46|0]=0,b[a+42>>1]=0,b[a+44>>1]=0;break p}VA(a+32|0,m=(0|(c=l[t+1|0]))==94,257),g[a+32|0]=0,r=m?t+2|0:t+1|0;b:{h:{E:{if((0|(t=l[(m?2:1)+t|0]))!=45){if((0|t)==93)break E;c=(0|c)!=94,t=r;break b}c=(0|c)!=94,g[a+78|0]=c;break h}c=(0|c)!=94,g[a+126|0]=c}t=r+1|0}for(;;){if((0|(r=l[0|t]))==45){if(r=45,!(!(m=l[t+1|0])|(0|m)==93)){if(f=t+1|0,m>>>0<=(t=l[t-1|0])>>>0)r=m;else for(;g[(t=t+1|0)+(a+32|0)|0]=c,(r=l[0|f])>>>0>t>>>0;);t=f}}else{if(!r)break s;if((0|r)==93)break p}g[33+(r+a|0)|0]=c,t=t+1|0}case 23:r=8;break m;case 12:case 29:r=10;break m;case 1:case 2:case 4:case 5:case 6:case 7:case 8:case 10:case 16:case 18:case 19:case 20:case 21:case 22:case 25:case 26:case 28:case 30:case 31:break i;case 0:case 24:case 32:break m;case 17:}r=0}m=0,p=0,c=0,f=0,X=0,q=Re=q-16|0;m:if((0|r)!=1&r>>>0<=36){for(;(0|(o=e[n+4>>2]))==e[n+104>>2]?o=vA(n):(e[n+4>>2]=o+1,o=l[0|o]),(0|o)==32|o-9>>>0<5;);b:{h:switch(o-43|0){case 0:case 2:break h;default:break b}X=(0|o)==45?-1:0,(0|(o=e[n+4>>2]))==e[n+104>>2]?o=vA(n):(e[n+4>>2]=o+1,o=l[0|o])}b:{h:{E:{w:{if(!(!!(0|r)&(0|r)!=16|(0|o)!=48)){if((0|(o=e[n+4>>2]))==e[n+104>>2]?o=vA(n):(e[n+4>>2]=o+1,o=l[0|o]),(-33&o)==88){if(r=16,(0|(o=e[n+4>>2]))==e[n+104>>2]?o=vA(n):(e[n+4>>2]=o+1,o=l[0|o]),l[o+121329|0]<16)break E;(0|(r=e[n+116>>2]))>0|(0|r)>=0&&(e[n+4>>2]=e[n+4>>2]-1),Aa(n,0,0);break m}if(r)break w;r=8;break E}if(!((r=r||10)>>>0>l[o+121329|0])){(0|(r=e[n+116>>2]))>0|(0|r)>=0&&(e[n+4>>2]=e[n+4>>2]-1),Aa(n,0,0),e[56798]=28;break m}}if((0|r)==10){if((c=o-48|0)>>>0<=9){for(r=0;f=(r=F(r,10)+c|0)>>>0<429496729,(0|(o=e[n+4>>2]))==e[n+104>>2]?o=vA(n):(e[n+4>>2]=o+1,o=l[0|o]),f&(c=o-48|0)>>>0<=9;);m=r}w:if(!(c>>>0>9)){for(r=kt(m,0,10,0),f=J;;){if(p=f,f=(0|(p=(m=r+c|0)>>>0<c>>>0?p+1|0:p))==429496729&m>>>0>=2576980378|p>>>0>429496729,(0|(r=e[n+4>>2]))==e[n+104>>2]?o=vA(n):(e[n+4>>2]=r+1,o=l[0|r]),f|(c=o-48|0)>>>0>9)break w;if(r=kt(m,p,10,0),!((0|(f=J))==-1&~c>>>0>=r>>>0|(0|f)!=-1))break}r=10;break h}if(r=10,c>>>0<=9)break h;break b}}if(r-1&r){if((f=l[o+121329|0])>>>0<r>>>0){for(;m=(c=F(r,c)+f|0)>>>0<119304647,(0|(o=e[n+4>>2]))==e[n+104>>2]?o=vA(n):(e[n+4>>2]=o+1,o=l[0|o]),m&(f=l[o+121329|0])>>>0<r>>>0;);m=c}if(r>>>0<=f>>>0)break h;for(;;){if(c=kt(m,p,r,0),(0|(_=J))==-1&~(f&=255)>>>0<c>>>0||(p=_,p=(m=c+f|0)>>>0<f>>>0?p+1|0:p,(0|(o=e[n+4>>2]))==e[n+104>>2]?o=vA(n):(e[n+4>>2]=o+1,o=l[0|o]),r>>>0<=(f=l[o+121329|0])>>>0))break h;if(Jr(Re,r,0,0,0,m,p,0,0),e[Re+8>>2]|e[Re+12>>2])break}}else{if(_=g[84400+(F(r,23)>>>5&7)|0],(c=l[o+121329|0])>>>0<r>>>0){for(;m=(f=f<<_|c)>>>0<134217728,(0|(o=e[n+4>>2]))==e[n+104>>2]?o=vA(n):(e[n+4>>2]=o+1,o=l[0|o]),m&(c=l[o+121329|0])>>>0<r>>>0;);m=f}if(!(r>>>0<=c>>>0||(he=31&_,(63&_)>>>0>=32?(f=0,he=-1>>>he|0):he=(f=-1>>>he|0)|(1<<he)-1<<32-he,!f&m>>>0>he>>>0)))for(;;){if(fA=255&c,c=m,o=31&_,(63&_)>>>0>=32?(p=c<<o,o=0):(p=(1<<o)-1&c>>>32-o|p<<o,o=c<<o),m=fA|o,(0|(o=e[n+4>>2]))==e[n+104>>2]?o=vA(n):(e[n+4>>2]=o+1,o=l[0|o]),r>>>0<=(c=l[o+121329|0])>>>0)break h;if(!((0|f)==(0|p)&m>>>0<=he>>>0|f>>>0>p>>>0))break}}}if(!(l[o+121329|0]>=r>>>0)){for(;(0|(o=e[n+4>>2]))==e[n+104>>2]?o=vA(n):(e[n+4>>2]=o+1,o=l[0|o]),l[o+121329|0]<r>>>0;);e[56798]=68,X=0,m=-1,p=-1}}(0|(r=e[n+116>>2]))>0|(0|r)>=0&&(e[n+4>>2]=e[n+4>>2]-1),m=(r=m^X)-X|0,p=((o=X>>31)^p)-((r>>>0<X>>>0)+o|0)|0}else e[56798]=28;if(q=Re+16|0,r=e[n+4>>2]-e[n+44>>2]|0,e[n+120>>2]==(0-r|0)&e[n+124>>2]==(0-((r>>31)+!!(0|r)|0)|0))break c;if(!(!I|(0|ye)!=112)){e[I>>2]=m;break i}M0(I,De,m,p);break i}if(!I)break i;o=e[a+16>>2],r=e[a+20>>2],c=e[a+8>>2],y=e[a+12>>2];C:switch(0|De){case 0:q=p=q-32|0;m:if(0|(f=(m=2147483647&r)-1065418752|0)>>>0<(_=m-1082064896|0)>>>0){if(m=(33554431&r)<<7|o>>>25,_=f=0,!(!f&(0|(o&=33554431))==16777216?!(c|y):!f&o>>>0<16777216)){f=m+1073741825|0;break m}if(f=m+1073741824|0,16777216^o|c|y|_)break m;f=(1&m)+f|0}else(!o&(0|m)==2147418112?!(c|y):m>>>0<2147418112)?(f=2139095040,m>>>0>1082064895||(f=0,(m=m>>>16|0)>>>0<16145||(An(p+16|0,c,y,o,f=65535&r|65536,m-16129|0),Hn(p,c,y,o,f,16257-m|0),o=e[p+8>>2],f=(33554431&e[p+12>>2])<<7|o>>>25,m=e[p>>2]|!!(e[p+16>>2]|e[p+24>>2]|e[p+20>>2]|e[p+28>>2]),y=e[p+4>>2],(!(c=0)&(0|(o&=33554431))==16777216?!(m|y):!c&o>>>0<16777216)?16777216^o|m|c|y||(f=(1&f)+f|0):f=f+1|0))):f=4194303&((33554431&r)<<7|o>>>25)|2143289344;q=p+32|0,e[I>>2]=-2147483648&r|f;break i;case 1:D[I>>3]=Qa(c,y,o,r);break i;case 2:break C;default:break i}e[I>>2]=c,e[I+4>>2]=y,e[I+8>>2]=o,e[I+12>>2]=r;break i}c=(Re=(0|ye)!=99)?31:o+1|0;p:if((0|De)!=1){if(y){if(o=0,!(r=It(c)))break o;for(;;){for(A=r;;){if((0|(r=e[n+4>>2]))==e[n+104>>2]?r=vA(n):(e[n+4>>2]=r+1,r=l[0|r]),!l[33+(r+a|0)|0]){c=0,P=A;break p}if(g[A+o|0]=r,(0|c)==(0|(o=o+1|0)))break}if(f=1,!(r=qr(A,c=c<<1|1)))break}P=A,A=0;break a}if(o=0,I)for(;;){if((0|(A=e[n+4>>2]))==e[n+104>>2]?A=vA(n):(e[n+4>>2]=A+1,A=l[0|A]),!l[33+(A+a|0)|0]){c=0,P=A=I;break p}g[o+I|0]=A,o=o+1|0}for(;(0|(A=e[n+4>>2]))==e[n+104>>2]?A=vA(n):(e[n+4>>2]=A+1,A=l[0|A]),l[33+(A+a|0)|0];);A=0,P=0,c=0}else{if(r=I,y&&!(r=It(c<<2)))break o;for(e[a+296>>2]=0,e[a+300>>2]=0,o=0;;){A=r;C:{for(;;){if((0|(r=e[n+4>>2]))==e[n+104>>2]?r=vA(n):(e[n+4>>2]=r+1,r=l[0|r]),!l[33+(r+a|0)|0])break C;g[a+27|0]=r,m=a+28|0,r=e[(f=(r=a+296|0)||228604)>>2];m:{b:{h:{E:{if(!(P=a+27|0)){if(r)break E;r=0;break m}if(!r){if((0|(p=(r=l[0|P])<<24>>24))>=0){m&&(e[m>>2]=r),r=!!(0|p);break m}if(!e[e[56841]>>2]){if(r=1,!m)break h;e[m>>2]=57343&p,r=1;break m}if((r=r-194|0)>>>0>50)break E;r=e[124752+(r<<2)>>2];break b}if(X=1,!(((De=(p=l[0|P])>>>3|0)-16|(r>>26)+De)>>>0>7))for(;;){if(X=X-1|0,(0|(r=p-128|r<<6))>=0){e[f>>2]=0,m&&(e[m>>2]=r),r=1-X|0;break m}if(!X)break b;if((192&(p=l[0|(P=P+1|0)]))!=128)break}}e[f>>2]=0,e[56798]=25,r=-1}break m}e[f>>2]=r,r=-2}if((0|r)!=-2){if(P=0,(0|r)==-1)break s;if(A&&(e[(o<<2)+A>>2]=e[a+28>>2],o=o+1|0),!(!y|(0|o)!=(0|c)))break}}if(f=1,r=qr(A,(c=c<<1|1)<<2))continue;break a}break}if(P=0,c=A,a+296|0&&e[a+296>>2])break s}if(r=e[n+4>>2],(0|(m=e[n+116>>2]))>0|(0|m)>=0&&(r=r-1|0,e[n+4>>2]=r),r=(m=r-e[n+44>>2]|0)+e[n+120>>2]|0,p=e[n+124>>2]+(m>>31)|0,!((p=r>>>0<m>>>0?p+1|0:p)|r)|!(Re|(0|r)==(0|_)&(0|p)==(0|he)))break u;y&&(e[I>>2]=A),(0|ye)!=99&&(c&&(e[(o<<2)+c>>2]=0),P?g[o+P|0]=0:P=0),A=c}o=r=e[n+4>>2]-e[n+44>>2]|0,f=ce+e[n+124>>2]|0,ce=(c=r>>31)+((r=Y+e[n+120>>2]|0)>>>0<Y>>>0?f+1|0:f)|0,ce=(Y=r+o|0)>>>0<r>>>0?ce+1|0:ce,nA=!!(0|I)+nA|0}if(o=t+1|0,t=l[t+1|0])continue;break e}break}A=c;break c}f=1,P=0,A=0;break a}f=y;break A}f=y}if(nA)break A}nA=-1}f&&(yt(P),yt(A))}return q=a+304|0,q=n+144|0,q=s+16|0,nA}function It(A){var t,r=0,n=0,a=0,s=0,o=0,c=0,f=0,m=0,p=0,I=0;q=t=q-16|0;e:{A:{r:{a:{s:{c:{o:{u:{l:{if((A|=0)>>>0<=244){if(3&(r=(c=e[57152])>>>(n=(f=A>>>0<11?16:A+11&-8)>>>3|0)|0)){r=228648+(A=(n=n+(1&~r)|0)<<3)|0,a=e[A+228656>>2],(0|r)!=(0|(A=e[a+8>>2]))?(e[A+12>>2]=r,e[r+8>>2]=A):e[57152]=an(-2,n)&c,A=a+8|0,r=n<<3,e[a+4>>2]=3|r,e[4+(r=r+a|0)>>2]=1|e[r+4>>2];break e}if((I=e[57154])>>>0>=f>>>0)break l;if(r){r=228648+(A=(a=Ps(0-(A=(0-(A=2<<n)|A)&r<<n)&A))<<3)|0,s=e[A+228656>>2],(0|r)!=(0|(A=e[s+8>>2]))?(e[A+12>>2]=r,e[r+8>>2]=A):(c=an(-2,a)&c,e[57152]=c),e[s+4>>2]=3|f,a=(A=a<<3)-f|0,e[4+(n=s+f|0)>>2]=1|a,e[A+s>>2]=a,I&&(r=228648+(-8&I)|0,o=e[57157],(A=1<<(I>>>3))&c?A=e[r+8>>2]:(e[57152]=A|c,A=r),e[r+8>>2]=o,e[A+12>>2]=o,e[o+12>>2]=r,e[o+8>>2]=A),A=s+8|0,e[57157]=n,e[57154]=a;break e}if(!(p=e[57153]))break l;for(n=e[228912+(Ps(0-p&p)<<2)>>2],o=(-8&e[n+4>>2])-f|0,r=n;(A=e[r+16>>2])||(A=e[r+20>>2]);)o=(a=(r=(-8&e[A+4>>2])-f|0)>>>0<o>>>0)?r:o,n=a?A:n,r=A;if(m=e[n+24>>2],(0|(a=e[n+12>>2]))!=(0|n)){A=e[n+8>>2],e[A+12>>2]=a,e[a+8>>2]=A;break A}if(!(A=e[(r=n+20|0)>>2])){if(!(A=e[n+16>>2]))break u;r=n+16|0}for(;s=r,a=A,(A=e[(r=A+20|0)>>2])||(r=a+16|0,A=e[a+16>>2]););e[s>>2]=0;break A}if(f=-1,!(A>>>0>4294967231)&&(f=-8&(A=A+11|0),p=e[57153])){o=0-f|0,c=0,f>>>0<256||(c=31,f>>>0>16777215||(c=62+((f>>>38-(A=Oe(A>>>8|0))&1)-(A<<1)|0)|0));i:{p:{if(r=e[228912+(c<<2)>>2])for(A=0,n=f<<((0|c)!=31?25-(c>>>1|0):0);;){if(!((s=(-8&e[r+4>>2])-f|0)>>>0>=o>>>0||(a=r,o=s,s))){o=0,A=r;break p}if(s=e[r+20>>2],r=e[16+((n>>>29&4)+r|0)>>2],A=s?(0|s)==(0|r)?A:s:A,n<<=1,!r)break}else A=0;if(!(A|a)){if(a=0,!(A=(0-(A=2<<c)|A)&p))break l;A=e[228912+(Ps(A&0-A)<<2)>>2]}if(!A)break i}for(;o=(n=(r=(-8&e[A+4>>2])-f|0)>>>0<o>>>0)?r:o,a=n?A:a,A=(r=e[A+16>>2])||e[A+20>>2];);}if(!(!a|e[57154]-f>>>0<=o>>>0)){if(c=e[a+24>>2],(0|a)!=(0|(n=e[a+12>>2]))){A=e[a+8>>2],e[A+12>>2]=n,e[n+8>>2]=A;break r}if(!(A=e[(r=a+20|0)>>2])){if(!(A=e[a+16>>2]))break o;r=a+16|0}for(;s=r,n=A,(A=e[(r=A+20|0)>>2])||(r=n+16|0,A=e[n+16>>2]););e[s>>2]=0;break r}}}if((A=e[57154])>>>0>=f>>>0){a=e[57157],(r=A-f|0)>>>0>=16?(e[4+(n=a+f|0)>>2]=1|r,e[A+a>>2]=r,e[a+4>>2]=3|f):(e[a+4>>2]=3|A,e[4+(A=A+a|0)>>2]=1|e[A+4>>2],n=0,r=0),e[57154]=r,e[57157]=n,A=a+8|0;break e}if((m=e[57155])>>>0>f>>>0){r=m-f|0,e[57155]=r,A=(n=e[57158])+f|0,e[57158]=A,e[A+4>>2]=1|r,e[n+4>>2]=3|f,A=n+8|0;break e}if(A=0,p=f+47|0,e[57270]?n=e[57272]:(e[57273]=-1,e[57274]=-1,e[57271]=4096,e[57272]=4096,e[57270]=t+12&-16^1431655768,e[57275]=0,e[57263]=0,n=4096),(r=(s=p+n|0)&(o=0-n|0))>>>0<=f>>>0||(a=e[57262])&&a>>>0<(c=(n=e[57260])+r|0)>>>0|n>>>0>=c>>>0)break e;l:{if(!(4&l[229052])){i:{p:{C:{m:{if(a=e[57158])for(A=229056;;){if((n=e[A>>2])>>>0<=a>>>0&a>>>0<n+e[A+4>>2]>>>0)break m;if(!(A=e[A+8>>2]))break}if((0|(n=cs(0)))==-1||(c=r,(A=(a=e[57271])-1|0)&n&&(c=(r-n|0)+(A+n&0-a)|0),c>>>0<=f>>>0)||(a=e[57262])&&a>>>0<(o=(A=e[57260])+c|0)>>>0|A>>>0>=o>>>0)break i;if((0|n)!=(0|(A=cs(c))))break C;break l}if((0|(n=cs(c=o&s-m)))==(e[A>>2]+e[A+4>>2]|0))break p;A=n}if((0|A)==-1)break i;if(f+48>>>0<=c>>>0){n=A;break l}if((0|cs(n=(n=e[57272])+(p-c|0)&0-n))==-1)break i;c=n+c|0,n=A;break l}if((0|n)!=-1)break l}e[57263]=4|e[57263]}if((0|(n=cs(r)))==-1|(0|(A=cs(0)))==-1|A>>>0<=n>>>0||(c=A-n|0)>>>0<=f+40>>>0)break a}A=e[57260]+c|0,e[57260]=A,A>>>0>ue[57261]&&(e[57261]=A);l:{if(s=e[57158]){for(A=229056;;){if(((a=e[A>>2])+(r=e[A+4>>2])|0)==(0|n))break l;if(!(A=e[A+8>>2]))break}break c}for((A=e[57156])>>>0<=n>>>0&&A||(e[57156]=n),A=0,e[57265]=c,e[57264]=n,e[57160]=-1,e[57161]=e[57270],e[57267]=0;r=228648+(a=A<<3)|0,e[a+228656>>2]=r,e[a+228660>>2]=r,(0|(A=A+1|0))!=32;);r=(a=c-40|0)-(A=n+8&7?-8-n&7:0)|0,e[57155]=r,A=A+n|0,e[57158]=A,e[A+4>>2]=1|r,e[4+(n+a|0)>>2]=40,e[57159]=e[57274];break s}if(8&l[A+12|0]|a>>>0>s>>>0|n>>>0<=s>>>0)break c;e[A+4>>2]=r+c,n=(A=s+8&7?-8-s&7:0)+s|0,e[57158]=n,A=(r=e[57155]+c|0)-A|0,e[57155]=A,e[n+4>>2]=1|A,e[4+(r+s|0)>>2]=40,e[57159]=e[57274];break s}a=0;break A}n=0;break r}ue[57156]>n>>>0&&(e[57156]=n),r=n+c|0,A=229056;c:{o:{u:{l:{i:{p:{for(;;){if((0|r)!=e[A>>2]){if(A=e[A+8>>2])continue;break p}break}if(!(8&l[A+12|0]))break i}for(A=229056;;){if((r=e[A>>2])>>>0<=s>>>0&&(o=r+e[A+4>>2]|0)>>>0>s>>>0)break l;A=e[A+8>>2]}}if(e[A>>2]=n,e[A+4>>2]=e[A+4>>2]+c,e[4+(p=(n+8&7?-8-n&7:0)+n|0)>>2]=3|f,A=(c=r+(r+8&7?-8-r&7:0)|0)-(m=f+p|0)|0,(0|s)==(0|c)){e[57158]=m,A=e[57155]+A|0,e[57155]=A,e[m+4>>2]=1|A;break o}if(e[57157]==(0|c)){e[57157]=m,A=e[57154]+A|0,e[57154]=A,e[m+4>>2]=1|A,e[A+m>>2]=A;break o}if((3&(o=e[c+4>>2]))==1){s=-8&o;i:if(o>>>0<=255){if(a=e[c+8>>2],r=o>>>3|0,(0|(n=e[c+12>>2]))==(0|a)){e[57152]=e[57152]&an(-2,r);break i}e[a+12>>2]=n,e[n+8>>2]=a}else{if(f=e[c+24>>2],(0|c)==(0|(n=e[c+12>>2])))if((r=e[(o=c+20|0)>>2])||(r=e[(o=c+16|0)>>2])){for(;a=o,(r=e[(o=(n=r)+20|0)>>2])||(o=n+16|0,r=e[n+16>>2]););e[a>>2]=0}else n=0;else r=e[c+8>>2],e[r+12>>2]=n,e[n+8>>2]=r;if(f){a=e[c+28>>2];p:{if(e[(r=228912+(a<<2)|0)>>2]==(0|c)){if(e[r>>2]=n,n)break p;e[57153]=e[57153]&an(-2,a);break i}if(e[f+(e[f+16>>2]==(0|c)?16:20)>>2]=n,!n)break i}e[n+24>>2]=f,(r=e[c+16>>2])&&(e[n+16>>2]=r,e[r+24>>2]=n),(r=e[c+20>>2])&&(e[n+20>>2]=r,e[r+24>>2]=n)}}o=e[4+(c=s+c|0)>>2],A=A+s|0}if(e[c+4>>2]=-2&o,e[m+4>>2]=1|A,e[A+m>>2]=A,A>>>0<=255){r=228648+(-8&A)|0,(n=e[57152])&(A=1<<(A>>>3))?A=e[r+8>>2]:(e[57152]=A|n,A=r),e[r+8>>2]=m,e[A+12>>2]=m,e[m+12>>2]=r,e[m+8>>2]=A;break o}if(o=31,A>>>0<=16777215&&(o=62+((A>>>38-(r=Oe(A>>>8|0))&1)-(r<<1)|0)|0),e[m+28>>2]=o,e[m+16>>2]=0,e[m+20>>2]=0,r=228912+(o<<2)|0,(a=e[57153])&(n=1<<o)){for(o=A<<((0|o)!=31?25-(o>>>1|0):0),n=e[r>>2];;){if(r=n,(-8&e[n+4>>2])==(0|A))break u;if(n=o>>>29|0,o<<=1,!(n=e[16+(a=(4&n)+r|0)>>2]))break}e[a+16>>2]=m}else e[57153]=n|a,e[r>>2]=m;e[m+24>>2]=r,e[m+12>>2]=m,e[m+8>>2]=m;break o}for(r=(a=c-40|0)-(A=n+8&7?-8-n&7:0)|0,e[57155]=r,A=A+n|0,e[57158]=A,e[A+4>>2]=1|r,e[4+(n+a|0)>>2]=40,e[57159]=e[57274],e[(a=(A=(o+(o-39&7?39-o&7:0)|0)-47|0)>>>0<s+16>>>0?s:A)+4>>2]=27,A=e[57267],e[a+16>>2]=e[57266],e[a+20>>2]=A,A=e[57265],e[a+8>>2]=e[57264],e[a+12>>2]=A,e[57266]=a+8,e[57265]=c,e[57264]=n,e[57267]=0,A=a+24|0;e[A+4>>2]=7,r=A+8|0,A=A+4|0,r>>>0<o>>>0;);if((0|a)==(0|s))break s;if(e[a+4>>2]=-2&e[a+4>>2],o=a-s|0,e[s+4>>2]=1|o,e[a>>2]=o,o>>>0<=255){r=228648+(-8&o)|0,(n=e[57152])&(A=1<<(o>>>3))?A=e[r+8>>2]:(e[57152]=A|n,A=r),e[r+8>>2]=s,e[A+12>>2]=s,e[s+12>>2]=r,e[s+8>>2]=A;break s}if(A=31,o>>>0<=16777215&&(A=62+((o>>>38-(A=Oe(o>>>8|0))&1)-(A<<1)|0)|0),e[s+28>>2]=A,e[s+16>>2]=0,e[s+20>>2]=0,r=228912+(A<<2)|0,(a=e[57153])&(n=1<<A)){for(A=o<<((0|A)!=31?25-(A>>>1|0):0),a=e[r>>2];;){if((0|o)==(-8&e[(r=a)+4>>2]))break c;if(n=A>>>29|0,A<<=1,!(a=e[16+(n=(4&n)+r|0)>>2]))break}e[n+16>>2]=s}else e[57153]=n|a,e[r>>2]=s;e[s+24>>2]=r,e[s+12>>2]=s,e[s+8>>2]=s;break s}A=e[r+8>>2],e[A+12>>2]=m,e[r+8>>2]=m,e[m+24>>2]=0,e[m+12>>2]=r,e[m+8>>2]=A}A=p+8|0;break e}A=e[r+8>>2],e[A+12>>2]=s,e[r+8>>2]=s,e[s+24>>2]=0,e[s+12>>2]=r,e[s+8>>2]=A}if(!((A=e[57155])>>>0<=f>>>0)){r=A-f|0,e[57155]=r,A=(n=e[57158])+f|0,e[57158]=A,e[A+4>>2]=1|r,e[n+4>>2]=3|f,A=n+8|0;break e}}e[56798]=48,A=0;break e}r:if(c){r=e[a+28>>2];a:{if(e[(A=228912+(r<<2)|0)>>2]==(0|a)){if(e[A>>2]=n,n)break a;p=an(-2,r)&p,e[57153]=p;break r}if(e[c+(e[c+16>>2]==(0|a)?16:20)>>2]=n,!n)break r}e[n+24>>2]=c,(A=e[a+16>>2])&&(e[n+16>>2]=A,e[A+24>>2]=n),(A=e[a+20>>2])&&(e[n+20>>2]=A,e[A+24>>2]=n)}r:if(o>>>0<=15)A=o+f|0,e[a+4>>2]=3|A,e[4+(A=A+a|0)>>2]=1|e[A+4>>2];else if(e[a+4>>2]=3|f,e[4+(s=a+f|0)>>2]=1|o,e[s+o>>2]=o,o>>>0<=255)r=228648+(-8&o)|0,(n=e[57152])&(A=1<<(o>>>3))?A=e[r+8>>2]:(e[57152]=A|n,A=r),e[r+8>>2]=s,e[A+12>>2]=s,e[s+12>>2]=r,e[s+8>>2]=A;else{A=31,o>>>0<=16777215&&(A=62+((o>>>38-(A=Oe(o>>>8|0))&1)-(A<<1)|0)|0),e[s+28>>2]=A,e[s+16>>2]=0,e[s+20>>2]=0,r=228912+(A<<2)|0;a:{if((n=1<<A)&p){for(A=o<<((0|A)!=31?25-(A>>>1|0):0),f=e[r>>2];;){if((-8&e[(r=f)+4>>2])==(0|o))break a;if(n=A>>>29|0,A<<=1,!(f=e[16+(n=(4&n)+r|0)>>2]))break}e[n+16>>2]=s}else e[57153]=n|p,e[r>>2]=s;e[s+24>>2]=r,e[s+12>>2]=s,e[s+8>>2]=s;break r}A=e[r+8>>2],e[A+12>>2]=s,e[r+8>>2]=s,e[s+24>>2]=0,e[s+12>>2]=r,e[s+8>>2]=A}A=a+8|0;break e}A:if(m){r=e[n+28>>2];r:{if(e[(A=228912+(r<<2)|0)>>2]==(0|n)){if(e[A>>2]=a,a)break r;e[57153]=an(-2,r)&p;break A}if(e[m+(e[m+16>>2]==(0|n)?16:20)>>2]=a,!a)break A}e[a+24>>2]=m,(A=e[n+16>>2])&&(e[a+16>>2]=A,e[A+24>>2]=a),(A=e[n+20>>2])&&(e[a+20>>2]=A,e[A+24>>2]=a)}o>>>0<=15?(A=o+f|0,e[n+4>>2]=3|A,e[4+(A=A+n|0)>>2]=1|e[A+4>>2]):(e[n+4>>2]=3|f,e[4+(a=n+f|0)>>2]=1|o,e[a+o>>2]=o,I&&(r=228648+(-8&I)|0,s=e[57157],(A=1<<(I>>>3))&c?A=e[r+8>>2]:(e[57152]=A|c,A=r),e[r+8>>2]=s,e[A+12>>2]=s,e[s+12>>2]=r,e[s+8>>2]=A),e[57157]=a,e[57154]=o),A=n+8|0}return q=t+16|0,0|A}function Ar(A,t,r,n,a){var s,o=0,c=0,f=0,m=0,p=0,I=0,y=0,P=0,Y=0,X=0,_=0,ce=0,he=0,ye=0,De=0,Re=0,Xe=0;q=s=q-544|0,VA(s+320|0,0,100),VA(s+208|0,0,100),m=r?e[r>>2]:m,Y=e[A+12>>2],p=e[36115];e:{A:{r:{a:{for(;;){if(o=(0|(o=l[t+c|0]))>=(0|p)?13:o,g[s+c|0]=o,!o){o=c;break a}if(f=(0|p)<=(0|(f=l[(o=1|c)+t|0]))?13:f,g[o+s|0]=f,!f)break a;if((0|(c=c+2|0))==200)break}c=198,_=l[s+199|0];break r}if(!o)break A;_=l[s+(c=o-1|0)|0],(0|o)!=1&&(c=o-2|0)}if(De=8&m,e[s+536>>2]=(De>>>3|0?3:7)&m,m=l[s+c|0],p=1,y=(0|(I=xs(A,s,s+432|0,s+540|0,s+536|0,1)))>=0?I:0,he=l[0|s])for(c=s,o=he;o=e[144464+((255&o)<<2)>>2],l[o+11|0]==2&&(1048576&(o=e[o+4>>2])||(f=(2097152&o)>>>21|0,f|=o=l[e[144464+(l[0|(P=c+1|0)]<<2)>>2]+10|0]==12,g[(s+208|0)+p|0]=f,X=e[144464+(l[(o?2:1)+c|0]<<2)>>2],f=l[X+11|0]-10>>>0<4294967289|!(32&l[X+6|0])&l[e[144464+(l[(o?3:2)+c|0]<<2)>>2]+11|0]==2?f:f?2:1,c=o?P:c,g[(s+320|0)+p|0]=f,p=p+1|0)),o=l[0|(c=c+1|0)];);c=r=r?y:I;r:{a:{s:{c:{o:{u:{l:{i:{p:{C:{m:{b:switch(e[A+8>>2]-1|0){case 11:if((0|(r=e[s+540>>2]))<2)break p;if(c=1,y=1&(o=r-1|0),(0|r)!=2)break m;p=0;break C;case 8:if((0|(o=e[s+540>>2]))<2)break a;if(p=3&(f=o-1|0),c=1,o-2>>>0>=3)for(y=-4&f,f=0;m=g[0|(o=(s+432|0)+c|0)],g[0|o]=(0|m)<0?4:m,m=g[o+1|0],g[o+1|0]=(0|m)<0?4:m,m=g[o+2|0],g[o+2|0]=(0|m)<0?4:m,m=o,o=g[o+3|0],g[m+3|0]=(0|o)<0?4:o,c=c+4|0,(0|y)!=(0|(f=f+4|0)););if(!p)break a;for(o=0;f=g[0|(m=(s+432|0)+c|0)],g[0|m]=(0|f)<0?4:f,c=c+1|0,(0|p)!=(0|(o=o+1|0)););break a;case 7:if(!l[s+322|0]|g[s+321|0]>0)break a;case 0:if(e[s+536>>2]|e[s+540>>2]<3)break a;if(e[s+536>>2]=2,c=4,r)break r;g[s+434|0]=4;break r;case 1:if(e[s+536>>2])break r;h:{E:{if((0|(p=e[s+540>>2]))>=3){r=p-2|0,e[s+536>>2]=r,c=r;w:if(512&Y&&(o=e[144464+(_<<2)>>2],(0|(f=l[o+11|0]))!=2)){c=e[o>>2],o=s;y:{L:{if((0|(y=e[A+212>>2]))!=26977){if((0|y)!=24942)break L;switch(c-110|0){case 0:case 5:if(c=r,l[e[144464+(m<<2)>>2]+11|0]==2)break w}c=p-1|0;break y}if((0|c)==115&&(c=r,l[e[144464+(m<<2)>>2]+11|0]==2))break w;c=p-1|0;break y}L:{W:{if((0|c)==115){if(c=r,(0|(f=l[e[144464+(m<<2)>>2]+11|0]))!=8)break W;break w}if((0|f)!=8)break L;f=l[e[144464+(m<<2)>>2]+11|0]}if(c=r,(255&f)==2)break w}c=p-1|0}e[o+536>>2]=c}if(524288&Y&&(g[(o=p-1|0)+(p=s+208|0)|0]<=g[r+p|0]||(e[s+536>>2]=o,c=o)),l[(s+432|0)+c|0]>1){o=c;break h}if(o=2,r=c-1|0,c>>>0>=2)break E;e[s+536>>2]=c+1;break h}r=1}o=r,e[s+536>>2]=o}if(c=4,g[0|(r=(s+432|0)+o|0)]>=0||g[(o=(s+432|0)+o|0)-1|0]>=4&g[o+1|0]>3)break r;g[0|r]=4;break r;case 2:if(e[s+536>>2])break r;for(r=(c=e[s+540>>2])-1|0,r&=r>>31;;){if((0|(c=c-1|0))<=0)break s;if(!(g[0|(o=(s+432|0)+c|0)]>=0))break}e[s+536>>2]=c,c=4,g[0|o]=4;break r;case 3:if(e[s+536>>2])break a;if(o=(0|(c=e[s+540>>2]-3|0))<=1?1:c,e[s+536>>2]=o,c=4,r)break r;g[o+(s+432|0)|0]=4;break r;case 4:if(e[s+536>>2])break r;if(o=(r=e[s+540>>2])-3|0,e[s+536>>2]=o,(0|r)<=15){h:{switch(l[e[144464+(_<<2)>>2]+11|0]-2|0){case 0:o=g[r+94176|0];break h;case 2:o=g[r+94192|0];break h}o=g[r+94160|0]}e[s+536>>2]=o}c=4,g[(s+432|0)+o|0]=4;break r;case 5:if(e[s+536>>2])break r;if(p=-1,f=0,!((0|(r=(o=e[s+540>>2])-1|0))<2)){if(c=1,P=1&o,(0|o)!=3)for(X=(-2&o)-4|0,o=0;g[(s+432|0)+c|0]<0&&(f=(m=(0|(y=g[(s+320|0)+c|0]))<(0|p))?f:c,p=m?p:y),g[(m=c+1|0)+(s+432|0)|0]<0&&(f=(y=(0|(ye=g[m+(s+320|0)|0]))<(0|p))?f:m,p=y?p:ye),c=c+2|0,m=(0|o)!=(0|X),o=o+2|0,m;);!P|g[(s+432|0)+c|0]>=0||(p=(o=(0|(m=g[(s+320|0)+c|0]))<(0|p))?p:m,f=o?f:c)}e[s+536>>2]=f,l[r+(s+320|0)|0]!=2|(0|p)>1?(0|p)>0||(f=1,e[s+536>>2]=1):(e[s+536>>2]=r,f=r),c=4,g[(s+432|0)+f|0]=4;break r;case 14:break c;case 12:break o;case 6:break b;default:break r}if(e[s+536>>2])break r;p=(r=e[s+540>>2])-1|0,e[s+536>>2]=p;b:if(!((0|r)<2))for(c=1;;){if(l[(s+432|0)+c|0]==1){p=c-1|0,e[s+536>>2]=p;break b}if((0|r)==(0|(c=c+1|0)))break}c=4,g[(s+432|0)+p|0]=4;break r}for(P=-2&o,p=0,f=0;o=l[0|(X=(m=s+432|0)+c|0)],ce=X,ye=g[(X=s+208|0)+c|0]>0,g[0|ce]=ye||(0|o)==4?3:o,Re=(0|(m=l[0|(ce=(o=c+1|0)+m|0)]))==4?3:m,m=g[o+X|0]>0,g[0|ce]=m?3:Re,p=m?o:ye?c:p,c=c+2|0,(0|P)!=(0|(f=f+2|0)););}if(y&&(m=(0|(o=l[0|(f=(s+432|0)+c|0)]))==4?3:o,o=g[(s+208|0)+c|0]>0,g[0|f]=o?3:m,p=o?c:p),o=e[s+536>>2])break u;if((0|p)>0){e[s+536>>2]=p,o=p;break u}if((0|r)<6)break i;o=r-3|0;break l}if(o=e[s+536>>2])break u}o=r-1|0}e[s+536>>2]=o}c=4,g[(s+432|0)+o|0]=4;break r}if(e[s+536>>2])break r;o=1,e[s+536>>2]=1,l[s+209|0]|e[s+540>>2]<3|g[s+210|0]<=0||(o=2,e[s+536>>2]=2),c=4,g[s+432|o]=4;break r}if(e[s+536>>2]||(0|(o=e[s+540>>2]))<3)break a;if(VA(s+432|1,0,o-1|0),e[s+536>>2]=2,r||(g[s+434|0]=4),c=4,o>>>0<4)break r;g[431+(o+s|0)|0]=3;break r}e[s+536>>2]=r,c=4;break r}c=r}!(256&Y)|2&a||(0|(r=e[s+540>>2]))<3|(0|I)>2||l[0|(o=(r=r+(s+432|0)|0)-1|0)]!=4|l[e[144464+(_<<2)>>2]+11|0]!=2||(g[0|o]=1,g[r-2|0]=4);r:{a:{if(De)I=e[s+540>>2];else{if(r=g[s+433|0],!(!(4096&Y)|(0|(I=e[s+540>>2]))!=3)){if((0|r)==4){g[s+434|0]=3;break a}if(l[s+434|0]==4){g[s+433|0]=3;break a}}if(!(!(8192&Y)|(0|r)>=0|(0|I)<4|g[s+434|0]<4)){g[s+433|0]=3;break a}}if(f=0,(0|I)<2)break r}for(p=(0|c)<4?4:3,X=128&Y,ye=64&Y,ce=32&Y,y=I-1|0,Re=16&Y,Xe=!(32768&Y),_=0,m=0,c=1;;){a:{s:if((0|(o=g[0|(P=(s+432|0)+c|0)]))>=0)f=p;else{f=3;c:{o:if(!(!(!Re|(0|p)>3)&(0|c)==(0|y))){if(!(1&(_|Xe)))break c;if(!(g[431+(s+c|0)|0]>1)){if((0|(o=g[(r=c+1|0)+(s+432|0)|0]))>=2){if((0|p)!=4||(f=4,o>>>0>=3))break o}else if(!(!ce|(0|p)!=3)){p=3;break a}if(!ye|c>>>0<2||(f=l[(s+320|0)+c|0]))break c;if((0|y)>(0|(o=c))){for(;;){if(g[(s+320|0)+o|0]>0)break a;if((0|y)==(0|(o=o+1|0)))break}if(f)break c}if(g[r+(s+320|0)|0]<=0)break c;break a}f=p}o=l[0|P];break s}g[0|P]=p,_=1,f=3,o=p}s:{if(o<<24>>24>=4){if(r=m||c,!m|!X)break s;g[0|P]=3}p=f;break a}p=f,m=r}if(f=1,(0|I)==(0|(c=c+1|0)))break}}if(n=!De|(0|n)>=0?n:e[((0|I)<3?16:20)+A>>2],p=0,o=0,f){if(_=3&(r=I-1|0),f=0,I-2>>>0<3)c=1;else for(De=-4&r,c=1,m=0;o=(r=(0|(o=(P=(0|(o=(y=(0|(o=(I=(0|(y=g[(r=s+432|0)+c|0]))<(0|o))?o:y))>(0|(P=g[(X=c+1|0)+r|0])))?o:P))>(0|(ce=g[(ye=c+2|0)+r|0])))?o:ce))>(0|(Re=g[(ce=c+3|0)+r|0])))?o:Re,p=r?P?y?I?p:c:X:ye:ce,c=c+4|0,(0|De)!=(0|(m=m+4|0)););if(_)for(;o=(r=(0|(m=g[(s+432|0)+c|0]))<(0|o))?o:m,p=r?p:c,c=c+1|0,(0|_)!=(0|(f=f+1|0)););}if((0|n)<0?n=o:(0|n)<=(0|o)&(0|o)>4||(g[(s+432|0)+p|0]=n),_=t+197|0,I=1,!(1&a)&&(r=e[144464+(he<<2)>>2])){if(o=s,!((0|(f=l[r+11|0]))!=1&(0|he)!=15))for(;r=l[0|(o=o+1|0)],(0|(f=l[e[144464+(r<<2)>>2]+11|0]))==1|(0|r)==15;);!(48&(r=e[A+4>>2]))|(0|f)!=2||(g[0|t]=(32&r)>>>5|0&&g[s+433|0]>3?11:23,t=t+1|0)}r:if(!(t>>>0>=_>>>0))for(y=65536&Y,P=2&Y,De=4&Y,c=s;;){if(!(o=l[0|c]))break r;if(a=c,c=c+1|0,r=e[144464+(o<<2)>>2]){a:{s:{switch(l[r+11|0]){case 0:e[A+8200>>2]=0;break a;case 2:if(!(16&l[r+6|0]))break s}if(l[0|c]!=20)break a}if((0|(he=e[s+540>>2]))<(0|I))break e;m=g[0|(Y=(s+432|0)+I|0)],e[A+8200>>2]=m;s:{c:{if(!((0|(r=m))>1)){if(f=he-1|0,!(!De|(0|I)<2|(0|n)<2)&&(r=0,(0|f)==(0|I)))break c;if(r=1,!((0|I)==1|P|(he-2|0)==(0|I)&g[f+(s+432|0)|0]<2|(0|f)==(0|I)||g[431+(s+I|0)|0]>=0&&(r=m,y))){r=0,g[0|Y]=0;break c}}if(r&&(0|r)<2)break s}g[0|t]=l[r+94151|0],t=t+1|0,m=g[0|Y]}f=(0|n)>(0|m),l[0|c]==12&&1&(he=e[A+28>>2])&&(c=(16&he?(0|p)!=(0|I):(0|r)<4)?a+2|0:c),n=f?n:m,I=I+1|0}if((0|o)!=1&&(g[0|t]=o,t=t+1|0),!(t>>>0<_>>>0))break}}g[0|t]=0}return void(q=s+544|0)}Pe(86136,86634,1353,94208),Be()}function Vr(A,t,r,n,a,s,o,c,f){var m,p=0,I=0,y=0,P=0,Y=0,X=0,_=0,ce=0,he=0,ye=0,De=0,Re=0,Xe=0,nA=0,fA=0,GA=0,SA=0,At=0,ct=0,bt=0,Nt=0,qt=0,tr=0,mr=0,Cr=0,Gr=0,Dr=0,Or=0,Kr=0,on=0;q=m=q-336|0,P=c,X=65535&f,Y=n,y=65535&a,De=-2147483648&(a^f);e:{if(!((he=f>>>16&32767)-32767>>>0>4294934529&(_=a>>>16&32767)-32767>>>0>=4294934530)){if(!(!n&(0|(p=2147483647&a))==2147418112?!(t|r):p>>>0<2147418112)){ce=n,De=32768|a;break e}if(!(!c&(0|(a=2147483647&f))==2147418112?!(s|o):a>>>0<2147418112)){ce=c,De=32768|f,t=s,r=o;break e}if(!(t|n|2147418112^p|r)){if(!(s|c|2147418112^a|o)){t=0,r=0,De=2147450880;break e}De|=2147418112,t=0,r=0;break e}if(!(s|c|2147418112^a|o)){t=0,r=0;break e}if(!(t|n|r|p)){ce=(t=!(s|c|a|o))?0:ce,De=t?2147450880:De,t=0,r=0;break e}if(!(s|c|a|o)){De|=2147418112,t=0,r=0;break e}(0|p)==65535|p>>>0<65535&&(f=n=!(y|Y),p=n?t:Y,c=n<<=6,An(m+320|0,t,r,Y,y,(n=n+((0|(f=Oe(f?r:y)))==32?Oe(p)+32|0:f)|0)-15|0),Re=16-n|0,Y=e[m+328>>2],y=e[m+332>>2],r=e[m+324>>2],t=e[m+320>>2]),a>>>0>65535||(c=n=!(P|X),f=n?s:P,a=n<<=6,An(m+304|0,s,o,P,X,(n=n+((0|(c=Oe(c?o:X)))==32?Oe(f)+32|0:c)|0)-15|0),Re=(n+Re|0)-16|0,P=e[m+312>>2],X=e[m+316>>2],s=e[m+304>>2],o=e[m+308>>2])}if(SA=a=65536|X,At=P,p=a<<15|(n=P)>>>17,Jr(m+288|0,n=a=n<<15|o>>>17,c=p,0,0,f=0-n|0,p=1963258675-(p+!!(0|n)|0)|0,0,0),Jr(m+272|0,0-(n=e[m+296>>2])|0,0-(e[m+300>>2]+!!(0|n)|0)|0,0,0,f,p,0,0),Jr(m+256|0,f=(n=e[m+280>>2])<<1|e[m+276>>2]>>>31,n=e[m+284>>2]<<1|n>>>31,0,0,a,c,0,0),Jr(m+240|0,f,n,0,0,0-(p=e[m+264>>2])|0,0-(e[m+268>>2]+!!(0|p)|0)|0,0,0),Jr(m+224|0,p=(f=e[m+248>>2])<<1|e[m+244>>2]>>>31,n=e[m+252>>2]<<1|f>>>31,0,0,a,c,0,0),Jr(m+208|0,p,n,0,0,0-(f=e[m+232>>2])|0,0-(e[m+236>>2]+!!(0|f)|0)|0,0,0),Jr(m+192|0,f=(n=e[m+216>>2])<<1|e[m+212>>2]>>>31,n=e[m+220>>2]<<1|n>>>31,0,0,a,c,0,0),Jr(m+176|0,f,n,0,0,0-(p=e[m+200>>2])|0,0-(e[m+204>>2]+!!(0|p)|0)|0,0,0),Jr(m+160|0,f=a,n=c,0,0,c=(P=(a=e[m+184>>2])<<1|e[m+180>>2]>>>31)-1|0,a=(e[m+188>>2]<<1|a>>>31)-!P|0,0,0),Jr(m+144|0,s<<15,o<<15|s>>>17,0,0,n=c,a,0,0),ye=m+112|0,fA=e[m+168>>2],c=e[m+172>>2],I=(P=e[m+160>>2])+(f=e[m+152>>2])|0,p=(X=e[m+164>>2])+e[m+156>>2]|0,f=p=f>>>0>I>>>0?p+1|0:p,p=(p=(0|X)==(0|p)&I>>>0<P>>>0|p>>>0<X>>>0)>>>0>(X=p+fA|0)>>>0?c+1|0:c,Jr(ye,n,a,0,0,0-(c=(P=!f&I>>>0>1|!!(0|f))+X|0)|0,0-(!!(0|c)+(p=P>>>0>c>>>0?p+1|0:p)|0)|0,0,0),Jr(m+128|0,1-I|0,0-((I>>>0>1)+f|0)|0,0,0,n,a,0,0),mr=(_-he|0)+Re|0,ye=a=e[m+116>>2],P=(n=e[m+112>>2])<<1,_=p=a<<1|n>>>31,n=p,GA=c=e[m+140>>2],n=n+(p=c<<1|(a=e[m+136>>2])>>>31)|0,a=n=(c=(f=a<<1|e[m+132>>2]>>>31)+P|0)>>>0<f>>>0?n+1|0:n,nA=n=n-(c>>>0<13927)|0,fA=n,Cr=p=65536|y,Gr=Y,Or=(n=Y)<<1,Kr=p=p<<1|n>>>31,bt=p,Nt=n=kt(nA,I=0,p,0),Xe=p=J,Re=t<<1,he=n=r<<1|t>>>31,X=p=0,nA=(0|a)==(0|nA)&(f=c-13927|0)>>>0<c>>>0|a>>>0>nA>>>0,a=(0|a)==(0|_)&c>>>0<P>>>0|a>>>0<_>>>0,n=e[m+120>>2],p=c=e[m+124>>2]<<1|n>>>31,p=(n=(I=GA>>>31|0)+(n=n<<1|ye>>>31)|0)>>>0<I>>>0?p+1|0:p,I=(c=n)>>>0>(n=n+a|0)>>>0?p+1|0:p,I=(a=n)>>>0>(n=n+nA|0)>>>0?I+1|0:I,a=n-1|0,p=kt(he,X,nA=I-!n|0,_=0),c=J+Xe|0,ye=(0|Xe)==(0|(c=(n=p+Nt|0)>>>0<p>>>0?c+1|0:c))&n>>>0<Nt>>>0|c>>>0<Xe>>>0,GA=a,a=kt(a,p=0,ct=(Dr=r>>>31|0)|Y<<1,Xe=0),p=J+c|0,I=0,P=p=a>>>0>(Y=a+n|0)>>>0?p+1|0:p,I=(a=n=(0|p)==(0|c)&n>>>0>Y>>>0|c>>>0>p>>>0)>>>0>(n=n+ye|0)>>>0?1:I,a=kt(bt,X,nA,_),p=J+I|0,ye=n=a+n|0,n=n>>>0<a>>>0?p+1|0:p,a=kt(bt,X,GA,Xe),y=J,c=a,a=kt(ct,Xe,nA,_),p=J+y|0,a=p=a>>>0>(I=c+a|0)>>>0?p+1|0:p,n=n+(p=(0|y)==(0|p)&c>>>0>I>>>0|p>>>0<y>>>0)|0,ye=y=ye+a|0,y=n=y>>>0<a>>>0?n+1|0:n,p=I+P|0,a=p=(n=(a=0)+Y|0)>>>0<a>>>0?p+1|0:p,c=(0|p)==(0|P)&n>>>0<Y>>>0|p>>>0<P>>>0,p=y,I=c,qt=c=c+ye|0,I=p=I>>>0>c>>>0?p+1|0:p,ye=n,y=n,Y=a,Nt=f,n=kt(f,0,ct,Xe),c=J,a=n,f=kt(fA,ce,he,ce),p=J+c|0,f=(0|c)==(0|(p=(n=n+f|0)>>>0<f>>>0?p+1|0:p))&n>>>0<a>>>0|c>>>0>p>>>0,c=p,a=kt(GA,Xe,tr=-2&Re,0),p=J+p|0,a=p=a>>>0>(P=a+n|0)>>>0?p+1|0:p,n=(0|p)==(0|c)&n>>>0>P>>>0|c>>>0>p>>>0,c=0,n=((f=n+f|0)>>>0<n>>>0?1:c)+Y|0,p=I,f=n=(y=f+y|0)>>>0<f>>>0?n+1|0:n,c=n=(0|n)==(0|Y)&y>>>0<ye>>>0|n>>>0<Y>>>0,on=n=n+qt|0,ye=p=c>>>0>n>>>0?p+1|0:p,n=kt(bt,X,Nt,ce),qt=J,bt=n,c=kt(nA,_,tr,ce),p=J+qt|0,Y=n=n+c|0,I=n+(X=kt(fA,ce,ct,Xe))|0,n=(c=n>>>0<c>>>0?p+1|0:p)+J|0,n=I>>>0<X>>>0?n+1|0:n,_=I,X=I+(p=kt(he,ce,GA,Xe))|0,I=J+n|0,ct=(0|n)==(0|(I=p>>>0>X>>>0?I+1|0:I))&X>>>0<_>>>0|n>>>0>I>>>0,p=((n=(n=(n=(0|n)==(0|c)&Y>>>0>_>>>0|n>>>0<c>>>0)+(p=(0|c)==(0|qt)&Y>>>0<bt>>>0|c>>>0<qt>>>0)|0)+ct|0)|(GA=0))+f|0,Y=p=(c=I)>>>0>(_=c+y|0)>>>0?p+1|0:p,n=(0|f)==(0|p)&y>>>0>_>>>0|f>>>0>p>>>0,p=ye,c=n,GA=n=n+on|0,f=p=c>>>0>n>>>0?p+1|0:p,n=kt(fA,ce,tr,ce),fA=J,y=n,c=kt(he,ce,Nt,ce),p=J+fA|0,c=(0|(p=(n=n+c|0)>>>0<c>>>0?p+1|0:p))==(0|fA)&n>>>0<y>>>0|p>>>0<fA>>>0,y=p,n=p+P|0,p=(c|(ye=0))+a|0,y=(0|a)==(0|(p=n>>>0<y>>>0?p+1|0:p))&n>>>0<P>>>0|a>>>0>p>>>0,I=(c=p)+(p=X)|0,p=0,p=((a=n=(0|c)==(0|(I=(P=(X=0)+n|0)>>>0<X>>>0?I+1|0:I))&n>>>0>P>>>0|c>>>0>I>>>0)>>>0>(n=n+y|0)>>>0?1:p)+Y|0,I=f,a=p=(a=n)>>>0>(n=n+_|0)>>>0?p+1|0:p,f=I=(f=c=(0|Y)==(0|p)&n>>>0<_>>>0|p>>>0<Y>>>0)>>>0>(c=c+GA|0)>>>0?I+1|0:I,(0|I)==131071|I>>>0<131071?(Gr=Or|Dr,Cr=Xe|Kr,Jr(m+80|0,n,a,c,f,s,o,At,SA),X=I=e[m+84>>2],p=t<<17,Y=(r=(P=0)-(y=e[m+88>>2])|0)-(I=!!(I|(t=e[m+80>>2])))|0,y=(p-(e[m+92>>2]+(y>>>0>P>>>0)|0)|0)-(r>>>0<I>>>0)|0,P=0-t|0,X=0-(!!(0|t)+X|0)|0,t=mr+16382|0):(Jr(m+96|0,n=(1&a)<<31|n>>>1,a=c<<31|a>>>1,c=(1&f)<<31|c>>>1,f=f>>>1|0,s,o,At,SA),he=Y=e[m+100>>2],Y=(P=0-(Re=e[m+104>>2])|0)-(y=!!(Y|(I=e[m+96>>2])))|0,y=((t<<16)-(e[m+108>>2]+(X>>>0<Re>>>0)|0)|0)-(y>>>0>P>>>0)|0,P=0-I|0,X=0-(!!(0|I)+he|0)|0,Re=t,he=r,t=mr+16383|0),(0|t)>=32767)De|=2147418112,t=0,r=0;else{if((0|t)>0)I=y<<1|Y>>>31,Y=Y<<1|X>>>31,y=I,Re=c,he=65535&f|t<<16,I=X<<1|P>>>31,f=P<<1;else{if((0|t)<=-113){t=0,r=0;break e}Hn(m- -64|0,n,a,c,f,1-t|0),An(m+48|0,Re,he,Gr,Cr,t+112|0),Jr(m+32|0,s,o,At,SA,n=e[m+64>>2],a=e[m+68>>2],Re=e[m+72>>2],he=e[m+76>>2]),t=e[m+40>>2],P=(r=e[m+56>>2])-(Y=t<<1|(I=e[m+36>>2])>>>31)|0,y=e[m+60>>2]-((e[m+44>>2]<<1|t>>>31)+(r>>>0<Y>>>0)|0)|0,p=(t=e[m+32>>2])<<1,Y=P-(t=(0|(c=I<<1|t>>>31))==(0|(f=e[m+52>>2]))&p>>>0>(r=e[m+48>>2])>>>0|c>>>0>f>>>0)|0,y=y-(t>>>0>P>>>0)|0,I=f-((r>>>0<p>>>0)+c|0)|0,f=r-p|0}t=f,Jr(m+16|0,s,o,At,SA,3,0,0,0),Jr(m,s,o,At,SA,5,0,0,0),c=I+(r=0)|0,c=f>>>0>(t=t+(p=1&n)|0)>>>0?c+1|0:c,f=t,o=(0|o)==(0|c)&t>>>0>s>>>0|o>>>0<c>>>0,I=y,t=(0|r)==(0|c)&t>>>0<p>>>0|r>>>0>c>>>0,p=a,r=p=(r=t=(t=(0|(I=t>>>0>(s=t+Y|0)>>>0?I+1|0:I))==(0|SA))&(0|s)==(0|At)?o:t&s>>>0>At>>>0|I>>>0>SA>>>0)>>>0>(t=t+n|0)>>>0?p+1|0:p,n=(0|a)==(0|p)&t>>>0<n>>>0|a>>>0>p>>>0,p=he,p=(a=n)>>>0>(n=n+Re|0)>>>0?p+1|0:p,o=n,y=(0|(a=e[m+20>>2]))==(0|c)&ue[m+16>>2]<f>>>0|a>>>0<c>>>0,a=e[m+28>>2],a=p>>>0<2147418112&((0|(n=e[m+24>>2]))==(0|s)&(0|a)==(0|I)?y:(0|a)==(0|I)&n>>>0<s>>>0|a>>>0<I>>>0),n=r,p=(r=t=(0|r)==(0|(n=(y=a)>>>0>(a=t+a|0)>>>0?n+1|0:n))&t>>>0>a>>>0|r>>>0>n>>>0)>>>0>(t=t+o|0)>>>0?p+1|0:p,o=t,c=(0|(r=e[m+4>>2]))==(0|c)&ue[m>>2]<f>>>0|r>>>0<c>>>0,r=e[m+12>>2],r=I=(r=t=p>>>0<2147418112&((0|(t=e[m+8>>2]))==(0|s)&(0|r)==(0|I)?c:(0|r)==(0|I)&t>>>0<s>>>0|r>>>0<I>>>0))>>>0>(t=t+a|0)>>>0?n+1|0:n,a=(0|n)==(0|I)&t>>>0<a>>>0|n>>>0>I>>>0,n=p,s=a,ce|=a=a+o|0,De|=n=s>>>0>a>>>0?n+1|0:n}}e[A>>2]=t,e[A+4>>2]=r,e[A+8>>2]=ce,e[A+12>>2]=De,q=m+336|0}function $t(A,t,r,n,a){var s,o,c,f=0,m=0,p=0,I=0,y=0,P=0,Y=0,X=0,_=0,ce=0,he=0,ye=0,De=0,Re=0,Xe=0,nA=0,fA=0,GA=0,SA=0,At=0,ct=0;if(q=o=q-80|0,c=e[r+8>>2],!a|!M[r+4>>1]||(e[a+8>>2]=0),s=VA(n,0,152),e[s+44>>2]=l[c+14|0],e[s+40>>2]=l[c+15|0],n=M[c+8>>1]){for(n=e[34459]+(n<<1)|0,ce=256&t,he=r+32|0,Re=r-32|0,Xe=r- -64|0,nA=r+96|0,fA=r+-64|0,GA=r-28|0,SA=1&t,At=r-24|0,ye=e[30450];;){f=15&(y=(t=M[n>>1])>>>8|0);e:{A:{r:{a:{s:{c:{o:{u:{l:{i:{p:{C:switch(0|(p=t>>>12|0)){case 10:break o;case 9:break u;case 6:break l;case 2:case 3:break i;case 1:break p;case 0:break C;case 11:case 12:case 13:case 14:case 15:break c;default:break s}m=255&t;C:{m:{b:switch(0|f){case 13:if(m)break m;f=n,t=0;break C;case 0:switch(f=n,m-1|0){case 1:break e;case 0:break A}e[o+20>>2]=Q0(o+75|0,e[c>>2]),e[o+16>>2]=t,hr(ye,85851,o+16|0);break e;case 5:if(l[e[144464+(l[r+34|0]<<2)>>2]+11|0]!=2)break e;e[s+20>>2]=m;break e;case 12:break b;default:break a}e[s+44>>2]=e[s+44>>2]+(t<<24>>31&-256|m);break e}g[s+132|0]=l[n+3|0],f=n+2|0,g[s+133|0]=l[0|f],t=2,m>>>0<3||(g[s+134|0]=l[n+5|0],f=n+4|0,g[s+135|0]=l[0|f],t=4,m>>>0<5||(g[s+136|0]=l[n+7|0],f=n+6|0,g[s+137|0]=l[0|f],t=6,m>>>0<7||(g[s+138|0]=l[n+9|0],f=n+8|0,g[s+139|0]=l[0|f],t=8,m>>>0<9||(g[s+140|0]=l[n+11|0],f=n+10|0,g[s+141|0]=l[0|f],t=10,m>>>0<11||(g[s+142|0]=l[n+13|0],f=n+12|0,g[s+143|0]=l[0|f],t=12,m>>>0<13||(g[s+144|0]=l[n+15|0],f=n+14|0,g[s+145|0]=l[0|f],t=14,m>>>0<15||(g[s+146|0]=l[n+17|0],f=n+16|0,g[s+147|0]=l[0|f],t=16)))))))}g[132+(t+s|0)|0]=0,m=Y;break A}if(!A|f>>>0>7||(p=r,l[e[144464+(l[r+2|0]<<2)>>2]+11|0]!=2&&(p=he,l[e[144464+(l[r+34|0]<<2)>>2]+11|0]!=2))||!(1&(f=e[A+56>>2]))&&16&l[0|r])break e;m=15&l[p+3|0],m=2&f&&l[p+6|0]<=m>>>0?4:m;p:{C:{m:{b:switch((f=7&y)-3|0){case 1:break C;case 0:break b;default:break m}if(m>>>0>3)break p;break e}if(e[102832+(f<<2)>>2]>(0|m))break p;break e}if(l[p+6|0]>m>>>0)break e}e[s+8>>2]=255&t,m=1;break r}if((57344&t)==8192){for(ct=e[32972],y=1,De=0;;){I=255&t,f=(P=4095&t)>>>8|0;i:if(P>>>0<=3583){(0|(m=(f>>>0)%7|0))==6&&(m=M[n+2>>1]),_=0,f=r;p:{C:{m:switch(0|m){case 6:if(p=0,M[r+36>>1]|M[r+68>>1])break i;case 3:f=Xe;break C;case 9:if(p=0,M[r+36>>1]|M[r+68>>1])break i;if(f=nA,!M[r+100>>1])break p;break i;case 7:if(p=0,M[r+36>>1])break i;for(m=1;;){if(l[e[144464+(l[2+(f=(m<<5)+r|0)|0]<<2)>>2]+11|0]==2)break C;if(M[4+(((m=m+1|0)<<5)+r|0)>>1])break}break i;case 5:if(p=0,M[r+4>>1])break i;case 0:_=1,f=Re;break C;case 4:if(p=0,M[r+36>>1])break i;case 2:f=he;break C;case 8:if(p=0,!a)break i;if(_=1,e[(f=a)+8>>2])break p;break i;case 10:break m;default:break C}if(p=0,M[r+4>>1]|M[GA>>1])break i;_=1,f=fA;break p}C:switch(0|m){case 0:case 5:break C;default:break p}f=(l[f+2|0]==1?-32:0)+f|0}if(ce?(m=e[144464+(l[f+2|0]<<2)>>2],e[f+8>>2]=m):m=e[f+8>>2],P>>>0<=1791){if(p=1,e[e[144464+(I<<2)>>2]>>2]==e[m>>2])break i;if(!(!_|l[m+11|0]!=2)){p=(0|I)==l[m+13|0];break i}p=(0|I)==l[m+12|0];break i}I=31&P,p=0;p:switch(P>>>5&7){case 0:p=(0|I)==l[m+11|0];break i;case 1:p=(0|I)==(15&M[m+6>>1]);break i;case 2:p=e[m+4>>2]>>>I&1;break i;case 4:break p;default:break i}p:switch(0|I){case 0:case 1:case 2:case 3:case 4:if(l[e[144464+(l[f+2|0]<<2)>>2]+11|0]!=2){if(l[e[144464+(l[f+34|0]<<2)>>2]+11|0]!=2)break i;f=f+32|0}m=15&l[f+3|0],m=!A|!(2&l[A+56|0])?m:l[f+6|0]<=m>>>0?4:m;C:{switch(I-3|0){case 1:p=l[f+6|0]<=m>>>0;break i;case 0:if(p=1,m>>>0<=3)break C;break i}if(p=1,e[102832+(I<<2)>>2]>(0|m))break i}p=0;break i;case 17:if(!l[m+11|0]){p=1;break i}p=(32&l[r+1|0])>>>5|0;break i;case 18:p=M[f+4>>1]!=0;break i;case 19:if(p=1,M[f+36>>1])break i;p=!l[e[f+40>>2]+11|0];break i;case 9:if(M[f+4>>1])break i;for(;;){if(p=!!(0|(m=12&l[f-29|0])),m)break i;if(M[4+(f=f-32|0)>>1])break}break i;case 10:p=l[m+11|0]!=2;break i;case 11:for(;;){if(p=!!(0|(m=M[f+36>>1])),m)break i;if(m=f,f=f+32|0,l[e[m+40>>2]+11|0]==2)break}break i;case 12:if(p=1,(254&l[m+11|0])==2)break i;p=(16&l[m+4|0])>>>4|0;break i;case 13:for(;p=(l[e[f+8>>2]+11|0]==2)+p|0,m=M[f+4>>1],f=f-32|0,!m;);p=(0|p)==1;break i;case 14:for(;p=(l[e[f+8>>2]+11|0]==2)+p|0,m=M[f+4>>1],f=f-32|0,!m;);p=(0|p)==2;break i;case 16:break p;default:break i}p=(16&l[0|f])>>>4|0}else if(p=0,(0|f)==15){p:switch(I-1|0){case 0:p=SA;break i;case 1:break p;default:break i}p=e[ct+132>>2]!=0}i:if(1970>>>(f=(m=65535&t)>>>12|0)&1)f=g[f+102848|0];else{switch(0|f){case 0:if(f=1,(3840&m)!=3328)break i;f=1+(1+(255&m)>>>1|0)|0;break i;case 6:f=(m>>>9&7)-5>>>0<2?12:1;break i;case 2:case 3:f=(0|(f=3840&m))==3328||(0|f)==1536?2:1;break i}f=4,(m=M[n+4>>1])>>>0>61439||(f=(0|m)==2?3:2)}if(n=((f=M[(n=(f<<1)+n|0)>>1]==3)<<1)+n|0,f^=p,y=De?f|y:f&y,De=4096&t,(57344&(t=M[n>>1]))!=8192)break}if(!(1&y))if((63488&t)!=26624){i:if(1970>>>(f=t>>>12|0)&1)f=g[f+102848|0];else{switch(0|f){case 0:if(f=1,(3840&t)!=3328)break i;f=1+(1+(255&t)>>>1|0)|0;break i;case 6:f=(t>>>9&7)-5>>>0<2?12:1;break i;case 2:case 3:f=(0|(t&=3840))==3328||(0|t)==1536?2:1;break i}f=4,(t=M[n+4>>1])>>>0>61439||(f=(0|t)==2?3:2)}n=(((65024&M[(t=(f<<1)+n|0)>>1])==24576)<<1)+t|0}else n=((255&t)<<1)+n|0}f=n-2|0,m=Y;break A}l:switch(f>>>1|0){case 0:n=(((255&t)<<1)+n|0)-2|0;break e;case 5:e[s>>2]=2|e[s>>2],((t=l[e[r+40>>2]+12|0])-28&255)>>>0<=5&&(f=M[4+(t=((t<<2)+n|0)-112|0)>>1],t=M[t+2>>1],e[s+96>>2]=t>>>4<<24>>24,e[s+76>>2]=(15&t)<<18|f<<2),n=n+24|0;break e;case 6:break l;default:break e}((t=l[e[At>>2]+13|0])-28&255)>>>0<=5&&(f=M[4+(t=((t<<2)+n|0)-112|0)>>1],t=M[t+2>>1],e[s+100>>2]=t>>>4<<24>>24,e[s+80>>2]=(15&t)<<18|f<<2),n=n+24|0;break e}t=M[(n=n+2|0)>>1]|t<<16&983040;u:switch(f-1|0){case 0:if((0|X)>9)break e;e[(o+32|0)+(X<<2)>>2]=n,n=(e[34459]+(t<<1)|0)-2|0,X=X+1|0;break e;case 1:e[s+124>>2]=t;break e;case 2:break u;default:break e}e[s+128>>2]=t;break e}e[108+(f=(((0|f)!=1)<<3)+s|0)>>2]=M[n+2>>1]|(255&t)<<16,t=M[n+4>>1]<<16,n=n+6|0,e[f+112>>2]=t|M[n>>1];break e}if(m=M[(f=n+2|0)>>1],P=t>>>4|0,e[88+(y=((I=p-11|0)<<2)+s|0)>>2]=255&P,e[y+68>>2]=t<<18&3932160|m<<2,(0|(n=M[n+4>>1]))==2){n=f;break e}if(m=t>>>0<=53247?n>>>0>61439?2:1:Y-((0|I)==4)|0,p-13>>>0>1)break A;e[y+88>>2]=P<<24>>24;break A}e[o+4>>2]=Q0(o+75|0,e[c>>2]),e[o>>2]=t,hr(ye,85851,o);break e}e[4+((f<<2)+s|0)>>2]=m,m=ce&&(0|f)==1?1:Y}f=n}(0|m)!=1|(0|X)<=0?(n=f,Y=m):(n=e[(o+32|0)+((X=X-1|0)<<2)>>2],Y=0)}if(n=n+2|0,(0|Y)==1)break}!a|l[r+17|0]!=2||(A=e[r+4>>2],e[a>>2]=e[r>>2],e[a+4>>2]=A,A=e[r+28>>2],e[a+24>>2]=e[r+24>>2],e[a+28>>2]=A,A=e[r+20>>2],e[a+16>>2]=e[r+16>>2],e[a+20>>2]=A,A=e[r+12>>2],e[a+8>>2]=e[r+8>>2],e[a+12>>2]=A),g[r+23|0]=e[s+44>>2],(A=e[s+68>>2])?(e[r+24>>2]=A,A=s+88|0):(e[r+24>>2]=e[s+72>>2],A=s+92|0),e[r+28>>2]=e[A>>2]}q=o+80|0}function Pr(A,t,r,n,a,s){var o,c=0,f=0,m=0,p=0,I=0,y=0,P=0,Y=0,X=0,_=0,ce=0,he=0,ye=0,De=0,Re=0,Xe=0,nA=0,fA=0;q=o=q-848|0;e:if(!(!e[A+104>>2]|8&l[a+2|0]|e[47202]==193)){for(e[n>>2]=0,e[33272]=0,e[33274]=s,g[o+192|0]=0,e[33273]=o+192;p=(s=p)+1|0,g[0|(he=t+s|0)]-48>>>0<10;);e[56798]=0,Xe=o+188|0,y=-2147483648,q=ce=q-16|0;A:if(c=l[0|t]){I=t;r:{for(;;){if(!((0|(c=c<<24>>24))==32|c-9>>>0<5))break r;if(c=l[I+1|0],I=I+1|0,!c)break}break A}r:switch((c=l[0|I])-43|0){case 0:case 2:break r;default:break A}X=(0|c)==45?-1:0,I=I+1|0}else I=t;for(;c=-48,(((P=g[0|I])-48&255)>>>0<10||(c=-87,(P-97&255)>>>0<26||(c=-55,!((P-65&255)>>>0>25))))&&!((0|(P=c+P|0))>=10);)Jr(ce,10,0,0,0,Y,_,0,0),c=1,e[ce+8>>2]|e[ce+12>>2]||(De=kt(Y,_,10,0),(0|(Re=J))==-1&~P>>>0<De>>>0||(c=Re,_=(Y=P+De|0)>>>0<P>>>0?c+1|0:c,ye=1,c=m)),I=I+1|0,m=c;Xe&&(e[Xe>>2]=ye?I:t);A:{r:{if(m)e[56798]=68,Y=-2147483648,_=0;else if(!_&Y>>>0<2147483648)break r;if(!X){e[56798]=68,y=2147483647;break A}if(!(!_&Y>>>0<=2147483648)){e[56798]=68;break A}}y=(X^Y)-X|0}if(q=ce+16|0,X=y,!(e[56798]|e[o+188>>2]==(0|t))){A:{r:{a:{if(!(!((0|(P=64&l[A+109|0]?4:3))!=(0|s)|e[A+124>>2]!=g[t-2|0])&g[t-3|0]-48>>>0<10)){s:{if(e[A+124>>2]!=32){if(!(16&l[A+105|0]))break a;if((0|s)==3)break s;break a}if((0|s)!=3)break a}if(4&l[a+2|0]|g[t-2|0]-48>>>0>=10)break a}g[133104]=0,g[o+288|0]=0,nA=1;break r}if(g[133104]=0,e[33275]=0,g[o+288|0]=0,fA=1,ye=0,l[0|t]==48)break A}ye=hn(A,t,he,a,0)}l[0|he]!=46|g[t+p|0]-48>>>0<10|1&g[a+13|0]|g[he+2|0]-48>>>0<10||(g[0|he]=0);A:if(!ye||(De=1,e[A+212>>2]==26741)){if(y=o+256|0,e[o+844>>2]=y,f=p,64&l[a+1|0]&&(g[o+256|0]=45,y=o+256|1,e[o+844>>2]=y,f=s+2|0),I=l[t+f|0]){for(;!((255&I)==32|(0|f)>28)&&(c=e[o+844>>2],e[o+844>>2]=c+1,g[0|c]=I,I=l[(f=f+1|0)+t|0]););y=e[o+844>>2]}if(g[0|y]=0,De=1,c=g[o+256|0]){if(!(m=e[A+136>>2])||Mr(o+256|0,m)){if(c-48>>>0<10||(e[o+176>>2]=o+256,QA(c=o+800|0,88653,o+176|0),!UA(A,c,133104)))break A;e[n>>2]=128|e[n>>2],e[o+160>>2]=o+256,QA(c=o+800|0,88773,o+160|0),UA(A,c,133116),De=0}ye=2}}Xe=e[a>>2],g[o+352|0]=0,g[o+624|0]=0;A:{r:{a:if(!(!fA|l[0|t]!=48||(0|(c=g[t+1|0]))==32|(0|c)==e[A+128>>2])){s:{if((0|s)==2){if(l[t+3|0]!=58|g[t+5|0]-48>>>0>=10||!((0|(c=g[t+7|0]))==32|c-9>>>0<5))break s;break a}if((0|s)>3)break r}if(l[0|t]==48&&!((0|(c=s-1|0))<=0))for(f=0;;){if(UA(A,88875,RA(m=o+288|0)+m|0),l[(f=f+1|0)+t|0]!=48)break a;if(!((0|c)>(0|f)))break}}a:{s:{if(!((0|(c=g[0|he]))==32&&16&l[A+105|0])){if(Re=2,Y=s+2|0,(0|c)==e[A+124>>2])break s;_=1,y=0,c=0;break a}Re=1,Y=s+2|0}if(4&l[a+14|0])y=1,c=0,_=1;else for(c=0,I=1,f=s,_=1;;){m=c,c=I,I=(ce=f+Re|0)+t|0,f=0;s:{for(;;){if(y=1,!(g[f+I|0]-48>>>0>=10)){if((0|P)!=(0|(f=f+1|0)))continue;break s}break}c=m;break a}if(g[I+P|0]-48>>>0<10){c=m;break a}if(f=0,g[I-1|0]-48>>>0<10){c=m;break a}s:{for(;;){if(l[(f+ce|0)+t|0]==48){if((0|P)!=(0|(f=f+1|0)))continue;break s}break}_=0}if((0|(m=g[(f=P+ce|0)+t|0]))!=e[A+124>>2]&(!(16&l[A+105|0])|(0|m)!=32))break a;if(Y=f+2|0,4&l[2+(F(I=c+1|0,12)+a|0)|0])break}}f=!X;a:if(!(!_|!(64&l[1+(F(c,12)+a|0)|0])|e[A+212>>2]!=26741)){s:switch(l[0|(m=t+Y|0)]-97|0){case 0:case 4:break s;default:break a}s:{c:{o:{u:switch((I=l[m+1|0])-116|0){case 6:break a;case 1:case 2:case 3:case 4:case 5:break c;case 0:break u;default:break o}if(l[m+2|0]!=116)break s;break a}if((0|I)==32)break a}if(!(!!((0|X)%1e3|0)&(0|c)!=1)&&(0|I)==108)break a}e[33274]=1|e[33274]}Y=32768&Xe,f&=nA;a:if(e[A+128>>2]!=g[0|he]|g[t+p|0]-48>>>0>=10){s:{if(!f){if(f=0,m=1,!((0|c)>0&y))break s;X=(p=_n(A,X,c,_,o+624|0))?0:X,f=!!(0|p),I=0;break a}f=1,X=0,e[33275]==1&&(e[o+144>>2]=c+1,QA(p=o+800|0,89026,o+144|0),UA(A,p,o+688|0)||(e[o+128>>2]=c,QA(p=o+800|0,89026,o+128|0),UA(A,p,o+624|0)))}m=1,I=0}else UA(A,88882,o+624|0),m=0,I=256;y=Y?2:ye;a:{if(c|l[o+624|0]|l[0|he]!=46){if(c)break a}else UA(A,89192,o+624|0);if(e[o+844>>2]=t,g[t+1|0]-48>>>0<10)for(;p=e[o+844>>2],e[o+844>>2]=p+1,g[p+2|0]-48>>>0<10;);if(g[e[o+844>>2]-1|0]-48>>>0>=10||(e[o+416>>2]=e[o+844>>2]-1,Br(A,o+416|0,o+192|0,n,4,a)&&(e[33272]=2)),l[o+192|0]|l[e[o+844>>2]]==48||Br(A,o+844|0,o+192|0,n,4,a)&&(e[33272]=1),fA){if(!y&m&&(e[o+112>>2]=X,QA(a=o+800|0,89214,o+112|0),UA(A,a,r)))break A;if(1&g[A+110|0]){for(p=t;(32|l[0|p])!=32;)p=p+1|0;e[o+416>>2]=p,l[p+1|0]==37&&(UA(A,89328,r),a=RA(r),g[e[o+416>>2]+1|0]=32,r=r+a|0)}}}Ca(A,X,o+416|0,f,c,y|I|nA),!(2&l[A+109|0])|(0|c)<=0?(e[o+60>>2]=15,e[o- -64>>2]=o+624,e[o+56>>2]=o+416,e[o+52>>2]=o+352,e[o+48>>2]=o+288,QA(r,89415,o+48|0)):(e[o+88>>2]=15,e[o+96>>2]=o+416,e[o+92>>2]=o+352,e[o+84>>2]=o+624,e[o+80>>2]=o+288,QA(r,89346,o+80|0));a:if(!m)for(;;){for(s=s+1|0,m=0;m=(p=m)+1|0,g[(c=s+p|0)+t|0]-48>>>0<10;);a=2;s:{c:{o:{u:{l:{i:switch((m=57344&e[A+104>>2])-8192>>>13|0){case 6:break c;case 2:break o;case 0:case 4:case 5:break u;case 1:break l;case 3:break i;default:break s}a=5}if((0|(m=l[0|(f=t+s|0)]))==48)for(;UA(A,88875,c=o+688|0),sn(r,c),p=p-1|0,(0|(m=l[0|(f=(s=s+1|0)+t|0)]))==48;);if((0|a)<(0|p)|(m<<24>>24)-48>>>0>=10)break s;a=o+688|0,Ca(A,Ka(f),a,0,0,0),sn(r,a),s=s+p|0;break s}if(Ca(A,Ka(a=t+s|0),o+416|0,0,0,0),!((0|m)==8192&l[0|a]!=48)){if(e[o+16>>2]=p,QA(a=o+800|0,89508,o+16|0),!UA(A,a,o+688|0))break s;sn((0|m)==49152?r:o+416|0,o+688|0)}sn(r,o+416|0),s=c;break s}if((0|p)>4||l[0|(a=t+s|0)]==48)break s;Ca(A,s=Ka(a),a=o+688|0,0,0,0),sn(r,a),s=c;break s}if(!((0|p)<=1))for(;;){if(e[o+32>>2]=g[t+s|0],QA(a=o+800|0,89575,o+32|0),!UA(A,a,o+688|0))break s;if(sn(r,o+688|0),s=s+1|0,!((0|(p=p-1|0))>1))break}}s:if(!((m=l[0|(p=t+s|0)])-48>>>0>=10||RA(r)>>>0>=190))for(;;){if(a=o+688|0,zn(A,g[0|p]-48|0,0,2,a),c=RA(r),e[o>>2]=15,e[o+4>>2]=a,QA(r+c|0,89594,o),(m=l[0|(p=(s=s+1|0)+t|0)])-48>>>0>=10)break s;if(!(RA(r)>>>0<=189))break}if(UA(A,89678,o+688|0)&&sn(r,o+688|0),e[A+128>>2]!=(0|m)|g[1+(t+s|0)|0]-48>>>0>=10)break a;UA(A,88882,a=o+688|0),sn(r,a)}if(!(a=l[0|r])|(0|a)==21||(a=Dt(o+184|0,t=1+(t+s|0)|0),s=e[o+184>>2],!(2&l[A+106|0])|(0|s)!=32||(Dt(o+184|0,t+a|0),s=e[o+184>>2]),fa(s)|_||(A=RA(r)+r|0,g[0|A]=11,g[A+1|0]=0)),e[n>>2]=-2147483648|e[n>>2],e[33275]=e[33275]-1,f=1,De)break e;e[33264]=1;break e}e[n>>2]=-129&e[n>>2],f=0;break e}f=1}}return q=o+848|0,f}function wt(A,t,r,n){var a,s,o=0,c=0,f=0,m=0,p=0,I=0,y=0,P=0,Y=0,X=0,_=0,ce=0,he=0,ye=0,De=0,Re=0,Xe=0,nA=0,fA=0,GA=0,SA=0;if(q=a=q-416|0,ye=M[r+8>>1],Y=l[r+10|0],64&(s=e[r>>2])){for(e[r>>2]=-65&s,g[199388]=1,f=e[47202],y=e[49846],p=e[47352],I=e[47351],m=e[47350];;){o=(c=e[198304+(I<<2)>>2])>>8;e:{A:switch((31&c)-9|0){case 0:f=o;break e;case 4:y=o;break e;case 3:break A;default:break e}p=c>>>0>=256?o+p|0:0}if(!(!(128&c)&(0|m)>(0|(I=I+1|0))))break}e[47352]=p,e[47351]=I,e[49846]=y,e[47202]=f}y=0;e:if(!((0|(o=e[49572]))>997)){if(1048576&s||!l[0|t])l[199388]&&(e[49572]=o+1,g[199388]=0,e[(A=190288+(o<<3)|0)>>2]=983042,e[A+4>>2]=0),g[189088]=0;else if(!((0|o)>990)){(0|(o=e[A+8224>>2]))>0&&(e[A+8224>>2]=o-1),f=512&s?n:n+4|0,p=(240&e[47202])==16,(ce=2&s)&&((0|(c=e[47200]))<3||(0|(o=e[47350]))>243||(l[199388]&&(e[(I=198300+(o<<2)|0)>>2]=-129&e[I>>2]),e[47350]=o+1,g[199388]=1,De=(0|c)==3?20:c,e[198304+(o<<2)>>2]=De<<8|193)),m=p?f:n;A:{r:{if(!(8&s)){for(;n=l[(o=P)+t|0],g[o+(a+240|0)|0]=n,223&n&&(P=o+1|0,o>>>0<160););if(g[a+66|0]=0,P=a- -64|2,y=PA(e[47192],t,r,P),e[a+412>>2]=y,!(4096&y))break r;xt(t,a+240|0,o);break e}a:if(yn(t,87276,3))Ha(t,189088,a+240|0);else{if(I=0,223&(o=l[0|(P=t+3|0)]))for(;g[(a+240|0)+I|0]=Wt(o<<24>>24),I=I+1|0,223&(o=l[0|(P=P+1|0)]););g[(n=a+240|0)+I|0]=0,o=0;s:if(!((0|(r=e[34461]))<=0)){for(;;){if(!Mr(n,F(o,44)+137856|0)){e[34457]=o;break s}if((0|r)==(0|(o=o+1|0)))break}o=r}if((0|(r=(0|r)==(0|o)?-1:o))<=0)break a;Cn(r),g[189090]=0,g[189089]=r,g[189088]=21}y=-2147483648,e[a+412>>2]=-2147483648,n=-1;break A}if(!(!(8388608&y)|8&l[r+12|0])){for(q=p=q-208|0,I=e[A+60>>2],c=t;n=c,c=c+1|0,l[0|n]!=32;);Dt(p+204|0,c);r:if(fa(e[p+204>>2])){f=JA(p,189088),c=(!(256&I)|(_=TA(A,c,r+12|0,0))>>>15)&!(67108864&_)&l[189088]!=21;a:{s:{if(512&I){if(!(c&!(16&l[r+12|0])))break s;break a}if(c)break a}JA(189088,f);break r}if(g[0|n]=45,e[r>>2]=-2&e[r>>2],y=0,c=189088,X=TA(e[47192],t,r,0),e[a+412>>2]=X,!((0|I)<=0)&&(f=l[189088])){for(;y=(l[e[144464+(f<<2)>>2]+11|0]==2)+y|0,f=l[0|(c=c+1|0)];);if(!((31&I)>=(0|y))){g[0|n]=32,e[a+412>>2]=TA(e[47192],t,r,0);break r}}e[a+412>>2]=128|(X||_),e[33264]=1}q=p+208|0}if(n=-1,l[189088]==21){if(I=JA(a+16|0,132848),p=e[a+412>>2],c=xt(t,a+240|0,o),f=a- -64|1,(0|(n=Ei(l[189089]?189089:87315,188772,189296)))<0||(e[r>>2]=4194304|e[r>>2],l[a+66|0]?(b[a+64>>1]=8192,p=TA(e[47193],f,r,0)):p=PA(e[47193],c,r,P)),l[189088]==21&&(o=xt(c,a+240|0,o),(0|(n=Ei(l[189089]?189089:87315,188772,189296)))<0||(e[r>>2]=4194304|e[r>>2],l[a+66|0]?(b[a+64>>1]=8192,p=TA(e[47193],f,r,0)):p=PA(e[47193],o,r,P)),y=4096,l[189088]==21))break e;e[a+412>>2]=p,(0|n)>=0||(g[189090]=0,b[94544]=3341,(0|n)==-1&&(JA(132848,I),Cn(e[e[32972]+60>>2]),n=e[e[32972]+60>>2]))}y=e[a+412>>2],128&s||(m=268435456&y&&(0|m)<=1?1:m,!(256&y)|528&s|e[A+8224>>2]|2&l[r-11|0]||(e[A+8224>>2]=3,m=(0|m)<=4?4:m)),m=(0|m)<=0&&e[49846]>2?1:m}if(r=l[199388],!((0|m)<=0|(0|(P=e[49572]))>990)){e[49572]=P+1,c=1&r,r=0,b[(o=190288+(P<<3)|0)>>1]=c?2:0,g[o+7|0]=0,g[o+3|0]=0,c=m>>>0>1,g[o+2|0]=c?9:11,b[o+4>>1]=0,e[A+8236>>2]=0;A:if(!(!(o=c?m-2|0:0)|(0|(P=e[49572]))>990))for(f=A+8236|0;;){if(e[49572]=P+1,b[(c=190288+(P<<3)|0)>>1]=0,g[c+7|0]=0,g[c+3|0]=0,p=o>>>0>1,g[c+2|0]=p?9:11,b[c+4>>1]=0,e[f>>2]=0,P=e[49572],(0|(o=p?o-2|0:0))<=0)break A;if(!((0|P)<991))break}e[A+8228>>2]=0,e[A+8232>>2]=0}g[199388]=1&r,!ce|e[47200]!=1||(e[49572]=P+2,g[199388]=0,b[(o=190288+(P<<3)|0)>>1]=1&r?2:0,g[o+7|0]=0,b[o+2>>1]=10,b[o+4>>1]=0,b[o+12>>1]=0,e[o+8>>2]=1179648,g[o+15|0]=0,1&s&&nr(g[t+1|0])&&(r=l[199388],g[199388]=0,t=e[49572],e[49572]=t+2,b[(t=190288+(t<<3)|0)>>1]=r?2:0,g[t+7|0]=0,b[t+2>>1]=10,b[t+4>>1]=0,b[t+12>>1]=0,e[t+8>>2]=1179648,g[t+15|0]=0)),o=Y>>>0<31;A:if(!((0|n)<0))if(t=e[49572],r=l[190290+((m=t-1|0)<<3)|0],l[189088]!=9|l[189089]!=21)(0|r)!=21&&(c=l[199388],g[199388]=0,g[7+(r=190288+(t<<3)|0)|0]=0,b[r+2>>1]=21,b[r+4>>1]=0,b[r>>1]=c?2:0,m=t),e[49572]=m+1,g[190295+(m<<3)|0]=n;else{if((0|r)!=21)break A;e[49572]=m}t=2047&ye,r=(o?Y:31)<<11,p=(Re=128&s)?l[e[144464+(l[189088]<<2)>>2]+11|0]?189088:189089:189088,(m=l[0|p])|!(1&g[199388])||(m=23,g[0|p]=23,g[p+1|0]=0),Xe=t|r,f=e[49572];A:if(m)if((0|f)>994)t=0;else for(GA=((-1610612736&y)==-2147483648)<<4,ye=Xe+1|0,SA=A+8233|0,t=0,c=1,_=0,nA=1,Y=-1,ce=-1,o=0;;){I=p+1|0;r:{if((0|(X=255&m))!=255){if(r=e[144464+(X<<2)>>2])break r;e[a>>2]=X,q=r=q-16|0,e[r+12>>2]=a,Sa(132552,87474,a),q=r+16|0,f=e[49572]}if(!(m=l[0|I]))break A;if(p=I,(0|f)<995)continue;break A}r:if((0|(he=255&m))!=21)if((0|(p=l[r+11|0]))!=1){switch(r=ye,he-12|0){case 8:g[3+(r=190288+((Y=f-1|0)<<3)|0)|0]=c,b[r>>1]=4|M[r>>1],r=o;break r;case 0:b[(r=190280+(f<<3)|0)>>1]=8|M[r>>1],r=o;break r;case 10:y|=16384,e[a+412>>2]=y,r=o;break r;case 3:break r}X=l[199388],g[199388]=0,g[7+(r=190288+(he=f<<3)|0)|0]=0,g[r+2|0]=m,b[r+4>>1]=o,o=(X?2:0)|GA,b[r>>1]=o,(0|p)==2?((0|c)>=4&&(g[189076]=1),(0|Y)<0||(0|(t=f-1|0))!=(0|Y)&&(g[190291+(t<<3)|0]=c),b[r>>1]=4|o,fA=(t=(0|c)>(0|ce))?f:fA,ce=t?c:ce,o=1,_&&(g[r+7|0]=_),Y=f,_=0,t=c):(!nA|!(64&l[0|SA])||(b[r>>1]=8|o),o=c),f=f+1|0,e[49572]=f,g[he+190291|0]=t,r=0,nA=0,c=o}else{if(!M[r+8>>1]){c=l[r+14|0],r=o;break r}if((0|Y)<0){r=o,_=X;break r}g[190295+(Y<<3)|0]=m,r=o}else e[(r=190288+(f<<3)|0)>>2]=1376256,b[r+4>>1]=0,g[r+7|0]=l[p+1|0],e[49572]=f+1,Cn(l[p+1|0]),I=p+2|0,f=e[49572],r=o;if(!(m=l[0|I]))break A;if(p=I,o=r,!((0|f)<995))break}else t=0;131072&s&&(r=f+1|0,e[49572]=r,c=l[199388],g[199388]=0,g[7+(o=190288+(f<<3)|0)|0]=0,b[o+2>>1]=27,b[o+4>>1]=0,b[o>>1]=c?2:0,f=r),Re||(b[190292+(P<<3)>>1]=Xe),e[A+8228>>2]=0,l[e[144464+(l[190282+(f<<3)|0]<<2)>>2]+11|0]!=2|(0|t)<4||(e[A+8228>>2]=1),(0|n)>=0&&(JA(132848,a+16|0),Cn(e[e[32972]+60>>2]),r=l[199388],g[199388]=0,n=e[49572],b[(t=190288+(n<<3)|0)>>1]=r?2:0,b[t+2>>1]=21,b[t+4>>1]=0,g[t+7|0]=e[e[32972]+60>>2],f=n+1|0,e[49572]=f),(0|De)>0&&(g[199388]=0,e[49572]=f+1,e[(t=190288+(f<<3)|0)>>2]=655362,r=e[47350],e[47350]=r+1,g[t+7|0]=0,b[t+4>>1]=0,e[198304+(r<<2)>>2]=De<<8|225),1024&y&&(b[(t=190288+(fA<<3)|0)>>1]=64|M[t>>1]),e[A+8232>>2]=y}}return q=a+416|0,y}function qn(A,t,r,n,a){var s=0,o=0,c=0,f=0,m=0,p=0,I=0,y=0,P=0,Y=0,X=0,_=0,ce=0,he=0,ye=0,De=0,Re=0,Xe=0,nA=0,fA=0,GA=0,SA=0,At=0,ct=0;e:if(t){if(ce=a<<4,o=(t=e[33268])+r|0,!((0|t)<=0||(s=l[0|(f=ce+129360|0)],I=l[f+1|0]-s<<8,I=(0|t)!=1?(0|I)/(0|t)|0:I,(0|r)>=(0|o))))for(y=I>>>0>255,X=I>>>8|0,s<<=8,f=0-I>>>8|0,De=(0|I)<=0,t=r;De?(m=(p=(p=(0|(c=(0|(c=e[101024+(g[F(t,6)+A|0]<<2)>>2]))<(0|f)?f:c))>=18?18:c)+(c=(0|(c=(0|(s=s+I|0))/256|0))>0?c:0)|0)>>>0>=254?254:p,c=c>>>0>=254?254:c):(c=F(t,6)+A|0,g[c+2|0]=y|l[c+2|0],c=(p=(0|(c=(0|s)/256|0))>0?c:0)>>>0>=254?254:p,m=(p=p+X|0)>>>0>=254?254:p,s=s+I|0),p=F(t,6)+A|0,g[p+5|0]=c,g[p+4|0]=m,(0|o)!=(0|(t=t+1|0)););if(2&l[188785]?(f=e[33271],e[33270]=f):f=e[33270],X=(y=l[3+(s=129360+(t=a<<4)|0)|0])-(c=l[s+2|0])<<8,De=e[s+4>>2],(0|r)>0?(Xe=101056,he=5,p=(0|X)/(l[t+129368|0]-1|0)|0):(Xe=e[12+(t=t+129360|0)>>2],he=l[t+10|0],p=0),(0|o)<(0|f)){for(I=(0|r)<=0,_=((t=X>>31)^X)-t|0,P=129360+(a<<4)|0,c<<=8,Re=y<<8,y=0;;){A:{if(m=F(o,6)+A|0,!(!(1&I)&(0|(s=g[0|m]))<4)){r=0,t=o;r:if(1&((0|s)==5|I)){for(;(0|(p=g[F(t,6)+A|0]))<=6&&(r=((0|p)>3)+r|0,(0|f)!=(0|(t=t+1|0))););if(Y=0,(0|(ye=(0|(t=l[P+8|0]))>(0|r)?r:t))<2){p=0,y=c;break r}p=(0|X)/(ye-1|0)|0,y=c}else(0|ye)>0?y=p+y|0:(y=Re+(F(_,g[Y+Xe|0])>>6)|0,(0|he)>(0|(Y=Y+1|0))||(Xe=e[P+12>>2],Y=0));if(ye=ye-1|0,!((0|s)<4)){g[0|m]=6,r=(t=(0|(t=(0|y)/256|0))>0?t:0)+(((r=(s=e[De+(s<<2)>>2])>>31)^s)-r|0)|0;break A}}(0|s)!=3?(t=(0|y)/256|0,(63&l[m-6|0])>>>0>=3?(r=(s=e[De+(s<<2)>>2])>>31,r=(t=(0|(t=t-g[P+9|0]|0))>0?t:0)+((r^s)-r|0)|0):r=(t=(0|t)>0?t:0)+(((r=(s=e[De+(s<<2)>>2])>>31)^s)-r|0)|0):r=(t=(0|(t=(0|y)/256|0))>0?t:0)+(((r=(s=e[De+12>>2])>>31)^s)-r|0)|0}if(g[m+5|0]=t>>>0>=254?254:t,I=0,t=(0|r)>0?r:0,g[m+4|0]=t>>>0>=254?254:t,g[m+2|0]=l[m+2|0]|s>>>31,(0|f)==(0|(o=o+1|0)))break}o=f}if(!(l[133068]||((268435455&a)==3&&(t=F(o,6)+A|0,g[t+2|0]=2|l[t+2|0]),e[33269]?(t=l[5+(s=100768+(a<<4)|0)|0],c=s+3|0,r=l[s+4|0]-t|0):(t=l[2+(r=100768+(a<<4)|0)|0],c=ce+100768|0,r=l[r+1|0]-t|0),s=F(o,6)+A|0,g[s+5|0]=t>>>0>=254?254:t,g[s+2|0]=l[s+2|0]|r>>>31,t=(p=t)+(((t=r>>31)^r)-t|0)|0,g[s+4|0]=t>>>0>=254?254:t,r=F(f,6)+A|0,g[r+1|0]=l[0|c],t=o+1|0,l[0|r]==4&&(g[0|r]=6),(0|(r=n-t|0))<=0||(a=l[12+(o=100768+(a<<4)|0)|0],o=l[o+13|0]-a<<8,o=(0|r)!=1?(0|o)/(0|r)|0:o,(0|t)>=(0|n)))))for(p=o>>>0>255,I=o>>>8|0,r=a<<8,a=0-o>>>8|0,y=(0|o)<=0;y?(c=(f=(c=(0|(s=(0|a)>(0|(s=e[101024+(g[F(t,6)+A|0]<<2)>>2]))?a:s))>=18?18:s)+(s=(0|(s=(0|(r=r+o|0))/256|0))>0?s:0)|0)>>>0>=254?254:f,f=s>>>0>=254?254:s):(s=F(t,6)+A|0,g[s+2|0]=p|l[s+2|0],f=(s=(0|(s=(0|r)/256|0))>0?s:0)>>>0>=254?254:s,c=(s=s+I|0)>>>0>=254?254:s,r=r+o|0),s=F(t,6)+A|0,g[s+5|0]=f,g[s+4|0]=c,(0|n)!=(0|(t=t+1|0)););}else{if(t=(he=e[34455])+F(a,68)|0,o=l[t+24|0],f=l[t+25|0],s=(t=e[33268])+r|0,!((0|t)<=0||(m=f-o<<8,m=(0|t)!=1?(0|m)/(0|t)|0:m,(0|r)>=(0|s))))for(p=m>>>0>255,I=m>>>8|0,t=o<<8,f=0-m>>>8|0,y=(0|m)<=0;y?(o=(o=(X=(0|(o=(0|(o=e[101024+(g[F(r,6)+A|0]<<2)>>2]))<(0|f)?f:o))>=18?18:o)+(c=(0|(o=(0|(t=t+m|0))/256|0))>0?o:0)|0)>>>0>=254?254:o,c=c>>>0>=254?254:c):(o=F(r,6)+A|0,g[o+2|0]=p|l[o+2|0],c=(o=(0|(o=(0|t)/256|0))>0?o:0)>>>0>=254?254:o,o=(o=o+I|0)>>>0>=254?254:o,t=t+m|0),X=F(r,6)+A|0,g[X+5|0]=c,g[X+4|0]=o,(0|s)!=(0|(r=r+1|0)););2&l[188785]?(r=e[33271],e[33270]=r):r=e[33270],f=r,t=he+F(a,68)|0;A:if((0|(I=l[t+33|0]))!=255)for(;;){if((0|(f=f-1|0))<(0|s)){f=r;break A}if(!(g[F(f,6)+A|0]<4))break}if((0|r)>(0|s)){for(SA=((o=(fA=(y=l[t+32|0])-(m=l[0|(c=t+31|0)])<<8)>>31)^fA)-o|0,Re=(0|(t=l[0|(p=t+30|0)]))==255,X=I<<8,De=m<<8,At=y<<8,ce=he+F(a,68)|0,ct=(0|t)!=255,y=0,I=0,t=1,m=0;;){A:{if(P=F(s,6)+A|0,!(!(1&t)&(0|(_=g[0|P]))<4)){r:if(1&((0|_)==5|t)){a:if(ct){if(nA=1,t=0,o=p,!((0|f)<=(0|(m=s+1|0)))){for(;;){if(o=p,(0|(I=g[F(m,6)+A|0]))>6)break a;if(t=((0|I)>3)+t|0,(0|f)==(0|(m=m+1|0)))break}o=p}}else{if(t=0,m=s,o=c,(0|f)<=(0|s))break a;for(;;){if(o=c,(0|(I=g[F(m,6)+A|0]))>6)break a;if(t=((0|I)>3)+t|0,(0|f)==(0|(m=m+1|0)))break}o=c}if(I=l[0|o]<<8,GA=0,(0|(m=(0|t)<(0|(o=l[ce+34|0]))?t:o))<2){Xe=0;break r}Xe=(0|fA)/(m-1|0)|0}else(0|s)!=(0|f)?nA?(Re=1,m=m+1|0,nA=0,I=De):(0|m)>0?(I=I+Xe|0,nA=0):(nA=0,I=(F(g[16+(ce+GA|0)|0],SA)>>6)+At|0,GA=(0|(t=GA+1|0))<l[ce+35|0]?t:0):(Re=2,I=X);if(m=m-1|0,!((0|_)<4)){t=o=s+1|0;r:if(!((0|r)<=(0|s)))for(;;){if(g[F(t,6)+A|0]>1)break r;if(!((0|r)>=(0|(t=t+1|0))))break}g[0|P]=6,g[P+1|0]=l[ce+26|0],y=0,Y=l[ce+27|0],s=(0|(s=(0|I)/256|0))>0?s:0,g[P+5|0]=s>>>0>=254?254:s,s=s+Y|0,g[P+4|0]=s>>>0>=254?254:s,ye=t-o|0;break A}}if((0|_)>=2){t=o=s+1|0;r:if(!((0|r)<=(0|s)))for(;;){if(g[F(t,6)+A|0]>1)break r;if(!((0|r)>=(0|(t=t+1|0))))break}y=0,s=(0|(s=(0|I)/256|0))>0?s:0,g[P+5|0]=s>>>0>=254?254:s,Y=e[100976+(_<<2)>>2],g[P+2|0]=l[P+2|0]|Y>>>31,s=(0|(s=(_=s)+(((s=Y>>31)^Y)-s|0)|0))>0?s:0,g[P+4|0]=s>>>0>=254?254:s,ye=t-o|0}else(0|ye)<=1?(Y=g[36+(ce+Re|0)|0],t=0):(Y=g[36+(t=ce+Re|0)|0],t=(g[t+39|0]-Y|0)/(ye-1|0)|0),o=e[100976+(_<<2)>>2],g[P+2|0]=l[P+2|0]|o>>>31,t=(0|(t=(((0|I)/256|0)+Y|0)+F(t,y)|0))>0?t:0,g[P+5|0]=t>>>0>=254?254:t,t=(0|(t=t+(((_=o)^(o>>=31))-o|0)|0))>0?t:0,g[P+4|0]=t>>>0>=254?254:t,y=y+1|0,o=s+1|0}if(t=0,(0|r)==(0|(s=o)))break}s=r}if(l[133068]||(o=F(s,6)+A|0,e[33269]?(c=he+F(a,68)|0,t=l[c+47|0],f=l[c+46|0]-t|0,c=c+45|0):(c=he+F(a,68)|0,t=l[c+44|0],f=l[c+43|0]-t|0,c=c+42|0),c=l[0|c],p=(((p=f>>31)^f)-p|0)+t|0,g[o+4|0]=p>>>0>=254?254:p,g[o+5|0]=t>>>0>=254?254:t,t=F(s,6)+A|0,g[t+2|0]=l[t+2|0]|f>>>31,r=F(r,6)+A|0,g[r+1|0]=c,t=s+1|0,l[0|r]==4&&(g[0|r]=6),(0|(r=n-t|0))<=0)||(o=he+F(a,68)|0,a=l[o+48|0],o=l[o+49|0]-a<<8,o=(0|r)!=1?(0|o)/(0|r)|0:o,(0|t)>=(0|n)))break e;for(p=o>>>0>255,I=o>>>8|0,r=a<<8,a=0-o>>>8|0,y=(0|o)<=0;y?(c=(f=(c=(0|(s=(0|a)>(0|(s=e[101024+(g[F(t,6)+A|0]<<2)>>2]))?a:s))>=18?18:s)+(s=(0|(s=(0|(r=r+o|0))/256|0))>0?s:0)|0)>>>0>=254?254:f,f=s>>>0>=254?254:s):(s=F(t,6)+A|0,g[s+2|0]=p|l[s+2|0],f=(s=(0|(s=(0|r)/256|0))>0?s:0)>>>0>=254?254:s,c=(s=s+I|0)>>>0>=254?254:s,r=r+o|0),s=F(t,6)+A|0,g[s+5|0]=f,g[s+4|0]=c,(0|n)!=(0|(t=t+1|0)););}}function Yn(){var A,t=0,r=0,n=0,a=0,s=0,o=0,c=0,f=0,m=0,p=0,I=0,y=0,P=0,Y=0,X=0;if((0|(A=e[36455]))!=(0|(f=e[36454]))){e:if(!((0|(P=e[36427]))<0|(0|f)==(0|P))){r=I=e[8+(216192+((m=P)<<4)|0)>>2];A:{for(;;){if((n=e[(o=216192+((m=(0|(n=m-1|0))<0?169:n)<<4)|0)>>2])-5>>>0<2)break A;r:{if((0|n)<=4){if(e[o+12>>2]!=(0|r))break A;if(n=M[o+4>>1],e[o+12>>2]=I,r=e[o+8>>2],16&(t=M[r>>1]))break r;for(X=32&t?(F(n,12)>>>0)/10|0:n,a=0,n=r,c=0;;){t=M[r>>1];a:if(!(c>>>0<3&&8&t)){if(t=t<<16>>16,(0|(Y=(p=b[2+((y=c<<1)+r|0)>>1])-(s=b[2+(y=I+y|0)>>1])|0))>(0|(p=(0|F(X,(0|F(e[200944+(c<<2)>>2],(0|Y)>0?p+(s<<1)|0:(p<<1)+s|0))/3e3|0))/256|0)))a||((0|t)<0?n=r:(n=0,t=(0|(t=e[44469]+1|0))<=169?t:0,e[44469]=t,(t=177888+(a=t<<6)|0)&&(n=M[r+4>>1]|M[r+6>>1]<<16,s=M[r>>1]|M[r+2>>1]<<16,b[t>>1]=s,b[t+2>>1]=s>>>16,b[t+4>>1]=n,b[t+6>>1]=n>>>16,n=M[r+60>>1]|M[r+62>>1]<<16,s=M[r+56>>1]|M[r+58>>1]<<16,b[t+56>>1]=s,b[t+58>>1]=s>>>16,b[t+60>>1]=n,b[t+62>>1]=n>>>16,n=M[r+52>>1]|M[r+54>>1]<<16,s=M[r+48>>1]|M[r+50>>1]<<16,b[t+48>>1]=s,b[t+50>>1]=s>>>16,b[t+52>>1]=n,b[t+54>>1]=n>>>16,n=M[r+44>>1]|M[r+46>>1]<<16,s=M[r+40>>1]|M[r+42>>1]<<16,b[t+40>>1]=s,b[t+42>>1]=s>>>16,b[t+44>>1]=n,b[t+46>>1]=n>>>16,n=M[r+36>>1]|M[r+38>>1]<<16,s=M[r+32>>1]|M[r+34>>1]<<16,b[t+32>>1]=s,b[t+34>>1]=s>>>16,b[t+36>>1]=n,b[t+38>>1]=n>>>16,n=M[r+28>>1]|M[r+30>>1]<<16,s=M[r+24>>1]|M[r+26>>1]<<16,b[t+24>>1]=s,b[t+26>>1]=s>>>16,b[t+28>>1]=n,b[t+30>>1]=n>>>16,n=M[r+20>>1]|M[r+22>>1]<<16,s=M[r+16>>1]|M[r+18>>1]<<16,b[t+16>>1]=s,b[t+18>>1]=s>>>16,b[t+20>>1]=n,b[t+22>>1]=n>>>16,n=M[r+12>>1]|M[r+14>>1]<<16,s=M[r+8>>1]|M[r+10>>1]<<16,b[t+8>>1]=s,b[t+10>>1]=s>>>16,b[t+12>>1]=n,b[t+14>>1]=n>>>16,g[a+177904|0]=0,b[t>>1]=32768|M[t>>1],n=t))),t=p+M[y+2>>1]|0;else{if((0-p|0)<=(0|Y))break a;a||((0|t)<0?n=r:(n=0,t=(0|(t=e[44469]+1|0))<=169?t:0,e[44469]=t,(t=177888+(a=t<<6)|0)&&(n=M[r+4>>1]|M[r+6>>1]<<16,s=M[r>>1]|M[r+2>>1]<<16,b[t>>1]=s,b[t+2>>1]=s>>>16,b[t+4>>1]=n,b[t+6>>1]=n>>>16,n=M[r+60>>1]|M[r+62>>1]<<16,s=M[r+56>>1]|M[r+58>>1]<<16,b[t+56>>1]=s,b[t+58>>1]=s>>>16,b[t+60>>1]=n,b[t+62>>1]=n>>>16,n=M[r+52>>1]|M[r+54>>1]<<16,s=M[r+48>>1]|M[r+50>>1]<<16,b[t+48>>1]=s,b[t+50>>1]=s>>>16,b[t+52>>1]=n,b[t+54>>1]=n>>>16,n=M[r+44>>1]|M[r+46>>1]<<16,s=M[r+40>>1]|M[r+42>>1]<<16,b[t+40>>1]=s,b[t+42>>1]=s>>>16,b[t+44>>1]=n,b[t+46>>1]=n>>>16,n=M[r+36>>1]|M[r+38>>1]<<16,s=M[r+32>>1]|M[r+34>>1]<<16,b[t+32>>1]=s,b[t+34>>1]=s>>>16,b[t+36>>1]=n,b[t+38>>1]=n>>>16,n=M[r+28>>1]|M[r+30>>1]<<16,s=M[r+24>>1]|M[r+26>>1]<<16,b[t+24>>1]=s,b[t+26>>1]=s>>>16,b[t+28>>1]=n,b[t+30>>1]=n>>>16,n=M[r+20>>1]|M[r+22>>1]<<16,s=M[r+16>>1]|M[r+18>>1]<<16,b[t+16>>1]=s,b[t+18>>1]=s>>>16,b[t+20>>1]=n,b[t+22>>1]=n>>>16,n=M[r+12>>1]|M[r+14>>1]<<16,s=M[r+8>>1]|M[r+10>>1]<<16,b[t+8>>1]=s,b[t+10>>1]=s>>>16,b[t+12>>1]=n,b[t+14>>1]=n>>>16,g[a+177904|0]=0,b[t>>1]=32768|M[t>>1],n=t))),t=M[y+2>>1]-p|0}a=1,b[2+((c<<1)+n|0)>>1]=t,e[o+8>>2]=n}if((0|(c=c+1|0))==6)break}I=n}if((0|f)!=(0|m))continue;break A}break}I=r}for(n=0;;){if((r=e[(m=216192+(P<<4)|0)>>2])-5>>>0<2)break e;if((0|r)<=4){if(r=e[m+8>>2],t=M[m+4>>1],n){if((0|r)!=(0|n))break e;e[m+8>>2]=I}else I=r;if(16&(n=M[I>>1]))break e;for(y=32&n?(F(t,6)>>>0)/5|0:t,a=0,r=n=e[m+12>>2],c=0;;){A:{r:if((0|(f=(o=b[2+((t=c<<1)+n|0)>>1])-(t=b[2+(p=t+I|0)>>1])|0))>(0|(o=(0|F(y,(0|F(e[200944+(c<<2)>>2],(0|f)>0?o+(t<<1)|0:(o<<1)+t|0))/3e3|0))/256|0))){if(!a){if(b[n>>1]<0){r=n,t=t+o|0;break r}r=(0|(r=e[44469]+1|0))<=169?r:0,e[44469]=r,a=M[n+20>>1]|M[n+22>>1]<<16,t=16+(r=177888+(r<<6)|0)|0,f=M[n+16>>1]|M[n+18>>1]<<16,b[t>>1]=f,b[t+2>>1]=f>>>16,b[t+4>>1]=a,b[t+6>>1]=a>>>16,t=M[n+4>>1]|M[n+6>>1]<<16,a=M[n>>1]|M[n+2>>1]<<16,b[r>>1]=a,b[r+2>>1]=a>>>16,b[r+4>>1]=t,b[r+6>>1]=t>>>16,t=M[n+12>>1]|M[n+14>>1]<<16,a=M[n+8>>1]|M[n+10>>1]<<16,b[r+8>>1]=a,b[r+10>>1]=a>>>16,b[r+12>>1]=t,b[r+14>>1]=t>>>16,t=M[n+28>>1]|M[n+30>>1]<<16,a=M[n+24>>1]|M[n+26>>1]<<16,b[r+24>>1]=a,b[r+26>>1]=a>>>16,b[r+28>>1]=t,b[r+30>>1]=t>>>16,t=M[n+36>>1]|M[n+38>>1]<<16,a=M[n+32>>1]|M[n+34>>1]<<16,b[r+32>>1]=a,b[r+34>>1]=a>>>16,b[r+36>>1]=t,b[r+38>>1]=t>>>16,t=M[n+44>>1]|M[n+46>>1]<<16,a=M[n+40>>1]|M[n+42>>1]<<16,b[r+40>>1]=a,b[r+42>>1]=a>>>16,b[r+44>>1]=t,b[r+46>>1]=t>>>16,t=M[n+52>>1]|M[n+54>>1]<<16,a=M[n+48>>1]|M[n+50>>1]<<16,b[r+48>>1]=a,b[r+50>>1]=a>>>16,b[r+52>>1]=t,b[r+54>>1]=t>>>16,t=M[n+60>>1]|M[n+62>>1]<<16,a=M[n+56>>1]|M[n+58>>1]<<16,b[r+56>>1]=a,b[r+58>>1]=a>>>16,b[r+60>>1]=t,b[r+62>>1]=t>>>16,g[r+16|0]=0,b[r>>1]=32768|M[r>>1],t=M[p+2>>1]}t=t+o|0}else{if((0|f)>=(0-o|0))break A;a||(b[n>>1]<0?r=n:(r=(0|(r=e[44469]+1|0))<=169?r:0,e[44469]=r,a=M[n+20>>1]|M[n+22>>1]<<16,t=16+(r=177888+(r<<6)|0)|0,f=M[n+16>>1]|M[n+18>>1]<<16,b[t>>1]=f,b[t+2>>1]=f>>>16,b[t+4>>1]=a,b[t+6>>1]=a>>>16,t=M[n+4>>1]|M[n+6>>1]<<16,a=M[n>>1]|M[n+2>>1]<<16,b[r>>1]=a,b[r+2>>1]=a>>>16,b[r+4>>1]=t,b[r+6>>1]=t>>>16,t=M[n+12>>1]|M[n+14>>1]<<16,a=M[n+8>>1]|M[n+10>>1]<<16,b[r+8>>1]=a,b[r+10>>1]=a>>>16,b[r+12>>1]=t,b[r+14>>1]=t>>>16,t=M[n+28>>1]|M[n+30>>1]<<16,a=M[n+24>>1]|M[n+26>>1]<<16,b[r+24>>1]=a,b[r+26>>1]=a>>>16,b[r+28>>1]=t,b[r+30>>1]=t>>>16,t=M[n+36>>1]|M[n+38>>1]<<16,a=M[n+32>>1]|M[n+34>>1]<<16,b[r+32>>1]=a,b[r+34>>1]=a>>>16,b[r+36>>1]=t,b[r+38>>1]=t>>>16,t=M[n+44>>1]|M[n+46>>1]<<16,a=M[n+40>>1]|M[n+42>>1]<<16,b[r+40>>1]=a,b[r+42>>1]=a>>>16,b[r+44>>1]=t,b[r+46>>1]=t>>>16,t=M[n+52>>1]|M[n+54>>1]<<16,a=M[n+48>>1]|M[n+50>>1]<<16,b[r+48>>1]=a,b[r+50>>1]=a>>>16,b[r+52>>1]=t,b[r+54>>1]=t>>>16,t=M[n+60>>1]|M[n+62>>1]<<16,a=M[n+56>>1]|M[n+58>>1]<<16,b[r+56>>1]=a,b[r+58>>1]=a>>>16,b[r+60>>1]=t,b[r+62>>1]=t>>>16,g[r+16|0]=0,b[r>>1]=32768|M[r>>1],t=M[p+2>>1])),t=t-o|0}a=1,b[2+((c<<1)+r|0)>>1]=t,e[m+12>>2]=r}if((0|(c=c+1|0))==6)break}I=r}if((0|A)==(0|(P=(0|(r=P+1|0))<=169?r:0)))break}}e[36454]=A}}function kn(A,t){var r,n,a=0,s=0,o=0,c=0,f=0,m=0,p=0,I=0,y=0,P=0,Y=0,X=0,_=0,ce=0,he=0,ye=0,De=0,Re=0,Xe=0,nA=0,fA=0,GA=0,SA=0;q=r=q-48|0,me(+A),s=0|K(1),a=0|K(0),n=s;e:{A:{r:{if((f=2147483647&s)>>>0<=1074752122){if((1048575&s)==598523)break r;if(f>>>0<=1073928572){if((0|n)>0|(0|n)>=0){c=(A+=-1.5707963267341256)+-6077100506506192e-26,D[t>>3]=c,D[t+8>>3]=A-c-6077100506506192e-26,s=1;break e}c=(A+=1.5707963267341256)+6077100506506192e-26,D[t>>3]=c,D[t+8>>3]=A-c+6077100506506192e-26,s=-1;break e}if((0|n)>0|(0|n)>=0){c=(A+=-3.1415926534682512)+-12154201013012384e-26,D[t>>3]=c,D[t+8>>3]=A-c-12154201013012384e-26,s=2;break e}c=(A+=3.1415926534682512)+12154201013012384e-26,D[t>>3]=c,D[t+8>>3]=A-c+12154201013012384e-26,s=-2;break e}if(f>>>0<=1075594811){if(f>>>0<=1075183036){if((0|f)==1074977148)break r;if((0|n)>0|(0|n)>=0){c=(A+=-4.712388980202377)+-18231301519518578e-26,D[t>>3]=c,D[t+8>>3]=A-c-18231301519518578e-26,s=3;break e}c=(A+=4.712388980202377)+18231301519518578e-26,D[t>>3]=c,D[t+8>>3]=A-c+18231301519518578e-26,s=-3;break e}if((0|f)==1075388923)break r;if((0|n)>0|(0|n)>=0){c=(A+=-6.2831853069365025)+-2430840202602477e-25,D[t>>3]=c,D[t+8>>3]=A-c-2430840202602477e-25,s=4;break e}c=(A+=6.2831853069365025)+2430840202602477e-25,D[t>>3]=c,D[t+8>>3]=A-c+2430840202602477e-25,s=-4;break e}if(f>>>0>1094263290)break A}a=(De=(c=A+-1.5707963267341256*(I=.6366197723675814*A+6755399441055744-6755399441055744))-(P=6077100506506192e-26*I))<-.7853981633974483,s=Ne(I)<2147483648?~~I:-2147483648,a?(s=s-1|0,P=6077100506506192e-26*(I+=-1),c=A+-1.5707963267341256*I):De>.7853981633974483&&(s=s+1|0,P=6077100506506192e-26*(I+=1),c=A+-1.5707963267341256*I),A=c-P,D[t>>3]=A,me(+A),a=0|K(1),K(0),((o=f>>>20|0)-(a>>>20&2047)|0)<17||(P=c,A=(c-=A=6077100506303966e-26*I)-(P=20222662487959506e-37*I-(P-c-A)),D[t>>3]=A,me(+A),a=0|K(1),K(0),(o-(a>>>20&2047)|0)<50||(P=c,A=(c-=A=20222662487111665e-37*I)-(P=84784276603689e-45*I-(P-c-A)),D[t>>3]=A)),D[t+8>>3]=c-A-P;break e}if(f>>>0>=2146435072)A-=A,D[t>>3]=A,D[t+8>>3]=A,s=0;else{for(V(0,0|a),V(1,1048575&n|1096810496),A=+Ae(),s=0,a=1;o=(r+16|0)+(s<<3)|0,c=+(0|(s=Ne(A)<2147483648?~~A:-2147483648)),D[o>>3]=c,A=16777216*(A-c),s=1,o=a,a=0,o;);for(D[r+32>>3]=A,s=2;s=(a=s)-1|0,D[(r+16|0)+(a<<3)>>3]==0;);if(Re=r+16|0,o=0,q=m=q-560|0,f=F(ye=(0|(f=((s=(f>>>20|0)-1046|0)-3|0)/24|0))>0?f:0,-24)+s|0,((Y=e[28105])+(p=(ce=a+1|0)-1|0)|0)>=0)for(s=Y+ce|0,a=ye-p|0;D[(m+320|0)+(o<<3)>>3]=(0|a)<0?0:+e[112432+(a<<2)>>2],a=a+1|0,(0|s)!=(0|(o=o+1|0)););for(_=f-24|0,s=0,o=(0|Y)>0?Y:0,X=(0|ce)<=0;;){if(X)A=0;else for(y=s+p|0,a=0,A=0;A=D[(a<<3)+Re>>3]*D[(m+320|0)+(y-a<<3)>>3]+A,(0|ce)!=(0|(a=a+1|0)););if(D[(s<<3)+m>>3]=A,a=(0|s)==(0|o),s=s+1|0,a)break}GA=47-f|0,Xe=48-f|0,SA=f-25|0,s=Y;A:{for(;;){if(A=D[(s<<3)+m>>3],a=0,o=s,!(y=(0|s)<=0))for(;X=(m+480|0)+(a<<2)|0,p=Ne(c=5960464477539063e-23*A)<2147483648?~~c:-2147483648,p=Ne(A=-16777216*(c=+(0|p))+A)<2147483648?~~A:-2147483648,e[X>>2]=p,A=D[((o=o-1|0)<<3)+m>>3]+c,(0|s)!=(0|(a=a+1|0)););A=Ua(A,_),A+=-8*tA(.125*A),A-=+(0|(X=Ne(A)<2147483648?~~A:-2147483648));r:{a:{s:{if(nA=(0|_)<=0){if(_)break s;p=e[476+((s<<2)+m|0)>>2]>>23}else he=o=(s<<2)+m|0,o=(p=e[o+476>>2])-((a=p>>Xe)<<Xe)|0,e[he+476>>2]=o,X=a+X|0,p=o>>GA;if((0|p)<=0)break r;break a}if(p=2,!(A>=.5)){p=0;break r}}if(a=0,o=0,!y)for(;fA=e[(he=(m+480|0)+(a<<2)|0)>>2],y=16777215,o||(y=16777216,fA)?(e[he>>2]=y-fA,o=1):o=0,(0|s)!=(0|(a=a+1|0)););a:if(!nA){a=8388607;s:switch(0|SA){case 1:a=4194303;break;case 0:break s;default:break a}e[476+(y=(s<<2)+m|0)>>2]=e[y+476>>2]&a}X=X+1|0,(0|p)==2&&(A=1-A,p=2,o&&(A-=Ua(1,_)))}if(A!=0)break;if(o=0,!((0|Y)>=(0|(a=s)))){for(;o=e[(m+480|0)+((a=a-1|0)<<2)>>2]|o,(0|a)>(0|Y););if(o){for(f=_;f=f-24|0,!e[(m+480|0)+((s=s-1|0)<<2)>>2];);break A}}for(a=1;o=a,a=a+1|0,!e[(m+480|0)+(Y-o<<2)>>2];);for(o=s+o|0;;){if(p=s+ce|0,s=s+1|0,D[(m+320|0)+(p<<3)>>3]=e[112432+(ye+s<<2)>>2],a=0,A=0,(0|ce)>0)for(;A=D[(a<<3)+Re>>3]*D[(m+320|0)+(p-a<<3)>>3]+A,(0|ce)!=(0|(a=a+1|0)););if(D[(s<<3)+m>>3]=A,!((0|s)<(0|o)))break}s=o}(A=Ua(A,24-f|0))>=16777216?(_=(m+480|0)+(s<<2)|0,a=Ne(c=5960464477539063e-23*A)<2147483648?~~c:-2147483648,o=Ne(A=-16777216*+(0|a)+A)<2147483648?~~A:-2147483648,e[_>>2]=o,s=s+1|0):(a=Ne(A)<2147483648?~~A:-2147483648,f=_),e[(m+480|0)+(s<<2)>>2]=a}if(A=Ua(1,f),!((0|s)<0)){for(a=s;o=a,D[(a<<3)+m>>3]=A*+e[(m+480|0)+(a<<2)>>2],a=a-1|0,A*=5960464477539063e-23,o;);if(y=0,!((0|s)<0))for(f=(0|Y)>0?Y:0,o=s;;){for(_=f>>>0<y>>>0?f:y,Y=s-o|0,a=0,A=0;A=D[115200+(a<<3)>>3]*D[(a+o<<3)+m>>3]+A,ce=(0|a)!=(0|_),a=a+1|0,ce;);if(D[(m+160|0)+(Y<<3)>>3]=A,o=o-1|0,a=(0|s)!=(0|y),y=y+1|0,!a)break}}if(A=0,(0|s)>=0)for(a=s;o=a,a=a-1|0,A+=D[(m+160|0)+(o<<3)>>3],o;);if(D[r>>3]=p?-A:A,A=D[m+160>>3]-A,a=1,(0|s)>0)for(;A+=D[(m+160|0)+(a<<3)>>3],o=(0|a)!=(0|s),a=a+1|0,o;);D[r+8>>3]=p?-A:A,q=m+560|0,s=7&X,A=D[r>>3],(0|n)<0?(D[t>>3]=-A,D[t+8>>3]=-D[r+8>>3],s=0-s|0):(D[t>>3]=A,D[t+8>>3]=D[r+8>>3])}}return q=r+48|0,s}function qA(){var A=0,t=0,r=0,n=0,a=0,s=0,o=0,c=0,f=0,m=0,p=0,I=0,y=0,P=0,Y=0,X=0,_=0,ce=0,he=0,ye=0,De=0,Re=0,Xe=0,nA=0,fA=0,GA=0,SA=0,At=0,ct=0,bt=0,Nt=0,qt=0,tr=0,mr=0,Cr=0,Gr=0,Dr=0,Or=0,Kr=0,on=0,$r=0,ln=0,En=0,na=0,pa=0,ha=0;e[55925]=0,A=e[56772],e[56772]=A+1,r=e[55961],y=e[55922],Y=Ws(39.89822670059037*(t=+(0|A))),m=Ws(22.30530784048753*t),t=+(0|y)/50*(+(0|r)/100)*(Ws(14.765485471872028*t)+(Y+m))*10,A=Ne(t)<2147483648?~~t:-2147483648,e[56607]=A+e[56607];e:if(!(e[55923]<=0)){for(;;){for(r=kt(e[33209],0,1103515245,0),A=J,A=Zi(r=r+12345|0,A=r>>>0<12345?A+1|0:A),e[33209]=A,A=8191+((A>>>0)%16383|0)|0,e[55929]=A,bt=+(0|A),t=.75*D[28387]+bt,D[28387]=t,Nt=(0|(A=e[55924]))>(0|(Xe=e[55928]))?.5*t:t,Cr=(a=.033*+e[56652])>0?1-a:1,r=e[56650]<<2,GA=(0|(fA=e[55921]))==1&&(0|r)>263?263:r,Gr=111136+((qt=e[56651])<<1)|0,Dr=111136+((SA=e[56658])<<1)|0,Or=(0|SA)>0,tr=e[55918],Kr=F(tr,40),on=e[55925],$r=D[27967],mr=e[56607],t=D[27979],_=D[27969],c=D[27970],At=e[56780],ye=e[56654],I=D[27976],P=D[27972],ce=D[28388],he=D[28389],y=e[55927],n=D[28383],p=e[55926],De=e[55956],ln=D[27975],m=D[28131],s=D[28130],o=D[28123],X=D[28121],f=D[28122],nA=D[28120],Re=D[28119],En=D[28129],na=D[28128],pa=D[28127],ha=Tn(0*D[27968]),ct=0;;){Y=s;A:{r:switch(fA-1|0){case 0:ce=0,s=X*o,o=f,f=n=s+(Re*(ce=(0|A)<=2?D[111312+(A<<3)>>3]:ce)+nA*o);break A;case 1:if(n=0,(0|A)>=(0|y)){he=0;break A}s=D[27965]-D[27966],D[27965]=s,n=.028*(he=s+he);break A;case 2:if(!p){De=100,n=0;break A}De=100,r=Ne(s=+(0|A)/+(0|p)*100)<2147483648?~~s:-2147483648,n=+b[110928+((0|r)%100<<1)>>1],n=t*((+b[110928+((r+1|0)%100<<1)>>1]-n)*(s-+(0|r))+n);break A;case 3:break r;default:break A}p?(De=256,r=Ne(s=+(0|A)/+(0|p)*256)<2147483648?~~s:-2147483648,n=+b[111344+((0|r)%256<<1)>>1],n=t*((+b[111344+((r+1|0)%256<<1)>>1]-n)*(s-+(0|r))+n)):(De=256,n=0)}if((0|A)>=(0|p)&&((0|mr)>0?(A=(0|Kr)/(0|mr)|0,I=0,P=0,P=SA>>>0<=87?.001*+b[Dr>>1]:P,I=qt>>>0<=87?.001*+b[Gr>>1]*.1:I,Xe=A>>Or,y=(0|(r=(p=(A-1|0)<=(0|GA))?A-2|0:GA))<=40?40:r,s=+b[111776+((y=p||(0|r)<40?y:GA)<<1)>>1],D[27966]=s,X=s,s=+(0|y),D[27965]=X*s*.333,ye=(0|(r=A-y|0))>(0|ye)?ye:r,At=0-(r=(0|At)<0?0-ye|0:ye)|0,Re=(s*=.00833)*s,Re*=1-(nA=(X=(s=Ft($r*+((0|tr)/(0|y)|0)))*ha)+X)-(X=s*-s),A=(0|(p=A+r|0))!=4):(e[55930]=0,e[55931]=0,e[55932]=0,e[55933]=0,Xe=4,I=0,P=0,p=4,A=0),c=(A|=!on)?a:c,_=A?Cr:_,A=0),A=A+1|0,s=n=En*m+(pa*n+na*Y),m=Y,(0|(ct=ct+1|0))==4)break}if(e[55926]=p,e[55956]=De,e[55924]=A,D[28383]=n,e[55927]=y,D[28389]=he,D[28388]=ce,D[27972]=P,D[27976]=I,e[55928]=Xe,e[56654]=ye,e[56780]=At,D[27970]=c,D[27969]=_,D[28122]=f,D[28120]=nA,D[28119]=Re,D[28123]=o,D[28121]=X,D[28131]=m,D[28130]=n,(0|fA)==5&&(n=6e3*((t=+(0|A)/+(0|p))+t+-1),D[28383]=n),t=n*_+D[28384]*c,D[28383]=t,D[28384]=t,(0|A)<(0|y)&&(t=I*bt+t,D[28383]=t),c=Nt*D[27974],Y=t*D[27973]+c,m=0,e[55916]!=2&&(m=D[27987],f=D[27986],D[27987]=f,t=c+t*P,D[27986]=t,c=D[28059],o=D[28058],D[28059]=o,t=c*D[28057]+(D[28055]*(m*D[27985]+(D[27983]*t+f*D[27984]))+o*D[28056]),D[28058]=t,m=D[28049],c=D[28051],f=D[28048],o=D[28047],a=D[28050],D[28051]=a,t=m*c+(o*t+f*a),D[28050]=t,m=D[28043],c=D[28041],f=D[28040],o=D[28039],a=D[28042],D[28043]=a,t=c*m+(o*t+f*a),D[28042]=t,m=D[28035],c=D[28033],f=D[28032],o=D[28031],a=D[28034],D[28035]=a,t=c*m+(o*t+f*a),D[28034]=t,m=D[28027],c=D[28025],f=D[28024],o=D[28023],a=D[28026],D[28027]=a,t=c*m+(o*t+f*a),D[28026]=t,m=D[28019],c=D[28017],f=D[28016],o=D[28015],a=D[28018],D[28019]=a,t=c*m+(o*t+f*a),D[28018]=t,m=D[28011],c=D[28009],f=D[28008],o=D[28007],a=D[28010],D[28011]=a,t=c*m+(o*t+f*a),D[28010]=t,m=D[28003],c=D[28001],f=D[28e3],o=D[27999],a=D[28002],D[28003]=a,t=c*m+(o*t+f*a),D[28002]=t,m=D[27995],c=D[27993],f=D[27992],o=D[27991],a=D[27994],D[27995]=a,m=c*m+(o*t+f*a),D[27994]=m),t=D[28385],D[28385]=Y,c=D[28075],f=D[28074],D[28075]=f,o=D[28067],a=D[28066],D[28067]=a,c=c*D[28073]+(D[28071]*Y+f*D[28072]),D[28074]=c,f=o*D[28065]+(D[28063]*Y+a*D[28064]),D[28066]=f,o=D[28081],a=D[28083],s=D[28079],n=D[28080],I=D[28082],D[28083]=I,Y=o*a+(s*(t=ln*Nt+Y-t)+n*I),D[28082]=Y,o=D[28091],a=D[28089],s=D[28087],n=D[28088],I=D[28090],D[28091]=I,o=a*o+(s*t+n*I),D[28090]=o,a=D[28099],s=D[28097],n=D[28095],I=D[28096],P=D[28098],D[28099]=P,a=s*a+(n*t+I*P),D[28098]=a,s=D[28107],n=D[28105],I=D[28103],P=D[28104],_=D[28106],D[28107]=_,s=n*s+(I*t+P*_),D[28106]=s,n=D[28115],I=D[28113],P=D[28111],_=D[28112],ce=D[28114],D[28115]=ce,n=I*n+(P*t+_*ce),D[28114]=n,I=D[28139],P=D[28137],_=D[28136],ce=D[28135],he=D[27971],X=D[28138],D[28139]=X,t=P*I+(ce*(t*he-(n-(s-(a-(o-(Y-(m+c+f)))))))+_*X),D[28138]=t,t=D[27977]*(t*+e[50779]),n=+(0|(A=Ne(t)<2147483648?~~t:-2147483648)),(0|(A=e[50776]))<e[50773]&&(p=A+1|0,r=e[50772],(y=e[50774])?(e[50776]=p,A=F(y,g[A+r|0])):(y=l[A+r|0],r=g[r+p|0],e[50776]=A+2,A=y|r<<8),n+=+((0|F(e[50775],(0|F(A,e[50780]))/1024|0))/40|0)),(0|(A=e[55962]))<=63&&(e[55962]=A+1,n=n*+(0|A)*.015625),(0|(A=e[55963]))<=0||(A=A-1|0,e[55963]=A,n=n*+(0|A)*.015625,A||(e[55962]=0)),r=(A=e[51293])+1|0,e[51293]=r,p=F(b[205184+(A<<1)>>1],e[50755])>>8,A=Ne(n)<2147483648?~~n:-2147483648,(0|r)>=5500&&(e[51293]=0),r=e[51290],e[51290]=r+1,A=(0|(A=(0|(A=A+p|0))<=-32768?-32768:A))>=32767?32767:A,g[0|r]=A,r=e[51290],e[51290]=r+1,g[0|r]=A>>>8,p=(r=e[51292])+1|0,e[51292]=p,b[205184+(r<<1)>>1]=A,(0|p)>=5500&&(e[51292]=0),p=1,e[56606]=e[56606]+1,ue[54046]<e[51290]+2>>>0)break e;if(A=e[55925]+1|0,e[55925]=A,!((0|A)<e[55923]))break}p=0}return p}function et(A,t,r,n,a,s,o){var c,f,m,p=0,I=0,y=0,P=0,Y=0,X=0,_=0,ce=0,he=0,ye=0,De=0,Re=0,Xe=0,nA=0,fA=0,GA=0,SA=0;q=c=q-80|0,e[c+76>>2]=t,m=c+55|0,f=c+56|0;e:{A:{r:{a:{s:for(;;){if(y=t,(2147483647^ce)<(0|p))break a;ce=p+ce|0;c:{o:{u:{if(I=l[0|(p=y)])for(;;){l:{i:if(t=255&I){if((0|t)!=37)break l;for(I=p;;){if(l[I+1|0]!=37){t=I;break i}if(p=p+1|0,Y=l[I+2|0],I=t=I+2|0,(0|Y)!=37)break}}else t=p;if((0|(p=p-y|0))>(0|(fA=2147483647^ce)))break a;if(A&&_r(A,y,p),p)continue s;e[c+76>>2]=t,p=t+1|0,he=-1,l[t+2|0]!=36|g[t+1|0]-48>>>0>=10||(he=g[t+1|0]-48|0,Re=1,p=t+3|0),e[c+76>>2]=p,X=0;i:if((t=(I=g[0|p])-32|0)>>>0>31)_=p;else if(_=p,75913&(t=1<<t))for(;;){if(_=p+1|0,e[c+76>>2]=_,X|=t,(t=(I=g[p+1|0])-32|0)>>>0>=32)break i;if(p=_,!(75913&(t=1<<t)))break}i:if((0|I)!=42){if((0|(ye=x0(c+76|0)))<0)break a;I=e[c+76>>2]}else{if(l[_+2|0]!=36|g[_+1|0]-48>>>0>=10){if(Re)break u;if(I=_+1|0,!A){e[c+76>>2]=I,Re=0,ye=0;break i}t=e[r>>2],e[r>>2]=t+4,Re=0,t=e[t>>2]}else e[((g[_+1|0]<<2)+a|0)-192>>2]=10,I=_+3|0,Re=1,t=e[((g[_+1|0]<<3)+n|0)-384>>2];if(e[c+76>>2]=I,ye=t,(0|t)>=0)break i;ye=0-ye|0,X|=8192}if(p=0,P=-1,l[0|I]==46)if(l[I+1|0]!=42)e[c+76>>2]=I+1,P=x0(c+76|0),t=e[c+76>>2],nA=1;else{if(l[I+3|0]!=36|g[I+2|0]-48>>>0>=10){if(Re)break u;t=I+2|0,P=0,A&&(I=e[r>>2],e[r>>2]=I+4,P=e[I>>2])}else e[((g[I+2|0]<<2)+a|0)-192>>2]=10,t=I+4|0,P=e[((g[I+2|0]<<3)+n|0)-384>>2];e[c+76>>2]=t,nA=~P>>>31|0}else t=I,nA=0;for(;;){if(De=p,_=28,Y=t,(p=g[0|t])-123>>>0<4294967238)break r;if(t=Y+1|0,!((p=l[123983+(p+F(De,58)|0)|0])-1>>>0<8))break}e[c+76>>2]=t;i:{p:{if((0|p)!=27){if(!p)break r;if((0|he)>=0){e[(he<<2)+a>>2]=p,p=e[4+(I=(he<<3)+n|0)>>2],e[c+64>>2]=e[I>>2],e[c+68>>2]=p;break p}if(!A)break c;fr(c- -64|0,p,r,o);break i}if((0|he)>=0)break r}if(p=0,!A)continue s}I=-65537&X,X=8192&X?I:X,he=0,Xe=84065,_=f;i:{p:{C:{m:{b:{h:{E:{w:{y:{L:{W:{V:{M:{B:{D:{switch(p=g[0|Y],(p=De&&(15&p)==3?-33&p:p)-88|0){case 11:break i;case 9:case 13:case 14:case 15:break p;case 27:break E;case 12:case 17:break L;case 23:break W;case 0:case 32:break V;case 24:break M;case 22:break B;case 29:break D;case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 10:case 16:case 18:case 19:case 20:case 21:case 25:case 26:case 28:case 30:case 31:break o}switch(p-65|0){case 0:case 4:case 5:case 6:break p;case 2:break b;case 1:case 3:break o}if((0|p)==83)break h;break o}I=e[c+64>>2],Y=e[c+68>>2],Xe=84065;break y}p=0;B:switch(255&De){case 0:case 1:case 6:e[e[c+64>>2]>>2]=ce;continue s;case 2:y=e[c+64>>2],e[y>>2]=ce,e[y+4>>2]=ce>>31;continue s;case 3:b[e[c+64>>2]>>1]=ce;continue s;case 4:g[e[c+64>>2]]=ce;continue s;case 7:break B;default:continue s}y=e[c+64>>2],e[y>>2]=ce,e[y+4>>2]=ce>>31;continue s}P=P>>>0<=8?8:P,X|=8,p=120}if(y=f,GA=32&p,(I=e[c+64>>2])|(Y=e[c+68>>2]))for(;g[0|(y=y-1|0)]=GA|l[124512+(15&I)|0],SA=!Y&I>>>0>15|!!(0|Y),De=Y,Y=Y>>>4|0,I=(15&De)<<28|I>>>4,SA;);if(!(e[c+64>>2]|e[c+68>>2])|!(8&X))break w;Xe=84065+(p>>>4|0)|0,he=2;break w}if(p=f,Y=y=e[c+68>>2],y|(I=e[c+64>>2]))for(;g[0|(p=p-1|0)]=7&I|48,De=!Y&I>>>0>7|!!(0|Y),Y=(y=Y)>>>3|0,I=(7&y)<<29|I>>>3,De;);if(y=p,!(8&X))break w;P=(0|(p=f-y|0))<(0|P)?P:p+1|0;break w}I=e[c+64>>2],Y=p=e[c+68>>2],(0|p)<0?(Y=y=0-(Y+!!(0|I)|0)|0,I=0-I|0,e[c+64>>2]=I,e[c+68>>2]=y,he=1,Xe=84065):2048&X?(he=1,Xe=84066):Xe=(he=1&X)?84067:84065}y=wa(I,Y,f)}if((0|P)<0&&nA)break a;if(X=nA?-65537&X:X,!(P|!!((p=e[c+64>>2])|(I=e[c+68>>2])))){y=f,P=0;break o}P=(0|(p=!(p|I)+(f-y|0)|0))<(0|P)?P:p;break o}if(_=(p=(p=ss(y=(p=e[c+64>>2])||84639,0,Y=P>>>0>=2147483647?2147483647:P))?p-y|0:Y)+y|0,(0|P)>=0){X=I,P=p;break o}if(X=I,P=p,l[0|_])break a;break o}if(P){I=e[c+64>>2];break m}p=0,tn(A,32,ye,0,X);break C}e[c+12>>2]=0,e[c+8>>2]=e[c+64>>2],I=c+8|0,e[c+64>>2]=I,P=-1}p=0;m:{for(;;){if(!(y=e[I>>2]))break m;if(!((y=(0|(Y=d0(c+4|0,y)))<0)|Y>>>0>P-p>>>0)){if(I=I+4|0,P>>>0>(p=p+Y|0)>>>0)continue;break m}break}if(y)break A}if(_=61,(0|p)<0)break r;if(tn(A,32,ye,p,X),p)for(_=0,I=e[c+64>>2];;){if(!(y=e[I>>2])||(_=(y=d0(c+4|0,y))+_|0)>>>0>p>>>0)break C;if(_r(A,c+4|0,y),I=I+4|0,!(p>>>0>_>>>0))break}else p=0}tn(A,32,ye,p,8192^X),p=(0|p)<(0|ye)?ye:p;continue s}if((0|P)<0&&nA)break a;if(_=61,(0|(p=0|pt[0|s](A,D[c+64>>3],ye,P,X,p)))>=0)continue s;break r}g[c+55|0]=e[c+64>>2],P=1,y=m,X=I;break o}I=l[p+1|0],p=p+1|0}if(A)break e;if(!Re)break c;for(p=1;;){if(A=e[(p<<2)+a>>2]){if(fr((p<<3)+n|0,A,r,o),ce=1,(0|(p=p+1|0))!=10)continue;break e}break}if(ce=1,p>>>0>=10)break e;for(;;){if(e[(p<<2)+a>>2])break u;if((0|(p=p+1|0))==10)break}break e}_=28;break r}if((0|(I=(0|P)>(0|(Y=_-y|0))?P:Y))>(2147483647^he))break a;if(_=61,(0|fA)<(0|(p=(0|(P=I+he|0))<(0|ye)?ye:P)))break r;tn(A,32,p,P,X),_r(A,Xe,he),tn(A,48,p,P,65536^X),tn(A,48,I,Y,0),_r(A,y,Y),tn(A,32,p,P,8192^X);continue}break}ce=0;break e}_=61}e[56798]=_}ce=-1}return q=c+80|0,ce}function FA(A,t,r,n,a,s,o,c,f){var m,p,I,y=0,P=0,Y=0,X=0,_=0,ce=0,he=0,ye=0,De=0,Re=0,Xe=0,nA=0,fA=0,GA=0,SA=0,At=0,ct=0,bt=0,Nt=0,qt=0,tr=0,mr=0,Cr=0,Gr=0,Dr=0,Or=0,Kr=0,on=0,$r=0,ln=0,En=0;q=m=q-96|0,Xe=65535&f,_=-2147483648&(a^f),At=he=65535&a;e:{if(!((p=f>>>16&32767)-32767>>>0>4294934529&(I=a>>>16&32767)-32767>>>0>=4294934530)){if(y=n,!(!n&(0|(ye=De=2147483647&a))==2147418112?!(t|r):ye>>>0<2147418112)){Y=n,_=32768|a;break e}if(!(!(a=c)&(0|(ce=De=2147483647&f))==2147418112?!(s|o):ce>>>0<2147418112)){Y=c,_=32768|f,t=s,r=o;break e}if(!(t|y|2147418112^ye|r)){if(!(a|s|o|ce)){_=2147450880,t=0,r=0;break e}_|=2147418112,t=0,r=0;break e}if(!(a|s|2147418112^ce|o)){if(a=t|y,n=r|ye,t=0,r=0,!(n|a)){_=2147450880;break e}_|=2147418112;break e}if(!(t|y|r|ye)){t=0,r=0;break e}if(!(a|s|o|ce)){t=0,r=0;break e}(0|ye)==65535|ye>>>0<65535&&(De=(y=!(n|he))<<6,a=Oe(f=y?t:n)+32|0,An(m+80|0,t,r,n,he,(f=De+((0|(f=Oe(y?r:he)))==32?a:f)|0)-15|0),Re=16-f|0,n=e[m+88>>2],At=e[m+92>>2],r=e[m+84>>2],t=e[m+80>>2]),ce>>>0>65535||(he=(f=!(c|Xe))<<6,y=Oe(a=f?s:c)+32|0,An(m- -64|0,s,o,c,Xe,(a=he+((0|(a=Oe(f?o:Xe)))==32?y:a)|0)-15|0),Re=16+(Re-a|0)|0,c=e[m+72>>2],Xe=e[m+76>>2],s=e[m+64>>2],o=e[m+68>>2])}if(a=s,s=o<<15|s>>>17,Or=r,De=kt(nA=-32768&(f=a<<15),a=0,r,0),SA=a=J,Kr=s,ye=t,t=kt(s,0,t,0),s=J+a|0,r=t>>>0>(f=t+De|0)>>>0?s+1|0:s,y=0,t=kt(ye,P,nA,P),a=(s=f)+J|0,he=a=t>>>0>(ce=y+t|0)>>>0?a+1|0:a,on=(0|s)==(0|a)&y>>>0>ce>>>0|a>>>0<s>>>0,$r=n,fA=kt(nA,P,n,0),ln=J,t=kt(Or,P,Kr,P),y=J+ln|0,y=t>>>0>(GA=t+fA|0)>>>0?y+1|0:y,t=Xe<<15|c>>>17,n=kt(ct=c<<15|o>>>17,0,ye,P),s=J+y|0,Nt=s=n>>>0>(bt=n+GA|0)>>>0?s+1|0:s,s=(n=(0|r)==(0|SA)&f>>>0<De>>>0|r>>>0<SA>>>0)+s|0,Xe=s=r>>>0>(qt=r+bt|0)>>>0?s+1|0:s,o=qt,r=s,At=kt(nA,P,tr=65536|At,X),En=J,n=kt($r,Y,Kr,P),a=J+En|0,f=a=n>>>0>(mr=n+At|0)>>>0?a+1|0:a,t=kt(Cr=-2147483648|t,0,ye,P),s=J+a|0,s=t>>>0>(Gr=t+mr|0)>>>0?s+1|0:s,t=kt(ct,Y,Or,P),Dr=s,s=s+J|0,De=t>>>0>(SA=t+Gr|0)>>>0?s+1|0:s,a=r+SA|0,s=nA=(t=0)>>>0>(ye=t+o|0)>>>0?a+1|0:a,r=(t=ye+on|0)>>>0<ye>>>0?s+1|0:s,Re=((I+p|0)+Re|0)-16383|0,n=kt(Cr,Y,Or,P),c=J,a=kt(tr,Y,Kr,P),s=J+c|0,X=(0|c)==(0|(s=a>>>0>(o=a+n|0)>>>0?s+1|0:s))&n>>>0>o>>>0|s>>>0<c>>>0,c=s,a=kt(ct,Y,$r,Y),s=J+s|0,a=s=(n=a+o|0)>>>0<a>>>0?s+1|0:s,o=(0|s)==(0|c)&n>>>0<o>>>0|s>>>0<c>>>0,s=0,s=(c=o)>>>0>(o=o+X|0)>>>0?1:s,c=o,o=kt(Cr,Y,tr,Y),s=J+s|0,on=c=c+o|0,o=o>>>0>c>>>0?s+1|0:s,c=n,P=a,a=(0|y)==(0|ln)&fA>>>0>GA>>>0|y>>>0<ln>>>0,s=0,a=((X=y=(0|y)==(0|Nt)&GA>>>0>bt>>>0|y>>>0>Nt>>>0)>>>0>(y=a+y|0)>>>0?1:s)+P|0,s=o,X=a=(n=n+y|0)>>>0<y>>>0?a+1|0:a,fA=n,a=n=(0|a)==(0|P)&n>>>0<c>>>0|a>>>0<P>>>0,y=n=n+on|0,o=s=a>>>0>n>>>0?s+1|0:s,a=kt(ct,Y,tr,Y),P=J,n=kt(Cr,Y,$r,Y),s=J+P|0,n=s=n>>>0>(c=n+a|0)>>>0?s+1|0:s,a=(s=(0|P)==(0|s)&a>>>0>c>>>0|s>>>0<P>>>0)+o|0,o=a=n>>>0>(GA=n+y|0)>>>0?a+1|0:a,s=c+X|0,a=s=(n=(a=0)+fA|0)>>>0<a>>>0?s+1|0:s,c=(0|X)==(0|s)&n>>>0<fA>>>0|s>>>0<X>>>0,s=o,s=(o=c+(P=GA)|0)>>>0<c>>>0?s+1|0:s,fA=o,c=n,y=a,a=(n=(n=(n=(0|f)==(0|En)&At>>>0>mr>>>0|f>>>0<En>>>0)+(f=(0|f)==(0|Dr)&mr>>>0>Gr>>>0|f>>>0>Dr>>>0)|0)+(a=(0|De)==(0|Dr)&SA>>>0<Gr>>>0|De>>>0<Dr>>>0)|0)+y|0,s=o=s,y=o=(c=(0|(a=(n=f=(X=De)+c|0)>>>0<X>>>0?a+1|0:a))==(0|y)&c>>>0>n>>>0|a>>>0<y>>>0)+fA|0,o=s=c>>>0>o>>>0?s+1|0:s,c=n,s=0,f=a,a=a+((P=X=(0|Xe)==(0|nA)&ye>>>0<qt>>>0|Xe>>>0>nA>>>0)>>>0>(X=X+((0|Xe)==(0|Nt)&bt>>>0>qt>>>0|Xe>>>0<Nt>>>0)|0)>>>0?1:s)|0,s=o,f=s=(o=c=(0|(a=(n=n+X|0)>>>0<X>>>0?a+1|0:a))==(0|f)&n>>>0<c>>>0|a>>>0<f>>>0)>>>0>(c=c+y|0)>>>0?s+1|0:s,65536&s?Re=Re+1|0:(y=he>>>31|0,s=f<<1|c>>>31,c=c<<1|a>>>31,f=s,s=a<<1|n>>>31,n=n<<1|r>>>31,a=s,s=he<<1|ce>>>31,ce<<=1,he=s,s=r<<1|t>>>31,t=t<<1|y,r=s|(o=0)),(0|Re)>=32767)_|=2147418112,t=0,r=0;else{A:{if((0|Re)<=0){if((o=1-Re|0)>>>0<=127){An(m+48|0,ce,he,t,r,s=Re+127|0),An(m+32|0,n,a,c,f,s),Hn(m+16|0,ce,he,t,r,o),Hn(m,n,a,c,f,o),ce=e[m+32>>2]|e[m+16>>2]|!!(e[m+48>>2]|e[m+56>>2]|e[m+52>>2]|e[m+60>>2]),he=e[m+36>>2]|e[m+20>>2],t=e[m+40>>2]|e[m+24>>2],r=e[m+44>>2]|e[m+28>>2],n=e[m>>2],a=e[m+4>>2],o=e[m+8>>2],s=e[m+12>>2];break A}t=0,r=0;break e}o=c,s=65535&f|Re<<16}Y|=o,_|=s,(!t&(0|r)==-2147483648?!(ce|he):(0|r)>0|(0|r)>=0)?t|ce|-2147483648^r|he?(t=n,r=a):(y=_,_=(n=(0|(s=a))==(0|(r=(r=t=1&n)>>>0>(t=t+n|0)>>>0?s+1|0:s))&t>>>0<n>>>0|r>>>0<s>>>0)>>>0>(Y=n+Y|0)>>>0?y+1|0:y):(n=(0|a)==(0|(r=(t=n+1|0)?a:a+1|0))&t>>>0<n>>>0|r>>>0<a>>>0,a=_,_=(Y=n+Y|0)>>>0<n>>>0?a+1|0:a)}}e[A>>2]=t,e[A+4>>2]=r,e[A+8>>2]=Y,e[A+12>>2]=_,q=m+96|0}function Kt(A,t,r,n,a,s,o){var c,f=0,m=0,p=0,I=0,y=0,P=0,Y=0,X=0,_=0,ce=0,he=0,ye=0,De=0,Re=0,Xe=0;q=c=q-480|0,e[c+476>>2]=0,e[c+456>>2]=0,e[c+460>>2]=0,e[c+448>>2]=0,e[c+452>>2]=0,e[c+440>>2]=0,e[c+444>>2]=0,e[c+432>>2]=0,e[c+436>>2]=0,f=0;e:if(e[A+684>>2]){for(Y=o?e[o>>2]:Y;p=l[t+f|0],g[(c+112|0)+f|0]=p,m=f+1|0,p&&(p=f>>>0<158,f=m,p););if(g[m+(c+112|0)|0]=0,!((ce=268435456&s)|!(8&e[47197]))){m=0;A:if(223&(p=l[0|t]))for(f=0;;){if(g[(c+272|0)+f|0]=p,!(223&(p=l[(m=f+1|0)+t|0])))break A;if(I=f>>>0<118,f=m,!I)break}g[(f=c+272|0)+m|0]=0,e[c+48>>2]=f,hr(e[47195],(0|s)>=0?87019:86877,c+48|0)}e[c+464>>2]=t,e[A+8208>>2]=0,e[A+8212>>2]=0,a&&(g[0|a]=0);A:{r:if(223&(f=l[0|t]))for(he=536870912&s,ye=4096&s,De=c+105|0,m=t,p=0;;){I=Dt(c+476|0,m),_=!!(0|nr(e[c+476>>2]))+_|0,P=l[7668+(f=(y=255&f)+A|0)|0];a:if(!((X=e[c+476>>2])-48>>>0<10|X-2406>>>0<10)|(_?l[A+170|0]:0)){s:if((p=e[c+476>>2]-e[A+600>>2]|0)>>>0>127||!(p=e[6192+((p<<2)+A|0)>>2])){if(P){for(X=5168+((y<<2)+A|0)|0,P=P+(f=l[f+7924|0])|0,Re=y|l[m+1|0]<<8,p=0;e[7184+(m=(f<<2)+A|0)>>2]==(0|Re)&&(e[c+472>>2]=e[c+464>>2],st(A,c+472|0,t,2,e[m+6704>>2],c+432|0,s,Y),(0|(m=e[c+432>>2]))>0&&(m=m+35|0,e[c+432>>2]=m),p=1,st(A,c+464|0,t,1,e[X>>2],c+448|0,s,Y),e[c+448>>2]>(0|m)||(m=e[c+444>>2],e[c+456>>2]=e[c+440>>2],e[c+460>>2]=m,m=e[c+436>>2],e[c+448>>2]=e[c+432>>2],e[c+452>>2]=m,e[c+464>>2]=e[c+472>>2])),P>>>0>(f=f+1|0)>>>0;);if(p)break s}c:{o:{if(!(f=e[5168+((y<<2)+A|0)>>2])){if(st(A,c+464|0,t,0,e[A+5168>>2],c+448|0,s,Y),e[c+448>>2])break c;if(16&l[188808])break o;if(p=Dt(c+468|0,y=(m=e[c+464>>2])-1|0),f=e[c+468>>2],!(e[A+600>>2]<=0|(0|f)>577)){if(Qs(f)){e[c+32>>2]=21,QA(r,87049,c+32|0);break A}f=e[c+468>>2]}if((0|f)==57384&&((0|(P=e[A+92>>2]))<=e[47352]||(e[47352]=P)),us(f)&&((0|(f=e[A+72>>2]))<=e[47352]||(e[47352]=f)),!((P=(f=e[c+468>>2])-192|0)>>>0>413)&&(P=l[P+94240|0])&&(p=p-1|0,!(l[m-2|0]==32&l[p+m|0]==32))){for(e[c+472>>2]=y,g[0|y]=P;I=l[(f=m)+p|0],g[0|f]=I,m=f+1|0,(0|I)!=32;);if((0|p)>0&&VA(f,32,p),e[A+24>>2]&&!((0|Li(94222,e[c+468>>2]))<=0)){e[c+464>>2]=y,p=0;break a}p=0,g[0|r]=0,e[c+464>>2]=t,e[A+8208>>2]=0,e[A+8212>>2]=0;break a}if(!(f=Ta(f))||(0|(m=e[f+4>>2]))==e[A+600>>2])break o;if((0|m)==e[A+188>>2]){e[c+4>>2]=zi(c- -64|0,e[A+192>>2]),e[c>>2]=21,QA(r,87218,c);break A}if(!(4&l[f+16|0]))break o;e[c+20>>2]=zi(c- -64|0,e[f+12>>2]),e[c+16>>2]=21,QA(r,87218,c+16|0);break A}if(st(A,c+464|0,t,1,f,c+448|0,s,Y),e[c+448>>2])break c}o:if(!((f=e[c+476>>2])-768>>>0<112)){if(nr(f)){if(g[(I+e[c+464>>2]|0)-1|0]<33&(0|_)<=1)break o;if(g[0|r]=0,!o)break r;e[o>>2]=4096|e[o>>2];break r}zt(A,e[c+476>>2],-1,c+272|0,0),l[c+272|0]&&(e[c+448>>2]=1,e[c+452>>2]=c+272)}e[c+464>>2]=(I+e[c+464>>2]|0)-1;break s}e[A+288>>2]=0}else st(A,c+464|0,t,I,p,c+448|0,s,Y);if(m=(f=e[c+452>>2])||86135,e[c+452>>2]=m,p=0,!(e[c+448>>2]<=0)){if(f=1|e[c+456>>2],(0|s)<0)break e;if(!(l[0|m]!=21|ye)){JA(r,m);break A}if(!(!(8&e[47197])|ce))s:if(f=e[47195],(0|(I=e[f+76>>2]))>=0&(!I|e[56823]!=(-1073741825&I)))y=e[(I=f+76|0)>>2],e[I>>2]=y||1073741823,e[f+80>>2]==10||(0|(y=e[f+20>>2]))==e[f+16>>2]?I0(f):(e[f+20>>2]=y+1,g[0|y]=10),e[I>>2]=0;else{if(e[f+80>>2]!=10&&(0|(I=e[f+20>>2]))!=e[f+16>>2]){e[f+20>>2]=I+1,g[0|I]=10;break s}I0(f)}if(I=-32769&(f=e[c+456>>2]),e[c+456>>2]=I,!(!a|!I|(1024&f?he:0))){A=e[c+464>>2],JA(a,m),f=I|(Xe=(r=A)-xt(t,A=c+112|0,RA(A))|0,(1151&f)==1024?Xe:0);break e}(f=e[c+460>>2])&&(g[0|f]=69),bi(A,r,n,m)}}else g[c+104|0]=95,xt(De,m,I),f=1,g[105+(c+I|0)|0]=0,UA(A,c+104|0,c- -64|0),p-1>>>0<=4294967293&&(f=RA(f=c- -64|0)+f|0,g[0|f]=11,g[f+1|0]=0,f=0),bi(A,r,n,c- -64|0),e[c+464>>2]=m+I,p=f;if(m=e[c+464>>2],!(223&(f=l[0|m])))break}xt(t,A=c+112|0,RA(A))}f=0}return q=c+480|0,f}function Vn(A,t){var r,n=0,a=0,s=0,o=0,c=0,f=0,m=0,p=0,I=0,y=0,P=0,Y=0,X=0,_=0,ce=0,he=0,ye=0,De=0,Re=0,Xe=0,nA=0,fA=0;q=r=q-2976|0,e[t>>2]=1,n=e[A+20>>2],e[(c=r+2960|0)>>2]=e[A+16>>2],e[c+4>>2]=n,n=e[A+12>>2],e[(c=r+2952|0)>>2]=e[A+8>>2],e[c+4>>2]=n,n=e[A+4>>2],e[r+2944>>2]=e[A>>2],e[r+2948>>2]=n,e[50303]||_A();e:if(A=e[r+2948>>2],l[0|A]&&A||((A=e[r+2944>>2])||(A=(A=e[r+2952>>2])||85055,e[r+2944>>2]=A),ar(n=r+80|0,A,60),Rs(n,0),!(s=mn(201216,n))||(e[r+2948>>2]=e[s+4>>2]+1,l[r+2958|0]|l[r+2956|0]|l[r+2957|0]))){_=r+1536|0,q=Y=q-336|0;A:if(!(!(A=e[4+(X=r+2944|0)>>2])|!l[0|A])){if((0|(ce=RA(A)))>=0){for(n=ce>>>0>=79?79:ce,p=1;A=Wt(g[e[X+4>>2]+a|0]),g[(Y+256|0)+a|0]=A,p=((255&A)==45)+p|0,A=(0|n)!=(0|a),a=a+1|0,A;);if((0|p)!=1)break A}p=1}if((0|(I=e[50303]))<=0)e[_>>2]=0,A=0;else{for(c=(0|p)>=0;;){m=e[201216+(De<<2)>>2];A:if(yn(e[m+8>>2],88032,3)){if((A=e[X+4>>2])&&yn(A,91687,3)){if(c){A=100;r:if(p){if(n=0,a=e[m+4>>2],!(he=l[0|a])){if(!yn(Y+256|0,90013,9))break r;break A}for(;;){for(Re=1,f=a+1|0,ye=1,Xe=0,a=0;(0|a)<(0|ce)&&(0|(A=g[(Y+256|0)+a|0]))!=45||(A=0),Xe=((y=(0|(P=l[a+f|0]))==45)&!!(0|(ye=(y?0:P)<<24>>24==(0|A)?ye:0)))+Xe|0,a=a+1|0,Re=y+Re|0,P;);if(a=a+f|0,(y=ye+Xe|0)&&(n=(0|(A=F((f=(0|(A=p-y|0))<=0?5:5-A|0)-((0|(A=Re-y|0))>0?A:0)|0,100)-(he<<24>>24<<1)|0))>(0|n)?A:n),!(he=l[0|a]))break}if(!(A=n))break A}(n=e[X>>2])&&(A=Mr(n,e[m>>2])?Mr(n,e[m+8>>2])?A:A+400|0:A+500|0),((a=l[X+12|0])-1&255)>>>0>1||((n=l[m+12|0])-1&255)>>>0>1||(A=(0|n)!=(0|a)?A-50|0:A+50|0),a=l[X+13|0],A=l[m+12|0]!=2|a>>>0>12?A:l[m+13|0]>12?A+5|0:A,(n=l[m+13|0])&&((n=((a?F(a,100):3e3)>>>0)/(n>>>0)|0)>>>0<=99&&(n=1e4/(n>>>0)|0),A=(f=A)+((A=5-(((n-100&65535)>>>0)/10|0)|0)>>31&A)|0,A=a?A+10|0:A),A=(0|A)<=1?1:A}else{if(yn(e[m+8>>2],Y+256|0,ce))break A;A=100}e[_+(o<<2)>>2]=m,e[m+16>>2]=A}else e[_+(o<<2)>>2]=m;o=o+1|0}if((0|I)==(0|(De=De+1|0)))break}e[_+(o<<2)>>2]=0,A=0,o&&(ns(_,o,8),A=o)}if(q=Y+336|0,p=A,A||(e[t>>2]=0,A=mn(201216,85055),e[r+1536>>2]=A,p=!!(0|A)),t=l[r+2957|0],c=2,(0|(A=l[r+2956|0]))!=2&&(c=2,(t-1&255)>>>0<12||(fA=(0|A)!=1,c=(0|A)==1)),I=(o=e[132136+(c<<2)>>2])+(P=t>>>0<60)|0,A=0,(0|p)>0)for(n=0;;){s=e[(r+1536|0)+(nA<<2)>>2];A:{r:{a:{if(fA){if(P||(t=0,n))break r}else{if(t=l[s+12|0],n|P)break a;t=(0|t)!=(0|c)}if(a=0,t|l[s+13|0]<60)break A;break r}if((0|t)!=(0|c)){a=n;break A}}e[(r+80|0)+(n<<2)>>2]=s,a=n+1|0}A:if(l[s+15|0]){if(y=0,t=A,n=a,!((0|A)>11))for(;;){if((a=l[0|I])||(I=o,a=l[0|o]),A=e[s+12>>2],f=F(t,24)+202624|0,e[f+8>>2]=e[s+8>>2],e[f+12>>2]=A,A=e[s+4>>2],e[f>>2]=e[s>>2],e[f+4>>2]=A,A=e[s+20>>2],e[f+16>>2]=e[s+16>>2],e[f+20>>2]=A,g[f+14|0]=a,e[(r+80|0)+(n<<2)>>2]=f,I=I+1|0,n=n+1|0,A=t+1|0,(y=y+1|0)>>>0>=l[s+15|0])break A;if(a=(0|t)<11,t=A,!a)break}}else n=a;if((0|(nA=nA+1|0))==(0|p))break}else{if(!s)break e;n=0}A:if(!(!(a=l[0|I])|(0|A)>=12))for(;;){if(t=e[s+12>>2],o=F(A,24)+202624|0,e[o+8>>2]=e[s+8>>2],e[o+12>>2]=t,t=e[s+4>>2],e[o>>2]=e[s>>2],e[o+4>>2]=t,t=e[s+20>>2],e[o+16>>2]=e[s+16>>2],e[o+20>>2]=t,g[o+14|0]=a,e[(r+80|0)+(n<<2)>>2]=o,n=n+1|0,!(a=l[0|(I=I+1|0)]))break A;if(t=(0|A)<11,A=A+1|0,!t)break}n?(A=e[(r+80|0)+(l[r+2958|0]%(0|n)<<2)>>2],(t=l[A+14|0])?(g[202976]=0,e[r+48>>2]=47,QA(r+2971|0,91351,r+48|0),g[r+2971|0]=0,t>>>0<=9?(e[r+20>>2]=t,e[r+16>>2]=r+2971,QA(202976,91378,r+16|0)):(e[r+36>>2]=t-10,e[r+32>>2]=r+2971,QA(202976,91503,r+32|0)),A=e[A+8>>2],e[r+4>>2]=202976,e[r>>2]=A,A=202912,QA(202912,87760,r)):A=e[A+8>>2]):A=0}else{if(A=e[s+8>>2],!l[202976])break e;e[r+64>>2]=A,e[r+68>>2]=202976,A=202912,QA(202912,87760,r- -64|0)}return q=r+2976|0,A}function zn(A,t,r,n,a){var s,o,c=0,f=0,m=0,p=0,I=0,y=0,P=0;q=s=q-464|0,g[s+432|0]=0,g[s+368|0]=0,g[s+304|0]=0,g[s+292|0]=0,I=(0|t)/10|0,c=e[33273];e:{if(!(o=2&n)|e[33272]!=2){P=32&n?113:111,p=1&n,y=t-F(I,10)|0;A:{r:{a:{s:{c:{o:{u:{l:if(l[0|c])c=0;else{i:{if(8&n){if(e[s+288>>2]=t,QA(f=s+452|0,91198,s+288|0),c=UA(A,f,s+304|0)){f=0;break l}e[s+272>>2]=t,QA(f=s+452|0,91314,s+272|0),c=UA(A,f,s+304|0),f=0}else{if(!p)break i;if(m=JA(s+432|0,133104),4&n){if(e[s+260>>2]=P,e[s+256>>2]=t,QA(f=s+452|0,91324,s+256|0),c=UA(A,f,s+304|0),l[133116]&&c)break u;if(f=c,c)break l}e[s+244>>2]=P,e[s+240>>2]=t,QA(f=s+452|0,91384,s+240|0),f=c=UA(A,f,s+304|0)}if(c)break l}i:{if(o){if(!(1&g[133096]))break i;e[s+208>>2]=t,QA(c=s+452|0,91498,s+208|0),c=UA(A,c,s+304|0)}else m=e[A+108>>2],e[s+224>>2]=t,QA(c=s+452|0,(0|r)>=2?91700:(262144&m)>>>18|0?91534:91700,s+224|0),c=UA(A,c,s+304|0);if(c)break l}!p|!(32&l[A+109|0])?(e[s+192>>2]=t,QA(c=s+452|0,91766,s+192|0),c=UA(A,c,s+304|0)):c=0}if(!(16&n)|(0|t)>9)break c;c=f;break o}if(JA(m,133116),!(16&n)|(0|t)>9)break s}UA(A,88875,s+368|0);break r}if(!c)break a;c=f}g[s+368|0]=0;break r}a:if(p&&(e[s+180>>2]=P,e[s+176>>2]=I,QA(c=s+452|0,91846,s+176|0),UA(A,c,s+368|0))){if(f=1,!y|!(16&l[A+109|0]))break a;sn(s+368|0,133104)}else f||(e[s+160>>2]=I,QA(f=s+452|0,512&n?91936:92016,s+160|0),UA(A,f,s+368|0),f=0);if(c=y,l[s+368|0]||(c=y,16&l[A+106|0]&&(e[s+144>>2]=254&I,QA(c=s+452|0,92016,s+144|0),UA(A,c,s+368|0),c=(0|t)%20|0)),g[s+304|0]=0,I=c,(0|c)<=0)c=f;else{if(o&&(c=e[33273],l[0|c])){JA(s+304|0,c),g[s+432|0]=0,m=p;break A}if(m=0,8&n&&(e[s+128>>2]=I,QA(n=s+452|0,91314,s+128|0),m=UA(A,n,s+304|0)),!p|16&l[A+104|0]||(e[s+116>>2]=P,e[s+112>>2]=I,QA(n=s+452|0,91384,s+112|0),f=(m=UA(A,n,s+304|0))?1:f),c=f,!m){a:{if(!o|!(1&e[33274])){if(!(16&l[A+104|0])&&o)break a;f=e[A+108>>2],e[s+96>>2]=I,QA(n=s+452|0,(0|r)>=2?91700:(262144&f)>>>18|0?91534:91700,s+96|0),r=UA(A,n,s+304|0)}else e[s+80>>2]=I,QA(r=s+452|0,91498,s+80|0),r=UA(A,r,s+304|0);if(r)break r}e[s+64>>2]=I,QA(r=s+452|0,91766,s- -64|0),UA(A,r,s+304|0)}}}m=p,l[s+432|0]|c|!p||((0|t)<20|(16&l[A+104|0]?0:y)||(UA(A,92162,s+432|0),m=1,!l[s+432|0]))&&(UA(A,92205,s+432|0),m=1)}if(!(!(r=g[s+304|0])|!(48&(t=e[A+104>>2]))|!l[s+368|0])){if(UA(A,90824,s+292|0),!m|!(8&l[A+109|0])||(g[s+292|0]=0),16&l[A+104|0]){e[s+28>>2]=s+432,e[s+24>>2]=s+368,e[s+20>>2]=s+292,e[s+16>>2]=s+304,QA(a,91059,s+16|0),n=1;break e}e[s+12>>2]=s+432,e[s+8>>2]=s+304,e[s+4>>2]=s+292,e[s>>2]=s+368,QA(a,91059,s),n=1;break e}512&t&&(!r|(0|(t=RA(s+368|0)-1|0))<0||(c=l[e[144464+(g[0|(t=t+(s+368|0)|0)]<<2)>>2]+11|0]!=2,(0|(n=l[e[144464+(r<<2)>>2]+11|0]))==1&&(n=l[e[144464+(g[s+305|0]<<2)>>2]+11|0]),c|(255&n)!=2||(g[0|t]=0))),!(8&l[A+110|0])|!l[s+432|0]?(e[s+56>>2]=s+432,e[s+52>>2]=s+304,e[s+48>>2]=s+368,QA(a,92282,s+48|0)):(e[s+36>>2]=s+304,e[s+32>>2]=s+368,(0|(t=QA(a,90368,s+32|0)))>0&&(t=l[e[144464+(l[(r=t-1|0)+a|0]<<2)>>2]+11|0]==2?r:t),JA(t+a|0,s+432|0))}else JA(a,c);n=0}e:if(268435456&(A=e[A+104>>2])){if((0|RA(a))<=0)break e;for(t=0,A=0;l[0|(r=A+a|0)]==6&&(t&&(g[0|r]=5),t=1),A=A+1|0,(0|RA(a))>(0|A););}else if(256&A&&(t=0,!((0|(A=(p=RA(a))-1|0))<0))){if(A)for(y=-2&p,c=0;l[0|(f=A+a|0)]==6?(r=1,t&&(g[0|f]=5)):r=t,l[0|(f=f-1|0)]==6?(t=1,r&&(g[0|f]=5)):t=r,A=A-2|0,(0|y)!=(0|(c=c+2|0)););1&p&&(!t|l[0|(A=A+a|0)]!=6||(g[0|A]=5))}return q=s+464|0,n}function oa(A,t,r,n){var a,s,o=0,c=0,f=0,m=0,p=0,I=0,y=0;if(q=a=q-352|0,g[a+304|0]=0,g[a+224|0]=0,g[a+64|0]=0,f=e[e[47192]+292>>2],y=Dt(a+348|0,t),(1048320&(o=e[a+348>>2]))==57344&&(o&=255,e[a+348>>2]=o),2&n&&xa(o)&&UA(A,85437,a+304|0),o=Ts(e[a+348>>2],A),e[a+348>>2]=o,I=1&n,zt(A,o,g[0|(s=t+y|0)],a+224|0,I),!(t=l[a+224|0])){e:if((t=y0(e[a+348>>2]))&&(e[a+348>>2]=16383&t,4&n)){switch(1073741823&(t>>=14)){case 0:case 3:break e}UA(A,t=e[131232+(t<<2)>>2],a+304|0),l[a+304|0]||(g[a+306|0]=ds(84744),p=t,t=a+304|3,UA(e[47194],p,t),l[a+307|0]&&(b[a+304>>1]=5385,t=RA(t)+(a+304|0)|0,g[t+5|0]=0,g[t+4|0]=f,g[t+3|0]=21))}zt(A,e[a+348>>2],g[0|s],a+224|0,I),t=l[a+224|0]}e:{A:{if(t&=255){if((0|t)!=21)break A;JA(r,a+224|0),y=0;break e}if(t=1632,!((0|(o=e[a+348>>2]))<1632)){for(m=103360;;){if((0|o)>=(t+10|0)){if(!(t=e[(m=m+4|0)>>2]))break A;if((0|t)<=(0|o))continue;break A}break}(0|(t=48+(o-t|0)|0))<=0||zt(A,t,0,a+224|0,I)}}A:{r:{a:{s:{if(t=Ta(e[a+348>>2])){if(o=e[t+4>>2],!t|1&(m=e[t+16>>2])||(c=e[47192],e[c+600>>2]==(0|o)|e[c+188>>2]==(0|o)|e[c+184>>2]==(0|o)||(g[a+144|0]=0,UA(c,e[t>>2],a- -64|0)?(0|(c=e[47192]))!=(0|A)&&(f=e[A+292>>2],JA(a+144|0,a- -64|0),g[a+66|0]=e[c+292>>2]):(g[a+66|0]=ds(84744),UA(e[47194],e[t>>2],a+144|0)),l[a+144|0]&&(b[a+64>>1]=5385,JA(3|(c=a- -64|0),p=a+144|0),c=RA(p)+c|0,g[c+5|0]=0,g[c+4|0]=f,g[c+3|0]=21))),l[a+224|0])break A;if(!o||(f=e[47192],e[f+188>>2]!=(0|o)))break s;t=e[f+192>>2];break r}if(l[a+224|0])break A;m=0,o=0;break a}if((t=e[t+12>>2])&&!(2&m))break r}t=25966}if((e[A+212>>2]==(0|t)&(0|t)!=27503||(g[a+226|0]=ds(zi(a+47|0,t)),(t=e[47194])&&((0|(f=e[a+348>>2]))>55215||(0|(c=f-44032|0))<0?zt(t,f,g[0|s],a+224|3,I):(g[a+52|0]=32,t=p=a+53|0,f-50500>>>0>=588&&(t=Nr(4352+((c>>>0)/588|0)|0,p)+p|0),Nr(4449+(((f=(c>>>0)/28|0)>>>0)%21|0)|0,t),Nr(4519+(c-F(f,28)|0)|0,t+3|0),g[t+6|0]=32,g[t+7|0]=0,g[a+227|0]=0,t=a+224|3,Kt(e[47194],p,t,77,0,0,0),Ar(e[47194],t,0,-1,0)),t=a+224|3,l[a+227|0]==21&&(g[a+226|0]=ds(a+224|4),zt(e[47194],e[a+348>>2],g[0|s],t,I)),Cn(e[e[32972]+60>>2]),l[a+227|0]&&(b[a+224>>1]=5385,t=RA(t)+(a+224|0)|0,g[t+3|0]=21,I=e[A+292>>2],g[t+5|0]=0,g[t+4|0]=I)),!l[a+224|0]))&&(16&m||(fa(e[a+348>>2])&&UA(e[47192],85683,a+224|0),l[a+224|0]||(Rr(e[a+348>>2])||UA(e[47192],85778,a+224|0),l[a+224|0]||Ha(85992,a+224|0,0))),!(8&m)||4&n)){if(t=e[a+348>>2],(0|o)!=10240?(e[a+32>>2]=t,QA(a+52|0,86013,a+32|0)):(o=a+52|0,1&t&&(g[a+52|0]=49,o=a+53|0),2&t&&(g[0|o]=50,o=o+1|0),4&t&&(g[0|o]=51,o=o+1|0,t=e[a+348>>2]),8&t&&(g[0|o]=52,o=o+1|0,t=e[a+348>>2]),16&t&&(g[0|o]=53,o=o+1|0,t=e[a+348>>2]),32&t&&(g[0|o]=54,o=o+1|0,t=e[a+348>>2]),64&t&&(g[0|o]=55,o=o+1|0,t=e[a+348>>2]),128&t&&(g[0|o]=56,o=o+1|0),g[0|o]=0),t=a+224|0,m=l[a+52|0])for(o=a+52|0;t=RA(t)+t|0,g[0|t]=23,t=t+1|0,zt(e[47192],m<<24>>24,0,t,1),(n=l[0|t])&&(0|n)!=21||(0|(n=g[0|o]))<97||Ha(e[130860+((255&n)<<2)>>2],t,0),m=l[0|(o=o+1|0)];);t=RA(t)+t|0,g[0|t]=9,g[t+1|0]=0}}t=RA(r),2&l[A+144|0]?(e[a+16>>2]=255,e[a+28>>2]=a+304,e[a+24>>2]=a+224,e[a+20>>2]=a- -64,QA(a+144|0,86210,a+16|0)):(e[a>>2]=255,e[a+12>>2]=a+224,e[a+8>>2]=a+304,e[a+4>>2]=a- -64,QA(a+144|0,86210,a)),RA(a+144|0)+t>>>0>199||JA(t+r|0,a+144|0)}return q=a+352|0,y}function Jn(A,t,r,n,a,s,o){var c,f=0,m=0,p=0,I=0,y=0,P=0,Y=0,X=0,_=0,ce=0,he=0,ye=0,De=0,Re=0,Xe=0,nA=0,fA=0,GA=0,SA=0,At=0,ct=0,bt=0;q=c=q-528|0,ce=o?e[o>>2]:0,nA=e[a+4>>2];e:{A:{if(e[A+220>>2]>0){ar(m=c+352|0,t,160),q=P=q-176|0,X=1-(Y=e[A+220>>2])|0,_=e[A+224>>2],he=e[A+216>>2],I=m;r:{a:{for(;;){if(ye=Dt(P+172|0,I),f=e[P+172>>2]){if((0|f)<(0|Y)|(0|f)>(0|he))break a;if(_){if((0|(f=g[_+(f-Y|0)|0]))<=0)break a}else f=f+X|0;if(I=I+ye|0,g[y+P|0]=f,f=160,(0|(y=y+1|0))!=160)continue}else f=y;break}if(_=0,g[f+P|0]=0,X=g[0|P],e[P+172>>2]=X,X){for(fA=2+(he-Y|0)|0,Y=f=P;;){he=f+1|0;s:{if((ye=e[A+8180>>2])&&(y=0,!((0|(I=b[ye>>1]))>(0|(Re=(g[0|he]<<8)+X|0)))))for(;;){if((0|I)==(0|Re)){X=y+fA|0,e[P+172>>2]=X,f=f+2|0;break s}if(!((0|Re)>=(0|(I=b[ye+((y=y+1|0)<<1)>>1]))))break}f=he}if(De=63&X|De<<6,(0|(y=_+6|0))<8?_=y:(_=_-2|0,g[0|Y]=De>>_,Y=Y+1|0),X=g[0|f],e[P+172>>2]=X,!X)break}(0|_)<=0||(g[0|Y]=De<<8-_,Y=Y+1|0)}else Y=P;g[0|Y]=0,xt(m,P,f=Y-P|0),Y=64|f;break r}Y=RA(m)}q=P+176|0,P=m}else Y=RA(t),P=t;if(m=l[0|P]){for(f=0,y=P;p=1023&(p=(p<<3)+m|0)^p>>>8,f=f+1|0,m=l[0|(y=y+1|0)];);f=f+p&1023}else f=0;if(p=e[692+((f<<2)+A|0)>>2]){if(f=l[0|p])break A;f=0;break e}if(f=0,!a)break e;e[a>>2]=0;break e}for(ye=1073741824&nA,Re=2048&s,nA=512&ce,fA=65536&ce,GA=1&ce,SA=2&ce,ce=8&s,At=1024&s,he=4&s,ct=63&Y,bt=A+8233|0;;){s=(255&f)+p|0;A:{r:if((127&(f=l[p+1|0]))==(0|Y)&&!yn(P,p+2|0,ct)){p=2+((63&f)+p|0)|0;a:{if(f<<24>>24<0)_=0,g[0|n]=0;else{if((0|(_=RA(p)))>=160)break a;JA(n,p),p=1+(p+_|0)|0}if(m=0,s>>>0<=p>>>0)f=r,I=0;else{y=0,I=0;s:{for(;;){p=(f=p)+1|0;c:if((f=l[0|f])>>>0>=100){if(X=e[A+320>>2],f>>>0>=132){y|=X>>>f-132&1;break c}y|=!(X>>>f-100&1)}else{if(f>>>0>=81){X=f-80|0,De=s-p|0;o:if(o)for(f=0;;){if(Xe=F(f,12)+o|0,!l[Xe+10|0])break o;if(y=!!(12&l[Xe+1|0])|y,Xe=(0|f)!=(0|X),f=f+1|0,!Xe)break}if(k0(r,p,De)|1&y)break r;e[33264]=X,f=r+De|0,I|=128,p=s;break s}f>>>0>=65?(I=15&f|-16&I,I=12&~f?I:512|I):f>>>0>=32?m|=1<<f-32:I|=1<<f}if(!(s>>>0>p>>>0))break}if(f=r,1&y)break A}if(65536&m&&!he||At&&49152&m)break A}if(he&&(16384&m||!ce&&32768&m)||(SA?0:512&m)|(GA?0:1024&m)|(fA?0:33554432&I)||!(!(131072&m)|ue[e[47192]+8204>>2]<=f>>>0|ye)|(nA?0:262144&m)|(8&l[e[47192]+8242|0]?0:8192&m)||16&m&&(!e[A+8184>>2]&(!ce|!e[A+8192>>2])||!(!ce|e[A+212>>2]!=25966)&&2097152&e[A+8232>>2])||(e[A+8188>>2]?0:64&m)|(!e[A+8196>>2]|Re?32&m:0)||!(!(65536&I)|e[A+212>>2]!=26741|128&l[0|bt])|(e[47192]!=(0|A)?524288&m:0))break A;s:{c:{o:{if(!a){if(!_)break o;break s}if(e[a+4>>2]=m,e[a>>2]=1073741824|I,_)break c}if(f=0,!(8&l[188788]))break e;wi(a,A=c+272|0),e[c>>2]=t,e[c+4>>2]=A,hr(e[47195],89330,c);break e}e[a>>2]=-1073741824|I}if(8&l[188788]&&($A(n,c- -64|0),l[e[47192]+172|0]==(I>>>29&1)&&(!o|!(128&I)?(e[c+48>>2]=t,hr(e[47195],89426,c+48|0)):(xt(A=c+352|0,n=r,r=f-r|0),g[351+(r+c|0)|0]=0,e[c+32>>2]=t,e[c+36>>2]=A,hr(e[47195],89397,c+32|0)),wi(a,A=c+272|0),t=e[47195],e[c+16>>2]=c- -64,e[c+20>>2]=A,hr(t,89534,c+16|0))),l[Dt(c- -64|0,P)+P|0]|!a||nr(e[c+64>>2]))break e;e[a>>2]=134217728|e[a>>2];break e}Pe(89236,86634,2467,94846),Be()}p=s}if(!(f=l[0|p]))break}f=0}return q=c+528|0,f}function _n(A,t,r,n,a){var s,o=0,c=0;q=s=q-304|0,g[s+278|0]=0;e:{if((0|t)>0&&(1&n&&(2&n&&(e[s+164>>2]=r,e[s+160>>2]=t,QA(o=s+290|0,89701,s+160|0),o=UA(A,o,s+224|0))||1&g[133096]&&(e[s+148>>2]=r,e[s+144>>2]=t,QA(o=s+290|0,89757,s+144|0),o=UA(A,o,s+224|0))||(e[s+132>>2]=r,e[s+128>>2]=t,QA(o=s+290|0,89894,s+128|0),o=UA(A,o,s+224|0)))||(e[s+116>>2]=r,e[s+112>>2]=t,QA(o=s+290|0,89974,s+112|0),o=UA(A,o,s+224|0))))break e;if((0|(c=(0|t)%100|0))>=20&&UA(A,90022,s+278|0),1&n){if(2&n){o=c-11|0;A:{r:{a:switch((448&e[e[47192]+108>>2])-64>>>6|0){case 0:if(o>>>0<9)break r;if(n=90418,(0|(o=(0|t)%10|0))==1)break A;if(o-2>>>0>=3)break r;n=90453;break A;case 1:if(t-2>>>0>=3)break r;n=90453;break A;case 2:if(o>>>0<9|((0|t)%10|0)-2>>>0>=3)break r;n=90453;break A;case 3:if(n=90508,o>>>0<9)break A;n=(n=(0|t)%10|0)?(0|n)==1?90453:90586:90508;break A;case 4:break a;default:break r}if(!(o>>>0<9)){if(n=90537,(0|(o=(0|t)%10|0))==1)break A;if(!(o-2>>>0>=3)){n=90453;break A}}}n=90586}if(e[s+100>>2]=r,e[s+96>>2]=n,QA(n=s+290|0,90058,s+96|0),o=0,UA(A,n,s+224|0))break e}if(n=c-11|0,1&g[133096]){A:{r:{a:switch((448&e[e[47192]+108>>2])-64>>>6|0){case 0:if(n>>>0<9)break r;if(o=90418,(0|(c=(0|t)%10|0))==1)break A;if(c-2>>>0>=3)break r;o=90453;break A;case 1:if(t-2>>>0>=3)break r;o=90453;break A;case 2:if(n>>>0<9|((0|t)%10|0)-2>>>0>=3)break r;o=90453;break A;case 3:if(o=90508,n>>>0<9)break A;o=(o=(0|t)%10|0)?(0|o)==1?90453:90586:90508;break A;case 4:break a;default:break r}if(!(n>>>0<9)){if(o=90537,(0|(c=(0|t)%10|0))==1)break A;if(!(c-2>>>0>=3)){o=90453;break A}}}o=90586}if(e[s+84>>2]=r,e[s+80>>2]=o,QA(c=s+290|0,90110,s+80|0),o=0,UA(A,c,s+224|0))break e}A:{r:{a:switch((448&e[e[47192]+108>>2])-64>>>6|0){case 0:if(n>>>0<9)break r;if(o=90418,(0|(c=(0|t)%10|0))==1)break A;if(c-2>>>0>=3)break r;o=90453;break A;case 1:if(t-2>>>0>=3)break r;o=90453;break A;case 2:if(n>>>0<9|((0|t)%10|0)-2>>>0>=3)break r;o=90453;break A;case 3:if(o=90508,n>>>0<9)break A;o=(o=(0|t)%10|0)?(0|o)==1?90453:90586:90508;break A;case 4:break a;default:break r}if(!(n>>>0<9)){if(o=90537,(0|(c=(0|t)%10|0))==1)break A;if(!(c-2>>>0>=3)){o=90453;break A}}}o=90586}if(e[s+68>>2]=r,e[s+64>>2]=o,QA(c=s+290|0,90139,s- -64|0),o=0,UA(A,c,s+224|0))break e}else n=c-11|0;A:{r:{a:switch((448&e[e[47192]+108>>2])-64>>>6|0){case 0:if(n>>>0<9)break r;if(o=90418,(0|(n=(0|t)%10|0))==1)break A;if(n-2>>>0>=3)break r;o=90453;break A;case 1:if(t-2>>>0>=3)break r;o=90453;break A;case 2:if(n>>>0<9|((0|t)%10|0)-2>>>0>=3)break r;o=90453;break A;case 3:if(o=90508,n>>>0<9)break A;o=(n=(0|t)%10|0)?(0|n)==1?90453:90586:90508;break A;case 4:break a;default:break r}if(!(n>>>0<9)){if(o=90537,(0|(n=(0|t)%10|0))==1)break A;if(!(n-2>>>0>=3)){o=90453;break A}}}o=90586}e[s+52>>2]=r,e[s+48>>2]=o,QA(n=s+290|0,90218,s+48|0),o=0,UA(A,n,s+224|0)||((0|r)<4||(e[s+32>>2]=r-1,QA(n=s+290|0,89026,s+32|0),UA(A,n,s+176|0)||(UA(A,90273,s+224|0),e[33275]=3)),l[s+224|0]||(e[s+16>>2]=t,QA(n=s+290|0,90303,s+16|0),(o=UA(A,n,s+224|0))||UA(A,90347,s+224|0),e[33275]=2))}return e[s+4>>2]=s+224,e[s>>2]=s+278,QA(a,90368,s),q=s+304|0,!((0|t)!=1|(0|r)!=1)&&(t=1,32&l[A+106|0])||(t=o),t}function la(A,t,r,n){var a,s=0,o=0,c=0,f=0,m=0,p=0,I=0;q=a=q+-64|0,b[a+48>>1]=0,e[a+40>>2]=0,e[a+44>>2]=0,e[a+32>>2]=0,e[a+36>>2]=0,e[a+24>>2]=0,e[a+28>>2]=0,e[a+16>>2]=0,e[a+20>>2]=0,e[a+8>>2]=0,e[a+12>>2]=0,e[a>>2]=0,e[a+4>>2]=0,s=t;e:{for(;;){A:{r:{if((0|(o=l[0|s]))!=69){if((0|o)!=32)break r;if(n&&(g[xt(o=n,t,n=(0|(n=s-t|0))>=159?159:n)+n|0]=0),n=63&r)break A;break e}g[0|s]=101}s=s+1|0;continue}break}if(1&r){A:if((s=s-1|0)>>>0<t>>>0)o=n;else for(o=n;;){if((192&l[0|s])!=128)break A;if(o=o+1|0,!((s=s-1|0)>>>0>=t>>>0))break}c=n-1|0}else c=n,o=n;if((0|n)!=1)for(;;){n=c;A:if(!((s=s-1|0)>>>0<t>>>0))for(;;){if((192&l[0|s])!=128)break A;if(o=o+1|0,!((s=s-1|0)>>>0>=t>>>0))break}A:if(!((s=s-1|0)>>>0<t>>>0))for(;;){if((192&l[0|s])!=128)break A;if(o=o+1|0,!((s=s-1|0)>>>0>=t>>>0))break}if(c=n-2|0,!((0|n)>2))break}if((0|o)<=0)c=0;else{if(f=3&(c=(n=(t=o-1|0)>>>0>=48?48:t)+1|0),t=0,o=0,n>>>0>=3)for(I=-4&c,n=0;m=s+o|0,g[o+a|0]=l[0|m],g[0|m]=32,m=(p=1|o)+s|0,g[a+p|0]=l[0|m],g[0|m]=32,m=(p=2|o)+s|0,g[a+p|0]=l[0|m],g[0|m]=32,m=(p=3|o)+s|0,g[a+p|0]=l[0|m],g[0|m]=32,o=o+4|0,(0|I)!=(0|(n=n+4|0)););if(f)for(;n=s+o|0,g[o+a|0]=l[0|n],g[0|n]=32,o=o+1|0,(0|f)!=(0|(t=t+1|0)););}}if(g[a+c|0]=0,f=65520&r,!(512&r)|l[0|(n=s-1|0)]!=105||(g[0|n]=121),o=4|f,256&r){e:{A:{r:{if((0|(t=e[A+212>>2]))!=25966){if((0|t)!=28268)break r;if(g[0|n]<0||128&(t=g[0|(c=s-2|0)]))break e;if(f=e[A+632>>2])t=!!(0|Wr(f,t));else{if((0|(f=e[A+600>>2]))>0&&(t=t-f|0)-1>>>0>254)break e;t=128&l[344+(A+t|0)|0]}if(!t)break e;if(t=g[0|n],f=e[A+612>>2])t=!!(0|Wr(f,t));else{a:{if((0|(f=e[A+600>>2]))>0){if((t=t-f|0)-1>>>0<255)break a;break e}if((0|t)<0)break e}t=4&l[344+(A+t|0)|0]}if(!t)break e;t=g[s-3|0];a:{if(f=e[A+632>>2])t=!!(0|Wr(f,t));else{s:{if((0|(f=e[A+600>>2]))>0){if((t=t-f|0)-1>>>0<255)break s;break a}if((0|t)<0)break a}t=128&l[344+(A+t|0)|0]}if(t)break e}g[0|s]=l[0|n],g[0|n]=l[0|c],g[s+1|0]=32;break e}if(c=g[s-2|0],t=e[A+632>>2])t=!!(0|Wr(t,c));else{a:{if((0|(t=e[A+600>>2]))>0){if((c=c-t|0)-1>>>0<255)break a;break A}if((0|c)<0)break A}t=128&l[344+(A+c|0)|0]}if(!t)break A;if(c=g[0|n],t=e[A+608>>2])t=!!(0|Wr(t,c));else{if((0|(t=e[A+600>>2]))>0){if((c=c-t|0)-1>>>0>=255)break A}else if((0|c)<0)break A;t=2&l[344+(A+c|0)|0]}if(!t)break A;o=yn(87771,s-3|0,3)?20|f:o;break e}o=e[A+204>>2]?20|f:o;break e}(l[0|n]==99||(c=l[1+(t=s-2|0)|0]<<8,(l[0|t]|c)==29554|(c|l[0|t])==29289||(l[0|(t=s-2|0)]|l[t+1|0]<<8)==29301||!yn(88115,s-3|0,3)||(l[0|(t=s-2|0)]|l[t+1|0]<<8)==29550|l[0|n]==117||!yn(88384,s-5|0,5)||(l[0|(t=s-4|0)]|l[t+1|0]<<8|l[t+2|0]<<16|l[t+3|0]<<24)==1735287154||(l[0|t]|l[t+1|0]<<8|l[t+2|0]<<16|l[t+3|0]<<24)==1735549292))&&(o=20|f)}16&o&&(Nr(e[A+204>>2],s),8&l[188788]&&ji(88683,6,e[47195]))}return e[A+8184>>2]|!(2048&r)||(e[A+8184>>2]=1),M[a>>1]!=115&&yn(a,88850,3)||(o|=8),q=a- -64|0,l[0|a]==39?65531&o:o}function Yr(A,t,r,n,a,s,o,c,f){var m,p=0,I=0,y=0,P=0,Y=0,X=0,_=0,ce=0,he=0,ye=0;q=m=q-112|0,p=2147483647&f;e:{if(y=!(t|r),(n|(I=2147483647&a)?I-2147418112>>>0<2147549184:y)||!(!c&(0|(Y=p-2147418112|0))==-2147418112?s|o:(0|Y)==-2147418112&!!(0|c)|Y>>>0>2147549184)){if(!(!n&(0|I)==2147418112?y:I>>>0<2147418112)){c=n,f=32768|a,s=t,o=r;break e}if(!(!c&(0|p)==2147418112?!(s|o):p>>>0<2147418112)){f|=32768;break e}if(!(t|n|2147418112^I|r)){P=n,c=(n=!(t^s|n^c|r^o|a^f^-2147483648))?0:P,f=n?2147450880:a,s=n?0:t,o=n?0:r;break e}if(!(s|c|2147418112^p|o))break e;if(!(t|n|r|I)){if(s|c|o|p)break e;s&=t,o&=r,c&=n,f&=a;break e}if(!(s|c|o|p)){s=t,o=r,c=n,f=a;break e}}I=(y=ce=(P=(0|p)==(0|I))&(0|n)==(0|c)?(0|r)==(0|o)&t>>>0<s>>>0|r>>>0<o>>>0:P&n>>>0<c>>>0|p>>>0>I>>>0)?s:t,Y=y?o:r,he=P=y?f:a,y=y?c:n,_=65535&P,n=ce?n:c,ye=a=ce?a:f,P=a>>>16&32767,(X=he>>>16&32767)||(f=a=!(y|_),p=a?I:y,c=a<<=6,An(m+96|0,I,Y,y,_,(a=a+((0|(f=Oe(f?Y:_)))==32?Oe(p)+32|0:f)|0)-15|0),y=e[m+104>>2],_=e[m+108>>2],Y=e[m+100>>2],X=16-a|0,I=e[m+96>>2]),s=ce?t:s,o=ce?r:o,c=n,f=65535&ye,P||(a=t=!(c|f),p=t?s:c,r=t<<=6,An(m+80|0,s,o,c,f,(t=t+((0|(a=Oe(a?o:f)))==32?Oe(p)+32|0:a)|0)-15|0),P=16-t|0,c=e[m+88>>2],f=e[m+92>>2],o=e[m+84>>2],s=e[m+80>>2]),r=f<<3|c>>>29,t=c<<3|o>>>29,r|=524288,c=y<<3|Y>>>29,f=_<<3|y>>>29,ce=he^ye,a=o<<3|s>>>29,n=s<<3,(0|P)!=(0|X)&&((s=X-P|0)>>>0>127?(t=0,r=0,a=0,n=1):(An(m- -64|0,n,a,t,r,128-s|0),Hn(m+48|0,n,a,t,r,s),t=e[m+56>>2],r=e[m+60>>2],a=e[m+52>>2],n=e[m+48>>2]|!!(e[m+64>>2]|e[m+72>>2]|e[m+68>>2]|e[m+76>>2]))),y=n,p=a,P=c,_=524288|f,a=Y<<3|I>>>29,Y=I<<3,I=a;A:if((0|ce)<0){if(s=0,o=0,c=0,f=0,!(y^Y|t^P|p^I|r^_))break e;if(n=Y-y|0,a=I-((y>>>0>Y>>>0)+p|0)|0,c=(s=P-t|0)-(o=(0|p)==(0|I)&y>>>0>Y>>>0|p>>>0>I>>>0)|0,f=t=(_-((t>>>0>P>>>0)+r|0)|0)-(s>>>0<o>>>0)|0,t>>>0>524287)break A;s=t=!(c|f),o=t?n:c,r=t<<=6,An(m+32|0,n,a,c,f,t=(t=t+((0|(s=Oe(s?a:f)))==32?Oe(o)+32|0:s)|0)-12|0),X=X-t|0,c=e[m+40>>2],f=e[m+44>>2],n=e[m+32>>2],a=e[m+36>>2]}else a=p+I|0,s=(0|p)==(0|(a=(n=y+Y|0)>>>0<Y>>>0?a+1|0:a))&n>>>0<y>>>0|a>>>0<p>>>0,p=r+_|0,p=(t=t+P|0)>>>0<P>>>0?p+1|0:p,1048576&(f=(c=t+s|0)>>>0<t>>>0?p+1|0:p)&&(n=1&y|(1&a)<<31|n>>>1,a=c<<31|a>>>1,X=X+1|0,c=(1&f)<<31|c>>>1,f=f>>>1|0);if(r=0,I=-2147483648&he,(0|X)>=32767)c=r,f=2147418112|I,s=0,o=0;else if(P=0,(0|X)>0?P=X:(An(m+16|0,n,a,c,f,X+127|0),Hn(m,n,a,c,f,1-X|0),n=e[m>>2]|!!(e[m+16>>2]|e[m+24>>2]|e[m+20>>2]|e[m+28>>2]),a=e[m+4>>2],c=e[m+8>>2],f=e[m+12>>2]),Y=7&n,n=(0|(t=c<<29|a>>>3))==(0|(o=(n=(7&a)<<29|n>>>3)>>>0>(s=(Y>>>0>4)+n|0)>>>0?t+1|0:t))&n>>>0>s>>>0|t>>>0>o>>>0,t=r|(7&f)<<29|c>>>3,f=I|f>>>3&65535|P<<16,f=t>>>0>(c=n+t|0)>>>0?f+1|0:f,(0|Y)!=4){if(!Y)break e}else p=o+(t=0)|0,f=(t=(0|t)==(0|(o=(n=s)>>>0>(s=s+(r=1&s)|0)>>>0?p+1|0:p))&r>>>0>s>>>0|t>>>0>o>>>0)>>>0>(c=t+c|0)>>>0?f+1|0:f}e[A>>2]=s,e[A+4>>2]=o,e[A+8>>2]=c,e[A+12>>2]=f,q=m+112|0}function yt(A){var t=0,r=0,n=0,a=0,s=0,o=0,c=0;e:if(A|=0){s=(n=A-8|0)+(A=-8&(t=e[A-4>>2]))|0;A:if(!(1&t)){if(!(3&t)||(n=n-(t=e[n>>2])|0)>>>0<ue[57156])break e;if(A=A+t|0,e[57157]==(0|n)){if(!(3&~(t=e[s+4>>2])))return e[57154]=A,e[s+4>>2]=-2&t,e[n+4>>2]=1|A,void(e[A+n>>2]=A)}else{if(t>>>0<=255){if(a=e[n+8>>2],t=t>>>3|0,(0|(r=e[n+12>>2]))==(0|a)){e[57152]=e[57152]&an(-2,t);break A}e[a+12>>2]=r,e[r+8>>2]=a;break A}if(c=e[n+24>>2],(0|n)==(0|(t=e[n+12>>2])))if((r=e[(a=n+20|0)>>2])||(r=e[(a=n+16|0)>>2])){for(;o=a,(r=e[(a=(t=r)+20|0)>>2])||(a=t+16|0,r=e[t+16>>2]););e[o>>2]=0}else t=0;else r=e[n+8>>2],e[r+12>>2]=t,e[t+8>>2]=r;if(!c)break A;a=e[n+28>>2];r:{if(e[(r=228912+(a<<2)|0)>>2]==(0|n)){if(e[r>>2]=t,t)break r;e[57153]=e[57153]&an(-2,a);break A}if(e[c+(e[c+16>>2]==(0|n)?16:20)>>2]=t,!t)break A}if(e[t+24>>2]=c,(r=e[n+16>>2])&&(e[t+16>>2]=r,e[r+24>>2]=t),!(r=e[n+20>>2]))break A;e[t+20>>2]=r,e[r+24>>2]=t}}if(!(n>>>0>=s>>>0)&&1&(t=e[s+4>>2])){A:{if(!(2&t)){if(e[57158]==(0|s)){if(e[57158]=n,A=e[57155]+A|0,e[57155]=A,e[n+4>>2]=1|A,e[57157]!=(0|n))break e;return e[57154]=0,void(e[57157]=0)}if(e[57157]==(0|s))return e[57157]=n,A=e[57154]+A|0,e[57154]=A,e[n+4>>2]=1|A,void(e[A+n>>2]=A);A=(-8&t)+A|0;r:if(t>>>0<=255){if(a=e[s+8>>2],t=t>>>3|0,(0|(r=e[s+12>>2]))==(0|a)){e[57152]=e[57152]&an(-2,t);break r}e[a+12>>2]=r,e[r+8>>2]=a}else{if(c=e[s+24>>2],(0|s)==(0|(t=e[s+12>>2])))if((r=e[(a=s+20|0)>>2])||(r=e[(a=s+16|0)>>2])){for(;o=a,(r=e[(a=(t=r)+20|0)>>2])||(a=t+16|0,r=e[t+16>>2]););e[o>>2]=0}else t=0;else r=e[s+8>>2],e[r+12>>2]=t,e[t+8>>2]=r;if(c){a=e[s+28>>2];a:{if(e[(r=228912+(a<<2)|0)>>2]==(0|s)){if(e[r>>2]=t,t)break a;e[57153]=e[57153]&an(-2,a);break r}if(e[c+(e[c+16>>2]==(0|s)?16:20)>>2]=t,!t)break r}e[t+24>>2]=c,(r=e[s+16>>2])&&(e[t+16>>2]=r,e[r+24>>2]=t),(r=e[s+20>>2])&&(e[t+20>>2]=r,e[r+24>>2]=t)}}if(e[n+4>>2]=1|A,e[A+n>>2]=A,e[57157]!=(0|n))break A;return void(e[57154]=A)}e[s+4>>2]=-2&t,e[n+4>>2]=1|A,e[A+n>>2]=A}if(A>>>0<=255)return t=228648+(-8&A)|0,(r=e[57152])&(A=1<<(A>>>3))?A=e[t+8>>2]:(e[57152]=A|r,A=t),e[t+8>>2]=n,e[A+12>>2]=n,e[n+12>>2]=t,void(e[n+8>>2]=A);a=31,A>>>0<=16777215&&(a=62+((A>>>38-(t=Oe(A>>>8|0))&1)-(t<<1)|0)|0),e[n+28>>2]=a,e[n+16>>2]=0,e[n+20>>2]=0,o=228912+(a<<2)|0;A:{r:{if((r=e[57153])&(t=1<<a)){for(a=A<<((0|a)!=31?25-(a>>>1|0):0),t=e[o>>2];;){if(r=t,(-8&e[t+4>>2])==(0|A))break r;if(t=a>>>29|0,a<<=1,!(t=e[16+(o=r+(4&t)|0)>>2]))break}e[o+16>>2]=n,e[n+24>>2]=r}else e[57153]=t|r,e[o>>2]=n,e[n+24>>2]=o;e[n+12>>2]=n,e[n+8>>2]=n;break A}A=e[r+8>>2],e[A+12>>2]=n,e[r+8>>2]=n,e[n+24>>2]=0,e[n+12>>2]=r,e[n+8>>2]=A}A=e[57160]-1|0,e[57160]=A||-1}}}function Dn(A,t,r){var n,a=0,s=0,o=0,c=0,f=0,m=0,p=0,I=0,y=0,P=0,Y=0,X=0;q=n=q-176|0;e:{if(32&t)P=r-((0|r)>1)|0;else{s=Ut(A,93302);A:{r:{a:{if((0|t)!=2){if(s)break a;t=0;break e}if(P=r+1|0,I=56+(Y=F(r,76)+133152|0)|0,y=Ut(A,89360),o=Ut(A,93318),c=Ut(A,93426),f=Ut(A,93499),s)break r;break A}P=r+1|0,I=56+(Y=F(r,76)+133152|0)|0,f=0}for(A=0,m=(0|(a=e[s-4>>2]))!=34?(0|a)==39?a:0:a,X=F(r,76)+133208|0;;){if(a=A,!(A=e[s>>2]))break A;r:{if(!m){if((0|A)==32|A-9>>>0<5)break A;if((0|A)!=47)break r;break A}if((0|a)!=92&&(0|A)==(0|m))break A}if(s=s+4|0,!((0|(p=Nr(A,p+X|0)+p|0))<16))break}}m=0,g[p+I|0]=0,p=F(r,76)+133168|0,s=0;A:if(y)for(A=0,I=(0|(a=e[y-4>>2]))!=34?(0|a)==39?a:0:a;;){if(a=A,!(A=e[y>>2]))break A;r:{if(!I){if((0|A)==32|A-9>>>0<5)break A;if((0|A)!=47)break r;break A}if((0|a)!=92&&(0|A)==(0|I))break A}if(y=y+4|0,!((0|(s=Nr(A,s+p|0)+s|0))<36))break}if(g[s+p|0]=0,!(!o|e[o>>2]-48>>>0>=10)){for(;m=(e[o>>2]+F(m,10)|0)-48|0,e[(o=o+4|0)>>2]-48>>>0<10;);(0|m)<=0||(m=m-1|0)}if(a=F(r,76)+133152|0,e[a+4>>2]=m,A=0,s=0,!(!c|e[c>>2]-48>>>0>=10))for(;s=(e[c>>2]+F(s,10)|0)-48|0,e[(c=c+4|0)>>2]-48>>>0<10;);e[a+12>>2]=s,s=F(r,76)+133152|0;A:{r:if(f){for(;r=g[A+93099|0],(a=e[(A<<2)+f>>2])&&(A=A+1|0,(0|r)==(0|a)););a:{s:switch(a-34|0){case 0:case 5:break s;default:break a}if(!r){A=0;break A}}for(A=0;r=g[A+93116|0],(a=e[(A<<2)+f>>2])&&(A=A+1|0,(0|r)==(0|a)););a:{s:switch(a-34|0){case 0:case 5:break s;default:break a}if(!r){A=1;break A}}for(A=0;r=g[A+93197|0],(a=e[(A<<2)+f>>2])&&(A=A+1|0,(0|r)==(0|a)););a:switch(a-34|0){case 0:case 5:break a;default:break r}if(!r){A=2;break A}}A=3}e[s+8>>2]=e[131156+(A<<3)>>2],e[Y>>2]=t}if(JA(137776,133168),r=JA(n+96|0,133208),g[n+157|0]=e[33291],g[n+156|0]=e[33290],A=e[33289],e[n+152>>2]=0,g[n+158|0]=A,(0|P)>0)for(o=0;;){if(c=1,t=F(o,76)+133152|0,l[0|(A=t+16|0)]&&mn(0,A)&&(JA(137776,A),c=0,g[0|r]=0,g[n+158|0]=0,b[n+156>>1]=0),l[0|(A=t+56|0)]){f=JA(r,A),a=e[33679];A:if(l[0|(A=a)])for(;;){if(!Mr(A=A+1|0,f)){JA(f,a+1|0);break A}if(A=1+(RA(A)+A|0)|0,!l[0|A])break}c&&(g[137776]=0)}if((A=e[t+8>>2])&&(g[n+156|0]=A),(A=e[t+12>>2])&&(g[n+157|0]=A),(A=e[t+4>>2])&&(g[n+158|0]=A),(0|P)==(0|(o=o+1|0)))break}e[n+148>>2]=r,e[n+144>>2]=137776,(A=Vn(n+144|0,n+172|0))?ra(A,43)||(t=l[n+156|0],!l[134672]|((0|t)!=l[134724]?t:0)||(e[n>>2]=A,e[n+4>>2]=134672,QA(t=n+16|0,93533,n),A=137776,ar(137776,t,40))):A=92003,t=0,Mr(A,134784)&&(JA(134784,A),t=131072)}return q=n+176|0,t}function zr(A,t){var r,n=0,a=0,s=0,o=0,c=0;r=A+t|0;e:{A:if(!(1&(n=e[A+4>>2]))){if(!(3&n))break e;t=(n=e[A>>2])+t|0;r:{if((0|(A=A-n|0))!=e[57157]){if(n>>>0<=255){if(s=e[A+8>>2],n=n>>>3|0,(0|(a=e[A+12>>2]))!=(0|s))break r;e[57152]=e[57152]&an(-2,n);break A}if(c=e[A+24>>2],(0|(n=e[A+12>>2]))==(0|A))if((a=e[(s=A+20|0)>>2])||(a=e[(s=A+16|0)>>2])){for(;o=s,(a=e[(s=(n=a)+20|0)>>2])||(s=n+16|0,a=e[n+16>>2]););e[o>>2]=0}else n=0;else a=e[A+8>>2],e[a+12>>2]=n,e[n+8>>2]=a;if(!c)break A;s=e[A+28>>2];a:{if(e[(a=228912+(s<<2)|0)>>2]==(0|A)){if(e[a>>2]=n,n)break a;e[57153]=e[57153]&an(-2,s);break A}if(e[c+(e[c+16>>2]==(0|A)?16:20)>>2]=n,!n)break A}if(e[n+24>>2]=c,(a=e[A+16>>2])&&(e[n+16>>2]=a,e[a+24>>2]=n),!(a=e[A+20>>2]))break A;e[n+20>>2]=a,e[a+24>>2]=n;break A}if(3&~(n=e[r+4>>2]))break A;return e[57154]=t,e[r+4>>2]=-2&n,e[A+4>>2]=1|t,void(e[r>>2]=t)}e[s+12>>2]=a,e[a+8>>2]=s}A:{if(!(2&(n=e[r+4>>2]))){if(e[57158]==(0|r)){if(e[57158]=A,t=e[57155]+t|0,e[57155]=t,e[A+4>>2]=1|t,e[57157]!=(0|A))break e;return e[57154]=0,void(e[57157]=0)}if(e[57157]==(0|r))return e[57157]=A,t=e[57154]+t|0,e[57154]=t,e[A+4>>2]=1|t,void(e[A+t>>2]=t);t=(-8&n)+t|0;r:if(n>>>0<=255){if(s=e[r+8>>2],n=n>>>3|0,(0|(a=e[r+12>>2]))==(0|s)){e[57152]=e[57152]&an(-2,n);break r}e[s+12>>2]=a,e[a+8>>2]=s}else{if(c=e[r+24>>2],(0|r)==(0|(n=e[r+12>>2])))if((s=e[(a=r+20|0)>>2])||(s=e[(a=r+16|0)>>2])){for(;o=a,(s=e[(a=(n=s)+20|0)>>2])||(a=n+16|0,s=e[n+16>>2]););e[o>>2]=0}else n=0;else a=e[r+8>>2],e[a+12>>2]=n,e[n+8>>2]=a;if(c){s=e[r+28>>2];a:{if(e[(a=228912+(s<<2)|0)>>2]==(0|r)){if(e[a>>2]=n,n)break a;e[57153]=e[57153]&an(-2,s);break r}if(e[c+(e[c+16>>2]==(0|r)?16:20)>>2]=n,!n)break r}e[n+24>>2]=c,(a=e[r+16>>2])&&(e[n+16>>2]=a,e[a+24>>2]=n),(a=e[r+20>>2])&&(e[n+20>>2]=a,e[a+24>>2]=n)}}if(e[A+4>>2]=1|t,e[A+t>>2]=t,e[57157]!=(0|A))break A;return void(e[57154]=t)}e[r+4>>2]=-2&n,e[A+4>>2]=1|t,e[A+t>>2]=t}if(t>>>0<=255)return n=228648+(-8&t)|0,(a=e[57152])&(t=1<<(t>>>3))?t=e[n+8>>2]:(e[57152]=t|a,t=n),e[n+8>>2]=A,e[t+12>>2]=A,e[A+12>>2]=n,void(e[A+8>>2]=t);s=31,t>>>0<=16777215&&(s=62+((t>>>38-(n=Oe(t>>>8|0))&1)-(n<<1)|0)|0),e[A+28>>2]=s,e[A+16>>2]=0,e[A+20>>2]=0,o=228912+(s<<2)|0;A:{if((a=e[57153])&(n=1<<s)){for(s=t<<((0|s)!=31?25-(s>>>1|0):0),n=e[o>>2];;){if(a=n,(-8&e[n+4>>2])==(0|t))break A;if(n=s>>>29|0,s<<=1,!(n=e[16+(o=a+(4&n)|0)>>2]))break}e[o+16>>2]=A,e[A+24>>2]=a}else e[57153]=n|a,e[o>>2]=A,e[A+24>>2]=o;return e[A+12>>2]=A,void(e[A+8>>2]=A)}t=e[a+8>>2],e[t+12>>2]=A,e[a+8>>2]=A,e[A+24>>2]=0,e[A+12>>2]=a,e[A+8>>2]=t}}function jr(A){var t=0,r=0,n=0,a=0,s=0,o=0,c=0,f=0,m=0,p=0,I=0,y=0,P=0;if(!(t=g[88105]))return A;if(A=ra(A,t)){if(!l[88106])return A;if(l[A+1|0]){if(!l[88107]){a=!!(0|(r=l[A+1|0]));e:if(r&&(0|(t=r|l[0|A]<<8))!=(0|(c=l[88106]|l[88105]<<8)))for(r=A+1|0;;){if(a=!!(0|(n=l[(A=r)+1|0])),!n)break e;if(r=A+1|0,(0|c)==(0|(t=n|t<<8&65280)))break}return a?A:0}if(l[A+2|0]){if(!l[88108]){r=A+2|0,a=!!(0|(t=l[A+2|0]));e:if(t&&(0|(t=l[A+1|0]<<16|l[0|A]<<24|t<<8))!=(0|(c=l[88106]<<16|l[88105]<<24|l[88107]<<8)))for(;;){if(A=r+1|0,a=!!(0|(n=l[r+1|0])),!n)break e;if(r=A,(0|c)==(0|(t=(t|n)<<8)))break}else A=r;return a?A-2|0:0}if(l[A+3|0]){if(!l[88109]){r=A+3|0,a=!!(0|(t=l[A+3|0]));e:if(t&&(0|(t=t|l[A+1|0]<<16|l[0|A]<<24|l[A+2|0]<<8))!=(0|(c=(A=l[88105]|l[88106]<<8|l[88107]<<16|l[88108]<<24)<<24|(65280&A)<<8|A>>>8&65280|A>>>24)))for(;;){if(A=r+1|0,a=!!(0|(n=l[r+1|0])),!n)break e;if(r=A,(0|c)==(0|(t=n|t<<8)))break}else A=r;return a?A-3|0:0}c=A,q=f=q-1056|0,e[(A=f+1048|0)>>2]=0,e[A+4>>2]=0,e[(A=f+1040|0)>>2]=0,e[A+4>>2]=0,e[f+1032>>2]=0,e[f+1036>>2]=0,e[f+1024>>2]=0,e[f+1028>>2]=0;e:{A:{r:{a:{if(t=l[88105]){for(;;){if(!l[s+c|0])break A;if(s=s+1|0,e[((255&t)<<2)+f>>2]=s,e[(A=(f+1024|0)+(t>>>3&28)|0)>>2]=e[A>>2]|1<<t,!(t=l[s+88105|0]))break}if(A=1,m=-1,s>>>0>1)break a}else m=-1,A=1;o=-1,r=1;break r}for(n=1,t=1;;){a:if((0|(o=l[88105+(t+m|0)|0]))!=(0|(a=l[A+88105|0])))a>>>0<o>>>0?(n=A-m|0,r=A,t=1):(m=r,r=r+1|0,n=1,t=1);else{if((0|t)==(0|n)){r=r+n|0,t=1;break a}t=t+1|0}if(!(s>>>0>(A=r+t|0)>>>0))break}if(r=1,o=-1,s>>>0<=1)A=n;else{for(A=0,a=1,t=1;;){a:if((0|(I=l[88105+(t+o|0)|0]))!=(0|(p=l[r+88105|0])))p>>>0>I>>>0?(a=r-o|0,A=r,t=1):(o=A,A=A+1|0,a=1,t=1);else{if((0|t)==(0|a)){A=A+a|0,t=1;break a}t=t+1|0}if(!(s>>>0>(r=A+t|0)>>>0))break}A=n,r=a}}for(t=A,yn(88105,(n=(A=o+1>>>0>m+1>>>0)?r:t)+88105|0,I=(p=A?o:m)+1|0)?(n=((A=~p+s|0)>>>0<p>>>0?p:A)+1|0,a=0):a=s-n|0,P=s-1|0,y=63|s,o=0,A=c;;){if(!(c-A>>>0>=s>>>0))if(r=ss(c,0,y)){if(c=r,r-A>>>0<s>>>0)break A}else c=c+y|0;r=l[A+P|0],t=s;r:{if(e[(f+1024|0)+(r>>>3&28)>>2]>>>r&1)if((0|(r=e[(r<<2)+f>>2]))==(0|s)){a:{if(m=l[(r=(t=I)>>>0>o>>>0?t:o)+88105|0])for(;;){if(l[A+r|0]!=(255&m))break a;if(!(m=l[88105+(r=r+1|0)|0]))break}for(;;){if(t>>>0<=o>>>0)break e;if(l[88105+(t=t-1|0)|0]!=l[A+t|0])break}t=n,o=a;break r}t=r-p|0}else t=(r=s-r|0)>>>0>o>>>0?r:o;o=0}A=A+t|0}}A=0}q=f+1056|0,r=A}}}}return r}function Ca(A,t,r,n,a,s){var o,c,f,m,p=0,I=0,y=0;if(q=o=q-560|0,g[o+448|0]=0,g[o+144|0]=0,g[o+120|0]=0,f=34&s,c=t-F(I=(0|t)/100|0,100)|0,1&(m=64&l[A+106|0]?(0|t)>999|s:0)|(0|t)>99){e:{A:{r:{if(!(!f|c)){if(!UA(A,90606,o+304|0))break r;break e}if(c)break A}if(UA(A,90691,o+304|0))break e}UA(A,90725,o+304|0)}p=s,(0|t)<1e3||(p=s,!(8&l[A+105|0])|t-2e3>>>0<4294967196&&(g[o+208|0]=0,_n(A,p=(I>>>0)/10|0,n=16384&e[A+108>>2]?0:a+1|0,!((t>>>0)%1e3|0)|f,o+272|0)||zn(A,p,a,e[A+212>>2]==28012?520:(0|n)<4?(e[A+108>>2]>>>n&1)<<3:0,o+208|0),2&l[A+109|0]?(e[o+108>>2]=15,e[o+100>>2]=15,e[o+104>>2]=o+208,e[o+96>>2]=o+272,QA(o+144|0,90761,o+96|0)):(e[o+92>>2]=15,e[o+84>>2]=15,e[o+88>>2]=o+272,e[o+80>>2]=o+208,QA(o+144|0,90761,o+80|0)),n=1,1&(!!(0|(I=I-F(p,10)|0))|m)||(g[o+304|0]=0),p=1|s)),g[o+208|0]=0;e:if(!(~m&(0|I)<=0))if(!(4&l[A+106|0])|!(1&p|l[o+144|0])||UA(A,90824,o+120|0),!f|(16&l[A+109|0]?0:c)||(e[o+64>>2]=I,QA(n=o+548|0,90875,o- -64|0),y=UA(A,n,o+208|0),!(4096&e[A+108>>2])|(0|c)<=0||sn(o+208|0,133104)),n=1,1&(~m|!!(0|I))){A:{r:{a:{s:{if(!(131072&e[A+108>>2])||1&p|(0|I)!=1){if(c|y||(e[o+48>>2]=I,QA(n=o+548|0,90985,o+48|0),y=UA(A,n,o+208|0)),y||(e[o+32>>2]=I,QA(n=o+548|0,91027,o+32|0),UA(A,n,o+208|0)))break s;if((0|I)!=1)break r;break a}if(!y)break a}g[o+304|0]=0;break A}if(n=1,4&l[A+105|0])break e}zn(A,I,a,0,o+208|0)}n=1}else UA(A,88875,o+208|0);e[o+28>>2]=o+304,e[o+24>>2]=o+208,e[o+20>>2]=o+120,e[o+16>>2]=o+144,QA(o+448|0,91059,o+16|0)}else p=s;g[o+132|0]=0;e:{A:{if((0|c)>0)16&l[A+109|0]&&2&p||(!(1&p)|a&&(0|t)<=100||!(64&(n=e[A+104>>2]))&(!(8388608&n)|c>>>0>9)||UA(A,90824,o+132|0),!(1&p|l[o+144|0])|!(524288&e[A+104>>2])|I||UA(A,90824,o+132|0)),g[o+336|0]=0;else if(g[o+336|0]=0,!c&n)break A;if(a?(s=e[A+108>>2],t=(0|a)<4?(s>>>a&1)<<3:0):(n=f?3:2,t=32&s|((0|t)<100?1&p?n:4|n:n),s=e[A+108>>2]),t=(0|a)==1&&e[A+212>>2]==28012?520|t:t,1048576&s&&(n=16|t,t=(0|I)>0||1&p?n:t),!zn(A,c,a,256&p|t,o+336|0)|!(128&l[A+104|0]))break e;g[o+132|0]=0;break e}l[133104]&&((0|(A=RA(o+448|0)))<=0||l[447+(A=A+o|0)|0]==10&&(g[A+447|0]=0),JA(o+336|0,133104))}e[o+8>>2]=15,e[o+12>>2]=o+336,e[o+4>>2]=o+132,e[o>>2]=o+448,QA(r,91101,o),q=o+560|0}function Xt(A){var t,r,n,a=0,s=0,o=0,c=0,f=0,m=0,p=0,I=0,y=0,P=0,Y=0,X=0;for(a=e[32972],e[a+64>>2]=290816,e[a+68>>2]=4104,e[a+96>>2]=0,e[a+100>>2]=0,e[a+120>>2]=90,e[a+124>>2]=100,e[a+112>>2]=64,e[a+116>>2]=256,e[a+104>>2]=5,e[a+108>>2]=0,e[a+84>>2]=100,e[a+88>>2]=64,s=e[50754],e[a+132>>2]=0,e[a+136>>2]=0,e[a+128>>2]=s,e[a+140>>2]=0,e[a+144>>2]=0,e[a+148>>2]=0,e[a+152>>2]=0,e[a+156>>2]=0,e[a+160>>2]=0,e[36435]=450,e[a+92>>2]=2,e[50870]=0,e[50871]=0,e[50872]=0,e[50873]=0,e[50880]=0,e[50881]=0,e[50882]=0,e[50883]=0,e[50890]=0,e[50891]=0,e[50892]=0,e[50893]=0,o=-3.141592653589793/+e[50754],D[25429]=o,f=-2*o,D[25430]=f,t=(o=Ft(200*o))*-o,D[25434]=t,D[25439]=t,D[25444]=t,o=(f=o*Tn(2e3*f))+f,D[25433]=o,D[25438]=o,D[25443]=o,f=1-o-t,D[25432]=f,D[25437]=f,D[25442]=f,e[50902]=0,e[50903]=0,e[50900]=0,e[50901]=0,D[25449]=t,D[25448]=o,e[50912]=0,e[50913]=0,D[25447]=f,e[50910]=0,e[50911]=0,D[25454]=t,D[25453]=o,e[50922]=0,e[50923]=0,D[25452]=f,e[50920]=0,e[50921]=0,D[25459]=t,D[25458]=o,e[50932]=0,e[50933]=0,D[25457]=f,e[50930]=0,e[50931]=0,D[25464]=t,D[25463]=o,D[25462]=f,e[50942]=0,e[50943]=0,e[50940]=0,e[50941]=0,D[25469]=t,D[25468]=o,D[25467]=f,e[50952]=0,e[50953]=0,e[50950]=0,e[50951]=0,D[25474]=t,D[25473]=o,D[25472]=f,r=e[32972],s=0;b[236+(m=(s<<1)+r|0)>>1]=256,b[m+164>>1]=256,a=l[s+105376|0]<<1,b[m+254>>1]=a,b[m+182>>1]=a,b[m+200>>1]=l[s+105385|0]<<1,e[308+(a=(c=s<<2)+r|0)>>2]=e[c+105408>>2],e[a+272>>2]=0,b[m+218>>1]=0,e[c+200944>>2]=(0|F(e[c+105456>>2],22050))/e[50754],(0|(s=s+1|0))!=9;);for(P=e[32961],s=0,n=r+344|0;;){if(a=p,I=P,m=s,(0|(p=e[(s=131840+(c=s<<2)|0)>>2]))==-1&&(p=8e3,e[s>>2]=8e3,m&&(e[131840+(4|c)>>2]=e[c+131836>>2])),P=e[131840+(4|c)>>2],!((0|a)>=(0|(p=(0|p)/8|0))||(0|(y=p-a|0))<=0||(c=a+1|0,s=a,1&y&&(g[344+(a+r|0)|0]=(0|I)>=255?255:I,s=c),(0|c)==(0|p))))for(Y=P-I|0;c=((0|F(s-a|0,Y))/(0|y)|0)+I|0,g[s+n|0]=(0|c)>=255?255:c,X=((0|F((c=s+1|0)-a|0,Y))/(0|y)|0)+I|0,g[c+n|0]=(0|X)>=255?255:X,(0|p)!=(0|(s=s+2|0)););if(s=m+2|0,!(m>>>0<10))break}s=e[32972],e[s+80>>2]=232,e[s+72>>2]=256,e[s+76>>2]=238,A||(e[49848]=0),b[s+200>>1]=(0|F(b[s+200>>1],105))/100}function $n(A,t,r){var n,a=0,s=0,o=0,c=0,f=0,m=0,p=0,I=0;q=n=q-288|0,(0|t)!=132848&&Ur(132848,t,40),(0|(a=A+228|0))!=(0|t)&&Ur(a,t,40),e[n+88>>2]=t,e[n+84>>2]=47,e[n+80>>2]=137584,QA(a=n+96|0,84089,n+80|0),s=da(a),(a=e[A+688>>2])&&(yt(a),e[A+688>>2]=0),a=xn(n+96|0,84577);e:if((0|s)>0&&a)if(r=It(s),e[A+688>>2]=r,r)if(m=xi(r,s,a),rn(a),m>>>0<=1032)e[n+16>>2]=n+96,hr(e[30450],85164,n+16|0),r=2;else if(a=e[A+688>>2],r=e[a+4>>2],!((0|(s=e[a>>2]))!=1024|(0|r)<=0)&(0|r)<134217729){a=r+a|0,e[A+684>>2]=a,I=VA(A+5168|0,0,1024),VA(A+7664|0,0,260),VA(A+7924|0,255,256),VA(A+4788|0,0,380),VA(A+6192|0,0,512);A:if((0|(r=l[0|a]))!=7)for(;;){if((0|(s=255&r))!=6){if(!s)break A;s=e[A+684>>2],e[n+72>>2]=r<<24>>24,e[n+64>>2]=132848,e[n+68>>2]=a-s,hr(e[30450],88950,n- -64|0);break}r:{a:{s:{c:{o:switch((s=l[0|(r=a+1|0)])-18|0){case 0:break c;case 2:break o;default:break s}for(r=4+(-4&r)|0,e[A+180>>2]=r;r=(a=r)+1|0,!Ki(a););for(;s=l[0|a],r=a,a=a+1|0,(0|s)!=7;);break r}if(r=a+3|0,(0|(a=((0|(a=g[a+2|0]))<65?191:-65)+a|0))>94)break a;e[4788+((a<<2)+A|0)>>2]=r;break a}switch(r=1+((c=RA(r))+r|0)|0,0|c){case 1:e[5168+((s<<2)+A|0)>>2]=r;break a;case 0:e[I>>2]=r;break a}c=l[a+2|0],(0|s)!=1?(a=e[A+7664>>2],l[0|(p=7924+(o=A+s|0)|0)]==255&&(g[0|p]=a),g[0|(o=o+7668|0)]=l[0|o]+1,e[6704+(o=(a<<2)+A|0)>>2]=r,e[A+7664>>2]=a+1,e[o+7184>>2]=s|c<<8):e[6188+((c<<2)+A|0)>>2]=r}if(l[0|r]!=7)for(;r=1+(RA(r)+r|0)|0,l[0|r]!=7;);}r=l[0|(a=r+1|0)]}for(a=e[A+688>>2]+8|0;;){for(e[692+((r=f<<2)+A|0)>>2]=a;s=l[0|a];)a=a+s|0;for(a=a+1|0,e[692+((4|r)+A|0)>>2]=a;r=l[0|a];)a=r+a|0;if(a=a+1|0,(0|(f=f+2|0))==1024)break}r=0,(0|(A=e[A+324>>2]))<=0|A>>>0<=m>>>0||(e[n+48>>2]=t,hr(e[30450],85519,n+48|0))}else e[n+40>>2]=r,e[n+36>>2]=s,e[n+32>>2]=n+96,hr(e[30450],85349,n+32|0),r=2;else rn(a),r=3;else{if(r||(e[n>>2]=n+96,hr(e[30450],84963,n)),r=1,!a)break e;rn(a)}return q=n+288|0,r}function ba(A){var t,r=0,n=0;for(t=VA(A+344|0,0,256),g[A+364|0]=1,g[A+356|0]=1,g[A+357|0]=1,g[A+358|0]=1,g[A+359|0]=1,g[A+360|0]=1,g[A+361|0]=1,g[A+362|0]=1,g[A+363|0]=1,g[A+348|0]=1,g[A+349|0]=1,g[A+350|0]=1,g[A+351|0]=1,g[A+352|0]=1,g[A+353|0]=1,g[A+354|0]=1,g[A+355|0]=1,g[A+431|0]=3,g[A+429|0]=3,g[A+430|0]=3,g[A+406|0]=3,g[A+407|0]=3,g[A+408|0]=3,g[A+409|0]=3,g[A+410|0]=3,g[A+411|0]=3,g[A+412|0]=3,g[A+413|0]=3,g[A+414|0]=3,g[A+415|0]=3,g[A+416|0]=3,g[A+417|0]=3,g[A+418|0]=3,g[A+419|0]=3,g[A+420|0]=3,g[A+421|0]=3,g[A+440|0]=3,g[A+441|0]=3,g[A+442|0]=3,g[A+443|0]=3,n=21;g[344+(r=A+n|0)|0]=4|l[r+344|0],(0|(r=n+1|0))!=58;)g[0|(r=r+t|0)]=4|l[0|r],g[2+(r=n+t|0)|0]=4|l[r+2|0],g[r+3|0]=4|l[r+3|0],n=n+4|0;g[A+346|0]=4|l[A+346|0],g[A+347|0]=4|l[A+347|0],g[A+432|0]=4|l[A+432|0],g[A+433|0]=4|l[A+433|0],g[A+434|0]=4|l[A+434|0],g[A+435|0]=4|l[A+435|0],g[A+436|0]=4|l[A+436|0],g[A+437|0]=4|l[A+437|0],g[A+438|0]=4|l[A+438|0],g[A+439|0]=4|l[A+439|0],g[A+467|0]=4|l[A+467|0],g[A+468|0]=4|l[A+468|0],g[A+470|0]=4|l[A+470|0],g[A+471|0]=4|l[A+471|0],g[A+348|0]=64|l[A+348|0],g[A+349|0]=64|l[A+349|0],g[A+350|0]=64|l[A+350|0],g[A+351|0]=64|l[A+351|0],g[A+352|0]=64|l[A+352|0],g[A+353|0]=64|l[A+353|0],g[A+354|0]=64|l[A+354|0],g[A+355|0]=64|l[A+355|0],g[A+356|0]=64|l[A+356|0],g[A+357|0]=64|l[A+357|0],g[A+358|0]=64|l[A+358|0],g[A+359|0]=64|l[A+359|0],g[A+360|0]=64|l[A+360|0],g[A+361|0]=64|l[A+361|0],g[A+362|0]=64|l[A+362|0],g[A+363|0]=64|l[A+363|0],g[A+364|0]=64|l[A+364|0],g[A+406|0]=64|l[A+406|0],g[A+407|0]=64|l[A+407|0],g[A+408|0]=64|l[A+408|0],g[A+409|0]=64|l[A+409|0],g[A+410|0]=64|l[A+410|0],g[A+411|0]=64|l[A+411|0],g[A+412|0]=64|l[A+412|0],g[A+413|0]=64|l[A+413|0],g[A+414|0]=64|l[A+414|0],g[A+415|0]=64|l[A+415|0],g[A+416|0]=64|l[A+416|0],g[A+417|0]=64|l[A+417|0],g[A+418|0]=64|l[A+418|0],g[A+419|0]=64|l[A+419|0],g[A+420|0]=64|l[A+420|0],g[A+440|0]=64|l[A+440|0],g[A+441|0]=64|l[A+441|0],g[A+429|0]=64|l[A+429|0],g[A+430|0]=64|l[A+430|0],g[A+431|0]=64|l[A+431|0],g[A+442|0]=64|l[A+442|0],g[A+443|0]=64|l[A+443|0],e[A+40>>2]=1,e[A+204>>2]=e[A+600>>2]+77}function ks(A,t,r,n,a,s,o,c,f){var m,p=0,I=0,y=0,P=0,Y=0,X=0,_=0,ce=0,he=0,ye=0;q=m=q-128|0;e:{A:{if(pA(s,o,c,f,0,0,0,0)){I=65535&f;r:a:{if((0|(P=f>>>16&32767))!=32767){if(p=4,P)break a;p=s|c|o|I?3:2;break r}p=!(s|c|o|I)}if((0|(Y=32767&(he=a>>>16|0)))!=32767&&p)break A}FA(m+16|0,t,r,n,a,s,o,c,f),Vr(m,t=e[m+16>>2],n=e[m+20>>2],a=e[m+24>>2],r=e[m+28>>2],t,n,a,r),n=e[m+8>>2],a=e[m+12>>2],c=e[m>>2],f=e[m+4>>2];break e}if(P=c,(0|pA(t,r,p=n,X=2147483647&a,s,o,c,y=2147483647&f))<=0){if(pA(t,r,p,X,s,o,P,y)){c=t,f=r;break e}FA(m+112|0,t,r,n,a,0,0,0,0),n=e[m+120>>2],a=e[m+124>>2],c=e[m+112>>2],f=e[m+116>>2]}else{if(_=f>>>16&32767,Y?(f=r,c=t):(FA(m+96|0,t,r,p,X,0,0,0,1081540608),p=e[m+104>>2],X=c=e[m+108>>2],Y=(c>>>16|0)-120|0,f=e[m+100>>2],c=e[m+96>>2]),_||(FA(m+80|0,s,o,P,y,0,0,0,1081540608),P=e[m+88>>2],y=s=e[m+92>>2],_=(s>>>16|0)-120|0,o=e[m+84>>2],s=e[m+80>>2]),ce=P,ye=65535&y|65536,X=65535&X|65536,(0|Y)>(0|_)){for(;;){if(P=(y=p-ce|0)-(I=(0|o)==(0|f)&s>>>0>c>>>0|o>>>0>f>>>0)|0,(0|(I=(X-((p>>>0<ce>>>0)+ye|0)|0)-(I>>>0>y>>>0)|0))>0|(0|I)>=0){if(p=c,!((c=c-s|0)|P|(f=f-((s>>>0>p>>>0)+o|0)|0)|I)){FA(m+32|0,t,r,n,a,0,0,0,0),n=e[m+40>>2],a=e[m+44>>2],c=e[m+32>>2],f=e[m+36>>2];break e}I=I<<1|P>>>31,p=P<<1|f>>>31}else I=X<<1|p>>>31,p=p<<1|f>>>31;if(X=I,I=f<<1|c>>>31,c<<=1,f=I,!((0|(Y=Y-1|0))>(0|_)))break}Y=_}if(P=(y=p-ce|0)-(I=(0|o)==(0|f)&s>>>0>c>>>0|o>>>0>f>>>0)|0,y=I=(X-((p>>>0<ce>>>0)+ye|0)|0)-(I>>>0>y>>>0)|0,(0|I)<0)P=p,y=X;else if(p=c,!((c=c-s|0)|P|(f=f-((s>>>0>p>>>0)+o|0)|0)|y)){FA(m+48|0,t,r,n,a,0,0,0,0),n=e[m+56>>2],a=e[m+60>>2],c=e[m+48>>2],f=e[m+52>>2];break e}if((0|y)==65535|y>>>0<65535)for(;t=f>>>31|0,Y=Y-1|0,X=f<<1|c>>>31,c<<=1,f=X,r=t,t=y<<1|P>>>31,P=r|P<<1,y=t,t>>>0<65536;);t=32768&he,(0|Y)<=0?(FA(m- -64|0,c,f,P,65535&y|(t|Y+120)<<16,0,0,0,1065811968),n=e[m+72>>2],a=e[m+76>>2],c=e[m+64>>2],f=e[m+68>>2]):(n=P,a=65535&y|(t|Y)<<16)}}e[A>>2]=c,e[A+4>>2]=f,e[A+8>>2]=n,e[A+12>>2]=a,q=m+128|0}function As(A,t,r){var n,a,s=0,o=0,c=0,f=0,m=0,p=0,I=0,y=0,P=0;if(q=n=q-1040|0,(0|(o=w0(A,589824,0)))>=0&&((s=G0(1,2072))?e[s+8>>2]=o:(DA(0|o),s=0)),a=s,s){e:if(s=C0(a))for(P=e[30450],y=(n+96|0)+t|0;;){if((0|(o=e[50303]))>=348){e[n+4>>2]=350,e[n>>2]=o+1,hr(P,91860,n);break e}if(l[s+19|0]!=46)if(e[n+88>>2]=s+19,e[n+84>>2]=47,e[n+80>>2]=A,QA(s=n+96|0,91924,n+80|0),(0|(s=da(s)))!=-31){if(!((0|s)<=0)&&(I=xn(n+96|0,85712))){c=0,g[n+832|0]=0,g[n+752|0]=0,e[n+360>>2]=0,e[n+356>>2]=4,m=0;A:for(;;){for(p=299-m|0;Zt(n+912|0,120,I);){s=n+912|0;r:{if(l[n+912|0]!=35){a:if(!((0|(s=RA(n+912|0)-1|0))<=0))for(;;){if(!((0|(o=g[0|(f=(n+912|0)+s|0)]))==32|o-9>>>0<5))break a;if(g[0|f]=0,!((0|(s=s-1|0))>0))break}if(!(s=jr(n+912|0)))break r}g[0|s]=0}s=n+912|0;r:if(o=l[n+912|0])for(;;){if(Rr(o<<24>>24))break r;if(!(o=l[0|(s=s+1|0)]))break}if(g[0|s]=0,l[n+912|0]){s=s+1|0;r:switch(va(131904,n+912|0)-1|0){case 0:for(;o=s,s=s+1|0,(0|(f=g[0|o]))==32|f-9>>>0<5;);ar(n+832|0,o,80);continue;case 1:if(g[n+672|0]=0,e[n+364>>2]=5,o=n+672|0,e[n+16>>2]=o,e[n+20>>2]=n+364,nt(s,86237,n+16|0),(o=RA(o)+2|0)>>>0>=p>>>0)continue;g[0|(s=(n+368|0)+m|0)]=e[n+364>>2],JA(s+1|0,n+672|0),c=c+1|0,m=o+m|0;continue A;case 2:if(e[n+52>>2]=n+360,e[n+48>>2]=n+752,nt(s,86237,n+48|0),!r)continue;e[n+32>>2]=y,hr(P,92042,n+32|0);continue;case 5:break r;default:continue}e[n+64>>2]=n+356,nt(s,87268,n- -64|0)}}break}g[(n+368|0)+m|0]=0,o=va(132112,n+752|0),c?(f=RA(y)+m|0,p=xt((c=G0(28+(RA(n+832|0)+f|0)|0,1))+24|0,n+368|0,s=m+1|0),e[c+4>>2]=p,s=JA(s+p|0,y),e[c>>2]=s,e[c+8>>2]=s,l[n+832|0]&&(e[c>>2]=JA(2+(f+p|0)|0,n+832|0)),s=e[n+360>>2],g[c+14|0]=0,g[c+12|0]=o,g[c+13|0]=s,g[c+15|0]=e[n+356>>2],rn(I),s=e[50303],e[50303]=s+1,e[201216+(s<<2)>>2]=c):rn(I)}}else As(n+96|0,t,r);if(!(s=C0(a)))break}P0(e[a+8>>2]),yt(a)}q=n+1040|0}function ts(A,t){var r,n=0,a=0,s=0,o=0,c=0,f=0,m=0,p=0,I=0;q=r=q-352|0;e:if(A||(A=e[136284+(t<<4)>>2])){l[0|A]!=47&&(e[r+12>>2]=A,e[r+4>>2]=47,e[r+8>>2]=47,e[r>>2]=137584,QA(A=r+16|0,84114,r)),g[r+240|0]=0;A:{r:{if(n=xn(A,84577)){if((0|Wi(n,20))==-1)break A;if(s=Ri(n),a=Ri(n),c=Ri(n),!((0|s)!=65537|(0|a)!=e[50754])&(0|c)==a<<1)break r;rn(n),b[r+256>>1]=l[84864]|l[84865]<<8,A=l[84852]|l[84853]<<8|l[84854]<<16|l[84855]<<24,e[r+240>>2]=l[84848]|l[84849]<<8|l[84850]<<16|l[84851]<<24,e[r+244>>2]=A,A=l[84860]|l[84861]<<8|l[84862]<<16|l[84863]<<24,e[r+248>>2]=l[84856]|l[84857]<<8|l[84858]<<16|l[84859]<<24,e[r+252>>2]=A,q=s=q-16|0;a:{if((n=RA(A=r+240|0))>>>0>=6&&!yn(c=(A+n|0)-6|0,84274,6)){for(m=100;;){for(f=0,q=n=q-16|0,l[227196]||(g[227197]=sA(),g[227196]=1),I=+Ke(),Ne(o=I/1e3)<9223372036854776e3?(p=Ne(o)>=1?~~(o>0?AA(tA(23283064365386963e-26*o),4294967295):BA(23283064365386963e-26*(o-+(~~o>>>0>>>0))))>>>0:0,a=~~o>>>0):(p=-2147483648,a=0),e[n>>2]=a,e[n+4>>2]=p,o=1e3*(I-(+(kt(a,p,1e3,0)>>>0)+4294967296*+(0|J)))*1e3,a=Ne(o)<2147483648?~~o:-2147483648,e[n+8>>2]=a,a=c+(n>>>4|0)^F(e[n+8>>2],65537);g[c+f|0]=65+(15&a|a<<1&32),a=a>>>5|0,(0|(f=f+1|0))!=6;);if(q=n+16|0,e[s>>2]=384,(0|(n=w0(A,194,s)))>=0)break a;if(m=m-1|0,e[56798]!=20||!m)break}xt(c,84274,6)}else e[56798]=28;n=-1}q=s+16|0,(0|n)<0||P0(n)}if(!(n=xn(A,84577))){A=ka(0,e[56798],A);break e}}if((0|(s=da(A)))<0){rn(n),A=ka(0,0-s|0,A);break e}if((0|Wi(n,0))==-1){t=e[56798],rn(n),A=ka(0,t,A);break e}if(!(a=qr(e[(c=136280+(t<<4)|0)>>2],s))){rn(n),A=48;break e}if((0|xi(a,s,n))!=(0|s)){t=e[56798],rn(n),l[r+240|0]&&Hi(r+240|0),yt(a),A=ka(0,t,A);break e}rn(n),l[r+240|0]&&Hi(r+240|0),e[136276+(t<<4)>>2]=(l[a+40|0]|l[a+41|0]<<8|l[a+42|0]<<16|l[a+43|0]<<24)/2,e[c>>2]=a,A=0;break e}t=e[56798],rn(n),A=ka(0,t,A)}else A=28;return q=r+352|0,A}function xs(A,t,r,n,a,s){var o,c=0,f=0,m=0,p=0,I=0,y=0,P=0,Y=0,X=0,_=0,ce=0,he=0,ye=0,De=0;for(g[0|r]=1,o=1&s,ye=1,X=-1,_=-1,p=1,s=t;;){De=he-2|0,ce=I,P=_;e:{A:{for(;;){if(!(y=l[0|s])){_=P,I=ce;break e}if(s=s+1|0,Y=e[144464+(y<<2)>>2]){r:{if((0|(c=l[Y+11|0]))!=1){if(16&l[Y+6|0]|(0|c)!=2)break r;g[0|(I=r+p|0)]=X,c=(0|X)<4|(0|P)>(0|X),!(2&l[Y+4|0])|!o|(0|X)>=0||(g[0|I]=1),I=c?ce:p,_=c?P:X,X=-1,p=p+1|0;break A}if(!M[Y+8>>1]){c=0,m=p;a:if((0|y)!=8)c=l[Y+14|0],e[a>>2]&&c>>>0>=4||(P=(0|c)<(0|P)?P:c,X=c);else{for(;;){if(y=c,m=m-1|0,e[a>>2]|(0|m)<=0||(0|(Y=g[0|(f=r+m|0)]))>3)break a;if(c=y+1|0,!(Y>>>0<2))break}if(g[0|f]=4,ce=(0|P)<4?m:ce,P=(0|P)<=4?4:P,m>>>0<2)break a;if(Y=3&(m=~y+he|0),c=1,De-y>>>0>=3)for(y=-4&m,m=0;l[0|(f=r+c|0)]==4&&(g[0|f]=3),l[f+1|0]==4&&(g[f+1|0]=3),l[f+2|0]==4&&(g[f+2|0]=3),l[f+3|0]==4&&(g[f+3|0]=3),c=c+4|0,(0|y)!=(0|(m=m+4|0)););if(f=0,!Y)break a;for(;l[0|(y=r+c|0)]==4&&(g[0|y]=3),c=c+1|0,(0|Y)!=(0|(f=f+1|0)););}if(ye)continue;break e}}break}}_=P,I=ce,(0|y)==20&&(g[r+p|0]=o&&(0|X)<0?1:X,p=p+1|0)}if(g[0|t]=y,he=p-1|0,t=t+1|0,ye=(0|p)<99)continue}break}g[r+p|0]=1,g[0|t]=0;e:if((0|(t=e[a>>2]))>0)_=4,(0|t)>=(0|p)&&(e[a>>2]=he,t=he),g[t+r|0]=4,I=e[a>>2];else if((0|_)==5&&(_=4,!((0|p)<2))){if(s=1,P=1&(t=p-1|0),(0|p)!=2)for(ce=-2&t,m=0;;){f=4;A:{r:{a:switch(l[0|(t=(c=s)+r|0)]-4|0){case 1:break r;case 0:break a;default:break A}f=2&l[A+14|0]?1:3,c=I}g[0|t]=f,I=c}f=4;A:{r:{a:switch(l[0|(t=(c=s+1|0)+r|0)]-4|0){case 1:break r;case 0:break a;default:break A}f=2&l[A+14|0]?1:3,c=I}g[0|t]=f,I=c}if(s=s+2|0,(0|ce)==(0|(m=m+2|0)))break}if(P){f=4;A:{r:switch(l[0|(t=r+s|0)]-4|0){case 1:break A;case 0:break r;default:break e}f=2&l[A+14|0]?1:3,s=I}g[0|t]=f,I=s}}return e[a>>2]=I,e[n>>2]=p,_}function qr(A,t){var r,n,a=0,s=0,o=0,c=0,f=0,m=0,p=0,I=0,y=0;if(!A)return It(t);if(t>>>0>=4294967232)return e[56798]=48,0;r=t>>>0<11?16:t+11&-8,o=-8&(n=e[4+(c=A-8|0)>>2]);e:if(3&n){f=o+c|0;A:if(o>>>0>=r>>>0){if((s=o-r|0)>>>0<16)break A;e[c+4>>2]=1&n|r|2,e[4+(a=c+r|0)>>2]=3|s,e[f+4>>2]=1|e[f+4>>2],zr(a,s)}else if(e[57158]!=(0|f))if(e[57157]!=(0|f)){if(2&(s=e[f+4>>2])||(p=o+(-8&s)|0)>>>0<r>>>0)break e;y=p-r|0;r:if(s>>>0<=255){if(o=e[f+8>>2],a=s>>>3|0,(0|(s=e[f+12>>2]))==(0|o)){e[57152]=e[57152]&an(-2,a);break r}e[o+12>>2]=s,e[s+8>>2]=o}else{if(I=e[f+24>>2],(0|(m=e[f+12>>2]))==(0|f))if((a=e[(o=f+20|0)>>2])||(a=e[(o=f+16|0)>>2])){for(;s=o,m=a,(a=e[(o=a+20|0)>>2])||(o=m+16|0,a=e[m+16>>2]););e[s>>2]=0}else m=0;else a=e[f+8>>2],e[a+12>>2]=m,e[m+8>>2]=a;if(I){s=e[f+28>>2];a:{if(e[(a=228912+(s<<2)|0)>>2]==(0|f)){if(e[a>>2]=m,m)break a;e[57153]=e[57153]&an(-2,s);break r}if(e[(e[I+16>>2]==(0|f)?16:20)+I>>2]=m,!m)break r}e[m+24>>2]=I,(a=e[f+16>>2])&&(e[m+16>>2]=a,e[a+24>>2]=m),(a=e[f+20>>2])&&(e[m+20>>2]=a,e[a+24>>2]=m)}}y>>>0<=15?(e[c+4>>2]=1&n|p|2,e[4+(a=c+p|0)>>2]=1|e[a+4>>2]):(e[c+4>>2]=1&n|r|2,e[4+(s=c+r|0)>>2]=3|y,e[4+(a=c+p|0)>>2]=1|e[a+4>>2],zr(s,y))}else{if((s=o+e[57154]|0)>>>0<r>>>0)break e;(a=s-r|0)>>>0>=16?(e[c+4>>2]=1&n|r|2,e[4+(o=c+r|0)>>2]=1|a,e[(s=s+c|0)>>2]=a,e[s+4>>2]=-2&e[s+4>>2]):(e[c+4>>2]=s|1&n|2,e[4+(a=s+c|0)>>2]=1|e[a+4>>2],a=0,o=0),e[57157]=o,e[57154]=a}else{if((o=o+e[57155]|0)>>>0<=r>>>0)break e;e[c+4>>2]=1&n|r|2,a=o-r|0,e[4+(s=c+r|0)>>2]=1|a,e[57155]=a,e[57158]=s}a=c}else{if(r>>>0<256||o>>>0>=r+4>>>0&&(a=c,o-r>>>0<=e[57272]<<1>>>0))break e;a=0}return a?a+8|0:(c=It(t))?(xt(c,A,t>>>0>(a=(3&(a=e[A-4>>2])?-4:-8)+(-8&a)|0)>>>0?a:t),yt(A),c):0}function ca(){var A,t,r=0,n=0;return A=On(12),e[A>>2]=22050,t=On(432),e[(n=t)+4>>2]=0,e[n+8>>2]=0,e[n>>2]=132304,e[n+32>>2]=0,e[n+12>>2]=0,e[n+16>>2]=0,e[n+20>>2]=0,e[n+24>>2]=0,VA(n+40|0,0,376),e[n+420>>2]=0,e[n+424>>2]=-1,g[n+416|0]=1,r=VA(On(408),0,408),e[n+28>>2]=r,g[r+8|0]=1,e[A+4>>2]=n,r=On(1096),e[r+8>>2]=22050,e[r+4>>2]=22050,e[r>>2]=132352,e[r+64>>2]=22050,e[r+56>>2]=0,e[r+60>>2]=0,e[r+32>>2]=0,e[r+36>>2]=0,e[r+24>>2]=22050,e[r+16>>2]=0,e[r+20>>2]=0,e[r+40>>2]=0,e[r+44>>2]=0,g[r+48|0]=0,e[r+128>>2]=0,e[r+132>>2]=0,b[r+96>>1]=0,e[r+72>>2]=22050,e[r+136>>2]=0,e[r+140>>2]=0,b[r+168>>1]=0,e[r+144>>2]=22050,e[r+200>>2]=0,e[r+204>>2]=0,e[r+208>>2]=0,e[r+212>>2]=0,e[r+216>>2]=22050,b[r+240>>1]=0,e[r+280>>2]=0,e[r+284>>2]=0,e[r+272>>2]=0,e[r+276>>2]=0,e[r+288>>2]=22050,b[r+312>>1]=0,e[r+344>>2]=0,e[r+348>>2]=0,e[r+352>>2]=0,e[r+356>>2]=0,e[r+360>>2]=22050,b[r+384>>1]=0,e[r+416>>2]=0,e[r+420>>2]=0,e[r+424>>2]=0,e[r+428>>2]=0,e[r+432>>2]=22050,b[r+456>>1]=0,e[r+488>>2]=0,e[r+492>>2]=0,e[r+496>>2]=0,e[r+500>>2]=0,e[r+504>>2]=22050,b[r+528>>1]=1,e[r+560>>2]=0,e[r+564>>2]=0,e[r+568>>2]=0,e[r+572>>2]=0,b[r+600>>1]=0,e[r+576>>2]=22050,e[r+640>>2]=0,e[r+644>>2]=0,e[r+632>>2]=0,e[r+636>>2]=0,b[r+680>>1]=0,e[r+656>>2]=22050,e[r+648>>2]=22050,e[r+720>>2]=0,e[r+724>>2]=0,e[r+712>>2]=0,e[r+716>>2]=0,b[r+752>>1]=0,e[r+728>>2]=22050,e[r+792>>2]=0,e[r+796>>2]=0,e[r+784>>2]=0,e[r+788>>2]=0,b[r+824>>1]=0,e[r+800>>2]=22050,e[r+864>>2]=0,e[r+868>>2]=0,e[r+856>>2]=0,e[r+860>>2]=0,e[r+872>>2]=22050,b[r+896>>1]=0,e[r+936>>2]=0,e[r+940>>2]=0,e[r+928>>2]=0,e[r+932>>2]=0,b[r+968>>1]=0,e[r+944>>2]=22050,e[r+1008>>2]=0,e[r+1012>>2]=0,e[r+1e3>>2]=0,e[r+1004>>2]=0,b[r+1040>>1]=0,e[r+1016>>2]=22050,e[r+1088>>2]=0,e[(n=r+1080|0)>>2]=0,e[n+4>>2]=0,e[(n=r+1072|0)>>2]=0,e[n+4>>2]=0,e[A+8>>2]=r,pt[e[e[r>>2]+4>>2]](r,t),A}function Ia(A,t,r){var n=0,a=0,s=0,o=0,c=0,f=0,m=0,p=0,I=0,y=0,P=0;e:if(I=e[50759]){if(n=e[50980],a=F(n,80)+222176|0,(0|(f=(0|(a=(0|(a=(e[a+12>>2]+e[a>>2]|0)/(0|A)|0))<(0|(p=((0|F(e[50754],19))/40<<16)/(0|A)|0))?a:p))>=399?399:a))>=0&&(VA(t,0,4+(f<<2)|0),n=e[50980]),(0|n)>=0)for(y=e[50801];;){if(s=F(o,80)+222176|0,e[s+4>>2]&&(c=e[s>>2])){if(P=c+e[s+12>>2]|0,n=1+((c-e[s+8>>2]|0)/(0|A)|0)|0,(0|c)>(0|(n=F(a=(0|n)<=1?1:n,A))))for(;e[(m=(a<<2)+t|0)>>2]=e[m>>2]+F(e[s+4>>2],l[((c-n|0)/(e[s+8>>2]>>8)|0)+y|0]),a=a+1|0,(0|c)>(0|(n=A+n|0)););if(!((0|n)>=(0|P)))for(;e[(m=(a<<2)+t|0)>>2]=e[m>>2]+F(e[s+4>>2],l[((n-c|0)/(e[s+12>>2]>>8)|0)+y|0]),a=a+1|0,(0|P)>(0|(n=A+n|0)););}if(!((0|(o=o+1|0))<=e[50980]))break}if(a=1,!((0|(s=65536e3/(0|A)|0))<=0||(0|(n=F(e[55565],10)))<=0))for(s=(0|n)/(0|s)|0;e[(c=(a<<2)+t|0)>>2]=e[c>>2]+n,a=a+1|0,(0|(n=n-s|0))>0;);if((0|o)<=8)for(;a=203216+(n=o<<2)|0,s=F(o,80)+222176|0,c=e[s+4>>2]>>14,e[a>>2]=(0|F(F(c,c),5))/2,r?n=e[n+203264>>2]:(c=n+203264|0,n=e[s>>2]/(0|A)|0,e[c>>2]=n),(0|n)>=(0|p)&&(e[a>>2]=0),(0|(o=o+1|0))!=9;);if(a=0,(0|f)>=0)for(n=0;s=e[(o=(n<<2)+t|0)>>2]>>15,s=F(s,s)>>8,e[o>>2]=s,(0|a)<=524287999&&(e[o>>2]=F(s,l[344+((a>>19)+I|0)|0])>>13),a=A+a|0,o=(0|n)!=(0|f),n=n+1|0,o;);if(e[t+4>>2]=(0|F(e[t+4>>2],l[203300]?6:10))/8,1&r)for(A=e[50826],n=1;;){if(e[203312+(r=n<<2)>>2]=e[t+r>>2]-e[A+r>>2]>>3,(0|(r=n+1|0))==30)break e;e[203312+(r<<=2)>>2]=e[t+r>>2]-e[A+r>>2]>>3,n=n+2|0}}else f=1;return f}function rs(A,t,r,n){var a,s=0,o=0;q=a=q-176|0,g[0|A]=0,b[a+80>>1]=24320,e[a+104>>2]=0,e[a+108>>2]=0,g[82+(Nr(r,s=a+80|2)+a|0)|0]=0;e:{A:{if(!n){if(n=a+80|1,e[a+12>>2]=n,Br(t,a+12|0,a+16|0,a+104|0,0,0)||(e[a+12>>2]=s,Br(t,a+12|0,a+16|0,a+104|0,0,0)||(g[a+81|0]=32,Kt(t,s,a+16|0,60,0,0,0))),(r=l[a+16|0])&&(0|r)!=21)break A;r:{if(e[t+212>>2]!=25966){if(Ei(85719,188772,189296),g[a+81|0]=95,e[a+12>>2]=n,Br(e[47193],a+12|0,a+16|0,a+104|0,0,0)||(e[a+12>>2]=s,Br(e[47193],a+12|0,a+16|0,a+104|0,0,0)),l[a+16|0])break r;Cn(e[e[32972]+60>>2]),r=l[a+16|0]}if(255&r)break A;t=l[87124]|l[87125]<<8|l[87126]<<16|l[87127]<<24,r=l[87120]|l[87121]<<8|l[87122]<<16|l[87123]<<24,g[0|A]=r,g[A+1|0]=r>>>8,g[A+2|0]=r>>>16,g[A+3|0]=r>>>24,g[A+4|0]=t,g[A+5|0]=t>>>8,g[A+6|0]=t>>>16,g[A+7|0]=t>>>24,g[A+16|0]=l[87136],t=l[87132]|l[87133]<<8|l[87134]<<16|l[87135]<<24,r=l[87128]|l[87129]<<8|l[87130]<<16|l[87131]<<24,g[A+8|0]=r,g[A+9|0]=r>>>8,g[A+10|0]=r>>>16,g[A+11|0]=r>>>24,g[A+12|0]=t,g[A+13|0]=t>>>8,g[A+14|0]=t>>>16,g[A+15|0]=t>>>24;break e}n=a+16|0,s=a+104|0,q=r=q-112|0,(o=e[47193])?(Ar(o,n,s,-1,0),$A(s=n,n=r+48|0),t=e[t+212>>2],g[r+43|0]=t>>>24,g[0|(o=(s=r+43|0)+(t>>>0>16777215)|0)]=t>>>16,g[0|(o=o+!!(16711680&t)|0)]=t>>>8,g[0|(o=o+!!(65280&t)|0)]=t,g[o+!!(255&t)|0]=0,e[r+16>>2]=85719,e[r+24>>2]=s,e[r+20>>2]=n,QA(A,85662,r+16|0)):(Ar(t,n,s,-1,0),$A(n,t=r+48|0),e[r>>2]=t,QA(A,85451,r)),q=r+112|0,Cn(e[e[32972]+60>>2]);break e}if(e[a+12>>2]=s,Br(t,a+12|0,a+16|0,a+104|0,0,0),!l[a+16|0])break e}Ar(r=t,t=a+16|0,a+104|0,-1,0),$A(r=t,t=a+112|0),e[a>>2]=t,QA(A,85451,a)}return q=a+176|0,A}function ea(A,t){var r,n=0,a=0,s=0,o=0,c=0,f=0,m=0,p=0,I=0,y=0,P=0,Y=0,X=0,_=0,ce=0,he=0,ye=0,De=0;if(q=r=q-112|0,e[r+72>>2]=-1,e[(n=r- -64|0)>>2]=-1,e[n+4>>2]=-1,e[r+56>>2]=-1,e[r+60>>2]=-1,e[r+48>>2]=-1,e[r+52>>2]=-1,e[r+40>>2]=-1,e[r+44>>2]=-1,e[r+32>>2]=-1,e[r+36>>2]=-1,e[r+24>>2]=-1,e[r+28>>2]=-1,e[r+16>>2]=-1,e[r+20>>2]=-1,(0|t)>0){for(s=e[r+72>>2],o=e[r+68>>2],c=e[r+64>>2],f=e[r+60>>2],m=e[r+56>>2],p=e[r+52>>2],I=e[r+48>>2],y=e[r+44>>2],P=e[r+40>>2],Y=e[r+36>>2],X=e[r+32>>2],_=e[r+28>>2],ce=e[r+24>>2],he=e[r+20>>2],ye=e[r+16>>2];a=s,s=(0|(s=e[60+(n=134912+(De<<6)|0)>>2]))<0?a:s,a=o,o=(0|(o=e[n+56>>2]))<0?a:o,a=c,c=(0|(c=e[n+52>>2]))<0?a:c,a=f,f=(0|(f=e[n+48>>2]))<0?a:f,a=m,m=(0|(m=e[n+44>>2]))<0?a:m,a=p,p=(0|(p=e[n+40>>2]))<0?a:p,a=I,I=(0|(I=e[n+36>>2]))<0?a:I,a=y,y=(0|(y=e[n+32>>2]))<0?a:y,a=P,P=(0|(P=e[n+28>>2]))<0?a:P,a=Y,Y=(0|(Y=e[n+24>>2]))<0?a:Y,a=X,X=(0|(X=e[n+20>>2]))<0?a:X,a=_,_=(0|(_=e[n+16>>2]))<0?a:_,a=ce,ce=(0|(ce=e[n+12>>2]))<0?a:ce,a=he,he=(0|(he=e[n+8>>2]))<0?a:he,ye=(0|(n=e[n+4>>2]))<0?ye:n,(0|(De=De+1|0))!=(0|t););e[r+72>>2]=s,e[r+68>>2]=o,e[r+64>>2]=c,e[r+60>>2]=f,e[r+56>>2]=m,e[r+52>>2]=p,e[r+48>>2]=I,e[r+44>>2]=y,e[r+40>>2]=P,e[r+36>>2]=Y,e[r+32>>2]=X,e[r+28>>2]=_,e[r+24>>2]=ce,e[r+20>>2]=he,e[r+16>>2]=ye}for(t=0;;){if((0|(n=e[(s=t<<2)+(r+16|0)>>2]))!=e[(s=s+134848|0)>>2]){g[r+80|0]=0;e:{A:switch(t-1|0){case 4:e[47201]=n-1;break e;case 5:e[47200]=n;break e;case 0:case 1:case 2:case 3:case 11:break A;default:break e}e[r+4>>2]=n,e[r>>2]=1,e[r+8>>2]=g[t+102812|0],QA(r+80|0,91942,r)}e[s>>2]=n,n=r+80|0,JA(e[A>>2]+189424|0,n),e[A>>2]=e[A>>2]+RA(n)}if((0|(t=t+1|0))==15)break}q=r+112|0}function Ma(A){var t,r,n,a=0,s=0,o=0,c=0;for(a=17,e[A+328>>2]=17,e[A+224>>2]=0,e[A+216>>2]=1105,e[A+220>>2]=1072,e[A+600>>2]=1056,e[A+8180>>2]=105296,o=VA(A+344|0,0,256),g[A+393|0]=1,g[A+365|0]=1,g[A+360|0]=1,g[A+545|0]=1,g[A+529|0]=1,g[A+391|0]=1,g[A+379|0]=1,g[A+374|0]=1,g[A+489|0]=1,g[A+487|0]=1,g[A+398|0]=1,g[A+387|0]=1,g[A+388|0]=2,g[A+389|0]=1,g[A+390|0]=1,g[A+385|0]=2,g[A+383|0]=2,g[A+368|0]=1,g[A+369|0]=2,s=104224;g[0|(a=a+o|0)]=4|l[0|a],a=o+l[s+1|0]|0,g[0|a]=4|l[0|a],a=o+l[s+2|0]|0,g[0|a]=4|l[0|a],a=l[0|(s=s+3|0)],(0|s)!=104251;);g[A+386|0]=8|l[A+386|0],g[A+382|0]=8|l[A+382|0],g[A+384|0]=8|l[A+384|0],g[A+369|0]=16|l[A+369|0],g[A+370|0]=16|l[A+370|0],g[A+371|0]=16|l[A+371|0],s=l[A+361|0],o=l[A+362|0],a=l[A+363|0],c=l[A+364|0],t=l[A+366|0],r=l[A+367|0],g[A+372|0]=16|l[A+372|0],g[A+373|0]=16|l[A+373|0],g[A+375|0]=16|l[A+375|0],g[A+376|0]=16|l[A+376|0],g[A+377|0]=16|l[A+377|0],g[A+378|0]=16|l[A+378|0],g[A+380|0]=16|l[A+380|0],g[A+381|0]=16|l[A+381|0],g[A+383|0]=16|l[A+383|0],g[A+385|0]=16|l[A+385|0],n=l[A+388|0],g[A+367|0]=48|r,g[A+366|0]=40|t,g[A+364|0]=48|c,g[A+363|0]=48|a,g[A+362|0]=48|o,g[A+361|0]=48|s,g[A+388|0]=80|n,s=l[A+390|0],o=l[A+391|0],a=l[A+393|0],g[A+360|0]=128|l[A+360|0],c=l[A+365|0],g[A+393|0]=192|a,g[A+365|0]=128|c,g[A+368|0]=128|l[A+368|0],g[A+374|0]=128|l[A+374|0],g[A+379|0]=128|l[A+379|0],g[A+387|0]=128|l[A+387|0],a=l[A+389|0],g[A+391|0]=192|o,g[A+390|0]=192|s,g[A+389|0]=128|a,g[A+529|0]=128|l[A+529|0],g[A+545|0]=128|l[A+545|0],g[A+489|0]=128|l[A+489|0],g[A+487|0]=128|l[A+487|0],g[A+398|0]=128|l[A+398|0]}function Br(A,t,r,n,a,s){var o,c=0,f=0,m=0,p=0,I=0,y=0;q=o=q-192|0,c=I=e[t>>2];e:{A:{for(;f=1,(0|(m=g[0|c]))>=0||(f=2,m>>>0<4294967264||(f=m>>>0<4294967280?3:4)),!(l[0|(m=f+c|0)]!=32|l[m+1|0]!=46);){if(p-160>>>0<4294967135)break A;xt((y=o+32|0)+p|0,c,f),g[(f=f+p|0)+y|0]=46,c=m+3|0,p=f+1|0}if(p){for(f=0;m=f,f=f+1|0,223&l[c+m|0];);if(!(1+(y=m+p|0)>>>0>160)&&(xt((f=o+32|0)+p|0,c,m),g[f+y|0]=0,Jn(A,f,c,r,n,a,s))){e[n>>2]=128|e[n>>2],e[33264]=p,A=1;break e}}}for(c=0;;){if(I=(f=I)+1|0,223&(f=l[0|f]))if(!c|(0|f)!=46|g[31+(c+o|0)|0]-48>>>0>=10){if(g[(o+32|0)+c|0]=f,f=159,(0|(c=c+1|0))!=159)continue}else f=c;else f=c;break}g[(c=o+32|0)+f|0]=0,c=Jn(A,c,I,r,n,a,s);A:if(8&l[n+3|0]){if(!Mr(r,m=A+268|0)){if(m=e[A+288>>2]+1|0,e[A+288>>2]=m,(0|m)<4)break A;g[0|r]=0;break A}ar(m,r,20),e[A+288>>2]=1}else e[A+288>>2]=0;A:{if(!c){if(c=0,8&l[n+5|0]&&(m=Dt(o+28|0,c=o+32|l[o+32|0]==95),rA(A,e[o+28>>2],r),c=c+m|0),!(f>>>0<2|c)){if(g[0|r]=0,!(16&a&&l[0|(c=31+(f+o|0)|0)]==101)&&(!(4096&a)||l[0|(c=(f=(o+32|0)+f|0)-1|0)]!=l[f-2|0]))break A;g[0|c]=0,c=Jn(A,o+32|0,I,r,n,a,s)}if(!c)break A}if(p=e[n>>2],l[A+172|0]&&(p^=536870912,e[n>>2]=p),A=1,!(536870912&p))break e;2&a&&(b[66448]=8192,e[o+16>>2]=r,QA(132898,87470,o+16|0),A=e[t>>2],e[t>>2]=132898,8&l[188788]&&(xt(t=o+32|0,n=A,A=c-A|0),g[A+t|0]=0,e[o+4>>2]=132898,A=e[47195],e[o>>2]=t,hr(A,87652,o)))}g[0|r]=0,A=0}return q=o+192|0,A}function Ya(A,t){var r=0,n=0,a=0;r=31&A;e:{A:{r:{if((0|(A&=96))==96)A=-1;else{if((0|A)!=64)break r;A=1}if(r>>>0>=15)break e;t=e[203136+(r<<2)>>2]+F(A,t)|0;break A}if(r>>>0>=15)break e}A=e[105616+(n=r<<2)>>2],e[n+203136>>2]=(0|t)>=0?(0|A)>(0|t)?t:A:0}e:{A:{r:{a:{s:switch(r-1|0){case 5:if(!(A=e[50759]))break A;e[54728]=e[50982],t=e[50979],r=e[50978],VA(205184,0,11e3),e[51293]=0,t=(r=(a=(0|(n=e[50789]))>0)?130:(0|r)>=5499?5499:r)?a?n:(0|t)>=100?100:t:0,e[50755]=t,r=(0|F(r,e[50754]))/1e3|0,e[51292]=r,e[54729]=(0|t)>20?r<<1:t?r:0,e[33037]=(0|F(500-t|0,(0|F(l[e[50797]+105596|0],(0|F(e[50787],55))/100|0))/16|0))/500;break a;case 0:break s;case 2:case 12:break e;case 4:break r;default:break A}if(!(A=e[50759]))break A}return t=256,(0|(r=(0|(r=e[50785]))>=101?101:r))>=51&&(t=256+(((F(r,25)-1250&65535)>>>0)/50|0)|0),b[A+164>>1]=(0|F(b[A+236>>1],t))/256,b[A+166>>1]=(0|F(b[A+238>>1],t))/256,b[A+168>>1]=(0|F(b[A+240>>1],t))/256,b[A+170>>1]=(0|F(b[A+242>>1],t))/256,b[A+172>>1]=(0|F(b[A+244>>1],t))/256,b[A+174>>1]=(0|F(b[A+246>>1],t))/256,A=e[50790],b[102e3]=(0|F(b[102036],F(A,-3)+256|0))/256,void(b[101999]=(0|F(b[102035],F(A,-6)+256|0))/256)}e[50759]&&(e[54728]=e[50982],A=e[50979],t=e[50978],VA(205184,0,11e3),e[51293]=0,A=(t=(n=(0|(r=e[50789]))>0)?130:(0|t)>=5499?5499:t)?n?r:(0|A)>=100?100:A:0,e[50755]=A,t=(0|F(t,e[50754]))/1e3|0,e[51292]=t,e[54729]=(0|A)>20?t<<1:A?t:0,e[33037]=(0|F(500-A|0,(0|F(l[e[50797]+105596|0],(0|F(e[50787],55))/100|0))/16|0))/500)}return}e[33037]=(0|F(l[e[50797]+105596|0],(0|F(e[50787],55))/100|0))/16}function Ha(A,t,r){var n=0,a=0,s=0,o=0,c=0,f=0,m=0,p=0,I=0,y=0;r&&(e[r>>2]=0);e:{A:if(!((0|(n=g[0|A]))<0)){for(;;){if((0|(s=255&n))==32|s-9>>>0<5){if((0|(n=g[0|(A=A+1|0)]))>=0)continue;break A}break}if(!(255&n))break e}for(;;){if((0|(n=f=255&n))==32|n-9>>>0<5)break e;if((0|f)!=124||(0|(n=l[0|(s=A+1|0)]))==124){A:{if((0|(I=e[36115]))>=2){for(n=1,s=-1,m=0;;){r:if(!(!(p=e[144464+(n<<2)>>2])|l[p+11|0]==15)){c=e[p>>2];a:{s:{if(f>>>0>=33){if(y=0,o=0,(255&c)==(0|f)&&(o=1,(a=l[A+1|0])>>>0<33|(0|a)!=(c>>>8&255)||(o=2,(a=l[A+2|0])>>>0<33|(0|a)!=(c>>>16&255)||(o=(a=(a=l[A+3|0])>>>0>32&(0|a)==(c>>>24|0))?4:3,y=0-a|0))),(0|s)>=(0|o))break r;if(a=4,!(1&y))break s;break a}if(o=0,(0|s)>=0)break r}if(c>>>((a=o)<<3)&255)break r}m=l[p+10|0],s=a}if((0|I)==(0|(n=n+1|0)))break}if(m)break A}return r&&Dt(r,A),void(g[0|t]=0)}g[0|t]=m,A=((0|s)<=1?1:s)+A|0,t=s=t+1|0;A:if((0|m)==21){r:if((0|(a=l[0|A]))==32|a-9>>>0<5)n=s;else if(n=s,a)for(;;){if(g[0|n]=Wt(a),n=n+1|0,(0|(a=l[0|(A=A+1|0)]))==32|a-9>>>0<5)break r;if(!a)break}if(g[0|n]=0,!a){if(t=n,Mr(s,85593))break A;return void(g[0|s]=0)}g[0|n]=124,t=n+1|0}n=l[0|A]}else A=s;if(!(255&n))break}}g[0|t]=0}function Bs(A,t){var r=0,n=0,a=0,s=0,o=0;e:{A:{r:{a:{s:switch((0|(r=e[A+4>>2]))==e[A+104>>2]?r=vA(A):(e[A+4>>2]=r+1,r=l[0|r]),r-43|0){case 0:case 2:break s;default:break a}if(s=(0|r)==45,o=!t,(0|(r=e[A+4>>2]))==e[A+104>>2]?r=vA(A):(e[A+4>>2]=r+1,r=l[0|r]),o|(t=r-58|0)>>>0>4294967285)break r;if(e[A+116>>2]<0)break A;e[A+4>>2]=e[A+4>>2]-1;break A}t=r-58|0}if(!(t>>>0<4294967286)){if((t=r-48|0)>>>0<10){for(;a=(0|(n=(n=F(n,10)+r|0)-48|0))<214748364,(0|(t=e[A+4>>2]))==e[A+104>>2]?r=vA(A):(e[A+4>>2]=t+1,r=l[0|t]),a&(t=r-48|0)>>>0<=9;);a=n>>31}r:if(!(t>>>0>=10))for(;;){if(t=(n=kt(n,a,10,0))+r|0,r=J,r=t>>>0<n>>>0?r+1|0:r,n=t-48|0,a=r-(t>>>0<48)|0,(0|(t=e[A+4>>2]))==e[A+104>>2]?r=vA(A):(e[A+4>>2]=t+1,r=l[0|t]),(t=r-48|0)>>>0>9)break r;if(!(n>>>0<2061584302&(0|a)<=21474836|(0|a)<21474836))break}if(t>>>0<10)for(;(0|(t=e[A+4>>2]))==e[A+104>>2]?t=vA(A):(e[A+4>>2]=t+1,t=l[0|t]),t-48>>>0<10;);(0|(t=e[A+116>>2]))>0|(0|t)>=0&&(e[A+4>>2]=e[A+4>>2]-1),A=n,n=s?0-A|0:A,a=s?0-(!!(0|A)+a|0)|0:a;break e}}if(a=-2147483648,!(e[A+116>>2]<0))return e[A+4>>2]=e[A+4>>2]-1,J=-2147483648,0}return J=a,n}function Ra(A){var t=0,r=0,n=0,a=0;if(e[36432]=110,e[36433]=100,e[36434]=450,e[36430]=5,t=e[203136+((0|A)==2?32:8)>>2],n=e[32972],(0|(r=e[n+84>>2]))>0&&(t=(0|F(t,r))/100|0),r=(0|t)>=359?359:t,r=(0|(t=(0|t)>=450?450:t))>399?6:(0|t)>379?7:l[((0|r)<=80?80:r)+101856|0],1&A&&(e[32526]=(0|F(r,e[n+72>>2]))/256,e[32527]=(0|F(r,e[n+76>>2]))/256,e[32528]=(0|F(r,e[n+80>>2]))/256,r>>>0>7||(a=r-1|0,e[32528]=a,e[32526]=r,e[32527]=a)),2&A){A=e[n+72>>2];e:{A:{r:{a:{s:{c:{o:{u:{if((0|t)>=351)n=t-350|0,e[36432]=85-(((255&n)>>>0)/3|0)&255,n=60-(n>>>3|0)|0;else{if((0|t)<251)break u;n=t-250|0,e[36432]=110-(n>>>2|0),n=110-(n>>>1|0)|0}if(e[36433]=n,A=(0|F(A,r))/256|0,e[36431]=110+((0|F(A,150))/128|0),t>>>0<=349)break o;if(r=t-350|0,e[36431]=l[r+102224|0],t>>>0<390)break s;if(e[36434]=450+((t+112<<24>>24)/-2<<24>>24),t>>>0<441)break c;e[36434]=860-t,A=12;break A}A=(0|F(A,r))/256|0,e[36431]=(0|t)>=170?110+((0|F(A,150))/128|0)|0:128+((A<<7)/130|0)|0}A=(A<<8)/115|0;break A}if(A=12,t>>>0>430)break A;if(A=13,t>>>0<=400)break a;break A}if(A=(A<<8)/115|0,e[36428]=A,t>>>0<375)break r}A=14;break A}if((0|t)<351)break e;A=l[r+102336|0]}e[36428]=A}e[36429]=(0|A)<=16?16:A}}function Ga(A,t,r){var n,a,s,o;n=.000244140625*+e[50767],D[r>>3]=n,D[r+40>>3]=.015625*+e[A+112>>2],D[r+48>>3]=.015625*+e[A+276>>2],D[r+56>>3]=.00390625*+(0|F(b[A+166>>1],b[t+4>>1]))+ +b[A+220>>1],D[r+64>>3]=.00390625*+(0|F(b[A+168>>1],b[t+6>>1]))+ +b[A+222>>1],D[r+72>>3]=.00390625*+(0|F(b[A+170>>1],b[t+8>>1]))+ +b[A+224>>1],D[r+80>>3]=.00390625*+(0|F(b[A+172>>1],b[t+10>>1]))+ +b[A+226>>1],D[r+88>>3]=.00390625*+(0|F(b[A+174>>1],b[t+12>>1]))+ +b[A+228>>1],a=b[A+230>>1],s=b[A+176>>1],o=b[t+14>>1],e[r+112>>2]=0,e[r+116>>2]=1080623104,e[r+104>>2]=0,e[r+108>>2]=1081032704,D[r+96>>3]=.00390625*+(0|F(s,o))+ +(0|a),l[t+40|0]?(e[r+184>>2]=0,e[r+188>>2]=1072693248,D[r+104>>3]=l[t+40|0]<<1):(e[r+184>>2]=0,e[r+188>>2]=0),D[r+120>>3]=.00390625*+b[A+202>>1]*+(l[t+35|0]<<1),D[r+128>>3]=.00390625*+b[A+204>>1]*+(l[t+36|0]<<1),D[r+136>>3]=.00390625*+b[A+206>>1]*+(l[t+37|0]<<1),t=l[t+38|0],A=b[A+208>>1],e[r+176>>2]=0,e[r+180>>2]=1079574528,e[r+160>>2]=0,e[r+164>>2]=1083129856,e[r+152>>2]=0,e[r+156>>2]=1083129856,e[r+352>>2]=0,e[r+356>>2]=1072693248,e[r+168>>2]=0,e[r+172>>2]=1079574528,D[r+144>>3]=.00390625*+(0|A)*+(t<<1),A=e[50779],D[r+368>>3]=n,D[r+360>>3]=+(0|A)/100*3}function Wa(A){var t=0;Te(A,jn(A));e:{A:{r:{a:{s:{c:{o:{u:{l:{i:{if((0|(A=-1048576&J))<268435455|(0|A)<=268435455){p:{C:{if((0|A)<33554431|(0|A)<=33554431){if((0|A)<8388607|(0|A)<=8388607){if(t=524328,!0&(0|A)==-2147483648)break e;if(0|(0|A)!=-2143289344)break A;return 557096}if(!0&(0|A)==8388608)break C;if(0|(0|A)!=16777216)break A;return 524358}if((0|A)>71303167)break p;if(!0&(0|A)==33554432)break r;if(0|(0|A)!=67108864)break A}return 266270}if(!0&(0|A)==71303168)break i;if(!0&(0|A)==134217728)break a;if(0|(0|A)!=138412032)break A;return 294942}if((0|A)<542113791|(0|A)<=542113791){if((0|A)<536870911|(0|A)<=536870911){if(!0&(0|A)==268435456)break s;if(0|(0|A)!=272629760)break A;return 299028}if(!0&(0|A)==536870912)break o;if(!0&(0|A)==538968064)break c;if(0|(0|A)!=541065216)break A;return 569389}if((0|A)<1075838975|(0|A)<=1075838975){if(!0&(0|A)==542113792)break i;if(0|(0|A)!=1073741824)break A;return 532520}if(!0&(0|A)==1075838976)break u;if(!0&(0|A)==1077936128)break l;if(0|(0|A)!=1078984704)break A}return 299038}return 565288}return 1581096}return 536621}return 1585197}return 266260}return 262174}return 2396190}t=16384}return t}function Da(A,t,r,n,a,s){var o,c,f=0,m=0,p=0,I=0;if(c=8388607&A,m=e[34456],f=l[0|(A=c+m|0)]|l[A+1|0]<<8){o=!(p=l[A+2|0]),A=e[36434]<<o,(0|r)<=0?r=f:(r=(0|F(e[50754],r))/1e3<<o,A=(0|A)<(0|(I=(0|F(r,A))/(0|f)|0))?I:A),a=(0|a)>0?(0|F(r,a))/256|0:r,r=(0|F(a,e[36431]))/256|0,r=(0|A)<(0|(r=(4&n)>>>2|0&&(0|r)>(0|a)?a:r))?r:A,p||(f=f>>>1|0,r=(0|r)/2|0);e:if(!((0|s)<0)){if(n=c+4|0,256&t)A=e[50758],e[36439]=A,e[(t=216192+(A<<4)|0)>>2]=7,e[t+8>>2]=n+m,e[t+4>>2]=f<<16|r,s=p|s<<8;else{if(A=e[50758],e[36439]=A,e[(A=216192+(A<<4)|0)>>2]=6,s=p|s<<8,e[A+12>>2]=s,e[A+8>>2]=n+m,m=A,A=F(t=f>>>2|0,3),a=(0|r)>(0|f),e[m+4>>2]=a?A:r,m=e[50758]+1|0,e[50758]=(0|m)<=169?m:0,(0|A)<(0|(r=a?r-A|0:0)))for(a=t<<1,p=n+(p?t:a)|0;t=e[50758],e[36439]=t,e[(t=216192+(t<<4)|0)>>2]=6,e[t+4>>2]=a,e[t+12>>2]=s,e[t+8>>2]=p+e[34456],t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0,(0|A)<(0|(r=r-a|0)););if((0|r)<=0)break e;A=e[50758],e[36439]=A,e[(t=216192+(A<<4)|0)>>2]=6,e[t+4>>2]=r,e[t+8>>2]=e[34456]+(n+(f-r<<o)|0)}e[12+(216192+(A<<4)|0)>>2]=s,A=e[50758]+1|0,e[50758]=(0|A)<=169?A:0}}}function xt(A,t,r){var n,a=0,s=0;if(r>>>0>=512)return cA(0|A,0|t,0|r),A;n=A+r|0;e:if(3&(A^t))if(n>>>0<4)r=A;else if((a=n-4|0)>>>0<A>>>0)r=A;else for(r=A;g[0|r]=l[0|t],g[r+1|0]=l[t+1|0],g[r+2|0]=l[t+2|0],g[r+3|0]=l[t+3|0],t=t+4|0,a>>>0>=(r=r+4|0)>>>0;);else{A:if(3&A)if(r)for(r=A;;){if(g[0|r]=l[0|t],t=t+1|0,!(3&(r=r+1|0)))break A;if(!(r>>>0<n>>>0))break}else r=A;else r=A;if(!((a=-4&n)>>>0<64||(s=a+-64|0)>>>0<r>>>0))for(;e[r>>2]=e[t>>2],e[r+4>>2]=e[t+4>>2],e[r+8>>2]=e[t+8>>2],e[r+12>>2]=e[t+12>>2],e[r+16>>2]=e[t+16>>2],e[r+20>>2]=e[t+20>>2],e[r+24>>2]=e[t+24>>2],e[r+28>>2]=e[t+28>>2],e[r+32>>2]=e[t+32>>2],e[r+36>>2]=e[t+36>>2],e[r+40>>2]=e[t+40>>2],e[r+44>>2]=e[t+44>>2],e[r+48>>2]=e[t+48>>2],e[r+52>>2]=e[t+52>>2],e[r+56>>2]=e[t+56>>2],e[r+60>>2]=e[t+60>>2],t=t- -64|0,s>>>0>=(r=r- -64|0)>>>0;);if(r>>>0>=a>>>0)break e;for(;e[r>>2]=e[t>>2],t=t+4|0,a>>>0>(r=r+4|0)>>>0;);}if(r>>>0<n>>>0)for(;g[0|r]=l[0|t],t=t+1|0,(0|n)!=(0|(r=r+1|0)););return A}function Ft(A){var t=0,r=0,n=0,a=0,s=0,o=0,c=0,f=0;me(+A),t=0|K(1),K(0);e:{if((n=(t=t>>>20&2047)-969|0)>>>0<63)f=t;else{if((0|n)<0)return A+1;if(!(t>>>0<1033)){if(me(+A),n=0|K(1),r=0,!(0|K(0))&(0|n)==-1048576)break e;return t>>>0>=2047?A+1:(0|n)<0?(D[8+(t=q-16|0)>>3]=12882297539194267e-247,12882297539194267e-247*D[t+8>>3]):(D[8+(t=q-16|0)>>3]=3105036184601418e216,3105036184601418e216*D[t+8>>3])}}if(r=D[14409],s=(r=(A=(r=(a=D[14408]*A+r)-r)*D[14411]+(r*D[14410]+A))*A)*r*(A*D[14415]+D[14414]),r*=A*D[14413]+D[14412],me(+a),K(1),c=0|K(0),A=s+(r+(D[115376+(n=c<<4&2032)>>3]+A)),o=e[(n=n+115384|0)>>2],t=(c<<13)+(t=e[n+4>>2])|0,t=(n=(n=o)+(o=0)|0)>>>0<o>>>0?t+1|0:t,!f)return-2147483648&c?(V(0,0|n),V(1,t+1071644672|0),(A=(a=(r=+Ae())*A)+r)<1&&(e[8+(t=q-16|0)>>2]=0,e[t+12>>2]=1048576,D[t+8>>3]=22250738585072014e-324*D[t+8>>3],A=(A=(s=A+1)+(a+(r-A)+(A+(1-s)))+-1)==0?0:A),A*=22250738585072014e-324):(V(0,0|n),V(1,t-1058013184|0),A=5486124068793689e288*((r=+Ae())*A+r)),A;V(0,0|n),V(1,0|t),r=(r=+Ae())*A+r}return r}function xn(A,t){var r,n=0,a=0,s=0,o=0;q=r=q-16|0;e:{if(ra(84270,g[0|t])){if(a=2,ra(t,43)||(a=l[0|t]!=114),a=ra(t,120)?128|a:a,s=a=ra(t,101)?524288|a:a,o=64|a,s=(0|(a=l[0|t]))==114?s:o,s=(0|a)==119?512|s:s,e[r>>2]=438,e[r+4>>2]=0,(A=0|ze(-100,0|A,32768|((0|a)==97?1024|s:s),0|r))>>>0>=4294963201&&(e[56798]=0-A,A=-1),(0|A)<0)break e;q=a=q-32|0;A:{r:{if(ra(84270,g[0|t])){if(n=It(1176))break r}else e[56798]=28;t=0;break A}VA(n,0,144),ra(t,43)||(e[n>>2]=l[0|t]==114?8:4),l[0|t]==97?(1024&(t=0|ke(0|A,3,0))||(t|=1024,e[a+16>>2]=t,e[a+20>>2]=t>>31,ke(0|A,4,a+16|0)),t=128|e[n>>2],e[n>>2]=t):t=e[n>>2],e[n+80>>2]=-1,e[n+48>>2]=1024,e[n+60>>2]=A,e[n+44>>2]=n+152,8&t||(e[a>>2]=a+24,e[a+4>>2]=0,0|xA(0|A,21523,0|a)||(e[n+80>>2]=10)),e[n+40>>2]=10,e[n+36>>2]=11,e[n+32>>2]=12,e[n+12>>2]=13,l[227205]||(e[n+76>>2]=-1),e[n+56>>2]=e[56816],(t=e[56816])&&(e[t+52>>2]=n),e[56816]=n,t=n}if(q=a+32|0,n=t)break e;DA(0|A)}else e[56798]=28;n=0}return q=r+16|0,n}function ns(A,t,r){var n,a=0,s=0,o=0,c=0,f=0;if(o=A,q=n=q-208|0,e[n+8>>2]=1,e[n+12>>2]=0,c=t<<2){for(e[n+16>>2]=4,e[n+20>>2]=4,t=4,a=4,s=2;A=t,t=(a+4|0)+t|0,e[(n+16|0)+(s<<2)>>2]=t,s=s+1|0,a=A,t>>>0<c>>>0;);if((A=(o+c|0)-4|0)>>>0<=o>>>0)s=0,t=1,A=0;else{for(s=1,t=1;3&~s?(ue[(n+16|0)+((a=t-1|0)<<2)>>2]>=A-o>>>0?Fr(o,r,n+8|0,t,0,n+16|0):yi(o,r,t,n+16|0),(0|t)!=1?(_s(n+8|0,a),t=1):(_s(n+8|0,1),t=0)):(yi(o,r,t,n+16|0),Ds(n+8|0,2),t=t+2|0),s=1|(a=e[n+8>>2]),e[n+8>>2]=s,A>>>0>(o=o+4|0)>>>0;);s=a>>>0>1,A=e[n+12>>2]!=0}if(Fr(o,r,n+8|0,t,0,n+16|0),s|(0|t)!=1|A)for(;(0|t)<=1?(Ds(a=n+8|0,A=Si(a)),s=e[n+8>>2],A=A+t|0):(_s(a=n+8|0,2),e[n+8>>2]=7^e[n+8>>2],Ds(a,1),Fr((f=o-4|0)-e[(c=n+16|0)+((A=t-2|0)<<2)>>2]|0,r,a,t-1|0,1,c),_s(a,1),s=1|e[n+8>>2],e[n+8>>2]=s,Fr(f,r,a,A,1,c)),t=A,o=o-4|0,e[n+12>>2]|(0|t)!=1|(0|s)!=1;);}q=n+208|0}function Qa(A,t,r,n){var a,s=0,o=0,c=0;q=a=q-32|0,c=s=2147483647&n,o=s-1006698496|0;e:if(0|(s=s-1140785152|0)>>>0>o>>>0){if(s=r<<4|t>>>28,r=n<<4|r>>>28,(0|(t&=268435455))==134217728&!!(0|A)|t>>>0>134217728){o=r+1073741824|0,o=(s=s+1|0)?o:o+1|0;break e}if(o=r+1073741824|0,A|(0|t)!=134217728)break e;o=(A=1&s)>>>0>(s=A+s|0)>>>0?o+1|0:o}else(!r&(0|c)==2147418112?!(A|t):c>>>0<2147418112)?(s=0,o=2146435072,c>>>0>1140785151||(o=0,(c=c>>>16|0)>>>0<15249||(An(a+16|0,A,t,r,s=65535&n|65536,c-15233|0),Hn(a,A,t,r,s,15361-c|0),s=(t=e[a+8>>2])<<4,t=e[a+12>>2]<<4|t>>>28,r=e[a>>2],c=o=e[a+4>>2],s|=o>>>28,o=t,(0|(A=268435455&c))==134217728&!!(0|(t=r|!!(e[a+16>>2]|e[a+24>>2]|e[a+20>>2]|e[a+28>>2])))|A>>>0>134217728?o=(s=s+1|0)?o:o+1|0:t|(0|A)!=134217728||(o=(A=s)>>>0>(s=s+(1&s)|0)>>>0?o+1|0:o)))):(s=r<<4|t>>>28,o=524287&(A=n<<4|r>>>28)|2146959360);return q=a+32|0,V(0,0|s),V(1,-2147483648&n|o),+Ae()}function Va(A){var t,r=0,n=0,a=0,s=0,o=0;if(me(+A),o=0|K(1),a=0|K(0),(0|(s=o>>>20&2047))==2047)return(A*=1)/A;if(!(n=a<<1)&(0|(r=o<<1|a>>>31))==2145386496|r>>>0<2145386496)return!n&(0|r)==2145386496?0*A:A;if(s)r=1048575&o|1048576;else{if(s=0,n=a<<12,(0|(r=o<<12|a>>>20))>0|(0|r)>=0)for(;s=s-1|0,r=r<<1|n>>>31,n<<=1,(0|r)>0|(0|r)>=0;);n=31&(r=1-s|0),(63&r)>>>0>=32?(r=a<<n,a=0):(r=(1<<n)-1&a>>>32-n|o<<n,a<<=n)}if(n=a,(0|s)>1023){for(;;){if(!((0|(a=r+-1048576|0))<0||(r=a)|n))return 0*A;if(r=r<<1|n>>>31,n<<=1,!((0|(s=s-1|0))>1023))break}s=1023}if(!((0|(a=r+-1048576|0))<0||(r=a)|n))return 0*A;if((0|r)==1048575|r>>>0<1048575)for(;s=s-1|0,a=r>>>0<524288,r=r<<1|n>>>31,n<<=1,a;);return t=-2147483648&o,(0|s)>0?r=r+-1048576|s<<20:(a=1-s|0,o=r,s=n,n=31&a,(63&a)>>>0>=32?(r=0,n=o>>>n|0):(r=o>>>n|0,n=((1<<n)-1&o)<<32-n|s>>>n)),V(0,0|n),V(1,r|t),+Ae()}function ga(A,t,r,n,a){var s,o=0,c=0;q=s=q-160|0;e:{A:{r:{a:switch((o=l[t+10|0])-15|0){case 6:break r;case 0:break a;default:break A}g[0|A]=0;break e}e[s>>2]=F(l[r+7|0],44)+137856,QA(A,86002,s),A=RA(A)+A|0;break e}if(n){if(g[s+140|0]=0,r?$t(0,0,r,s+8|0,0):Us(o,s+8|0),r=s+140|0,o=l[s+140|0]){if((0|o)==32){g[0|A]=0;break e}224&(o=o<<24>>24)||(a&&(e[a>>2]=o),r=s+141|0)}if(!((0|(a=RA(r)))<=0)){A=JA(A,r)+a|0,g[0|A]=0;break e}}a=0;A:if(!(!(r=255&(o=e[t>>2]))|(0|r)==47)){if(n){if((0|(c=255&o))==95)break A;r:{a:{if((0|c)==35){if(c=3,l[t+11|0]!=2)break a;break A}if((c=r-32|0)>>>0>95)break r}r=M[93952+(c<<1)>>1]}a=Nr(r,A)}else g[0|A]=o,a=1;for(;;){if(!(r=255&(o>>=8))|(0|r)==47)break A;if(n){if((0|r)==35&l[t+11|0]==2)break A;if(r-48>>>0<10)continue;(c=r-32|0)>>>0<=95&&(r=M[93952+(c<<1)>>1]),a=Nr(r,A+a|0)+a|0}else g[A+a|0]=o,a=a+1|0}}g[0|(A=A+a|0)]=0}return q=s+160|0,A}function Ta(A){var t,r=0;t=A,r=131280;e:{A:{if(!((0|A)<=1023||(r=131300,A>>>0<1328||(r=131320,A>>>0<1424||(r=131340,A>>>0<1536||(r=131360,A>>>0<1792||(r=131380,A>>>0<1872||(r=131400,A>>>0<2432||(r=131420,A>>>0<2560||(r=131440,A>>>0<2688||(r=131460,A>>>0<2816||(r=131480,A>>>0<2944||(r=131500,A>>>0<3072||(r=131520,A>>>0<3200||(r=131540,A>>>0<3328||(r=131560,A>>>0<3456||(r=131580,A>>>0<3584||(r=131600,A>>>0<3712||(r=131620,A>>>0<3840||(r=131640,A>>>0<4096||(r=131660,A>>>0<4256||(r=131680,A>>>0<4352||(r=131700,A>>>0<4608||(r=131720,A>>>0<5024||(r=131740,A>>>0<10496||(r=131760,A>>>0<12544||(r=131780,A>>>0<40960))))))))))))))))))))))))))){if(A>>>0>=55296)break A;r=131800}if((0|t)>=M[(A=r)+8>>1])break e}A=0}return A}function rA(A,t,r){var n,a=0,s=0,o=0,c=0;q=n=q-208|0,g[n+80|0]=0;e:{if((a=t-224|0)>>>0<=158)t=101072+(a<<1)|0;else{if((t=t-592|0)>>>0>88)break e;t=101392+(t<<1)|0}if(t=M[t>>1]){if(o=t<<16>>16,c=(a=63&t)>>>0>37?a+59|0:b[101584+(a<<1)>>1],a=t>>>6|0,(0|o)<0)a=59+(63&a)|0,t=t>>>12&7;else{if(!(s=31&a))break e;a=0,t=t>>>11&15}(s=UA(A,e[129920+(s<<3)>>2],n+112|0))&&v0(A,c,n+176|0)&&(t&&4096&UA(A,e[129920+(t<<3)>>2],n+80|0)&&(r=RA(t=JA(r,n+80|0)),g[n+80|0]=0,r=t+r|0),a?(v0(t=A,a,A=n+144|0),e[n+68>>2]=n+80,e[n- -64>>2]=A,e[n+60>>2]=6,e[n+52>>2]=23,e[n+56>>2]=n+176,e[n+48>>2]=n+112,QA(r,84101,n+48|0)):(0|o)<0?JA(r,n+176|0):1&e[A+144>>2]|4096&s?(e[n+36>>2]=23,e[n+40>>2]=6,e[n+44>>2]=n+176,e[n+32>>2]=n+112,QA(r,84430,n+32|0)):(e[n+16>>2]=23,e[n+8>>2]=23,e[n>>2]=4,e[n+12>>2]=n+112,e[n+4>>2]=n+176,QA(r,84802,n)))}}q=n+208|0}function re(){qs(),e[55928]=0,e[55926]=0,e[55927]=0,e[55924]=0,e[56244]=0,e[56245]=0,e[56246]=0,e[56247]=0,e[56260]=0,e[56261]=0,e[56262]=0,e[56263]=0,e[56276]=0,e[56277]=0,e[56278]=0,e[56279]=0,e[55974]=0,e[55975]=0,e[55972]=0,e[55973]=0,e[55988]=0,e[55989]=0,e[55990]=0,e[55991]=0,e[56004]=0,e[56005]=0,e[56006]=0,e[56007]=0,e[56020]=0,e[56021]=0,e[56022]=0,e[56023]=0,e[56036]=0,e[56037]=0,e[56038]=0,e[56039]=0,e[56052]=0,e[56053]=0,e[56054]=0,e[56055]=0,e[56068]=0,e[56069]=0,e[56070]=0,e[56071]=0,e[56086]=0,e[56087]=0,e[56084]=0,e[56085]=0,e[56102]=0,e[56103]=0,e[56100]=0,e[56101]=0,e[56118]=0,e[56119]=0,e[56116]=0,e[56117]=0,e[56134]=0,e[56135]=0,e[56132]=0,e[56133]=0,e[56150]=0,e[56151]=0,e[56148]=0,e[56149]=0,e[56166]=0,e[56167]=0,e[56164]=0,e[56165]=0,e[56182]=0,e[56183]=0,e[56180]=0,e[56181]=0,e[56198]=0,e[56199]=0,e[56196]=0,e[56197]=0,e[56214]=0,e[56215]=0,e[56212]=0,e[56213]=0,e[56230]=0,e[56231]=0,e[56228]=0,e[56229]=0}function xe(A,t){var r=0,n=0,a=0,s=0,o=0,c=0,f=0,m=0,p=0,I=0;e:{if((0|(s=e[A+4>>2]))==e[A>>2])if((o=e[A+8>>2])>>>0<(r=e[A+12>>2])>>>0)r=(a=(1+(r-o>>2)|0)/2<<2)+o|0,(0|s)!=(0|o)&&(Bt(r=r-(n=o-s|0)|0,s,n),s=e[A+8>>2]),e[A+4>>2]=r,e[A+8>>2]=a+s;else{if((n=(0|r)==(0|s)?1:r-s>>1)>>>0>=1073741824)break e;if(p=(f=On(r=n<<2))+r|0,c=r=(n+3&-4)+f|0,(0|s)!=(0|o)){if(I=-4&(o=o-s|0),a=r,n=s,o=1+((m=o-4|0)>>>2|0)&7)for(c=0;e[a>>2]=e[n>>2],n=n+4|0,a=a+4|0,(0|o)!=(0|(c=c+1|0)););if(c=r+I|0,!(m>>>0<28))for(;e[a>>2]=e[n>>2],e[a+4>>2]=e[n+4>>2],e[a+8>>2]=e[n+8>>2],e[a+12>>2]=e[n+12>>2],e[a+16>>2]=e[n+16>>2],e[a+20>>2]=e[n+20>>2],e[a+24>>2]=e[n+24>>2],e[a+28>>2]=e[n+28>>2],n=n+32|0,(0|c)!=(0|(a=a+32|0)););}e[A+12>>2]=p,e[A+8>>2]=c,e[A+4>>2]=r,e[A>>2]=f,s&&(yt(s),r=e[A+4>>2])}else r=s;return e[r-4>>2]=e[t>>2],void(e[A+4>>2]=e[A+4>>2]-4)}$s(),Be()}function Se(A,t,r){var n=0,a=0,s=0,o=0,c=0,f=0,m=0,p=0,I=0;e:{A:{r:{a:{s:{c:{o:{u:{l:{if(t){if(!r)break l;break u}return HA=(t=A)-F(A=(A>>>0)/(r>>>0)|0,r)|0,ge=0,J=0,A}if(!A)break o;break c}if(!((n=r-1|0)&r))break s;s=0-(o=(Oe(r)+33|0)-Oe(t)|0)|0;break r}return HA=0,ge=t-F(A=(t>>>0)/0|0,0)|0,J=0,A}if((n=32-Oe(t)|0)>>>0<31)break a;break A}if(HA=A&n,ge=0,(0|r)==1)break e;return r=31&(n=Ps(r)),(63&n)>>>0>=32?A=t>>>r|0:(a=t>>>r|0,A=((1<<r)-1&t)<<32-r|A>>>r),J=a,A}o=n+1|0,s=63-n|0}if(n=31&(a=63&o),a>>>0>=32?(a=0,c=t>>>n|0):(a=t>>>n|0,c=((1<<n)-1&t)<<32-n|A>>>n),n=31&(s&=63),s>>>0>=32?(t=A<<n,A=0):(t=(1<<n)-1&A>>>32-n|t<<n,A<<=n),o)for(p=(0|(n=r-1|0))==-1?-1:0;f=a<<1|c>>>31,c=(a=c<<1|t>>>31)-(m=r&(s=p-(f+(a>>>0>n>>>0)|0)>>31))|0,a=f-(a>>>0<m>>>0)|0,t=t<<1|A>>>31,A=I|A<<1,I=f=1&s,o=o-1|0;);return HA=c,ge=a,J=t<<1|A>>>31,f|A<<1}HA=A,ge=t,A=0,t=0}return J=t,A}function je(A,t){var r=0,n=0,a=0,s=0,o=0,c=0,f=0,m=0,p=0,I=0;e:{if((0|(r=e[A+8>>2]))==e[A+12>>2])if((n=e[A+4>>2])>>>0>(o=e[A>>2])>>>0)a=Bt((s=(1+(n-o>>2)|0)/-2<<2)+n|0,n,r=r-n|0)+r|0,e[A+8>>2]=a,e[A+4>>2]=s+e[A+4>>2];else{if((s=(0|r)==(0|o)?1:r-o>>1)>>>0>=1073741824)break e;if(p=(c=On(a=s<<2))+a|0,a=s=(-4&s)+c|0,(0|r)!=(0|n)){if(I=-4&(r=r-n|0),m=1+((f=r-4|0)>>>2|0)&7)for(a=0,r=s;e[r>>2]=e[n>>2],n=n+4|0,r=r+4|0,(0|m)!=(0|(a=a+1|0)););else r=s;if(a=s+I|0,!(f>>>0<28))for(;e[r>>2]=e[n>>2],e[r+4>>2]=e[n+4>>2],e[r+8>>2]=e[n+8>>2],e[r+12>>2]=e[n+12>>2],e[r+16>>2]=e[n+16>>2],e[r+20>>2]=e[n+20>>2],e[r+24>>2]=e[n+24>>2],e[r+28>>2]=e[n+28>>2],n=n+32|0,(0|a)!=(0|(r=r+32|0)););}e[A+12>>2]=p,e[A+8>>2]=a,e[A+4>>2]=s,e[A>>2]=c,o&&(yt(o),a=e[A+8>>2])}else a=r;return e[a>>2]=e[t>>2],void(e[A+8>>2]=e[A+8>>2]+4)}$s(),Be()}function Ze(A,t){var r,n=0,a=0,s=0,o=0,c=0;a=189088,q=r=q-320|0,e[r+312>>2]=0,s=xs(A,o=JA(r+112|0,189088),r,r+316|0,r+312|0,0),n=e[r+316>>2];e:if((0|t)<=3){if((0|n)<2)break e;if(s=3&(t=n-1|0),A=1,n-2>>>0>=3)for(c=-4&t,t=0;g[0|(n=A+r|0)]>=4&&(g[0|n]=3),g[1+(n=A+r|0)|0]>=4&&(g[n+1|0]=3),g[n+2|0]>=4&&(g[n+2|0]=3),g[n+3|0]>=4&&(g[n+3|0]=3),A=A+4|0,(0|c)!=(0|(t=t+4|0)););if(!s)break e;for(t=0;g[0|(n=A+r|0)]>=4&&(g[0|n]=3),A=A+1|0,(0|s)!=(0|(t=t+1|0)););}else if(A=1,!((0|n)<=1)){for(;;){if((0|s)>g[0|(c=A+r|0)]){if((0|n)!=(0|(A=A+1|0)))continue;break e}break}g[0|c]=t}if(A=l[0|o])for(t=1;n=e[144464+((255&A)<<2)>>2],l[n+11|0]!=2|16&l[n+6|0]||(s=255&(n=g[t+r|0]),(0|n)<2&&s||(g[0|a]=l[s+94151|0],a=a+1|0,A=l[0|o]),t=t+1|0),g[0|a]=A,a=a+1|0,A=l[0|(o=o+1|0)];);g[0|a]=0,q=r+320|0}function uA(A){var t=0,r=0,n=0,a=0,s=0,o=0;r=t=e[(A|=0)>>2],e[A>>2]=t+1;e:{A:{r:{a:{s:{c:{o:switch(((s=l[0|t])>>>4|0)-8|0){case 0:case 1:case 2:case 3:break A;case 7:break s;case 6:break c;case 4:case 5:break o;default:break e}if((n=t+2|0)>>>0>=(a=e[A+4>>2])>>>0)break a;if(e[A>>2]=n,(192&(r=l[r+1|0]))!=128)break r;return 63&r|s<<6&1984}if((n=t+3|0)>>>0>=(a=e[A+4>>2])>>>0)break a;if(r=t+2|0,e[A>>2]=r,(192&(t=l[t+1|0]))!=128){n=r;break r}if(e[A>>2]=n,(192&(r=l[0|r]))!=128)break r;return 63&r|(63&t|s<<6&960)<<6}if(!((a=e[A+4>>2])>>>0<=(r=t+4|0)>>>0)){if(n=t+2|0,e[A>>2]=n,(192&(a=l[t+1|0]))!=128||(n=t+3|0,e[A>>2]=n,(192&(o=l[t+2|0]))!=128)||(e[A>>2]=r,t=l[0|n],n=r,(192&t)!=128))break r;return 0|((A=63&t|o<<6&4032|(63&a|s<<6&960)<<12)>>>0>=1114112?65533:A)}}e[A>>2]=a;break A}e[A>>2]=n-1}s=65533}return 0|s}function PA(A,t,r,n){var a,s,o=0,c=0,f=0,m=0,p=0,I=0;if(q=a=q-432|0,!(!n|!(536870912&(s=TA(A,t,r,n))))&&(b[a+48>>1]=8192,n=JA(a+48|2,n),l[0|n])){for(f=a+224|0,o=1,m=200;;){if(Dt(a+44|0,n),t=xa(e[a+44>>2]),c=e[r>>2],t?(e[r>>2]=2|c,Nr(Wt(e[a+44>>2]),n)):e[r>>2]=-3&c,I=e[33264],TA(A,n,r,0),1&o?(e[a+16>>2]=189088,c=ua(f,m,84130,a+16|0)):(e[a+32>>2]=15,e[a+36>>2]=189088,c=ua(f,m,84434,a+32|0)),o=(t=e[33264])+1|0,e[33264]=o,t>>>0<=2147483646){for(;;)if(t=n,n=n+1|0,(0|(p=g[0|t]))==32|p-9>>>0<5){for(;t=(n=t)+1|0,(0|(p=g[0|n]))==32|p-9>>>0<5;);if(o=o-1|0,e[33264]=o,!((0|o)>0))break}}if(f=f+c|0,e[33264]=I,!(l[0|n]&&(o=0,(0|(m=m-c|0))>1)))break}(a+224|0)!=(0|f)&&(e[a>>2]=a+224,ua(189088,200,84130,a))}return q=a+432|0,s}function Le(A,t,r,n,a,s,o,c){var f,m;f=e[32972],m=e[f+116>>2],b[A+8>>1]=M[A+8>>1]+s,s=32&c?0-s|0:s,b[A+10>>1]=s+M[A+10>>1],b[A+12>>1]=s+M[A+12>>1],n=(0|n)>(0|(s=((s=(0|F(t,m))/256|0)-(t=b[A+6>>1])|0)/2|0))?s:n,b[A+6>>1]=((0|r)<(0|n)?n:r)+t;e:{A:switch(a-1|0){case 0:t=(0|(t=235-(r=b[A+4>>1])|0))<=-100?-100:t,b[A+4>>1]=((0|t)>=-60?-60:t)+r;break e;case 1:t=(0|(t=(0|(t=235-(r=b[A+4>>1])|0))<=-300?-300:t))>=-150?-150:t,b[A+4>>1]=t+r,b[A+2>>1]=t+M[A+2>>1];break e;case 2:break A;default:break e}t=(0|(t=(0|(t=100-(r=b[A+4>>1])|0))<=-400?-400:t))>-300?-400:t,b[A+4>>1]=t+r,b[A+2>>1]=t+M[A+2>>1]}e[f+132>>2]||(g[A+20|0]=(F(l[A+20|0],o)>>>0)/100,g[A+21|0]=(F(l[A+21|0],o)>>>0)/100,g[A+22|0]=(F(l[A+22|0],o)>>>0)/100,g[A+23|0]=(F(l[A+23|0],o)>>>0)/100,g[A+24|0]=(F(l[A+24|0],o)>>>0)/100,g[A+25|0]=(F(l[A+25|0],o)>>>0)/100)}function YA(A){var t,r=0,n=0,a=0,s=0;q=t=q-48|0;e:{if(A){l[0|A]||(A=is(84285),l[0|A]&&A||(A=is(121696),l[0|A]&&A||(A=is(84614),l[0|A]&&A||(A=84891))));A:{for(;;){if(!(!(n=l[A+r|0])|(0|n)==47)){if(a=23,(0|(r=r+1|0))!=23)continue;break A}break}a=r}n=84891;A:{r:{if(r=l[0|A],(l[A+a|0]|(0|r)==46||(n=A,(0|r)==67))&&!l[n+1|0]||!Mr(n,84891)||!Mr(n,85136)){if(r=121652,l[n+1|0]==46)break r;A=0;break A}if(r=e[56851])for(;;){if(!Mr(n,r+8|0))break r;if(!(r=e[r+32>>2]))break}(A=It(36))&&(r=e[30414],e[A>>2]=e[30413],e[A+4>>2]=r,xt(r=A+8|0,n,a),g[r+a|0]=0,e[A+32>>2]=e[56851],e[56851]=A),r=A||121652}A=r}if((0|A)==-1)break e;e[56809]=A}else A=e[56809];s=A?A+8|0:84309}return q=t+48|0,s}function vA(A){var t=0,r=0,n=0,a=0,s=0,o=0,c=0,f=0,m=0;f=!!((t=e[A+112>>2])|(n=e[A+116>>2])),a=t,o=t=(s=e[A+4>>2])-(c=e[A+44>>2])|0,r=t+e[A+120>>2]|0,t=e[A+124>>2]+(t>>31)|0;e:{if(!(((0|(t=r>>>0<o>>>0?t+1|0:t))>=(0|n)&r>>>0>=a>>>0|(0|t)>(0|n))&f)){if((0|(f=Js(A)))>=0)break e;s=e[A+4>>2],c=e[A+44>>2]}return e[A+112>>2]=-1,e[A+116>>2]=-1,e[A+104>>2]=s,n=(o=r)+(r=c-s|0)|0,t=(r>>31)+t|0,e[A+120>>2]=n,e[A+124>>2]=r>>>0>n>>>0?t+1|0:t,-1}return t=(n=r+1|0)?t:t+1|0,s=e[A+4>>2],c=e[A+8>>2],o=a=e[A+116>>2],a|(r=e[A+112>>2])&&(a=r-n|0,(0|(r=o-(t+(r>>>0<n>>>0)|0)|0))>=(0|(o=(m=c-s|0)>>31))&a>>>0>=m>>>0|(0|r)>(0|o)||(c=a+s|0)),e[A+104>>2]=c,n=(a=(r=e[A+44>>2])-s|0)+n|0,t=(a>>31)+t|0,e[A+120>>2]=n,e[A+124>>2]=n>>>0<a>>>0?t+1|0:t,r>>>0>=s>>>0&&(g[s-1|0]=f),f}function Bt(A,t,r){var n=0,a=0;e:if((0|A)!=(0|t)){if(t-(a=A+r|0)>>>0<=0-(r<<1)>>>0)return xt(A,t,r);if(n=3&(A^t),A>>>0<t>>>0){if(n)n=A;else{if(3&A)for(n=A;;){if(!r)break e;if(g[0|n]=l[0|t],t=t+1|0,r=r-1|0,!(3&(n=n+1|0)))break}else n=A;if(!(r>>>0<=3))for(;e[n>>2]=e[t>>2],t=t+4|0,n=n+4|0,(r=r-4|0)>>>0>3;);}if(r)for(;g[0|n]=l[0|t],n=n+1|0,t=t+1|0,r=r-1|0;);}else{if(!n){if(3&a)for(;;){if(!r)break e;if(g[0|(n=(r=r-1|0)+A|0)]=l[t+r|0],!(3&n))break}if(!(r>>>0<=3))for(;e[(r=r-4|0)+A>>2]=e[t+r>>2],r>>>0>3;);}if(!r)break e;for(;g[(r=r-1|0)+A|0]=l[t+r|0],r;);}}return A}function fr(A,t,r,n){switch(t-9|0){case 0:return t=e[r>>2],e[r>>2]=t+4,void(e[A>>2]=e[t>>2]);case 6:return t=e[r>>2],e[r>>2]=t+4,t=b[t>>1],e[A>>2]=t,void(e[A+4>>2]=t>>31);case 7:return t=e[r>>2],e[r>>2]=t+4,e[A>>2]=M[t>>1],void(e[A+4>>2]=0);case 8:return t=e[r>>2],e[r>>2]=t+4,t=g[0|t],e[A>>2]=t,void(e[A+4>>2]=t>>31);case 9:return t=e[r>>2],e[r>>2]=t+4,e[A>>2]=l[0|t],void(e[A+4>>2]=0);case 16:return t=e[r>>2]+7&-8,e[r>>2]=t+8,void(D[A>>3]=D[t>>3]);case 17:pt[0|n](A,r);default:return;case 1:case 4:case 14:return t=e[r>>2],e[r>>2]=t+4,t=e[t>>2],e[A>>2]=t,void(e[A+4>>2]=t>>31);case 2:case 5:case 11:case 15:return t=e[r>>2],e[r>>2]=t+4,e[A>>2]=e[t>>2],void(e[A+4>>2]=0);case 3:case 10:case 12:case 13:}t=e[r>>2]+7&-8,e[r>>2]=t+8,r=e[t+4>>2],e[A>>2]=e[t>>2],e[A+4>>2]=r}function jt(A,t,r,n,a,s){var o;q=o=q-80|0;e:if((0|s)>=16384){if(FA(o+32|0,t,r,n,a,0,0,0,2147352576),n=e[o+40>>2],a=e[o+44>>2],t=e[o+32>>2],r=e[o+36>>2],s>>>0<32767){s=s-16383|0;break e}FA(o+16|0,t,r,n,a,0,0,0,2147352576),s=((0|s)>=49149?49149:s)-32766|0,n=e[o+24>>2],a=e[o+28>>2],t=e[o+16>>2],r=e[o+20>>2]}else(0|s)>-16383||(FA(o- -64|0,t,r,n,a,0,0,0,7471104),n=e[o+72>>2],a=e[o+76>>2],t=e[o+64>>2],r=e[o+68>>2],s>>>0>4294934644?s=s+16269|0:(FA(o+48|0,t,r,n,a,0,0,0,7471104),s=((0|s)<=-48920?-48920:s)+32538|0,n=e[o+56>>2],a=e[o+60>>2],t=e[o+48>>2],r=e[o+52>>2]));FA(o,t,r,n,a,0,0,0,s+16383<<16),t=e[o+12>>2],e[A+8>>2]=e[o+8>>2],e[A+12>>2]=t,t=e[o+4>>2],e[A>>2]=e[o>>2],e[A+4>>2]=t,q=o+80|0}function er(A,t){var r,n,a=0;q=r=q+-64|0,a=e[A>>2],n=e[a-4>>2],a=e[a-8>>2],e[r+32>>2]=0,e[r+36>>2]=0,e[r+40>>2]=0,e[r+44>>2]=0,e[r+48>>2]=0,e[r+52>>2]=0,g[r+55|0]=0,g[r+56|0]=0,g[r+57|0]=0,g[r+58|0]=0,g[r+59|0]=0,g[r+60|0]=0,g[r+61|0]=0,g[r+62|0]=0,e[r+24>>2]=0,e[r+28>>2]=0,e[r+20>>2]=0,e[r+16>>2]=125084,e[r+12>>2]=A,e[r+8>>2]=t,A=A+a|0,a=0;e:if(ta(n,t,0))e[r+56>>2]=1,pt[e[e[n>>2]+20>>2]](n,r+8|0,A,A,1,0),a=e[r+32>>2]==1?A:0;else{pt[e[e[n>>2]+24>>2]](n,r+8|0,A,1,0);A:switch(e[r+44>>2]){case 0:a=e[r+48>>2]==1&&e[r+36>>2]==1&&e[r+40>>2]==1?e[r+28>>2]:0;break e;case 1:break A;default:break e}e[r+32>>2]!=1&&e[r+48>>2]|e[r+36>>2]!=1|e[r+40>>2]!=1||(a=e[r+24>>2])}return q=r- -64|0,a}function zt(A,t,r,n,a){var s,o,c=0;q=s=q-80|0,b[s+72>>1]=0,e[s+64>>2]=0,e[s+68>>2]=0,g[0|n]=0,c=Nr(t,o=2|(c=s- -64|0))+c|0,g[c+2|0]=32;e:if((0|r)!=-1)t>>>0>=33&&!Rr(t)?(g[c+3|0]=(0|r)==32?32:31,g[s+65|0]=95,UA(A,s- -64|1,s+16|0)||(g[s+65|0]=32,UA(A,o,s+16|0)||Kt(A,o,s+16|0,40,0,268435456,0)),l[s+16|0]||rA(A,t,s+16|0),t=JA(n,s+16|0),!(r=l[0|t])|(0|r)==21||(e[s+56>>2]=0,e[s+60>>2]=0,Ar(A,t,s+56|0,-1,1&a))):(e[s>>2]=t,QA(t=s- -64|1,85485,s),UA(A,t,n));else{if(UA(A,o,n)||(g[s+65|0]=95,UA(A,s- -64|1,s+16|0)|e[A+212>>2]==25966))break e;ds(85055),UA(e[47194],o,s+16|0)&&(g[0|n]=21,g[n+1|0]=0),Cn(e[e[32972]+60>>2])}q=s+80|0}function VA(A,t,r){var n=0,a=0,s=0,o=0;if(r&&(g[0|A]=t,g[(n=A+r|0)-1|0]=t,!(r>>>0<3||(g[A+2|0]=t,g[A+1|0]=t,g[n-3|0]=t,g[n-2|0]=t,r>>>0<7||(g[A+3|0]=t,g[n-4|0]=t,r>>>0<9||(a=(n=0-A&3)+A|0,t=F(255&t,16843009),e[a>>2]=t,e[(r=(n=r-n&-4)+a|0)-4>>2]=t,n>>>0<9||(e[a+8>>2]=t,e[a+4>>2]=t,e[r-8>>2]=t,e[r-12>>2]=t,n>>>0<25||(e[a+24>>2]=t,e[a+20>>2]=t,e[a+16>>2]=t,e[a+12>>2]=t,e[r-16>>2]=t,e[r-20>>2]=t,e[r-24>>2]=t,e[r-28>>2]=t,(r=n-(o=4&a|24)|0)>>>0<32))))))))for(n=kt(t,0,1,1),s=J,t=a+o|0;e[t+24>>2]=n,e[t+28>>2]=s,e[t+16>>2]=n,e[t+20>>2]=s,e[t+8>>2]=n,e[t+12>>2]=s,e[t>>2]=n,e[t+4>>2]=s,t=t+32|0,(r=r-32|0)>>>0>31;);return A}function _A(){var A,t=0,r=0,n=0,a=0,s=0;if(q=A=q-208|0,(0|(n=e[50303]))>0)for(;(a=e[(r=201216+(t<<2)|0)>>2])&&(yt(a),e[r>>2]=0),(0|n)!=(0|(t=t+1|0)););if(e[50303]=0,e[A+16>>2]=137584,e[A+20>>2]=47,QA(t=A+32|0,87827,A+16|0),As(t,RA(t)+1|0,0),e[A+4>>2]=47,e[A>>2]=137584,QA(t,87933,A),As(t,RA(t)+1|0,1),t=e[50303],e[201216+(r=t<<2)>>2]=0,r=qr(n=e[50741],r+4|0)){if(e[50741]=r,ns(201216,t,7),n=e[50741],r=0,t=e[50304])for(a=0;s=e[t+4>>2],l[0|s]&&Mr(s+1|0,86589)&&yn(e[t+8>>2],88032,3)&&(e[(r<<2)+n>>2]=t,r=r+1|0),t=e[201216+((a=a+1|0)<<2)>>2];);e[(r<<2)+n>>2]=0}return q=A+208|0,n}function Zt(A,t,r){var n=0,a=0,s=0,o=0;if(s=t-1|0,(0|t)>=2){t=A;e:{for(;;){A:{r:{if((0|(n=e[r+4>>2]))!=(0|(a=e[r+8>>2]))){if((o=ss(n,10,a-n|0))?a=1+(o-(n=e[r+4>>2])|0)|0:(n=e[r+4>>2],a=e[r+8>>2]-n|0),xt(t,n,n=a>>>0<s>>>0?a:s),a=n+e[r+4>>2]|0,e[r+4>>2]=a,t=t+n|0,o||!(s=s-n|0))break A;if((0|a)!=e[r+8>>2]){e[r+4>>2]=a+1,n=l[0|a];break r}}if(!((0|(n=Js(r)))>=0)){if(n=0,(0|A)==(0|t))break e;if(16&l[0|r])break A;break e}}if(g[0|t]=n,t=t+1|0,(255&n)!=10&&(s=s-1|0))continue}break}A?(g[0|t]=0,n=A):n=0}}else if(t=e[r+72>>2],e[r+72>>2]=t-1|t,!s)return g[0|A]=0,A;return n}function Bn(A){var t=0,r=0,n=0,a=0,s=0,o=0,c=0,f=0;if(t=F(A,44),(0|(A=e[t+137896>>2]))>0&&Bn(A-1|0),A=e[36115],!((0|(t=e[36+(r=t+137856|0)>>2]))<=0)){if(a=e[r+32>>2],c=1&t,(0|t)!=1)for(f=-2&t,r=0;t=l[10+(s=(n=r<<4)+a|0)|0],e[144464+(t<<2)>>2]=s,(0|A)>=(0|t)?t=A:VA(144464+((A=A+1|0)<<2)|0,0,t-A<<2),A=l[10+(n=(16|n)+a|0)|0],e[144464+(A<<2)>>2]=n,(0|A)<=(0|t)?A=t:VA(144464+((t=t+1|0)<<2)|0,0,A-t<<2),r=r+2|0,(0|f)!=(0|(o=o+2|0)););else r=0;c&&(t=l[10+(r=(r<<4)+a|0)|0],e[144464+(t<<2)>>2]=r,(0|A)>=(0|t)||(VA(144464+((A=A+1|0)<<2)|0,0,t-A<<2),A=t))}e[36115]=A}function hn(A,t,r,n,a){var s,o=0,c=0,f=0;q=s=q-16|0;e:if(1&g[A+106|0]&&(o=l[0|r],!(!(1&g[n+2|0])&(0|o)!=46||256&(f=e[n+12>>2])|!(!(2&f)||a)||(Dt(s+12|0,(0|o)!=46?r:r+2|0),!(o=l[0|r])|!l[r+1|0])))){if(!(!(f=e[s+12>>2])|2&l[n+2|0])){if(!nr(f))break e;o=l[0|r]}(0|o)==46&&(g[0|r]=32),c=2,e[A+212>>2]!=26741|a||(r=nr(e[s+12>>2])?PA(A,r+2|0,0,0):0,128&l[A+8233|0]&&(!(!(a=e[s+12>>2])|2&l[n+2|0])&a-48>>>0>=10||(c=0)),c=32768&r?0:c,131072&r&&(c=163840&e[A+8232>>2]?34:l[t-2|0]!=45?c:0))}return q=s+16|0,c}function ir(A,t,r,n,a){var s,o=0,c=0;if(q=s=q-208|0,e[s+204>>2]=r,VA(r=s+160|0,0,40),e[s+200>>2]=e[s+204>>2],(0|et(0,t,s+200|0,s+80|0,r,n,a))<0)a=-1;else{e[A+76>>2],o=e[A>>2],e[A+72>>2]<=0&&(e[A>>2]=-33&o);e:{A:{if(e[A+48>>2]){if(e[A+16>>2])break A}else e[A+48>>2]=80,e[A+28>>2]=0,e[A+16>>2]=0,e[A+20>>2]=0,c=e[A+44>>2],e[A+44>>2]=s;if(r=-1,Ti(A))break e}r=et(A,t,s+200|0,s+80|0,s+160|0,n,a)}c&&(pt[e[A+36>>2]](A,0,0),e[A+48>>2]=0,e[A+44>>2]=c,e[A+28>>2]=0,t=e[A+20>>2],e[A+16>>2]=0,e[A+20>>2]=0,r=t?r:-1),t=A,A=e[A>>2],e[t>>2]=A|32&o,a=32&A?-1:r}return q=s+208|0,a}function it(A,t,r,n){var a,s=0,o=0,c=0,f=0,m=0,p=0,I=0;if(q=a=q-208|0,o=l[0|t])for(;g[s+a|0]=o,f=((255&o)==6&(0|c)!=21)+f|0,c=o<<24>>24,o=l[(s=s+1|0)+t|0];);if(g[s+a|0]=0,s=l[0|a])for(p=f-2|0,c=0,I=(0|n)<2,o=0;;){e:{A:if((255&s)!=6|I|(0|o)==21){if((0|(n=255&s))==255){if(!m|(0|r)<2)break e;n=r>>>0>2?11:(0|c)%3|0?23:11}o=n,n=c}else{if(s=c+1|0,l[A+169|0]){o=(0|s)>1?5:6,n=s;break A}if(o=6,n=f,(0|s)==(0|f))break A;o=(0|s)%3|0||(0|c)==(0|p)?5:6,n=s}c=n,g[0|t]=o,t=t+1|0}if(!(s=l[(m=m+1|0)+a|0]))break}(0|r)>=2&&(g[0|t]=11,t=t+1|0),g[0|t]=0,q=a+208|0}function pr(A,t){var r=0;r=0,A&&(r=e[50754],r=(A=(A=(0|F(e[145712+(t?12:((0|A)>199)<<2)>>2],A))/256|0)>>>0>(t=e[36430])>>>0?A:t)>>>0<=89999?(F(A,r)>>>0)/1e3|0:(F(A,(0|r)/25|0)>>>0)/40|0),(0|(A=e[36440]))<=0||(0|(t=e[36424]))<0||(e[4+(t=216192+(t<<4)|0)>>2]||(e[t+4>>2]=A),e[36440]=0),e[36426]=0,e[36439]=-1,e[36455]=e[50758],Yn(),e[36427]=-1,A=216192+(e[50758]<<4)|0,e[A>>2]=5,e[A+4>>2]=r,A=e[50758]+1|0,e[50758]=(0|A)<=169?A:0,e[36426]=0,e[36438]&&(e[36438]=0,A=216192+(e[50758]<<4)|0,e[A>>2]=14,e[A+4>>2]=0,A=e[50758]+1|0,e[50758]=(0|A)<=169?A:0)}function pA(A,t,r,n,a,s,o,c){var f,m=0,p=0,I=0;m=1,f=p=2147483647&n;e:if(!((I=(0|p)==2147418112)&!r?A|t:I&!!(0|r)|p>>>0>2147418112)&&!((I=(0|(p=2147483647&c))==2147418112)&!o?a|s:I&!!(0|o)|p>>>0>2147418112)){if(!(A|a|r|o|t|s|p|f))return 0;if((0|(m=n&c))>0|(0|m)>=0){if(m=-1,(0|r)==(0|o)&(0|n)==(0|c)?(0|t)==(0|s)&A>>>0<a>>>0|t>>>0<s>>>0:r>>>0<o>>>0&(0|n)<=(0|c)|(0|n)<(0|c))break e;return!!(A^a|r^o|t^s|n^c)}m=-1,((0|r)==(0|o)&(0|n)==(0|c)?(0|t)==(0|s)&A>>>0>a>>>0|t>>>0>s>>>0:r>>>0>o>>>0&(0|n)>=(0|c)|(0|n)>(0|c))||(m=!!(A^a|r^o|t^s|n^c))}return m}function $A(A,t){var r=0,n=0,a=0,s=0;for(r=l[85836]|l[85837]<<8,g[0|t]=r,g[t+1|0]=r>>>8,g[t+2|0]=l[85838];;)if(a=l[0|A],A=r=A+1|0,(0|a)!=255){if(!a)break;if(!(n=e[144464+(a<<2)>>2]))continue;if(l[n+11|0]==1&&(s=l[n+14|0],!(M[n+8>>1]|s>>>0>4))){if(s>>>0<2)continue;g[0|t]=l[s+93943|0],t=t+1|0;continue}if(255&(A=e[n>>2]))for(;g[0|t]=A,t=t+1|0,n=65280&A,A=A>>>8|0,n;);if(A=r,(0|a)!=21||(32|(r=g[0|A]))-97>>>0>=26)continue;for(;g[0|t]=r,t=t+1|0,(32|(r=g[0|(A=A+1|0)]))-97>>>0<26;);}g[0|t]=0}function mn(A,t){var r,n,a=0,s=0,o=0;q=r=q-112|0,A||(e[50303]||_A(),A=201216),ar(a=r+16|0,t,40),e[r>>2]=47,e[r+4>>2]=a,QA(t=r- -64|0,87599,r),n=RA(t),o=-1;e:{A:{r:{if(s=e[A>>2]){t=0,a=-1;a:{for(;;){if(ki(r+16|0,e[s>>2])){if(ki(r+16|0,s=e[s+8>>2])?o=ki(r- -64|0,s+(RA(s)-n|0)|0)?o:t:a=t,s=e[((t=t+1|0)<<2)+A>>2])continue;break a}break}if((0|t)>=0)break A;t=(0|a)<0?o:a;break r}if((0|(t=a))>=0)break r}t=o}if(a=0,(0|t)<0)break e}a=e[(t<<2)+A>>2]}return q=r+112|0,a}function Hr(A,t){var r,n,a=0,s=0,o=0,c=0,f=0;q=r=q-16|0,me(+t),n=0|K(1),s=0|K(0),(0|(o=(a=2147483647&n)-1048576|0))==2145386495|o>>>0<2145386495?(c=s<<28,o=a>>>4|0,a=(15&a)<<28|s>>>4,s=o+1006632960|0):(0|a)==2146435072|a>>>0>2146435072?(c=s<<28,a=(15&n)<<28|s>>>4,s=n>>>4|2147418112):a|s?(An(r,s,o=a,0,0,(a=a?Oe(a):Oe(s)+32|0)+49|0),f=e[r>>2],c=e[r+4>>2],o=15372-a<<16,a=e[r+8>>2],s=o|65536^e[r+12>>2]):(a=0,s=0),e[A>>2]=f,e[A+4>>2]=c,e[A+8>>2]=a,e[A+12>>2]=-2147483648&n|s,q=r+16|0}function Ur(A,t,r){var n=0,a=0;e:{A:{r:{if(!(3&((a=A)^t))){n=!!(0|r);a:if(!(!(3&t)|!r))for(;;){if(n=l[0|t],g[0|a]=n,!n)break e;if(a=a+1|0,n=!!(0|(r=r-1|0)),!(3&(t=t+1|0)))break a;if(!r)break}if(!n)break A;if(!l[0|t])break e;if(!(r>>>0<4))for(;;){if(~(n=e[t>>2])&n-16843009&-2139062144)break r;if(e[a>>2]=n,a=a+4|0,t=t+4|0,!((r=r-4|0)>>>0>3))break}}if(!r)break A}for(;;){if(n=l[0|t],g[0|a]=n,!n)break e;if(a=a+1|0,t=t+1|0,!(r=r-1|0))break}}r=0}return VA(a,0,r),A}function Fr(A,t,r,n,a,s){var o,c=0,f=0,m=0;q=o=q-240|0,c=e[r>>2],e[o+232>>2]=c,r=e[r+4>>2],e[o>>2]=A,e[o+236>>2]=r,m=1;e:{A:{r:{if(r|(0|c)!=1){for(c=A;;){if((0|Fa(r=c-e[(f=(n<<2)+s|0)>>2]|0,A,t))<=0){r=c;break r}a:{if(!((0|n)<2|a)&&(a=e[f-8>>2],(0|Fa(f=c-4|0,r,t))>=0||(0|Fa(f-a|0,r,t))>=0))break a;if(e[(m<<2)+o>>2]=r,Ds(c=o+232|0,a=Si(c)),m=m+1|0,n=n+a|0,a=0,c=r,e[o+236>>2]|e[o+232>>2]!=1)continue;break A}break}r=c;break A}r=A}if(a)break e}Za(o,m),yi(r,t,n,s)}q=o+240|0}function wr(A,t){var r=0;e[4+(134912+(r=A<<2)|0)>>2]=t,e[r+136192>>2]=t,r=28;e:{A:{r:switch(A-1|0){case 0:e[50792]=t,e[50786]=t,Ra(3);break A;case 1:e[50787]=t,e[33037]=(0|F(l[e[50797]+105596|0],(0|F(e[50787],55))/100|0))/16;break A;case 2:A=(0|t)>=99?99:t,e[50785]=(0|A)>0?A:0;break A;case 3:e[50788]=(0|t)>=99?99:t;break A;case 12:e[47268]=t;break A;case 6:e[47205]=t;break A;case 9:break A;case 8:break r;default:break e}(A=255&t)&&(e[e[47192]+152>>2]=A),e[47196]=t}r=0}return r}function Ut(A,t){var r=0,n=0,a=0;e:if(e[A>>2])for(;;){if(Rr(e[A-4>>2])){if(n=0,(0|(r=g[0|t]))==e[A>>2])for(;(0|(r=g[(n=n+1|0)+t|0]))==e[(A=A+4|0)>>2];);if(!r){for(;t=A,A=A+4|0,Rr(e[t>>2]););for(a=t+((e[t>>2]==61)<<2)|0;a=(A=a)+4|0,Rr(e[A>>2]););switch((t=e[A>>2])-34|0){case 0:case 5:break e}return Rr(t)||e[A>>2]==47?102808:A}}if(!e[(A=A+4|0)>>2])break}return a}function vr(A,t,r,n){var a,s,o=0,c=0,f=0;return!l[A+25|0]|D[A+8>>3]!=r|D[A+16>>3]!=n?(D[A+16>>3]=n,D[A+8>>3]=r,n=(o=Ft(-3.141592653589793/(c=+e[A>>2])*n))*-o,D[A+48>>3]=n,o*=Tn(-6.283185307179586/c*r),o+=o,D[A+40>>3]=o,c=1-o-n,D[A+32>>3]=c,!(f=l[A+24|0])|r==0||(c=1/c,D[A+32>>3]=c,n*=r=-c,D[A+48>>3]=n,o*=r,D[A+40>>3]=o,f=1)):(f=l[A+24|0],n=D[A+48>>3],o=D[A+40>>3],c=D[A+32>>3]),g[A+25|0]=1,r=D[A+64>>3],a=D[A+56>>3],D[A+64>>3]=a,s=t,t=n*r+(c*t+o*a),D[A+56>>3]=f?s:t,t}function as(A,t,r,n,a){var s,o=0,c=0,f=0,m=0;if((s=e[34388])&&!((0|(c=e[34436]))>=(e[34393]-2|0))){if(e[34436]=c+1,o=F(c,36)+s|0,e[o>>2]=A,e[o+4>>2]=e[34437],m=e[34438],e[o+12>>2]=t>>>24,e[o+8>>2]=16777215&t,e[o+24>>2]=m,t=e[50754],a=e[34439]+((a-e[34392]|0)/2|0)|0,e[o+20>>2]=a,t=Ne(f=1e3*+(0|a)/+(0|t))<2147483648?~~f:-2147483648,e[o+16>>2]=t,A-3>>>0<=1)return void(e[28+(F(c,36)+s|0)>>2]=e[33282]+r);t=28+(F(c,36)+s|0)|0,e[t>>2]=r,(0|A)==7&&(e[t+4>>2]=n)}}function Hn(A,t,r,n,a,s){var o=0,c=0,f=0,m=0;64&s?(t=31&(r=s+-64|0),(63&r)>>>0>=32?(r=0,t=a>>>t|0):(r=a>>>t|0,t=((1<<t)-1&a)<<32-t|n>>>t),n=0,a=0):s&&(f=n,o=31&(c=64-s|0),(63&c)>>>0>=32?(c=f<<o,m=0):(c=(1<<o)-1&f>>>32-o|a<<o,m=f<<o),f=t,t=31&s,(63&s)>>>0>=32?(o=0,t=r>>>t|0):(o=r>>>t|0,t=((1<<t)-1&r)<<32-t|f>>>t),t|=m,r=o|c,o=n,n=31&s,(63&s)>>>0>=32?(c=0,n=a>>>n|0):(c=a>>>n|0,n=((1<<n)-1&a)<<32-n|o>>>n),a=c),e[A>>2]=t,e[A+4>>2]=r,e[A+8>>2]=n,e[A+12>>2]=a}function Ys(A){var t=0,r=0;if(!A){if(e[33174]&&(t=Ys(e[33174])),e[33136]&&(t=Ys(e[33136])|t),A=e[56816])for(;e[A+20>>2]!=e[A+28>>2]&&(t=Ys(A)|t),A=e[A+56>>2];);return t}return e[A+76>>2],e[A+20>>2]==e[A+28>>2]||(pt[e[A+36>>2]](A,0,0),e[A+20>>2])?((0|(t=e[A+8>>2]))!=(0|(r=e[A+4>>2]))&&(t=r-t|0,pt[e[A+40>>2]](A,t,t>>31,1)),t=0,e[A+28>>2]=0,e[A+16>>2]=0,e[A+20>>2]=0,e[A+4>>2]=0,e[A+8>>2]=0):t=-1,t}function Qn(A,t){var r=0,n=0,a=0,s=0,o=0;if((192&(r=l[0|t]))==128)for(;(192&(r=l[0|(t=t-1|0)]))==128;);e:if(128&(r=r<<24>>24)){if(n=1,(0|(a=224&r))!=192)if((240&r)!=224){if(n=3,(248&r)!=240){r&=255,n=0;break e}}else n=2,o=1;r=l[n+93846|0]&r,(s=l[t+1|0])?(r=63&s|r<<6,(0|a)!=192&&((a=l[t+2|0])?(r=63&a|r<<6,o||((t=l[t+3|0])?r=63&t|r<<6:n=2)):n=1)):n=0}return e[A>>2]=r,n+1|0}function Hs(A,t,r,n){var a,s=0,o=0;return q=a=q-224|0,A?(e[a>>2]=137584,e[a+4>>2]=47,e[a+8>>2]=t,QA(t=a+16|0,85430,a),(0|(s=da(t)))<0?t=ka(n,0-s|0,a+16|0):(t=xn(a+16|0,85659))?((o=e[A>>2])&&yt(o),s?(o=It(s),e[A>>2]=o,o?(0|xi(o,s,t))==(0|s)?(rn(t),t=0,r&&(e[r>>2]=s)):(r=e[56798],rn(t),yt(e[A>>2]),e[A>>2]=0,t=ka(n,r,a+16|0)):(rn(t),t=48)):(t=0,e[A>>2]=0)):t=ka(n,e[56798],a+16|0)):t=28,q=a+224|0,t}function Dt(A,t){var r=0,n=0,a=0,s=0,o=0;if((192&(r=l[0|t]))==128)for(;(192&(r=l[0|(t=t+1|0)]))==128;);e:if(128&(r=r<<24>>24)){if(n=1,(0|(a=224&r))!=192)if((240&r)!=224){if(n=3,(248&r)!=240){r&=255,n=0;break e}}else n=2,o=1;r=l[n+93846|0]&r,(s=l[t+1|0])?(r=63&s|r<<6,(0|a)!=192&&((a=l[t+2|0])?(r=63&a|r<<6,o||((t=l[t+3|0])?r=63&t|r<<6:n=2)):n=1)):n=0}return e[A>>2]=r,n+1|0}function An(A,t,r,n,a,s){var o=0,c=0,f=0;64&s?(n=t,t=31&(a=s+-64|0),(63&a)>>>0>=32?(a=n<<t,n=0):(a=(1<<t)-1&n>>>32-t|r<<t,n<<=t),t=0,r=0):s&&(o=n,n=31&s,(63&s)>>>0>=32?(c=o<<n,f=0):(c=(1<<n)-1&o>>>32-n|a<<n,f=o<<n),o=t,n=31&(a=64-s|0),(63&a)>>>0>=32?(a=0,t=r>>>n|0):(a=r>>>n|0,t=((1<<n)-1&r)<<32-n|o>>>n),n=f|t,a|=c,t=31&s,(63&s)>>>0>=32?(c=o<<t,t=0):(c=(1<<t)-1&o>>>32-t|r<<t,t=o<<t),r=c),e[A>>2]=t,e[A+4>>2]=r,e[A+8>>2]=n,e[A+12>>2]=a}function jn(A){var t=0;return A>>>0<=55295?t=l[e[125552+(A>>>6&67108860)>>2]+(255&A)|0]:(t=4,A>>>0<57344||(A>>>0<63488?t=3:A>>>0<=195327?t=l[e[126416+(A-63488>>>6&67108860)>>2]+(255&A)|0]:(t=2,A>>>0<917504||(A>>>0<=918015?t=l[e[128476+(A-917504>>>6&67108860)>>2]+(255&A)|0]:A>>>0<983040||(A>>>0<1048574?t=3:A>>>0<1048576||(t=3,A>>>0<1114110||(t=A>>>0<1114112?2:5))))))),255&t}function g0(A,t){var r=0,n=0,a=0,s=0,o=0,c=0,f=0,m=0,p=0;if(!((0|(r=e[33709]))<=0)){if(a=(0|A)>31?A-32|0:A,A=0,r>>>0>=4)for(p=-4&r;c=2|A,f=1|A,n=e[134912+((o=3|A)<<6)>>2]==(0|a)?o:e[134912+(c<<6)>>2]==(0|a)?c:e[134912+(f<<6)>>2]==(0|a)?f:e[134912+(A<<6)>>2]==(0|a)?A:n,A=A+4|0,(0|p)!=(0|(s=s+4|0)););if(s=3&r)for(;n=e[134912+(A<<6)>>2]==(0|a)?A:n,A=A+1|0,(0|s)!=(0|(m=m+1|0)););(0|n)<=0||(e[33709]=n,r=n)}ea(t,r)}function u0(A){var t,r=0,n=0,a=0;for(q=t=q-96|0,ar(t,A,60),Rs(t,1);a=Wt(g[0|(n=t+r|0)]),g[0|n]=a,r=r+1|0,255&a;);e[t+92>>2]=0,e[t+84>>2]=0,e[t+88>>2]=0,e[t+76>>2]=0,e[t+80>>2]=0,e[t+72>>2]=A;e:{A:{r:{if(tt(t,1)){if(l[202976])break r;break A}if(e[50303]||_A(),r=268437247,!(A=mn(201216,t))||!tt(e[A+8>>2],0))break e;if(!l[202976])break A}tt(202976,2)}Oi(e[32972]),e[t+76>>2]=e[32972]+40,vs(t+72|0,202976),r=0}return q=t+96|0,r}function d0(A,t){if(!A)return 0;e:{A:{if(A){if(t>>>0<=127)break A;if(e[e[56841]>>2]){if(t>>>0<=2047){g[A+1|0]=63&t|128,g[0|A]=t>>>6|192,A=2;break e}if(!((-8192&t)!=57344&t>>>0>=55296)){g[A+2|0]=63&t|128,g[0|A]=t>>>12|224,g[A+1|0]=t>>>6&63|128,A=3;break e}if(t-65536>>>0<=1048575){g[A+3|0]=63&t|128,g[0|A]=t>>>18|240,g[A+2|0]=t>>>6&63|128,g[A+1|0]=t>>>12&63|128,A=4;break e}}else if((-128&t)==57216)break A;e[56798]=25,A=-1}else A=1;break e}g[0|A]=t,A=1}return A}function f0(A){var t=0,r=0,n=0,a=0;if(e[A+20>>2]=0,(n=(r=e[A+8>>2])-(t=e[A+4>>2])|0)>>>0>=9)for(;yt(e[t>>2]),t=e[A+4>>2]+4|0,e[A+4>>2]=t,(n=(r=e[A+8>>2])-t|0)>>>0>8;);switch(a=512,(n>>>2|0)-1|0){case 1:a=1024;case 0:e[A+16>>2]=a}if((0|t)!=(0|r)){for(;yt(e[t>>2]),(0|r)!=(0|(t=t+4|0)););(0|(t=e[A+8>>2]))!=(0|(r=e[A+4>>2]))&&(e[A+8>>2]=t+(3+(r-t|0)&-4))}(A=e[A>>2])&&yt(A)}function ss(A,t,r){var n=0,a=0;n=!!(0|r);e:{A:{r:if(!(!(3&A)|!r))for(a=255&t;;){if((0|a)==l[0|A])break A;if(n=!!(0|(r=r-1|0)),!(3&(A=A+1|0)))break r;if(!r)break}if(!n)break e;if(!(l[0|A]==(255&t)|r>>>0<4))for(n=F(255&t,16843009);;){if(~(a=n^e[A>>2])&a-16843009&-2139062144)break A;if(A=A+4|0,!((r=r-4|0)>>>0>3))break}if(!r)break e}for(t&=255;;){if((0|t)==l[0|A])return A;if(A=A+1|0,!(r=r-1|0))break}}return 0}function ja(A,t){var r=0,n=0;e:{if(n=255&t){if(3&A)for(;;){if(!(r=l[0|A])|(0|r)==(255&t))break e;if(!(3&(A=A+1|0)))break}A:if(!(~(r=e[A>>2])&r-16843009&-2139062144))for(n=F(n,16843009);;){if(~(r^=n)&r-16843009&-2139062144)break A;if(r=e[A+4>>2],A=A+4|0,r-16843009&~r&-2139062144)break}for(;(n=l[0|(r=A)])&&(A=r+1|0,(0|n)!=(255&t)););return r}return RA(A)+A|0}return A}function p0(A,t,r,n,a){var s,o=0,c=0;c=-1;e:if(!(((o=(0|(s=2147483647&n))==2147418112)&!r?A|t:o&!!(0|r)|s>>>0>2147418112)||(o=2147483647&a)>>>0>2147418112&(0|o)!=2147418112)){if(!(A|r|o|s|t))return 0;if((0|(o=n&a))>0|(0|o)>=0){if((!!(0|r)|(0|n)!=(0|a))&(0|n)<(0|a))break e;return!!(A|r|n^a|t)}(!r&(0|n)==(0|a)?A|t:!!(0|r)&(0|n)>=(0|a)|(0|n)>(0|a))||(c=!!(A|r|n^a|t))}return c}function Rs(A,t){var r,n=0;q=r=q+-64|0,g[202976]=0,e[r+48>>2]=47,QA(r+59|0,91351,r+48|0),t||(g[r+59|0]=0);e:{A:{if(A&&(A=ra(A,43))){if(g[0|A]=0,g[0|(A=A+1|0)]-48>>>0>=10)break A;n=Ka(A)}if((0|n)<=0)break e;if(n>>>0<=9){e[r+4>>2]=n,e[r>>2]=r+59,QA(202976,91378,r);break e}e[r+20>>2]=n-10,e[r+16>>2]=r+59,QA(202976,91503,r+16|0);break e}e[r+36>>2]=A,e[r+32>>2]=r+59,QA(202976,85425,r+32|0)}q=r- -64|0}function Fn(A){var t,r=0,n=0,a=0;q=t=q-80|0,r=Vn(A,t+12|0),e[t+12>>2]?(ar(n=t+16|0,r,60),r=0,Rs(n,1),!tt(n,0)|!l[202976]||tt(202976,2),Oi(e[32972]),vs(A,86012)):r=268437247,q=t+80|0;e:{A:{r:{a:{if((0|r)<=268437502){if(!r)break e;if((0|r)==268436479)break A;if((0|r)!=268437247)break a;return 2}if((0|r)==268437503|(0|r)==268437759)break r;if((0|r)==268439295)break e}return-1}return 2}a=1}return a}function Jr(A,t,r,n,a,s,o,c,f){var m,p,I;f=kt(t,r,c,f),c=J,a=kt(n,a,s,o),n=J+c|0,c=a>>>0>(f=a+f|0)>>>0?n+1|0:n,m=o,p=r,o=(r=kt(o,a=0,r,n=0))+f|0,f=J+c|0,I=o,r=r>>>0>o>>>0?f+1|0:f,o=kt(s,0,t,0),c=J,n=kt(s,f=0,p,n),s=J+f|0,s=n>>>0>(c=c+n|0)>>>0?s+1|0:s,n=r,s=s>>>0>(f=s+I|0)>>>0?n+1|0:n,r=kt(t,0,m,a)+c|0,a=J,c=(a=r>>>0<c>>>0?a+1|0:a)+f|0,f=s,e[A+8>>2]=c,e[A+12>>2]=a>>>0>c>>>0?f+1|0:f,e[A>>2]=o,e[A+4>>2]=r}function JA(A,t){var r=0,n=0;e:{if(3&((n=A)^t))r=l[0|t];else{if(3&t)for(;;){if(r=l[0|t],g[0|n]=r,!r)break e;if(n=n+1|0,!(3&(t=t+1|0)))break}if(!(~(r=e[t>>2])&r-16843009&-2139062144))for(;e[n>>2]=r,r=e[t+4>>2],n=n+4|0,t=t+4|0,!(r-16843009&~r&-2139062144););}if(g[0|n]=r,255&r)for(;r=l[t+1|0],g[n+1|0]=r,n=n+1|0,t=t+1|0,r;);}return A}function Tn(A){var t,r=0,n=0;q=t=q-16|0,me(+A),n=0|K(1),K(0);e:if((n&=2147483647)>>>0<=1072243195){if(r=1,n>>>0<1044816030)break e;r=Ms(A,0)}else if(r=A-A,!(n>>>0>=2146435072)){switch(3&kn(A,t)){case 0:r=Ms(D[t>>3],D[t+8>>3]);break e;case 1:r=-Pa(D[t>>3],D[t+8>>3],1);break e;case 2:r=-Ms(D[t>>3],D[t+8>>3]);break e}r=Pa(D[t>>3],D[t+8>>3],1)}return q=t+16|0,r}function bi(A,t,r,n){var a=0,s=0,o=0;if(!((RA(n)+RA(t)|0)>=(0|r))){for(o=e[36115],r=n;a=l[0|r];)if(r=r+1|0,!((0|a)>=(0|o))){e:{A:switch(a=e[144464+(a<<2)>>2],l[a+11|0]-1|0){case 1:break e;case 0:break A;default:continue}s=l[a+14|0]<4|s;continue}1&(l[a+4|0]>>>1|s)||(e[A+8212>>2]=e[A+8212>>2]+1),e[A+8208>>2]=e[A+8208>>2]+1,s=0}t&&sn(t,n)}}function Ws(A){var t,r=0;q=t=q-16|0,me(+A),r=0|K(1),K(0);e:if((r&=2147483647)>>>0<=1072243195){if(r>>>0<1045430272)break e;A=Pa(A,0,0)}else if(r>>>0>=2146435072)A-=A;else{switch(3&kn(A,t)){case 0:A=Pa(D[t>>3],D[t+8>>3],1);break e;case 1:A=Ms(D[t>>3],D[t+8>>3]);break e;case 2:A=-Pa(D[t>>3],D[t+8>>3],1);break e}A=-Ms(D[t>>3],D[t+8>>3])}return q=t+16|0,A}function Ii(A){var t=0;e[A+296>>2]=303173648,e[A+300>>2]=370677780,t=e[26341],e[A+304>>2]=e[26340],e[A+308>>2]=t,t=e[26343],e[A+312>>2]=e[26342],e[A+316>>2]=t,Ma(A),e[A+56>>2]=2,e[A+36>>2]=3,e[A+40>>2]=1074,g[A+168|0]=5,e[A+132>>2]=32,e[A+104>>2]=1032,e[A+108>>2]=66,e[A+8>>2]=5,e[A+12>>2]=32,g[A+365|0]=64|l[A+365|0],g[A+368|0]=64|l[A+368|0],g[A+396|0]=64|l[A+396|0],g[A+399|0]=64|l[A+399|0]}function h0(A,t,r){var n=0,a=0,s=0;e:{if(!(n=e[r+16>>2])){if(Ti(r))break e;n=e[r+16>>2]}if(n-(s=e[r+20>>2])>>>0<t>>>0)return 0|pt[e[r+36>>2]](r,A,t);A:if(e[r+80>>2]<0)n=0;else{for(a=t;;){if(!(n=a)){n=0;break A}if(l[(a=n-1|0)+A|0]==10)break}if((a=0|pt[e[r+36>>2]](r,A,n))>>>0<n>>>0)break e;A=A+n|0,t=t-n|0,s=e[r+20>>2]}xt(s,A,t),e[r+20>>2]=e[r+20>>2]+t,a=t+n|0}return a}function m0(A){var t,r=0,n=0;e:{if((0|(t=e[34064]))>0)for(;;){if((n=e[136284+(r<<4)>>2])&&!Mr(A,n)){if(e[136276+(r<<4)>>2])return r;if(n=-1,ts(0,r))break e;return r}if((0|t)==(0|(r=r+1|0)))break}n=-1,ts(A,t)||(r=qr(e[12+(136272+(e[34064]<<4)|0)>>2],RA(A)+1|0),n=e[34064],e[12+(136272+(n<<4)|0)>>2]=r,JA(r,A),e[34064]=n+1)}return n}function wi(A,t){var r,n=0,a=0,s=0,o=0;for(q=r=q-16|0,g[0|t]=0,(n=15&e[A>>2])&&(t=(a=RA(t=JA(t,Gs(128496,64|n))))+t|0),n=8;;){e:{A:{if(n>>>0<=29){if(e[A>>2]>>>n&1)break A;break e}if(!(e[A+4>>2]>>>n-32&1)|n>>>0<32)break e}(0|(a=(o=RA(s=Gs(128496,n))+1|0)+a|0))>=80||(e[r>>2]=s,QA(t,84439,r),t=t+o|0)}if((0|(n=n+1|0))==64)break}q=r+16|0}function J0(A,t,r){var n,a=0,s=0,o=0;if(q=n=q-16|0,l[0|A]){for(o=e[30450];;)if(s=A,A=A+1|0,!((0|(a=g[0|s]))==32|a-9>>>0<5)){for((0|(a=Ka(s)))>0&&((0|a)<32?e[t>>2]=e[t>>2]|1<<a:(s=Gs(129568,r),e[n+4>>2]=a,e[n>>2]=s,hr(o,84902,n)),s=A);s=(A=s)+1|0,(a=g[0|A])-48>>>0<10|(32|a)-97>>>0<26;);if(!a)break}}q=n+16|0}function Sn(A,t,r){var n=0,a=0,s=0,o=0;e:if(t&&!((0|(a=r-4|0))<=0))for(s=(0|(r=e[t-4>>2]))!=34?(0|r)==39?r:0:r,r=0;;){if(o=r,!(r=e[t>>2]))break e;A:{if(!s){if((0|r)==32|r-9>>>0<5)break e;if((0|r)!=47)break A;break e}if((0|o)!=92&&(0|r)==(0|s))break e}if(t=t+4|0,!((0|a)>(0|(n=Nr(r,A+n|0)+n|0))))break}return g[A+n|0]=0,n}function nr(A){var t=0;e:if(!fa(A)){t=0;A:if(!(A>>>0<768)){if(A-2305>>>0<=1270){if((124&A)>>>0<100)break e;if(t=1,Li(93850,A))break A;return A-3450>>>0<6}if((0|A)==1541|A-1456>>>0<19|(0|A)==1648||(0|(t=-256&A))==10240|(0|t)==4352|A-3904>>>0<125|A>>>0<880)break e;t=1,A-1611>>>0<20||(t=A-12353>>>0<30400)}return t}return 1}function vs(A,t){var r=0;A?((r=e[A+4>>2])&&JA(133208,r),(r=e[A>>2])&&ar(133168,r,40),e[33289]=l[A+14|0],e[33291]=l[A+13|0],e[33290]=l[A+12|0],ar(134672,l[0|t]!=33|l[t+1|0]!=118?t:(l[t+2|0]==47?3:0)+t|0,40),A=e[50298],e[33678]=e[50297],e[33679]=A,A=e[50302],e[33682]=e[50301],e[33683]=A,A=e[50300],e[33680]=e[50299],e[33681]=A):VA(133152,0,76)}function ys(A,t,r,n){g[A+53|0]=1;e:if(e[A+4>>2]==(0|r)){g[A+52|0]=1;A:{if(!(r=e[A+16>>2])){if(e[A+36>>2]=1,e[A+24>>2]=n,e[A+16>>2]=t,(0|n)!=1)break e;if(e[A+48>>2]==1)break A;break e}if((0|t)==(0|r)){if((0|(r=e[A+24>>2]))==2&&(e[A+24>>2]=n,r=n),e[A+48>>2]!=1)break e;if((0|r)==1)break A;break e}e[A+36>>2]=e[A+36>>2]+1}g[A+54|0]=1}}function vn(A,t){var r=0,n=0,a=0,s=0,o=0;e:if(r=e[t>>2])for(;;){n=0;A:if(A){for(;o=g[n+r|0],(a=e[(n<<2)+A>>2])&&(n=n+1|0,(0|o)==(0|a)););r:switch(a-34|0){case 0:case 5:break r;default:break A}if(!o)break e}if(!(r=e[((s=s+1|0)<<3)+t>>2]))break}return e[4+((s<<3)+t|0)>>2]}function Ua(A,t){e:if((0|t)>=1024){if(A*=898846567431158e293,t>>>0<2047){t=t-1023|0;break e}A*=898846567431158e293,t=((0|t)>=3069?3069:t)-2046|0}else(0|t)>-1023||(A*=2004168360008973e-307,t>>>0>4294965304?t=t+969|0:(A*=2004168360008973e-307,t=((0|t)<=-2960?-2960:t)+1938|0));return V(0,0),V(1,t+1023<<20),A*+Ae()}function ua(A,t,r,n){var a,s,o,c=0;return q=s=q-16|0,e[s+12>>2]=n,q=a=q-160|0,o=t?A:a+158|0,e[a+144>>2]=o,c=-1,A=t-1|0,e[a+148>>2]=A>>>0<=t>>>0?A:0,A=VA(a,0,144),e[A+76>>2]=-1,e[A+36>>2]=17,e[A+80>>2]=-1,e[A+44>>2]=A+159,e[A+84>>2]=A+144,(0|t)<0?e[56798]=61:(g[0|o]=0,c=ir(A,r,n,15,16)),q=A+160|0,q=s+16|0,c}function ki(A,t){var r=0,n=0,a=0;e:if(r=l[0|A])for(;;){if(!(n=l[0|t])){a=r;break e}if((0|r)!=(0|n)&&(0|(n=r-65>>>0<26?32|r:r))!=(0|((r=l[0|t])-65>>>0<26?32|r:r))){a=l[0|A];break e}if(t=t+1|0,r=l[A+1|0],A=A+1|0,!r)break}return(a=(A=255&a)-65>>>0<26?32|A:A)-((A=l[0|t])-65>>>0<26?32|A:A)|0}function xi(A,t,r){var n=0,a=0;if(n=e[r+72>>2],e[r+72>>2]=n-1|n,(0|(n=e[r+4>>2]))==(0|(a=e[r+8>>2]))?n=t:(xt(A,n,n=t>>>0>(n=a-n|0)>>>0?n:t),e[r+4>>2]=n+e[r+4>>2],A=A+n|0,n=t-n|0),n)for(;;){if(js(r)||!(a=0|pt[e[r+32>>2]](r,A,n)))return t-n|0;if(A=A+a|0,!(n=n-a|0))break}return t}function Ka(A){for(var t=0,r=0,n=0,a=0;A=(t=A)+1|0,(0|(r=g[0|t]))==32|r-9>>>0<5;);e:{A:{r:switch((r=g[0|t])-43|0){case 0:break A;case 2:break r;default:break e}a=1}r=g[0|A],t=A}if(r-48>>>0<10)for(;n=48+(F(n,10)-g[0|t]|0)|0,A=g[t+1|0],t=t+1|0,A-48>>>0<10;);return a?n:0-n|0}function Bi(A,t){var r,n,a,s=0;return q=r=q-32|0,e[t>>2]=0,e[t+4>>2]=0,e[(s=n=t+24|0)>>2]=0,e[s+4>>2]=0,e[(s=a=t+16|0)>>2]=0,e[s+4>>2]=0,e[(s=t+8|0)>>2]=0,e[s+4>>2]=0,e[r+28>>2]=t+28,e[r+24>>2]=n,e[r+20>>2]=t+20,e[r+16>>2]=a,e[r+12>>2]=t+12,e[r+8>>2]=s,e[r+4>>2]=t+4,e[r>>2]=t,A=nt(A,84553,r),q=r+32|0,A}function vi(A){var t=0,r=0,n=0;if((t=l[0|A])&&((r=l[A+1|0])?(r=t|r<<8,(t=l[A+2|0])&&(r|=t<<16,(A=l[A+3|0])&&(r|=A<<24))):r=t),(0|(t=e[36115]))>0)for(A=0;;){if(!(!(n=e[144464+(A<<2)>>2])|e[n>>2]!=(0|r)))return l[n+10|0];if((0|t)==(0|(A=A+1|0)))break}return 0}function yi(A,t,r,n){var a,s=0,o=0,c=0,f=0,m=0;q=a=q-240|0,e[a>>2]=A,c=1;e:if(!((0|r)<2))for(s=A;;){if((0|Fa(A,o=(s=s-4|0)-e[((f=r-2|0)<<2)+n>>2]|0,t))>=0&&(0|Fa(A,s,t))>=0)break e;if(m=o,s=(o=(0|Fa(o,s,t))>=0)?m:s,e[(c<<2)+a>>2]=s,c=c+1|0,!((0|(r=o?r-1|0:f))>1))break}Za(a,c),q=a+240|0}function QA(A,t,r){var n,a,s,o=0;return q=a=q-16|0,e[a+12>>2]=r,q=n=q-160|0,xt(s=n+8|0,124528,144),e[n+52>>2]=A,e[n+28>>2]=A,o=(o=-2-A|0)>>>0>2147483647?2147483647:o,e[n+56>>2]=o,A=A+o|0,e[n+36>>2]=A,e[n+24>>2]=A,A=Sa(s,t,r),o&&(t=e[n+28>>2],g[t-((0|t)==e[n+24>>2])|0]=0),q=n+160|0,q=a+16|0,A}function Za(A,t){var r,n=0,a=0,s=0,o=0,c=0;if(n=4,q=r=q-256|0,(0|t)>=2)for(e[(c=(t<<2)+A|0)>>2]=r;;){for(s=n>>>0>=256?256:n,xt(e[c>>2],e[A>>2],s),a=0;o=(a<<2)+A|0,a=a+1|0,xt(e[o>>2],e[(a<<2)+A>>2],s),e[o>>2]=e[o>>2]+s,(0|t)!=(0|a););if(!(n=n-s|0))break}q=r+256|0}function UA(A,t,r){var n,a=0;return q=n=q-96|0,e[n+88>>2]=0,e[n+92>>2]=1073741824,e[n+84>>2]=t,t=Br(A,n+84|0,r,n+88|0,2,0),536870912&(a=e[n+88>>2])?(t=e[47202],e[47202]=0,g[n+2|0]=32,b[n>>1]=8192,ar(a=3|n,e[n+84>>2],77),A=PA(A,a,0,0),JA(r,189088),e[47202]=t):A=t?a:0,q=n+96|0,A}function Ei(A,t,r){var n=0,a=0,s=0;a=Es(A),n=e[t>>2];e:{A:if((0|a)>=0){if(n){if(!Mr(A,r))break A;(s=e[n+688>>2])&&yt(s),yt(n),e[t>>2]=0}e[t>>2]=_e(A),A=JA(r,A),$n(r=e[t>>2],r+228|0,0)&&(Cn(e[e[32972]+60>>2]),g[0|A]=0,a=-1),n=e[t>>2],e[n+292>>2]=a}else if(!n)break e;g[n+268|0]=0}return a}function Vs(A){var t=0,r=0;return(0|(t=e[A+76>>2]))>=0&(!t|e[56823]!=(-1073741825&t))?(r=e[(t=A+76|0)>>2],e[t>>2]=r||1073741823,(0|(r=e[A+4>>2]))==e[A+8>>2]?A=Js(A):(e[A+4>>2]=r+1,A=l[0|r]),e[t>>2]=0,A):(0|(t=e[A+4>>2]))!=e[A+8>>2]?(e[A+4>>2]=t+1,l[0|t]):Js(A)}function yn(A,t,r){var n=0,a=0;e:{A:{if(r>>>0>=4){if(3&(A|t))break A;for(;;){if(e[A>>2]!=e[t>>2])break A;if(t=t+4|0,A=A+4|0,!((r=r-4|0)>>>0>3))break}}if(!r)break e}for(;;){if((0|(n=l[0|A]))==(0|(a=l[0|t]))){if(t=t+1|0,A=A+1|0,r=r-1|0)continue;break e}break}return n-a|0}return 0}function Nn(A,t){var r,n=0,a=0,s=0;q=r=q-16|0,t?(An(r,a=((n=t>>31)^t)-n|0,0,0,0,(n=Oe(a))+81|0),a=0+e[r+8>>2]|0,n=(65536^e[r+12>>2])+(16414-n<<16)|0,s=-2147483648&t|(n=a>>>0<s>>>0?n+1|0:n),n=e[r+4>>2],t=e[r>>2]):t=0,e[A>>2]=t,e[A+4>>2]=n,e[A+8>>2]=a,e[A+12>>2]=s,q=r+16|0}function is(A){var t,r=0,n=0,a=0;if((0|(r=ja(A,61)))==(0|A))return 0;e:if(!l[(t=r-A|0)+A|0]&&(r=e[56800])&&(n=e[r>>2])){for(;;){if(k0(A,n,t)||(n=e[r>>2]+t|0,l[0|n]!=61)){if(n=e[r+4>>2],r=r+4|0,n)continue;break e}break}a=n+1|0}return a}function Es(A){var t=0,r=0;e:if(!((0|(r=e[34461]))<=0)){for(;;){if(!Mr(A,F(t,44)+137856|0)){e[34457]=t;break e}if((0|r)==(0|(t=t+1|0)))break}return-1}return(A=(0|t)==(0|r))?-1:((0|(A=A?-1:t))!=e[36114]&&(e[36115]=0,Bn(A),e[36114]=A,e[36115]=e[36115]+1),t)}function Mi(A,t,r,n){var a=0,s=0;e:if((32|l[0|t])!=32){if(a=((0|n)>2)<<1,s=oa(A,t,r,a=(0|n)>1?4|a:a),l[0|r]!=21)for(a|=1,t=t+s|0,s=1;;){if((32|l[0|t])==32)break e;if(t=oa(A,t,r,a)+t|0,s=s+1|0,l[0|r]==21)break}return JA(189088,r),0}return it(A,r,n,s),t}function Nr(A,t){var r,n=0,a=0,s=0;if(A>>>0<=127)return g[0|t]=A,1;if(A>>>0>=1114112)return g[0|t]=32,1;for(n=F(r=A>>>0<2048?1:A>>>0<65536?2:3,6),g[0|t]=l[r+93842|0]|A>>>n;n=n-6|0,g[(a=a+1|0)+t|0]=A>>>n&63|128,(0|(s=s+1|0))!=(0|r););return r+1|0}function C0(A){var t=0,r=0;e:{if((0|(t=e[A+12>>2]))>=e[A+16>>2]){if(t=0,(0|(r=0|Qe(e[A+8>>2],A+24|0,2048)))<=0){if(!r|(0|r)==-44)break e;return e[56798]=0-r,0}e[A+16>>2]=r}r=t,t=A+t|0,e[A+12>>2]=r+M[t+40>>1],r=e[t+36>>2],e[A>>2]=e[t+32>>2],e[A+4>>2]=r,t=t+24|0}return t}function b0(A,t){var r,n=0;if(n=e[A+632>>2])return!!(0|Wr(n,t));e:{A:{if((0|(r=e[A+600>>2]))>0){if(n=0,(t=t-r|0)-1>>>0<255)break A;break e}if((n=t-192|0)>>>0<=413)return 128&l[344+(l[n+94240|0]+A|0)|0];if(n=0,t>>>0>255)break e}n=128&l[344+(A+t|0)|0]}return n}function Pa(A,t,r){var n,a,s;return s=(n=A*A)*(n*n)*(158969099521155e-24*n-25050760253406863e-24)+(n*(27557313707070068e-22*n-.0001984126982985795)+.00833333333332249),a=n*A,r?A-(n*(.5*t-s*a)-t+.16666666666666632*a):a*(n*s-.16666666666666632)+A}function os(A,t){var r,n=0,a=0,s=0;q=r=q-16|0,t?(An(r,n=t,0,0,0,(t=Oe(t))+81|0),n=0+e[r+8>>2]|0,t=(65536^e[r+12>>2])+(16414-t<<16)|0,s=a>>>0>n>>>0?t+1|0:t,a=e[r+4>>2],t=e[r>>2]):t=0,e[A>>2]=t,e[A+4>>2]=a,e[A+8>>2]=n,e[A+12>>2]=s,q=r+16|0}function I0(A){var t,r=0;q=t=q-16|0,g[t+15|0]=10;e:{if(!(r=e[A+16>>2])){if(Ti(A))break e;r=e[A+16>>2]}(0|r)==(0|(r=e[A+20>>2]))|e[A+80>>2]==10?pt[e[A+36>>2]](A,t+15|0,1):(e[A+20>>2]=r+1,g[0|r]=10)}q=t+16|0}function js(A){var t,r=0;return r=e[A+72>>2],e[A+72>>2]=r-1|r,e[A+20>>2]!=e[A+28>>2]&&pt[e[A+36>>2]](A,0,0),e[A+28>>2]=0,e[A+16>>2]=0,e[A+20>>2]=0,4&(r=e[A>>2])?(e[A>>2]=32|r,-1):(t=e[A+44>>2]+e[A+48>>2]|0,e[A+8>>2]=t,e[A+4>>2]=t,r<<27>>31)}function ls(A){var t=0;e:{A:{r:{a:{if((0|(A=u0(A)))<=268437502){if(!A)break e;if((0|A)==268436479)break A;if((0|A)!=268437247)break a;return 2}if((0|A)==268437503|(0|A)==268437759)break r;if((0|A)==268439295)break e}return-1}return 2}t=1}return t}function RA(A){var t=0,r=0,n=0;e:{if(3&(t=A))for(;;){if(!l[0|t])break e;if(!(3&(t=t+1|0)))break}for(;r=t,t=t+4|0,!(~(n=e[r>>2])&n-16843009&-2139062144););for(;r=(t=r)+1|0,l[0|t];);}return t-A|0}function Aa(A,t,r){var n,a=0,s=0,o=0;e[A+112>>2]=t,e[A+116>>2]=r,n=e[A+4>>2],a=e[A+44>>2]-n|0,e[A+120>>2]=a,e[A+124>>2]=a>>31,a=e[A+8>>2],t|r&&((0|r)>=(0|(o=(s=a-n|0)>>31))&t>>>0>=s>>>0|(0|r)>(0|o)||(a=t+n|0)),e[A+104>>2]=a}function Gi(A,t){var r,n,a=0;if(me(+A),r=0|K(1),n=0|K(0),(0|(a=r>>>20&2047))!=2047){if(!a)return A==0?a=0:(A=Gi(18446744073709552e3*A,t),a=e[t>>2]+-64|0),e[t>>2]=a,A;e[t>>2]=a-1022,V(0,0|n),V(1,-2146435073&r|1071644672),A=+Ae()}return A}function Ms(A,t){var r,n,a=0;return(n=1-(a=.5*(r=A*A)))+(1-n-a+(r*(r*(r*(2480158728947673e-20*r-.001388888888887411)+.0416666666666666)+(a=r*r)*a*(r*(-11359647557788195e-27*r+2087572321298175e-24)-27557314351390663e-23))-A*t))}function wa(A,t,r){var n=0,a=0;if(t)for(;r=r-1|0,a=A,A=fs(A,t,10),n=J,g[0|r]=a-kt(A,n,10,0)|48,a=t>>>0>9,t=n,a;);if(A)for(;t=(A>>>0)/10|0,g[0|(r=r-1|0)]=A-F(t,10)|48,n=A>>>0>9,A=t,n;);return r}function Di(A,t){var r=0,n=0,a=0;e:if(A){for(;a=g[t+r|0],(n=e[(r<<2)+A>>2])&&(r=r+1|0,(0|a)==(0|n)););A:switch(n-34|0){case 0:case 5:break A;default:break e}if(!a)return 0}return 1}function w0(A,t,r){var n,a=0;return q=n=q-16|0,!(64&t)&&(a=0,4259840&~t)||(e[n+12>>2]=r+4,a=e[r>>2]),e[n>>2]=a,e[n+4>>2]=0,(A=0|ze(-100,0|A,32768|t,0|n))>>>0>=4294963201&&(e[56798]=0-A,A=-1),q=n+16|0,A}function k0(A,t,r){var n=0,a=0,s=0;if(!r)return 0;e:if(n=l[0|A]){for(;;){if((a=l[0|t])&&!(!(r=r-1|0)|(0|n)!=(0|a))){if(t=t+1|0,n=l[A+1|0],A=A+1|0,n)continue;break e}break}s=n}return(255&s)-l[0|t]|0}function Us(A,t){var r,n=0;q=n=q-128|0,n=VA(n,0,128),g[n+98|0]=9,g[n+66|0]=9,g[n+34|0]=A,b[n+68>>1]=1,r=e[36125],e[n+104>>2]=r,e[n+72>>2]=r,e[n+40>>2]=e[144464+(A<<2)>>2],g[n+2|0]=9,e[n+8>>2]=r,$t(0,0,n+32|0,t,0),q=n+128|0}function x0(A){var t=0,r=0,n=0;if(g[e[A>>2]]-48>>>0>=10)return 0;for(;n=e[A>>2],r=-1,t>>>0<=214748364&&(r=(0|(r=g[0|n]-48|0))>(2147483647^(t=F(t,10)))?-1:r+t|0),e[A>>2]=n+1,t=r,g[n+1|0]-48>>>0<10;);return t}function B0(A,t){var r=0;if(!(!A|e[A>>2]-48>>>0>=10)){if(e[A>>2]-48>>>0<10)for(;r=(e[A>>2]+F(r,10)|0)-48|0,e[(A=A+4|0)>>2]-48>>>0<10;);(0|t)==1&&(r=(0|Wt(e[A>>2]))==115?F(r,1e3):r)}return r}function Rr(A){var t=0;t=1;e:{switch(0|jn(A)){case 30:if(t=0,(0|A)==160|(0|A)==8199|(0|A)==8239)break e;return 1;case 0:if(A-9>>>0<5)return 1;if((0|A)==133)break e;break;case 28:case 29:break e}t=0}return t}function v0(A,t,r){var n,a=0;return q=n=q-16|0,g[n+6|0]=0,g[n+7|0]=95,a=Nr(a=t,t=n+8|0)+n|0,g[a+8|0]=32,g[a+9|0]=0,UA(A,n+7|0,r)||(g[n+7|0]=32,UA(A,t,r)||Kt(A,t,r,20,0,0,0)),q=n+16|0,g[0|r]}function y0(A){var t=0,r=0;r=170;e:if(!((0|A)<170))for(;;){if((0|A)==(0|r))return M[101616+(t<<1|2)>>1];if((2147483646&(t=t+2|0))==124)break e;if(!((0|(r=M[101616+(t<<1)>>1]))<=(0|A)))break}return 0}function kt(A,t,r,n){var a,s,o,c,f=0,m=0;return c=F(f=r>>>16|0,m=A>>>16|0),f=(65535&(m=((o=F(a=65535&r,s=65535&A))>>>16|0)+F(m,a)|0))+F(f,s)|0,J=(F(t,r)+c|0)+F(A,n)+(m>>>16)+(f>>>16)|0,65535&o|f<<16}function Wt(A){var t=0,r=0,n=0,a=0;for(t=2778;;){if((0|(r=e[1040+((n=(t+a|0)/2|0)<<4)>>2]))==(0|A))return(t=e[1048+(n<<4)>>2])||A;if(!((0|(a=(r=A>>>0>r>>>0)?n+1|0:a))<=(0|(t=r?t:n-1|0))))break}return A}function Qi(A){var t=0,r=0,n=0,a=0;for(t=2778;;){if((0|(r=e[1040+((n=(t+a|0)/2|0)<<4)>>2]))==(0|A))return(t=e[1044+(n<<4)>>2])||A;if(!((0|(a=(r=A>>>0>r>>>0)?n+1|0:a))<=(0|(t=r?t:n-1|0))))break}return A}function da(A){var t,r=0;return q=t=q-112|0,(A=0|Je(0|A,0|t))>>>0>=4294963201&&(e[56798]=0-A,A=-1),r=0-e[56798]|0,A||(r=-31,(61440&e[t+12>>2])!=16384&&(r=e[t+40>>2])),q=t+112|0,r}function E0(A,t,r){var n;if(!(n=e[A+16>>2]))return e[A+36>>2]=1,e[A+24>>2]=r,void(e[A+16>>2]=t);e:{if((0|t)==(0|n)){if(e[A+24>>2]!=2)break e;return void(e[A+24>>2]=r)}g[A+54|0]=1,e[A+24>>2]=2,e[A+36>>2]=e[A+36>>2]+1}}function tn(A,t,r,n,a){var s;if(q=s=q-256|0,!(73728&a|(0|r)<=(0|n))){if(VA(s,255&t,(r=(n=r-n|0)>>>0<256)?n:256),!r)for(;_r(A,s,256),(n=n-256|0)>>>0>255;);_r(A,s,n)}q=s+256|0}function ka(A,t,r){var n=0;e:{if(A){if(n=e[A>>2]){yt(e[n+4>>2]),n=e[A>>2];break e}if(n=It(16),e[A>>2]=n,n)break e;t=48}return t}return e[n>>2]=0,e[n+4>>2]=ei(r),A=e[A>>2],e[A+8>>2]=0,e[A+12>>2]=0,t}function rn(A){var t=0,r=0;Ys(A),pt[e[A+12>>2]](A),1&g[0|A]||((t=e[A+52>>2])&&(e[t+56>>2]=e[A+56>>2]),(r=e[A+56>>2])&&(e[r+52>>2]=t),e[56816]==(0|A)&&(e[56816]=r),yt(e[A+96>>2]),yt(A))}function xa(A){var t=0,r=0;t=1;e:{A:{r:{a:switch((r=jn(A))-9|0){case 1:break e;case 6:case 18:break r;case 0:break a;default:break A}return(0|Wt(A))!=(0|A)}return Te(A,r)>>>15&1}t=0}return t}function Ks(A){var t,r,n,a=0,s=0;if(n=RA(A)+1|0,a=e[33282],(0|(r=(t=e[33287])+n|0))>=e[33286]){if(!(a=qr(a,s=r+1e3|0)))return-1;e[33286]=s,e[33282]=a}return xt(a+t|0,A,n),e[33287]=r,t}function Ti(A){var t=0;return t=e[A+72>>2],e[A+72>>2]=t-1|t,8&(t=e[A>>2])?(e[A>>2]=32|t,-1):(e[A+4>>2]=0,e[A+8>>2]=0,t=e[A+44>>2],e[A+28>>2]=t,e[A+20>>2]=t,e[A+16>>2]=t+e[A+48>>2],0)}function M0(A,t,r,n){e:if(A){A:switch(t+2|0){case 0:return void(g[0|A]=r);case 1:return void(b[A>>1]=r);case 2:case 3:return void(e[A>>2]=r);case 5:break A;default:break e}e[A>>2]=r,e[A+4>>2]=n}}function Zs(A,t,r,n,a,s,o,c,f){var m;q=m=q-16|0,Yr(m,t,r,n,a,s,o,c,-2147483648^f),n=e[m>>2],r=e[m+4>>2],t=e[m+12>>2],e[A+8>>2]=e[m+8>>2],e[A+12>>2]=t,e[A>>2]=n,e[A+4>>2]=r,q=m+16|0}function Mr(A,t){var r=0,n=0;e:if(!(!(r=l[0|A])|(0|r)!=(0|(n=l[0|t]))))for(;;){if(n=l[t+1|0],!(r=l[A+1|0]))break e;if(t=t+1|0,A=A+1|0,(0|r)!=(0|n))break}return r-n|0}function Gs(A,t){var r=0,n=0,a=0;if(!(r=e[A>>2]))return 84399;if(e[A+4>>2]!=(0|t))for(;;){if(!(r=e[(n=A+8|0)>>2]))return 84399;if(a=A,A=n,e[a+12>>2]==(0|t))break}return r}function Pi(A,t,r){var n=0,a=0,s=0;e:if(r){for(;;){if(!(!(n=e[t>>2])|!(a=e[A>>2])|(0|n)!=(0|a))){if(t=t+4|0,A=A+4|0,r=r-1|0)continue;break e}break}s=a-n|0}return s}function nn(A){var t,r=0,n=0;if((0|(t=e[36115]))>0)for(;;){if(!(!(n=e[144464+(r<<2)>>2])|e[n>>2]!=(0|A)))return l[n+10|0];if((0|t)==(0|(r=r+1|0)))break}return 0}function cs(A){var t,r;return(A=(t=e[33175])+(r=A+7&-8)|0)>>>0<=t>>>0&&r||A>>>0>ve.byteLength/65536<<16>>>0&&!(0|He(0|A))?(e[56798]=48,-1):(e[33175]=A,t)}function Ba(A){var t=0;e:if(!((t=jn(A))>>>0>27)){if(!(1<<t&134259072)){if((0|t)==6)return 1;if((0|t)!=9)break e;return(0|Qi(A))!=(0|A)}return Te(A,t)>>>14&1}return 0}function zi(A,t){var r=0;return g[0|A]=t>>>24,g[0|(r=(t>>>0>16777215)+A|0)]=t>>>16,g[0|(r=r+!!(16711680&t)|0)]=t>>>8,g[0|(r=r+!!(65280&t)|0)]=t,g[r+!!(255&t)|0]=0,A}function Fi(A,t){e:if((0|(A=wr(A,t)))<=268437502){if(!A|(0|A)==268436479|(0|A)!=268437247)break e;return}}function Si(A){var t=0;return t=e[A>>2]-1|0,(t=g[121600+(F(0-t&t,124511785)>>>27|0)|0])||(A=e[A+4>>2],t=(A=g[121600+(F(0-A&A,124511785)>>>27|0)|0])?A+32|0:0),t}function Xs(A){var t=0,r=0,n=0;e:{if(!((t=jn(A))>>>0>27)){if(r=1,116672&(n=1<<t))break e;if(134227968&n)return Te(A,t)>>>10&1}r=0}return r}function fa(A){var t=0,r=0,n=0;e:{if(!((t=jn(A))>>>0>27)){if(r=1,34752&(n=1<<t))break e;if(134227968&n)return Te(A,t)>>>10&1}r=0}return r}function qs(){var A,t=0;(A=e[56797])&&((t=e[A+8>>2])&&pt[e[e[t>>2]+12>>2]](t),(t=e[A+4>>2])&&pt[e[e[t>>2]+16>>2]](t),yt(A)),e[56797]=0,e[56797]=ca()}function G0(A,t){var r=0;return A&&(r=kt(A,0,t,0),(A|t)>>>0<65536||(r=J?-1:r)),!(A=It(r))|!(3&l[A-4|0])||VA(A,0,r),A}function Ni(A,t){var r,n;n=e[130128+(t-F(r=(0|t)/100|0,100)<<2)>>2],e[A+100>>2]=n,e[A+96>>2]=n,t+99>>>0>=199&&(e[A+100>>2]=e[130128+(r<<2)>>2])}function Oi(A){var t=0;(t=It(1344))&&(A=xt(t,A,1344),t=216192+(e[50758]<<4)|0,e[t>>2]=11,e[t+8>>2]=A,A=e[50758]+1|0,e[50758]=(0|A)<=169?A:0)}function va(A,t){var r=0;e:if(r=e[A>>2])for(;;){if(t&&!Mr(t,r))break e;if(!(r=e[(A=A+8|0)>>2]))break}return e[A+4>>2]}function Js(A){var t,r=0;return q=t=q-16|0,r=-1,js(A)||(0|pt[e[A+32>>2]](A,t+15|0,1))==1&&(r=l[t+15|0]),q=t+16|0,r}function Wr(A,t){var r=0,n=0;if(t){for(;n=A,(r=e[A>>2])&&(A=n+4|0,(0|t)!=(0|r)););return r?n:0}return(D0(A)<<2)+A|0}function Li(A,t){var r=0,n=0;if(r=M[A>>1])for(;;){if(n=n+1|0,(0|t)==(0|r))return n;if(!(r=M[(n<<1)+A>>1]))break}return 0}function _s(A,t){var r=0,n=0;t>>>0<=31?(n=e[A>>2],r=A+4|0):(t=t-32|0,r=A),r=e[r>>2],e[A>>2]=n<<t,e[A+4>>2]=r<<t|n>>>32-t}function Ds(A,t){var r=0,n=0;r=e[A+4>>2],t>>>0<=31?n=e[A>>2]:(t=t-32|0,n=r,r=0),e[A+4>>2]=r>>>t,e[A>>2]=r<<32-t|n>>>t}function On(A){var t=0;A=A||1;e:{for(;;){if(t=It(A))break e;if(!(t=e[57276]))break;pt[0|t]()}gA(),Be()}return t}function Qs(A){return A>>>0<=131071?l[117424+(A>>>3&31|l[117424+(A>>>8|0)|0]<<5)|0]>>>(7&A)&1:A>>>0<196606}function Yi(A,t,r,n,a,s,o,c,f){e[A>>2]=t,e[A+4>>2]=r,e[A+8>>2]=n,e[A+12>>2]=65535&a|(f>>>16&32768|a>>>16&32767)<<16}function ta(A,t,r){return r?(0|A)==(0|t)?1:!Mr(e[A+4>>2],e[t+4>>2]):e[A+4>>2]==e[t+4>>2]}function Hi(A){var t=0;(0|(t=0|IA(-100,0|A,0)))==-31&&(t=0|hA(0|A)),t>>>0>=4294963201&&(e[56798]=0-t)}function $s(){var A;A=It(84)+80|0,e[A>>2]=125420,e[A>>2]=125380,e[A>>2]=125400,OA(0|A,125512,9),Be()}function Ri(A){var t,r;return t=Vs(A),r=Vs(A),Vs(A)<<16&16711680|r<<8&65280|255&t|Vs(A)<<24}function gs(A){var t=0;return A?(t=1,A-9472>>>0<160|A-65529>>>0<7||(t=Rr(A)),t):0}function Wi(A,t){var r;return r=t>>31,e[A+76>>2],function(n,a,s){return e[n+20>>2]!=e[n+28>>2]&&(pt[e[n+36>>2]](n,0,0),!e[n+20>>2])||(e[n+28>>2]=0,e[n+16>>2]=0,e[n+20>>2]=0,pt[e[n+40>>2]](n,a,s,0),(0|J)<0)?-1:(e[n+4>>2]=0,e[n+8>>2]=0,e[n>>2]=-17&e[n>>2],0)}(A,t,r)}function D0(A){var t=0,r=0;for(r=A;r=(t=r)+4|0,e[t>>2];);return t-A>>2}function Q0(A,t){return g[0|A]=t,g[A+4|0]=0,g[A+3|0]=t>>>24,g[A+2|0]=t>>>16,g[A+1|0]=t>>>8,A}function an(A,t){var r=0;return(-1>>>(r=31&t)&A)<<r|((r=A)&-1<<(A=0-t&31))>>>A}function Ts(A,t){var r=0;return(0|A)==73&&(r=305,l[t+173|0])||(r=Wt(A)),r}function Cn(A){e[36114]!=(0|A)&&(e[36115]=0,Bn(A),e[36114]=A,e[36115]=e[36115]+1)}function Vi(A){return A?e[34460]+A|0:(ji(85328,20,e[30450]),e[32320])}function ei(A){var t,r;return(r=It(t=RA(A)+1|0))?xt(r,A,t):0}function Un(){var A;e[33287]=0,(A=e[33282])&&(yt(A),e[33286]=0,e[33282]=0)}function hr(A,t,r){var n;q=n=q-16|0,e[n+12>>2]=r,Sa(A,t,r),q=n+16|0}function ji(A,t,r){e[r+76>>2],A=h0(A,t,r)}function za(A,t){return t?A<<24|(65280&A)<<8|A>>>8&65280|A>>>24:A}function us(A){return A-8212>>>0>=12?Li(93856,A):1}function T0(A){var t=0;A&&((t=e[A+688>>2])&&yt(t),yt(A))}function Ui(A){return(0|A)<=127?ra(87712,A):0}function Ki(A){return!(A=l[0|A]?1:yn(A,A+1|0,3))}function P0(A){(A=(0|(A=0|DA(0|A)))!=27?A:0)&&(e[56798]=A)}function Fa(A,t,r){return A|=0,t|=0,0|pt[0|(r|=0)](A,t)}function ra(A,t){return A=ja(A,t),l[0|A]==(255&t)?A:0}function Zi(A,t){return Se(A,t,2147483647),J=ge,HA}function Ps(A){return A?31-Oe(A-1^A)|0:32}function _r(A,t,r){32&l[0|A]||h0(t,r,A)}function ar(A,t,r){g[(Ur(A,t,r)+r|0)-1|0]=0}function ds(A){return Ei(A,188776,189328)}function z0(A,t){t|=0,e[8+(A|=0)>>2]=t}function Sa(A,t,r){return ir(A,t,r,0,0)}function Na(A){return e[12+(A|=0)>>2]}function Xa(A){return e[16+(A|=0)>>2]}function Xi(A){return e[20+(A|=0)>>2]}function bn(A){return e[8+(A|=0)>>2]}function F0(A){return e[4+(A|=0)>>2]}function qi(A){return e[(A|=0)>>2]}function fs(A,t,r){return Se(A,t,r)}function zs(A){(A|=0)&&yt(A)}function sn(A,t){JA(RA(A)+A|0,t)}function Ji(A){return 0|A}function Ai(A){return 0}function qa(A){yt(A|=0)}function S0(A){}S(k=l,1024,""),S(k,45536,"HhYWFhgWFhYXExYaFhIWFg4ODg4ODg4ODg4WFhoaGhYWCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoXFhMZERkGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBhcaExo="),S(k,45664,""),S(k,81428,"ggAAAAAAAAIAAAAAAAAAAgAAAAAAAAAC"),S(k,81475,"AgAAAAAAACAAAAAAAAAAIA=="),S(k,81506,"IA=="),S(k,81522,"IAAAAAAAAAAg"),S(k,81618,"IA=="),S(k,81634,"IA=="),S(k,81650,"IAAAAAAAAAAg"),S(k,81682,"IAAAAAAAAAAgAAAAAAAAACAAAAAAAIAAAAAAAAAAgA=="),S(k,81728,"gAAAAAAAAACAAAAAAAAAAIA="),S(k,81760,"gAAAAAAAAACA"),S(k,81904,"gAAAAAAAAACAAAAAAAAAAIAAAAAAAAAAgAAAAAAAAACAAAAAAAAAAAAU"),S(k,81961,"FAAAAAAAAAAU"),S(k,81985,"FAAAAAAAAAAE"),S(k,82009,"BAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABA="),S(k,82097,"EAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABA="),S(k,82169,"EAAAAAAAAAAQAAAAAAAAABAAAAAAAACA"),S(k,82224,"gAAAAAAAAACA"),S(k,82272,"gAAAAAAAAACAAAAAAAAAAIAAAAAAAAAAgAAAAAAAAACAAAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABA=="),S(k,82353,"BAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABA=="),S(k,82393,"BAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAQAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAABAAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABA=="),S(k,82625,"BAAAAAAAAAAE"),S(k,82649,"BAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAQAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABA=="),S(k,83033,"BAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABA=="),S(k,83097,"BAAAAAAAAAAE"),S(k,83121,"BAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAQAAAEAAAAAFAAAAQAAAAgEAAABAAAAAQQAAAAAAAACBAAAAAAAAAgEAAAAAAAAAAQAAAAAAAAABAAAAQAAAAgEAAAAAAAAAQQAAAAAAAAARAAAAAAAAAAEAAAAAAAAAAQA=="),S(k,83288,"QA=="),S(k,83303,"AkAAAAAAAAAQQAAAEAAAAIBAAAAAAAAACEA="),S(k,83352,"QAAAAAAAABBAAAAQAAAAgAAg"),S(k,83379,"gAAAAABAAACQggAAIEAAAJAAAAAAAAAAgAAAAABAAACQggAAIEAAAJCCAAAgAAAAgAAAAAAAAACAAAAAAAAAAIAAAAAAQAAAkIIAACBAAACQggAAIEAAAJCCAAAgQAAAkAAAAEBAAACQAAAAYEAAAJCCAABgQAAAkIIAACBAAACQggAAIEAAAJCCAAAgQAAAkIIAACBAAACQggAAIAAAAIAAAAAEAAAAAAAAAIAAAAAAAAAACAAAAAAAAAAEAAAAAAAAACAAAAAAAAAAQAAAAAAAAACAAAAAAAAAAIAAAAAAAAAAAkAAAAAAAAAQQAAAEAAAAIBAAAAAAAAABEAAAAAAAAAIAAAAgIIAAAAAAACAgAAAAAAAAIAAAAAAAAAAgIYAAAAAAACAhgAAAAAAAICAAAAAAAAAgIAAAAAAAACAggAAAAAAAICAAAAAAAAAgIAAAAAAAACAgAAAAAAAAICAAAAAAAAAgJIAAACAAACAggAAAIAAAICCAAAAAAAAgIIAAAAAAACAggAAAIAAAICCAAAAAAAAgIIAAAAAAACAggAAAAAAAICAAAAAAAAAgIAAAAAAAACAggAAAAAAAICGAAAAAAAAgIIAAAAAAACAhgAAAAAAAICCAAAAAAAAgIIAAAAAAACAggAAAAAAAICCAAAAAAAAgIAAAAAAAACAggAAAAAAAICAAAAAAAAAgIIAAAAAAACAggAAAAAAAICCAAAAAAAAgIAAAAAAAACAggAAAAAAAICGAAAAAAAAgJIAAAAAAACAhgAAAAAAAICAAAAAAAAAgIAAAAAAAACAhg=="),S(k,83999,"IAAAAACCAAAgAAAAAIIAAAAAAAAAggAAAAAAAACGAAAAAAAAAIIAAAAAAAAAggAAAAAAAACCAAAAaW5maW5pdHkALSsgICAwWDB4AHN0ZDo6YmFkX2Nhc3QAJXMlYyVzX2RpY3QAJXMlYyVzJWMlcyVzACVzJWNzb3VuZGljb25zJWMlcwBDb21waWxlIGVycm9yAHN0ZDo6ZXhjZXB0aW9uAHRlcm1pbmF0aW5nAF8wbGFuZwB1bmV4cGVjdGVkX2hhbmRsZXIgdW5leHBlY3RlZGx5IHJldHVybmVkACVkICVkICVkICVkICVkICVkICVkICVkICVkICVkACVzJWMlYwByYgBwaG9udGFiAHJ3YQBYWFhYWFgAR01UAExDX0FMTABFU1BFQUtfREFUQV9QQVRIAEMAQU5TSV9YMy40LTE5NjgAMy4xLjMwACEtLQBQdXJlIHZpcnR1YWwgZnVuY3Rpb24gY2FsbGVkIQAlcwoAZXNwZWFrOiBCYWQgaW50b25hdGlvbiBkYXRhCgAAAQIEBwMGBQAAAABAAAAAAAAAAHBob25pbmRleAAlcyVjJWMlcwAgJXMAc3RkOjpiYWRfZXhjZXB0aW9uAEVtc2NyaXB0ZW4AbmFuAD94bWwAJXMvLi4vcGhzb3VyY2UAc3RkOjpiYWRfdHlwZWlkAHRlcm1pbmF0ZV9oYW5kbGVyIHVuZXhwZWN0ZWRseSByZXR1cm5lZAAlZCAlZCAlZCAlZCAlZCAlZCAlZCAlZAByYgBXcm9uZyB2ZXJzaW9uIG9mIGVzcGVhay1uZy1kYXRhAEkATEFORwBIT01FAEFOU0lfWDMuNC0xOTg2AChudWxsKQBGYWlsZWQgdG8gb3BlbjogJyVzJwBEZWxldGVkIHZpcnR1YWwgZnVuY3Rpb24gY2FsbGVkIQBudW1iZXJzOiBCYWQgb3B0aW9uIG51bWJlciAlZAoAX2NhcABlbXNjcmlwdGVuAFRoZSBGSUZPIGJ1ZmZlciBpcyBmdWxsAGVzcGVhawAlZCAlZCAlZABzdGQ6OmJhZF9hbGxvYwAlYyVzJWMlcyVjAHBob25kYXRhAC91c3Ivc2hhcmUvZXNwZWFrLW5nLWRhdGEAL3RtcC9lc3BlYWtYWFhYWFgATABQU0FSSFRJVllNVUJGAEFTTU8tNzA4AEMuVVRGLTgAICgAJXM6IEJhZCBvcHRpb24gbnVtYmVyICVkCgBVbnN1cHBvcnRlZCBzcGVjdHJhbCBmaWxlIGZvcm1hdC4KAENhbid0IHJlYWQgZGljdGlvbmFyeSBmaWxlOiAnJXMnCgAtMFgrMFggMFgtMHgrMHggMHgAaW50b25hdGlvbnMAcGhvbmVtZXMAJXMgJXMgJXMgJXMgJXMgJXMAZW4AYmFkX2FycmF5X25ld19sZW5ndGgAbm9uZQBUaGUgZXNwZWFrLW5nIGxpYnJhcnkgaGFzIG5vdCBiZWVuIGluaXRpYWxpemVkACVjJWQAUE9TSVgATQBDLlVURi04AEVDTUEtMTE0ACMxAEVtcHR5IF9kaWN0IGZpbGU6ICclcwoAUmVwbGFjZTogJXMgPiAlcwoAICBzdWZmaXggWyVzXQoKACVzL3Bob25lbWVzACVzJXMlcwBicABhbGwAaW5mAENhbm5vdCBpbml0aWFsaXplIHRoZSBhdWRpbyBkZXZpY2UAJXMlY3ZvaWNlcyVjAE4ATlVMTABFQ01BLTExOABVVEYtOAB3YXNtMzIAZXNwZWFrOiBObyBlbnZlbG9wZQoAQmFkIGRhdGE6ICclcycgKCV4IGxlbmd0aD0leCkKAFRoZSBzcGVjaWZpZWQgZXNwZWFrLW5nIHZvaWNlIGRvZXMgbm90IGV4aXN0ACVzJXMAJXMlYyVzAF9jYXAAYmhmAHNvbWUAWwIlc11dAFAASU5GAEVMT1RfOTI4AGVuX1VTLlVURi04AF8jJWQgAENvbXBpbGluZyBwaG9uZW1lIGRhdGE6ICVzCgBGdWxsIGRpY3Rpb25hcnkgaXMgbm90IGluc3RhbGxlZCBmb3IgJyVzJwoAVW5rbm93biB0dW5lICclcycKACU1ZDoJAGR0AG5vAGVuAG5hbgBfcm9tYW4AQ291bGQgbm90IGxvYWQgdGhlIG1icm9sYS5kbGwgZmlsZQAlZCAlZAAlcyVjbGFuZyVjAHJiAFsCX15fJXMgJXMgX15fJXNdXQBTAF8/QQBJQk0zNjcAPyVkIAAlcyVjJXMAJXMvJXMAcgBpY29uAGVuAENvdWxkIG5vdCBsb2FkIHRoZSBzcGVjaWZpZWQgbWJyb2xhIHZvaWNlIGZpbGUAZ2MAWgBOQU4AXz8/ADxzYXktYXMgaW50ZXJwcmV0LWFzPSJ0dHM6Y2hhciI+JiMlZDs8L3NheS1hcz4ASUJNODE5ACogACAgJWQgJXMgICAgAEludmFsaWQgaW5zdHJ1Y3Rpb24gJS40eCBmb3IgcGhvbmVtZSAnJXMnCgAAcGhvbmRhdGEtbWFuaWZlc3QAVGhlIGV2ZW50IGJ1ZmZlciBpcyBmdWxsAHNwZWxsaW5nAF9saWcAY29uZmlnACVzL2VzcGVhay1uZy1kYXRhACVzJXNfAElTQ0lJAGhBAGwnZXRAAC4ALQAoJXMpAAElZEkgACV4AHcAJXNydWxlcy50eHQAKyVzAHIAXy5wAHBpdGNoAFRoZSByZXF1ZXN0ZWQgZnVuY3Rpb25hbGl0eSBoYXMgbm90IGJlZW4gYnVpbHQgaW50byBlc3BlYWstbmcAX3NtYwBDYwBtYgBJU09fNjQ2LmlydjoxOTkxAHYgPD0gdm93ZWxfY291bnQAVGhlIHBob25lbWUgZmlsZSBpcyBub3QgaW4gYSBzdXBwb3J0ZWQgZm9ybWF0AGNoYXJhY3RlcnMAJWMlcyVzJXMAICVzAF90dXIAZW4AQ2YAbmQAJXMgJWQASVNPXzg4NTktMQAjIFRoaXMgZmlsZSBsaXN0cyB0aGUgdHlwZSBvZiBkYXRhIHRoYXQgaGFzIGJlZW4gY29tcGlsZWQgaW50byB0aGUKIyBwaG9uZGF0YSBmaWxlCiMKIyBUaGUgZmlyc3QgY2hhcmFjdGVyIG9mIGEgbGluZSBpbmRpY2F0ZXMgdGhlIHR5cGUgb2YgZGF0YToKIyAgIFMgLSBBIFNQRUNUX1NFUSBzdHJ1Y3R1cmUKIyAgIFcgLSBBIHdhdmVmaWxlIHNlZ21lbnQKIyAgIEUgLSBBbiBlbnZlbG9wZQojCiMgQWRkcmVzcyBpcyB0aGUgZGlzcGxhY2VtZW50IHdpdGhpbiBwaG9uZGF0YSBvZiB0aGlzIGl0ZW0KIwojICBBZGRyZXNzICBEYXRhIGZpbGUKIyAgLS0tLS0tLSAgLS0tLS0tLS0tCgBfcmV2AHZhcmlhbnQAJXNydWxlcwB0dHM6Y2hhcgBzb3VuZGljb24AQ24AX2VsAG5nAHNyYy9saWJlc3BlYWstbmcvZGljdGlvbmFyeS5jAF9zdWIAcGhvbmRhdGEAVGhlIHNwZWN0cmFsIGZpbGUgZG9lcyBub3QgY29udGFpbiBhbnkgZnJhbWUgZGF0YQABKzEwUwBJU09fODg1OS0xOjE5ODcAdHRzOmtleQAlcyVjJXNfZGljdAB0cwBUaGUgcGhvbmVtZSBtYW5pZmVzdCBmaWxlIGRvZXMgbm90IGNvbnRhaW4gYW55IHBob25lbWVzAF8lYyAlcwBfY3lyAF9zdXAAQ28AX2NybAB3YgAgAS0xMFMASVNPXzg4NTktMgAtAFVucHJvbm91bmNhYmxlPyAnJXMnCgBfaHkAcGhvbmluZGV4AF9hY3UAdHRzOmRpZ2l0cwBDcwAgJXMgJWQgJXMAJ2U6agBhcG9zdHJvcGhlAFRoZSBwaG9uZW1lIGZlYXR1cmUgaXMgbm90IHJlY29nbmlzZWQAdEEASVNPXzg4NTktMjoxOTg3AHdiKwBUcmFuc2xhdGUgJyVzJwoAX2JydgBicmFja2V0cwAlY2VuAElpAHRlbGVwaG9uZQBfaGUAVGhlIHRleHQgZW5jb2RpbmcgaXMgbm90IHN1cHBvcnRlZAAlZCAlZABwaG9udGFiAFsCKFgxKShYMSkoWDEpXV0AbkEAYidpOgBJU09fODg1OS0zAFVzaW5nIHBob25lbWV0YWJsZTogJyVzJwoAVW5zcGVjaWZpZWQgZXJyb3IgMHgleAByb290cwBnbHlwaHMAJWMlcwBfYXIATGwAJXMvY29tcGlsZV9wcm9nX2xvZwBicmFja2V0c0Fubm91bmNlZAAlZABfaGFjAF9eXwBzJ2k6AElTT184ODU5LTM6MTk4OABsaXN0AGRpY3RfbWluAGVuAExtAHgtd2VhawBiYXNlAF9jZWQAX3N5YwBkJ2k6AElTT184ODU5LTQAQmFkIHZvaWNlIGF0dHJpYnV0ZTogJXMKAEVycm9yIHByb2Nlc3NpbmcgZmlsZSAnJXMnOiAlcy4KAGxpc3R4AGRpY3RydWxlcwBfY2lyAExvAHdlYWsAX2hpACdpOgBJU09fODg1OS00OjE5ODgAJXMgAEludmFsaWQgcGhvbmVtZSBjb2RlICVkCgAKUmVmcyAlZCwgIFJldXNlZCAlZAoARXJyb3I6ICVzIGF0ICclcycgKGV4cGVjdGVkIDB4JXgsIGdvdCAweCV4KS4KAFVua25vd24gcGhvbmVtZSB0YWJsZTogJyVzJwoATHQAJWMlcwBpbnRvbmF0aW9uAF9ibgBtZWRpdW0AZW1vamkAJ2VmAF9kaWEASVNPXzg4NTktNQBSZXBsYWNlOiAlcyAgJXMKAENvbXBpbGVkIHBob25lbWVzOiAlZCBlcnJvcnMuCgBFcnJvcjogJXMuCgBoc3gATHUAJXMvLi4vcGhzb3VyY2UvaW50b25hdGlvbi50eHQAbF9kaWVyZXNpcwAlcyslcwBfZ3VyAGlvbgBzdHJvbmcAZXh0cmEASVNPXzg4NTktNToxOTg4AF9hYzIAbF9wcmVmaXgAX2d1AF9kb3QAJXMlY3ZvaWNlcwByAHgtc3Ryb25nAE1jAElTT184ODU5LTYAQ29tcGlsaW5nOiAnJXMnCgBfZ3J2AGxfcmVncmVzc2l2ZV92AHJzAF9vcgAlcy8uLi9waHNvdXJjZS9pbnRvbmF0aW9uACVzJWNsYW5nAE1lAHJlZHVjZWQASVNPXzg4NTktNjoxOTg3ACQxAGlyAF9tY24ATW4AbW9kZXJhdGUAdHVuZQBsX3VucHJvbm91bmNhYmxlAF90YQBJU09fODg1OS03ACQyAG1iLwAlcy9pbnRvbmF0aW9ucwB1cgBfb2dvAGxfc29ub3JhbnRfbWluAHJhdGUAX3RlAE5kAElTT184ODU5LTc6MTk4NwAkMwAvLwBfa24ATmwAYXRoAF9ybmcAdm9sdW1lAGFwb3N0cm9waGUAbG93ZXJjYXNlU2VudGVuY2UASVNPXzg4NTktOAAkNABEdXBsaWNhdGUgdHVuZSBuYW1lOiAnJXMnAGJyYWNrZXRzAG51bWJlcnMAbnMATm8AX21sAF9zdGsAcmFuZ2UAQmFkIHR1bmUgbmFtZTogJyVzOwBJU09fODg1OS04OjE5ODgAJDUAc3BlbGxpbmdTdHJlc3MAX3NpAF90bGQAZmllbGQAYnJhY2tldHNBbm5vdW5jZWQAUGMASVNPXzg4NTktOQAkNgBCYWQgZW52ZWxvcGUgbmFtZTogJyVzJwBfYmFyAGRpY3RfbWluAF90aABzcG9uZwBtb2RlAFR1bmUgJyVzJyBub3QgZm91bmQAc3RyZXNzQWRkAFBkAElTT184ODU5LTk6MTk4OQAkNwBfcmZ4ACR1AGRpY3RydWxlcwBzdHJlc3NBbXAAX2xvAHB1bmN0dWF0aW9uAHJhbmcAUGUASVNPXzg4NTktMTAAVW5leHBlY3RlZDogJyVzJwBjYXBpdGFsX2xldHRlcnMAaW50b25hdGlvbgBfaG9rAF90aQBzdHJlc3NMZW5ndGgAbGFyZwBQZgBUdW5lICclcycgbm90IGRlZmluZWQASVNPXzg4NTktMTA6MTk5MgAkdTEAX215AHN0cmVzc09wdABsX2RpZXJlc2lzAF8jJXMAbGV2ZWwAUGkASVNPXzg4NTktMTQAJHUyAGFkZCBlCgBDb21waWxlZCAlZCBpbnRvbmF0aW9uIHR1bmVzOiAlZCBlcnJvcnMuCgBsX3ByZWZpeABhbHBoYWJldABUb28gbWFueSBwaG9uZW1ldGFibGVzAF94IyVzAFBvAHN0cmVzc1J1bGUAX2thAElTT184ODU5LTE0OjE5OTgAJHUzAE91dCBvZiBtZW1vcnkAbF9yZWdyZXNzaXZlX3YAdHVuZXMAUHMAX2tvAHBoAElTT184ODU5LTE1AF8wACR1KwBfZHB0AHdvcmRzAGludGVycHJldC1hcwBfZXRoAGxfdW5wcm9ub3VuY2FibGUAU2MAXwBJU09fODg1OS0xNgAkdTErAEJhZCBydWxlcyBkYXRhIGluICclc19kaWN0JyBhdCAweCV4ICglYykKAGZvcm1hdABsX3Nvbm9yYW50X21pbgBTawBfYnJhaWxsZQBfME0lZABJU09fODg1OS0xNjoyMDAxACR1MisAQ2FuJ3QgZmluZCBiYXNlIHBob25lbWV0YWJsZSAnJXMnACUzZAklcyBbJXNdCgBDYW5ub3Qgc2V0ICVzOiBsYW5ndWFnZSBub3Qgc2V0LCBvciBpcyBpbnZhbGlkLgoAU20AZGV0YWlsAGxvd2VyY2FzZVNlbnRlbmNlAF9qYQBJU082NDYtVVMAXy4AJHUzKwBfAQBudW1iZXJzAFNvAF8lZG4AX3poACRwYXVzZQAlYyVkWQBwaG9uZW1lX2xlbiA8IE5fUEhPTkVNRV9CWVRFUwBJU08tMTA2NDYtVUNTLTIAJQBzcGVsbGluZ1N0cmVzcwBhbGlhcwBabAAkc3RyZW5kAElTTy04ODU5LTEAJSUARmxhZ3M6ICAlcyAgJXMKACVzJXMlYyVzJXMAWnAAbmFtZQBzdHJlc3NBZGQAJHN0cmVuZDIASVNPLTg4NTktMgAsAEZvdW5kOiAnJXMgJXMKAFpzACVzJXMlcyVjJXMARm91bmQ6ICclcwBzdHJlc3NBbXAAJHVuc3RyZXNzZW5kACVjJWRNAElTTy04ODU5LTMALCwAc3RyZXNzTGVuZ3RoACRhY2NlbnRfYmVmb3JlAF8wWiVkAHNyYwBJU08tODg1OS00AC0tACcAJyBbJXNdICAlcwoAJGFiYnJldgBzdHJlc3NPcHQAJXMvJXMAQWRsbQBfJWNkAElTTy04ODU5LTUAJycAJWMlcwBBZmFrAHN0cmVzc1J1bGUAJGRvdWJsZQAlYyVkSQA9AElTTy04ODU5LTYAJGFsdAB0dW5lcwBBZ2hiACVjJWRVAF86AElTTy04ODU5LTcAX2RwdDIA2Y4gINmPICDZkAB3b3JkcwBfJWRNJWRvAEFob20Ac3RyZW5ndGgASVNPLTg4NTktOAAkYWx0MQBfIQDYpyDZiCDZigBuYW1lAF8lZE0lZGUAQXJhYgAlYyVkQgA6AElTTy04ODU5LTkAJGFsdDIA2Kgg2b4g2Kog2Kkg2Ksg2Kwg2K0g2K4g2K8g2LAg2LEg2LIg2LMg2LQg2LUg2LYg2Lcg2Lgg2Lkg2Log2YEg2YIg2YMg2YQg2YUg2YYg2KYg2KQg2KEg2KMg2KIg2KUg2YcAXyVkTSVkeABBcm1pAHRpbWUAbGFuZ3VhZ2UAQAAkYWx0MwBJU08tODg1OS0xMADYtSDYtiDYtyDYuABnZW5kZXIAQXJtbgB4bWw6YmFzZQBfJWRNJWQAJGFsdDQASVNPLTg4NTktMTEAQC0AfHwAJXgAQXZzdAB2YXJpYW50cwBfMG9mACRhbHQ1AElTTy04ODU5LTEzACDZkSAAZm9ybWFudABfJXMlZG8AQmFsaQAlZAAkYWx0NgBJU08tODg1OS0xNAAxAEJhbXUAc3BlYWsAcGl0Y2gAXyVzJWRlACRhbHQ3AElTTy04ODU5LTE1ACNYMQBfJXMlZHgAQmFzcwBwaG9uZW1lcwAkY29tYmluZQB2b2ljZQA/AElTTy04ODU5LTE2AGRpY3Rpb25hcnkAcHJvc29keQAkZG90AEJhdGsAXyVzJWQAS09JOC1SAC0AJGhhc2RvdABzYXktYXMAQmVuZwByZXBsYWNlAF9eXwBMYXRpbi05AF8wTTIAQmhrcwBlY2hvAG1hcmsAJG1heDMAX1gxAF8lZE0xAFRJUy02MjAAX3wAQmxpcwBmbHV0dGVyACRicmsAVVMtQVNDSUkAXzBNMQAkdGV4dAByb3VnaG5lc3MAJXMlcwBwAEJvcG8AXzo6AFVURi04AGNsYXJpdHkAQnJhaAAkdmVyYmYAcGhvbmVtZQAxTUEAY3AzNjcAdCMAQnJhaQAkdmVyYnNmAHRvbmUAc3ViADBNQQBjcDgxOQAnIQBCdWdpAHZvaWNpbmcAJG5vdW5mAHR0czpzdHlsZQBfO18AY3NBU0NJSQAwTUIAYXVkaW8AYnJlYXRoACRwYXN0ZgBCdWhkADFNACNAAGNzSVNPODg1OTEzAGJyZWF0aHcAZW1waGFzaXMAQ2FrbQAkdmVyYgAjYQAwTQBjc0lTTzg4NTkxNABDYW5zAF8wQ28AJG5vdW4AYnJlYWsAI2UAbWJyb2xhAGNzSVNPODg1OTE1ACRwYXN0AGNvbnNvbmFudHMAQ2FyaQAjaQBtZXRhZGF0YQBjc0lTTzg4NTkxNgBfMEMwAGtsYXR0AGJyACNvAENoYW0AJHZlcmJleHRlbmQAXzBDAGNzSVNPTGF0aW4xACN1AENoZXIAJGNhcGl0YWwAbGkAJXMlYyVzJWMAZmFzdF90ZXN0MgBjc0lTT0xhdGluMgBDaXJ0ACRhbGxjYXBzAE1pc3NpbmcgZmlsZTogJXMAXzBhbmQAc3BlZWQAZGQAY3NJU09MYXRpbjMAQ29wdAAkYWNjZW50AG1haW50YWluZXIAXyVkQ28AcGhvbmVtZXRhYmxlIGlzIG1pc3NpbmcAaW1nAGNzSVNPTGF0aW40AENwcnQAc3RhdHVzACRzZW50ZW5jZQB0ZABLZXl3b3JkICdwaG9uZW1lJyBleHBlY3RlZABjc0lTT0xhdGluNQBfJWRDMAAkb25seQBUb28gbWFueSBwcm9jZWR1cmVzAEN5cmwAbWFsZQBfJWRDAGNzSVNPTGF0aW42AGgxACRvbmx5cwBDeXJzACVzJXMlcyVzAGZlbWFsZQBjc0lTT0xhdGluQXJhYmljACUuM2RQAGgyACVzJXMlYyVzACRzdGVtAE1pc3NpbmcgJ2VuZHBob25lbWUnIGJlZm9yZSBlbmQtb2YtZmlsZQAlZCAlZCAlZCAlZCAlZABjc0lTT0xhdGluQ3lyaWxsaWMARGV2YQBoMwBfJWRmeABNb3JlIHRoYW4gb25lIHBob25lbWUgdHlwZTogJXMARG9ncgBjc0lTT0xhdGluR3JlZWsAJGF0ZW5kAE5VTEwAaDQAY3NJU09MYXRpbkhlYnJldwBEc3J0ACRhdHN0YXJ0ACVkICVzICVzAGhyAF8lZGYATlVMTABfJWQlY3gAc2NyaXB0AER1cGwAJG5hdGl2ZQAhdiVjAGNzS09JOFIAJXgAc3R5bGUARWd5ZAAlc20lZABfJWQlYwAkPwBjc1RJUzYyMABmb250AEVneWgAYSBwaG9uZW1lIHR5cGUgb3IgbWFubmVyIG9mIGFydGljdWxhdGlvbiBtdXN0IGJlIHNwZWNpZmllZCBiZWZvcmUgc3RhcnR0eXBlACR0ZXh0bW9kZQBfJWRlACVzZiVkAGNzVVRGOAAlcy92b2ljZXMvJXMARWd5cABfJWRvAGEgcGhvbmVtZSB0eXBlIG9yIG1hbm5lciBvZiBhcnRpY3VsYXRpb24gbXVzdCBiZSBzcGVjaWZpZWQgYmVmb3JlIGVuZHR5cGUAJHBob25lbWVtb2RlAGNzVW5pY29kZQBiAGVuZHR5cGUgbXVzdCBlcXVhbCBzdGFydHR5cGUgZm9yIGNvbnNvbmFudHMAdW5wcgBhbGwAaQBhcmFiaWMAXyVkYQBFbGJhAG5vcHJlZml4AHZvaWNpbmdzd2l0Y2ggY2Fubm90IGJlIHVzZWQgb24gdm93ZWxzAGVtAEV0aGkAXyVkAGN5cmlsbGljAHN0cmVzcyBwaG9uZW1lcyBjYW4ndCBjb250YWluIHByb2dyYW0gaW5zdHJ1Y3Rpb25zAEdlb2sAZ3JlZWsAY29kZQBfJWRYJWMAd19hbHQxAFdhcm5pbmc6IG1heGltdW0gbnVtYmVyICVkIG9mIChOX1ZPSUNFU19MSVNUID0gJWQgLSAxKSByZWFjaGVkCgAlcyVjJXMAR2VvcgBfJWRYZgAlYyVkJWMAZ3JlZWs4AHdfYWx0MgBNaXNzaW5nICdlbmRwaG9uZW1lJyBiZWZvcmUgJyVzJwBoZWJyZXcAZGVmYXVsdABHbGFnAF8lZFgATWlzc2luZyBFTkRJRgB3X2FsdDMARXJyb3IgKCVzKTogZ2VuZGVyIGF0dHJpYnV0ZSBzcGVjaWZpZWQgb24gYSBsYW5ndWFnZSBmaWxlCgBzaWxlbnQAR29uZwAnZW5kcGhvbmVtZScgbm90IGV4cGVjdGVkIGhlcmUAaXNvLWNlbHRpYwB3X2FsdDQAX29yZDIwAHgtc29mdABHb25tAFBob25lbWUgdHlwZSBpcyBtaXNzaW5nAF9vcmQAaXNvLWlyLTYAd19hbHQ1AHNvZnQAR290aAB3X2FsdDYAaXNvLWlyLTEwMABCYWQgcGhvbmVtZSBuYW1lICclcycAd19hbHQAJXMlcyVzAEdyYW4AbG91ZABpc28taXItMTAxACVzOiAnJXMnLgBHcmVrAHgtbG91ZABpc28taXItMTA5AHBfYWx0MQB4LXNsb3cAR3VqcgBwX2FsdDIAaXNvLWlyLTExMABFeHBlY3RlZCAnKCcAc2xvdwBHdXJ1AGlzby1pci0xMjYAcF9hbHQzAEV4cGVjdGVkICcpJwBmYXN0AEhhbmcAVmFsdWUgJWQgaXMgZ3JlYXRlciB0aGFuIG1heGltdW0gJWQAaXNvLWlyLTEyNwBwX2FsdDQAeC1mYXN0AEhhbmkAaXNvLWlyLTEzOABwX2FsdDUAQ2Fubm90IGZpbmQgcGhvbmVtZSAnJXMnIHRvIGltcG9ydC4AeC1sb3cASGFubwBwX2FsdDYAaXNvLWlyLTE0NABQaG9uZW1lIGltcG9ydCB3aWxsIG92ZXJyaWRlIHNldCBwcm9wZXJ0aWVzLgBsb3cAcF9hbHQASGFucwBpc28taXItMTQ4AFBob25lbWUgcmVmZXJlbmNlIG5vdCBmb3VuZDogJyVzJwAlcyVzLnR4dABIYW50AGhpZ2gAaXNvLWlyLTE1NwBjb21waWxlOiB1bmtub3duIHBob25lbWUgdGFibGU6ICclcycAJXMlcwBIYXRyAHgtaGlnaABQaG9uZW1lIHByb2dyYW0gdG9vIGxhcmdlAGlzby1pci0xOTkASGVicgBpc28taXItMjI2AEV4cGVjdGVkIGEgY29uZGl0aW9uLCBub3QgJyVzJwBzcGFjZSAAQ2FuJ3QgYWxsb2NhdGUgbWVtb3J5CgBFeHBlY3RlZCBsaXN0IG9mIHN0cmVzcyBsZXZlbHMASGlyYQBsYXRpbjEAdGFiIAAJJWQgZW50cmllcwoASGx1dwBsYXRpbjIAVW5leHBlY3RlZCBrZXl3b3JkICclcycAdW5kZXJzY29yZSAAJTVkOiBVbmtub3duIGtleXdvcmQ6ICVzCgBIbW5nAHBob25lbWUAbGF0aW4zAGRvdWJsZS1xdW90ZSAAJTVkOiBNaXNzaW5nICcoJwoASHJrdABlbmRwaG9uZW1lAG1hbGUAbGF0aW40AEh1bmcAZmVtYWxlAEV4cGVjdGVkIEFORCwgT1IsIFRIRU4AbGF0aW41ACU1ZDogTmVlZCB0byBjb21waWxlIGRpY3Rpb25hcnkgYWdhaW4KAEluZHMAbmV1dHJhbABFTFNFIG5vdCBleHBlY3RlZABsYXRpbjYAJTVkOiBCYWQgcGhvbmVtZSBbJXNdIChVKyV4KSBpbjogJXMgICVzCgBVKyV4AEl0YWwASUYgYmxvY2sgaXMgdG9vIGxvbmcAeG1sOmxhbmcAbGF0aW44AHZhcmlhbnQARUxJRiBub3QgZXhwZWN0ZWQASmF2YQBsYXRpbjEwACU1ZDogRGljdGlvbmFyeSBsaW5lIGxlbmd0aCB3b3VsZCBvdmVyZmxvdyB0aGUgZGF0YSBidWZmZXI6ICVkCgBKcGFuAGFnZQBFTkRJRiBub3QgZXhwZWN0ZWQAbDEAJTVkOiBUd28gbWFueSBwYXJ0cyBpbiBhIG11bHRpLXdvcmQgZW50cnk6ICVkCgBnZW5kZXIASnVyYwBQYXJhbWV0ZXIgPiAxMjcAbDIALy8AJXMrJXMAS2FsaQAuTABQYXJhbWV0ZXIgPCAtMTI4AGwzAGd0AC5yZXBsYWNlAEthbmEAUGFyYW1ldGVyID4gMjU1AGw0AGx0AEtoYXIALmdyb3VwAERGVABsNQAweCV4ACVzLyVzLndhdgBLaG1yAGFtcABsNgBxdW90AENhbid0IHJlYWQgZmlsZTogJXMAS2hvagBsOAAlNWQ6IEdyb3VwIG5hbWUgbG9uZ2VyIHRoYW4gMiBieXRlcyAoVVRGOCkARmlsZSBub3QgU1BFQyBvciBSSUZGOiAlcwBuYnNwAEtuZGEAbDEwAApFeGNlZWRlZCBsaW1pdCBvZiBydWxlcyAoJWQpIGluIGdyb3VwICclcycKAHVzAGFwb3MAS29yZQAlYyAgMHglLjV4ICAlcwoAAMDg8P8fDwdwCnEKAAAoACkAWwBdAHsAfQA8AD4AIgAnAGAAqwC7AAowCzA84A=="),S(k,93904,"ICAgICAgICAgICYlKyNTRFpBTCEgQD9KTktWP1RYP1dBQkNIRkdZPT0sLCcqICAAIAAhACIAsAIkACUA5gDIAigAKQB+AisAzAItAC4ALwBSAjEAMgBcAjQANQA2ADcAdQI5ANACsgI8AD0APgCUAlkCUQKyA+cA8ABbAkYAYgInAWoCXwJLAGsCcQJLAVQCpgNjAoACgwK4A4oCjAJTAccD+ACSAioDXABdAF4AXwBgAGEAYgBjAGQAZQBmAGECaABpAGoAawBsAG0AbgBvAHAAcQByAHMAdAB1AHYAdwB4AHkAegB7AHwAfQADA38APT0sLCcnAAMCBAUGBxoAAAAAAQECAwMEBQYHBwgJCgsAAAEBAgIDAwQFBgcHCAkKAAABAgMDAwQFBgcHBwgJClNldFdvcmRTdHJlc3MA5ADrAO8A9gD8AP8AAAAAAAAAYWFhYWFhYWNlZWVlaWlpaWRub29vb28Ab3V1dXV5dHNhYWFhYWFhY2VlZWVpaWlpZG5vb29vbwBvdXV1dXl0eWFhYWFhYWNjY2NjY2NjZGRkZGVlZWVlZWVlZWVnZ2dnZ2dnZ2hoaGhpaWlpaWlpaWlpaWlqamtra2xsbGxsbGxsbGxubm5ubm5ubm5vb29vb29vb3JycnJycnNzc3Nzc3NzdHR0dHR0dXV1dXV1dXV1dXV1d3d5eXl6enp6enpzYmJiYgAAb2NjZGRkZGRlZWVmZmdnaGlpa2tsbG1ubm9vb29vcHB5AABzc3R0dHR1dXV2eXl6enp6enp6AAAAd3R0dGtkZGRsbGxubm5hYWlpb291dXV1dXV1dXV1ZWFhYWFhYWdnZ2dra29vb296empkZGRnZ3d3bm5hYWFhb29hYWFhZWVlZWlpaWlvb29vcnJycnV1dXVzc3R0eXloaG5kb296emFhZWVvb29vb29vb3l5bG50amRxYWNjbHRzegAAYnV2ZWVqanFxcnJ5eWFhYWJvY2RkZWVlZWVl"),S(k,94846,"TG9va3VwRGljdDIAAAAAAAAAgACBAIIAgwCEAIUAhgCHAIgAiQCKAIsAjACNAI4AjwCQAJEAkgCTAJQAlQCWAJcAmACZAJoAmwCcAJ0AngCfAKAAoQCiAKMApAClAKYApwCoAKkAqgCrAKwArQCuAK8AsACxALIAswC0ALUAtgC3ALgAuQC6ALsAvAC9AL4AvwDAAMEAwgDDAMQAxQDGAMcAyADJAMoAywDMAM0AzgDPANAA0QDSANMA1ADVANYA1wDYANkA2gDbANwA3QDeAN8A4ADhAOIA4wDkAOUA5gDnAOgA6QDqAOsA7ADtAO4A7wDwAPEA8gDzAPQA9QD2APcA+AD5APoA+wD8AP0A/gD/AIAAgQCCAIMAhACFAIYAhwCIAIkAigCLAIwAjQCOAI8AkACRAJIAkwCUAJUAlgCXAJgAmQCaAJsAnACdAJ4AnwCgAAQB2AJBAaQAPQFaAacAqABgAV4BZAF5Aa0AfQF7AbAABQHbAkIBtAA+AVsBxwK4AGEBXwFlAXoB3QJ+AXwBVAHBAMIAAgHEADkBBgHHAAwByQAYAcsAGgHNAM4ADgEQAUMBRwHTANQAUAHWANcAWAFuAdoAcAHcAN0AYgHfAFUB4QDiAAMB5AA6AQcB5wANAekAGQHrABsB7QDuAA8BEQFEAUgB8wD0AFEB9gD3AFkBbwH6AHEB/AD9AGMB2QKAAIEAggCDAIQAhQCGAIcAiACJAIoAiwCMAI0AjgCPAJAAkQCSAJMAlACVAJYAlwCYAJkAmgCbAJwAnQCeAJ8AoAAmAdgCowCkAP3/JAGnAKgAMAFeAR4BNAGtAP3/ewGwACcBsgCzALQAtQAlAbcAuAAxAV8BHwE1Ab0A/f98AcAAwQDCAP3/xAAKAQgBxwDIAMkAygDLAMwAzQDOAM8A/f/RANIA0wDUACAB1gDXABwB2QDaANsA3ABsAVwB3wDgAOEA4gD9/+QACwEJAecA6ADpAOoA6wDsAO0A7gDvAP3/8QDyAPMA9AAhAfYA9wAdAfkA+gD7APwAbQFdAdkCgACBAIIAgwCEAIUAhgCHAIgAiQCKAIsAjACNAI4AjwCQAJEAkgCTAJQAlQCWAJcAmACZAJoAmwCcAJ0AngCfAKAABAE4AVYBpAAoATsBpwCoAGABEgEiAWYBrQB9Aa8AsAAFAdsCVwG0ACkBPAHHArgAYQETASMBZwFKAX4BSwEAAcEAwgDDAMQAxQDGAC4BDAHJABgBywAWAc0AzgAqARABRQFMATYB1ADVANYA1wDYAHIB2gDbANwAaAFqAd8AAQHhAOIA4wDkAOUA5gAvAQ0B6QAZAesAFwHtAO4AKwERAUYBTQE3AfQA9QD2APcA+ABzAfoA+wD8AGkBawHZAoAAgQCCAIMAhACFAIYAhwCIAIkAigCLAIwAjQCOAI8AkACRAJIAkwCUAJUAlgCXAJgAmQCaAJsAnACdAJ4AnwCgAAEEAgQDBAQEBQQGBAcECAQJBAoECwQMBK0ADgQPBBAEEQQSBBMEFAQVBBYEFwQYBBkEGgQbBBwEHQQeBB8EIAQhBCIEIwQkBCUEJgQnBCgEKQQqBCsELAQtBC4ELwQwBDEEMgQzBDQENQQ2BDcEOAQ5BDoEOwQ8BD0EPgQ/BEAEQQRCBEMERARFBEYERwRIBEkESgRLBEwETQROBE8EFiFRBFIEUwRUBFUEVgRXBFgEWQRaBFsEXASnAF4EXwSAAIEAggCDAIQAhQCGAIcAiACJAIoAiwCMAI0AjgCPAJAAkQCSAJMAlACVAJYAlwCYAJkAmgCbAJwAnQCeAJ8AoAD9//3//f+kAP3//f/9//3//f/9//3/DAatAP3//f/9//3//f/9//3//f/9//3//f/9//3/Gwb9//3//f8fBv3/IQYiBiMGJAYlBiYGJwYoBikGKgYrBiwGLQYuBi8GMAYxBjIGMwY0BjUGNgY3BjgGOQY6Bv3//f/9//3//f9ABkEGQgZDBkQGRQZGBkcGSAZJBkoGSwZMBk0GTgZPBlAGUQZSBv3//f/9//3//f/9//3//f/9//3//f/9//3/gACBAIIAgwCEAIUAhgCHAIgAiQCKAIsAjACNAI4AjwCQAJEAkgCTAJQAlQCWAJcAmACZAJoAmwCcAJ0AngCfAKAAGCAZIKMArCCvIKYApwCoAKkAegOrAKwArQD9/xUgsACxALIAswCEA4UDhgO3AIgDiQOKA7sAjAO9AI4DjwOQA5EDkgOTA5QDlQOWA5cDmAOZA5oDmwOcA50DngOfA6ADoQP9/6MDpAOlA6YDpwOoA6kDqgOrA6wDrQOuA68DsAOxA7IDswO0A7UDtgO3A7gDuQO6A7sDvAO9A74DvwPAA8EDwgPDA8QDxQPGA8cDyAPJA8oDywPMA80DzgP9/4AAgQCCAIMAhACFAIYAhwCIAIkAigCLAIwAjQCOAI8AkACRAJIAkwCUAJUAlgCXAJgAmQCaAJsAnACdAJ4AnwCgAP3/ogCjAKQApQCmAKcAqACpANcAqwCsAK0ArgCvALAAsQCyALMAtAC1ALYAtwC4ALkA9wC7ALwAvQC+AP3//f/9//3//f/9//3//f/9//3//f/9//3//f/9//3//f/9//3//f/9//3//f/9//3//f/9//3//f/9//3//f8XINAF0QXSBdMF1AXVBdYF1wXYBdkF2gXbBdwF3QXeBd8F4AXhBeIF4wXkBeUF5gXnBegF6QXqBf3//f8OIA8g/f+AAIEAggCDAIQAhQCGAIcAiACJAIoAiwCMAI0AjgCPAJAAkQCSAJMAlACVAJYAlwCYAJkAmgCbAJwAnQCeAJ8AoAChAKIAowCkAKUApgCnAKgAqQCqAKsArACtAK4ArwCwALEAsgCzALQAtQC2ALcAuAC5ALoAuwC8AL0AvgC/AMAAwQDCAMMAxADFAMYAxwDIAMkAygDLAMwAzQDOAM8AHgHRANIA0wDUANUA1gDXANgA2QDaANsA3AAwAV4B3wDgAOEA4gDjAOQA5QDmAOcA6ADpAOoA6wDsAO0A7gDvAB8B8QDyAPMA9AD1APYA9wD4APkA+gD7APwAMQFfAf8AgACBAIIAgwCEAIUAhgCHAIgAiQCKAIsAjACNAI4AjwCQAJEAkgCTAJQAlQCWAJcAmACZAJoAmwCcAJ0AngCfAKAABAESASIBKgEoATYBpwA7ARABYAFmAX0BrQBqAUoBsAAFARMBIwErASkBNwG3ADwBEQFhAWcBfgEVIGsBSwEAAcEAwgDDAMQAxQDGAC4BDAHJABgBywAWAc0AzgDPANAARQFMAdMA1ADVANYAaAHYAHIB2gDbANwA3QDeAN8AAQHhAOIA4wDkAOUA5gAvAQ0B6QAZAesAFwHtAO4A7wDwAEYBTQHzAPQA9QD2AGkB+ABzAfoA+wD8AP0A/gA4AYAAgQCCAIMAhACFAIYAhwCIAIkAigCLAIwAjQCOAI8AkACRAJIAkwCUAJUAlgCXAJgAmQCaAJsAnACdAJ4AnwCgAAEOAg4DDgQOBQ4GDgcOCA4JDgoOCw4MDg0ODg4PDhAOEQ4SDhMOFA4VDhYOFw4YDhkOGg4bDhwOHQ4eDh8OIA4hDiIOIw4kDiUOJg4nDigOKQ4qDisOLA4tDi4OLw4wDjEOMg4zDjQONQ42DjcOOA45DjoO/f/9//3//f8/DkAOQQ5CDkMORA5FDkYORw5IDkkOSg5LDkwOTQ5ODk8OUA5RDlIOUw5UDlUOVg5XDlgOWQ5aDlsO/f/9//3//f+AAIEAggCDAIQAhQCGAIcAiACJAIoAiwCMAI0AjgCPAJAAkQCSAJMAlACVAJYAlwCYAJkAmgCbAJwAnQCeAJ8AoAAdIKIAowCkAB4gpgCnANgAqQBWAasArACtAK4AxgCwALEAsgCzABwgtQC2ALcA+AC5AFcBuwC8AL0AvgDmAAQBLgEAAQYBxADFABgBEgEMAckAeQEWASIBNgEqATsBYAFDAUUB0wBMAdUA1gDXAHIBQQFaAWoB3AB7AX0B3wAFAS8BAQEHAeQA5QAZARMBDQHpAHoBFwEjATcBKwE8AWEBRAFGAfMATQH1APYA9wBzAUIBWwFrAfwAfAF+ARkggACBAIIAgwCEAIUAhgCHAIgAiQCKAIsAjACNAI4AjwCQAJEAkgCTAJQAlQCWAJcAmACZAJoAmwCcAJ0AngCfAKAAAh4DHqMACgELAQoepwCAHqkAgh4LHvIerQCuAHgBHh4fHiABIQFAHkEetgBWHoEeVx6DHmAe8x6EHoUeYR7AAMEAwgDDAMQAxQDGAMcAyADJAMoAywDMAM0AzgDPAHQB0QDSANMA1ADVANYAah7YANkA2gDbANwA3QB2Ad8A4ADhAOIA4wDkAOUA5gDnAOgA6QDqAOsA7ADtAO4A7wB1AfEA8gDzAPQA9QD2AGse+AD5APoA+wD8AP0AdwH/AIAAgQCCAIMAhACFAIYAhwCIAIkAigCLAIwAjQCOAI8AkACRAJIAkwCUAJUAlgCXAJgAmQCaAJsAnACdAJ4AnwCgAKEAogCjAKwgpQBgAacAYQGpAKoAqwCsAK0ArgCvALAAsQCyALMAfQG1ALYAtwB+AbkAugC7AFIBUwF4Ab8AwADBAMIAwwDEAMUAxgDHAMgAyQDKAMsAzADNAM4AzwDQANEA0gDTANQA1QDWANcA2ADZANoA2wDcAN0A3gDfAOAA4QDiAOMA5ADlAOYA5wDoAOkA6gDrAOwA7QDuAO8A8ADxAPIA8wD0APUA9gD3APgA+QD6APsA/AD9AP4A/wCAAIEAggCDAIQAhQCGAIcAiACJAIoAiwCMAI0AjgCPAJAAkQCSAJMAlACVAJYAlwCYAJkAmgCbAJwAnQCeAJ8AoAAEAQUBQQGsIB4gYAGnAGEBqQAYAqsAeQGtAHoBewGwALEADAFCAX0BHSC2ALcAfgENARkCuwBSAVMBeAF8AcAAwQDCAAIBxAAGAcYAxwDIAMkAygDLAMwAzQDOAM8AEAFDAdIA0wDUAFAB1gBaAXAB2QDaANsA3AAYARoC3wDgAOEA4gADAeQABwHmAOcA6ADpAOoA6wDsAO0A7gDvABEBRAHyAPMA9ABRAfYAWwFxAfkA+gD7APwAGQEbAv8AgACBAIIAgwCEAIUAhgCHAIgAiQCKAIsAjACNAI4AjwCQAJEAkgCTAJQAlQCWAJcAmACZAJoAmwCcAJ0AngCfAKAABAEFAUEBrCAeIGABpwBhAakAGAKrAHkBrQB6AXsBsACxAAwBQgF9AR0gtgC3AH4BDQEZArsAUgFTAXgBfAHAAMEAwgACAcQABgHGAMcAyADJAMoAywDMAM0AzgDPABABQwHSANMA1ABQAdYAWgFwAdkA2gDbANwAGAEaAt8A4ADhAOIAAwHkAAcB5gDnAOgA6QDqAOsA7ADtAO4A7wARAUQB8gDzAPQAUQH2AFsBcQH5APoA+wD8ABkBGwL/AP3//f/9//3//f/9//3//f/9//3//f/9//3//f/9//3//f/9//3//f/9//3//f/9//3//f/9//3//f/9//3//f/9/wEJAgkDCQUJBgkHCQgJCQkKCQsJDgkPCRAJDQkSCRMJFAkRCRUJFgkXCRgJGQkaCRsJHAkdCR4JHwkgCSEJIgkjCSQJJQkmCScJKAkpCSoJKwksCS0JLgkvCV8JMAkxCTIJMwk0CTUJNgk3CTgJOQkgAD4JPwlACUEJQglDCUYJRwlICUUJSglLCUwJSQlNCTwJZAn9//3//f/9//3/IAAwADEAMgAzADQANQA2ADcAOAA5AP3//f/9//3//f8CAAAAAAAAAAEAAAADAAAA//36+Pb08vDu7Oro5uTi4N7c2tjW1NLQzszKyMbEwsC+vLq4trSysK6sqqimpKKgnpyamJaUkpCOjIqIhoSCgH58enh2dHJwbmxqaGZkYmBeXFpYVlRSUE5MSkhGREJAPjw6ODY0MjAuLCooJiQiIB4cGhgWFBIQDgwKCAYEAgAAAgQGCAoMDhASFBYYGhweICIkJigqLC4wMjQ2ODo8PkBCREZISkxOUFJUVlhaXF5gYmRmaGpsbnBydHZ4enx+gIKEhoiKjI6QkpSWmJqcnqCipKaoqqyusLK0tri6vL7AwsTGyMrMztDS1NbY2tze4OLk5ujq7O7w8vT2+Pr9///06uDWzMO6saifl4+Hf3hxamNcVlBKRD85NC8rJiIeGhcTEA0LCAYEAgEAAAAAAAAAAQIDBAUHCAoMDhATFRcaHR8iJSgsLjAyNDY5Oz1AQkVHSkxPUVRXWl1fYmVoa25xdHh7foGFiIuPkpaZnaCkqKyvs7e7v8PHy8/T19vgz8zJxsPAvbm0sKunopyXkoyGgXt1b2ljXVdQSkQ+ODMtJyIcFxINCAQCAgEAAAAAAAEBAgMEBQcICgwNDxIUFhkbHiEkJyotMDQ2ODo8P0FDRkhLTVBSVVhaXWBjZmlsb3J1eHt+gYWIi4+SlpmdoKSorK+zt7u/w8fLz9PX2+D/+fTu6eTf2tXQy8bBvbizr6qmoZ2ZlZCMiISAfXl1cW5qZ2NgXVlWU1BNSkdEQT48OTc0Mi8tKygmJCIgHhwaGRcVFBIRDw4NDAoJCAcGBQUEAwICAQE="),S(k,99845,"AQECAgMEBAUGBwgJCgsMDg8QEhMVFxgaHB4g0M7NzMrIx8XDwcC9u7i1s7CtqqejoJ2ZlpKPi4eEgHx4dHBtaWVhXVlVUU1KRkI+Ozc0MS8tKigmJCIgHhwaGRcVFBIRDw4NDAoJCAcGBQUEAwICAQE="),S(k,99973,"AQECAgMEBAUGBwgJCgsMDg8QEhMVFxgaHB4gmJmZmpydn6Gkp6mssLO2ur7BxcnN0dTY3N/j5urt8PL19/n7/P3+/v////////79+/r49vPx7uzp5uTg3drX09DMyMTAvLi0sKyno5+alpGNiIR/e3ZybWllYFxYVFBMSERAPDk1Mi8rKCYjIB0aFxUSDw0KCAcFAwIBAAAAAAD+///////+/fz6+Pb08e7r6OXh3trW0s3JxL+6trCrpqGclpGLhoB7dW9qZF9ZVE9JRD86NTArJiIdGRURDQoHBAMBAAAAAAAAAAABAQIEBQcJCw0QEhUYGx4iJSktMTU6PkNITFFXW15iZWhrbnF0dnh7fH6AgYKDg4SEg4OCgXJycXFwb21samhmZGFfXFpXVFFOS0hFQj87ODUyLywpJiMgHRsYFhQSEA4MCwoJCAcHBwcHBgUFBQUFBQUFBQYHBwgJCgwNDxASFBYYGx0gIyYpLC8zNzs/Q0dMUVZbYGVqb3R5f4SJj5Wboaets7rAx87V3OPq8fX3+vz9/v///v79/fz7+/r6+fj49/f29vX09PPz8vLx8PDv7u7t7Ovq6uno5+bl5OPi4eDe3dzb2djW1dPS0M7My8nHxcPAvry5t7Wyr62qp6ShnpqXlJCNiYWBfXl1cW1oZGFeW1dUUU1KRkNAPDk1Mi4qJyMfHBgUEQ0LCQcFBAMCAQAAAAAAAAAAAQEBAgIDAwQEBQYGBwgICQoLDAwNDg8QERITFBYXGBkbHB0fICIjJSYoKSstLzAyNDY4Ojw+QEJER0lLTlBSVVdaXV9iZWdqbXBzdnl8f4KGiYyQk5aanaCjpqmsr7K1uLu+wcTHys3Q09bZ3N/i5Ofp7O7w8vT2+Pr7/X9/f4CBg4SHiYyPkpaZnaGlqq6yt7vAxcnN0tba3uLm6u3w8/X4+vv8/f7+/fz7+ff08Ozn4tzVzsa9tKmekoiCfXdybGZgWlROSUI8NzItKCQfGxgUEQ4MCQcGBQQEBAQFBggKDRAUGB0jKS83PkdQWmRwfIOFiIqMjo+RkpOTAEAIAEYSAAAAAAAAGAwAAARQEgZOFgAAAAAAACI0AAAEWBYGUhYAAAAAAAAiQAAAAFwIAFxQAAAAAAAATAgBAABWBABeQgAAAAAAACIKAAAAPgoAPhQAAAAAAAAcEAAABEQSBkQWAAAAAAAAHiwAAAZAEABCIAAAAAAAACASAAACRC4AKiAAAAAAAAAuOgAABE4YBkgWAAAAAAAAKjQAAARYIgBAIAAAAAAAAC5SAAAAOAwAOBQAAAAAAAAYDAAAAEYSAEYYAAAAAAAAIBQAAAkAAAAJAAAAEAAAABAAAAAQAAAAFwAAADcAAAAgAAAAACgYCAAKNCAUCgYmGA4EAAYAAAAHAAAACQAAAAkAAAAUAAAAFAAAABQAAAAZAAAA5iAUCA=="),S(k,101072,"ZgNmAWYCpgSmAiYEpoooAmoDagFqAqoCbgNuAW4CrgIpALMEdAN0AXQCtAS0AgAAdAR6A3oBegK6An4BOQC+AgAApgMAAKYBAADmAwAAaAEAAGgCAAAoAwAA6AEAAOkBAABpBAAAqgMAAKoBAAAqAwAA6gMAAOoBAABsAgAArAEAACwDAAAsAgAAbQIAAG0EAACuBAAArgMAAK4BAADuAwAALgAAAO6LAABvAgAAMAIwAAAAcQEAADECAADxAQAAMQMAAHEEAABzAQAAMwIAAPMBMwAAADMAAAC0AwAAtAEAAPQCAAC0igAAdwEAADcCAAD3AQAAeAEAAHgCAAA4AgAA+AEAADkCAAD5AQAAeQQAALoEAAC6AwAAugEAADoEAAD6AgAA+gMAAHwCAAB+AgAAAAB/AQAAPwMAAP8BOACmAAEAgQBnBQAAKAEpBWkF6gAAAEIFAADDAEMdAADvBGwFLABsAAQAAACtAG0FAADuBAUAbgCxBPEEMQXxj7IAAAByBQAAMwVzAPQEtJoAAAgAtwCOADcVAAA3BQAAzQB3ALcIOAUAAG8FyQAJAbkAOQX6BAoAewW7ALwAvgB+AD8FPwEAAAsBAADMAIwAAAAAAGcAAABsDW0ALwGwAHEAdgVMBEwc6Y8AAOnPOY4AADnO"),S(k,101586,"sQNZAlsCswO5A1MByQPGA4MCxQOSApQCfgJ8AgAAqgBhgLIAMoCzADOAuQAxgLoAb4CwAmiAsQJmgrICaoCzAnKAtAJ5grUCe4K2AoGCtwJ3gLgCeYDAApSCwQKVguACY4LhAmyA4gJzgOMCeIBwIDCAcSBpgHQgNIB1IDWAdiA2gHcgN4B4IDiAeSA5gHogK4B7IC2AfCA9gH0gKIB+ICmAfyBugIAgMECBIDFAgiAyQIMgM0CEIDRAhSA1QIYgNkCHIDdAiCA4QIkgOUCKICtAiyAtQIwgPUCNIChAjiApQJAgYUCRIGVAkiBvQJMgeECUIFlClSBoQJYga0CXIGxAmCBtQJkgbkCaIHBAmyBzQJwgdEAAAAAAaXhjbXZsZA=="),S(k,101888,"AQAAAAoAAABkAAAA6AMAAAUAAAAyAAAA9AEAAAAXCgkYExgY"),S(k,101936,"///////9+fXy7uvo5OHe2tjV0s/MycbEwb+8ure1s7CurKmopaOhn56bmZiWlJKRj42LiYiHhYOCgX9+fHt6eHd2dXNycXBvbm1ramloZ2ZlZGNiYWBfXl1cW1pZWVhXVlVUU1JSUVBQT05NTExLS0pJSEdHRkVFRENDQkJBQEA/Pj49PTw7Ozo6OTk4ODc2NjU1NDQ0MzIyMTEwMC8vLi4uLS0sLCwrKyopKCgoJycnJiYmJSUlJCQjIyMjIiIiISEhICAfHx8eHh4dHR0dHBwbGxsbGhoaGhkZGRgYGBgXFxcXFhYWFRUVFRQUFBQTExMSEhERERAQEBAQEA8PDw8ODg4NDQ0MDAwMCwsLCwoKCgkJCQgICAAAAAAAAAAAeHl4d3d2dnV0dHNycXBwb29ubWxrampoZ2dmZmZlZWNiYmFgYF9eXVtaW1pZWFZVVlVVVFJRUE9NTk5MTUtLSklHSEZFRUVDQUA/Pz89PTs7Ozo4OTo4NjU0NDU0NDIwLy8tLi0="),S(k,102336,"FhYWFhYWFhUVFRUUFBMTEhEQDw8PDw8PDwAAAAAAAABkeGRpZG5uZF9kaXhpbn2Ch3N9ZGl4S2RLaXhVS2RpeFVpX3N4ZF9kbnhfaWRzeGRkZGl4ZGlfc3huX2RpeGRpaXp9bmlkaXhkaWl6fW5pZGl4X2lkc3huZGRkeGRkZGRkZGRk"),S(k,102480,"ZJZkaW5zbm5uZGmWaW59h4xzh2RpllppWnqHZFpkaZZkaWR6h2RkZGmWZGlpc4duaWRplmRpaXqCeH1kaZZkaW56fXNuZGmWZGlpeod4aWRplmRpaXOHbmlkZGRkZGRkZGRkZA=="),S(k,102592,"bnhkbm5ubm5ubm54ZG5ubm5ubm5ueGRuZG5ubmRubnhkbm5ubm5ubm54ZG5ubm5ubm5ueGRubm5ubm5ubnhkbm5ubm5ubm54ZG5ubm5ubm5ueGRubm5ubm5ubnhkbm5ubm5ubg=="),S(k,102708,"rwAAAGQAAAAyAAAAMg=="),S(k,102744,"ZA=="),S(k,102764,"MjIoRlpkZGRGboeWZGRLZHiWAAAAAAAABwAAAA4AAAAVAAAAKAAAAFAAAAAAAAAAAFNBUFIAQwAAAAAARgAAAAAAAAABAAAAAgAAAAQAAAAPAAAAAAEAAAEBAAEBAgQAAAAAAPMAEAEAAQABAAEAAQAB8ADwAPA="),S(k,102898,"QABaAG4AgACPAJwAqQC1AMAAygDUAN0A5gDvAPcAAAEHAQ8BFgEeASUBLAEyATkBQAFGAUwBUgFYAV4BZAFqAW8BdQF6AYABhQGKAY8BlAGZAZ4BowGoAa0BsgG2AbsBwAHEAckBzQHRAdYB2gHeAeMB5wHrAe8B8wH3AfsBAAIDAgcCCwIPAhMCFwIbAh8CIgImAioCLQIxAjUCOAI8AkACQwJHAkoCTgJRAlQCWAJbAl8CYgJlAmkCbAJvAnMCdgJ5AnwCgAKDAoYCiQKMAo8CkgKWApkCnAKfAqICpQKoAqsCrgKxArQCtwK6Ar0CwALCAsUCyALLAs4C0QLUAtYC2QLcAt8C4gLkAucC6gLtAu8C8gL1AvcC+gL9AgADAgMFAwcDCgMNAw8DEgMVAxcDGgMcAx8DIQMkAycDKQMsAy4DMQMzAzYDOAM7Az0DQANCA0QDRwNJA0wDTgNRA1MDVQNYA1oDXQNfA2EDZANmA2gDawNtA28DcgN0A3YDeQN7A30DgAOCA4QDhgMAAAGqAqytAwQFsLGys7S0tgYHCLkJCrwMDQ4PEBESYWJjZGVmZ2hpamtsbW5vcHFyc3R1"),S(k,103360,"YAYAAPAGAABmCQAA5gkAAGYKAADmCgAAZgsAAOYLAABmDAAA5gwAAGYNAABQDgAA0A4AACAPAABAEAAAkBA="),S(k,103440,"5gDmAOYA5gAAAAAA5gDmAL4AqgC+AMgAAAAAAL4A8AC+AL4A0gDSAAAAAADSANIAyADIANIA0gAAAAAA5gDmAOYA5gDwAPAAAAAAAAQBBAGqAIwA3ADcAAAAAAD6AA4BoACMAMgAjAAAAAAA8ACgALQAtADSANIAAAAAAOYA8ACqANwAtAC0AAAAAAD6AA4BlgCCAMgAyAAAAAAADgEOAbYAjADcANwAAAAAAPgAEwGbALQA0gDSAAAAAAAOASwBwwMAAAAAAABsAAAAAAAAAKAAkQCbAJYAAAAAAMgA9QAnAAAAtwAAAAAAAADCugAAyADIAMgAyAAAAAAA0gDmAAABAgMEBQYHCAkKCwwNDg8QERITFBUWFxgZGgAAAAAAABscHR4fICEiIyQlJicoKSorAAAs"),S(k,103790,"LQAAAAAAAAAu"),S(k,103816,"Lw=="),S(k,103833,"MAAAAAAAMQ=="),S(k,103856,"Mg=="),S(k,103868,"MwAAAK0AAQBABgEADCAtAAAAAAC+AL4A0gDSAAAAAADmAPoAoACWAMgAyAAAAAAA+gAEAbkAwwDDAL4AAAAAANIA3AD6AMgA+gD6AAAAAAD6APoAMjM0Njk6PD0+P0BBQkNERkdJSktMTU5PUFFSU1RWAACWAIwAtAC0AAAAAADIAMgAbA=="),S(k,104016,"oADIALQAtAAAAAAA3ADwALQAoADIAMgAAAAAAPAA+gBjAAAAZgAAAGgAAABrAAAAcAAAAHQAAAB4AAAA/g=="),S(k,104096,"oACMAJYApQAAAAAA2gAxAZEAkQCqAKAAAAAAAEoBXgEuAAAALAAAACcAAADIAg=="),S(k,104160,"MTIzNTY3OTo7PD4/QEFCREVGR0hJSktMTU5PUFFSU1RW"),S(k,104208,"vgC0AOYA5gAAAAAA+gD6ABESExQWFxkaGxwdHyAhIiQlJicoKSosc3uDmwAAAAAAtAC0AL4AtAAAAAAA5gDwALQAtAC0AKAAAAAAAOYAtABABAAAMAQAADUEAAA4BAAAOQQAAD4EAABDBAAASwQAAE0EAABOBAAATwQAAFAEAABRBAAAVgQAAFcEAABdBAAAXgQ="),S(k,104368,"tACgAMgAyAAAAAAA3ADmAKAAhwDSANIAAAAAAAQBGAGgAIwAyADIAAAAAADcAOYAyADIAMgAyAAAAAAAyADIAKAAvgCvAK8AAAAAAMgA0gCqAHMA0gDwAAAAAAAEARgBqgCqALQAtAAAAAAA8AAEAZYAtADIAMgAAAAAANIA+gCWAJYAtAC0AAAAAAAsASwBoACHANwA3AAAAAAA+gAYAaAAqgDIAMgAAAAAAEABVAG0AKAA8ADwAAAAAAAEAQQBvgC0AMgA5gAAAAAA8AD6AJYAlgC0ALQA0gDmAOYA8ABhAAAA4AAAAOEAAACjHgAA4wAAAKEeAAADAQAAsR4AAK8eAACzHgAAtR4AALceAADiAAAApx4AAKUeAACpHgAAqx4AAK0eAABlAAAA6AAAAOkAAAC7HgAAvR4AALkeAADqAAAAwR4AAL8eAADDHgAAxR4AAMceAABpAAAA7AAAAO0AAADJHgAAKQEAAMseAABvAAAA8gAAAPMAAADPHgAA9QAAAM0eAAD0AAAA0x4AANEeAADVHgAA1x4AANkeAAChAQAA3R4AANseAADfHgAA4R4AAOMeAAB1AAAA+QAAAPoAAADnHgAAaQEAAOUeAACwAQAA6x4AAOkeAADtHgAA7x4AAPEeAAB5AAAA8x4AAP0AAAD3HgAA+R4AAPUe"),S(k,104896,"5gCWAOYA5gDmAAAA8AD6AAAAAAAnAAAAAAAAAAABAgM="),S(k,104945,"AQIDBAUGBwgJCgsMDQ4PEBESExQVFhcYGRo="),S(k,105072,"GxwdAAAeHyAhIiMkACUmAAAAACcAACgAKQAqACsAAAAAAAAsAC0ALgAAAAAALwAAADAAAAAAAAAAMQ=="),S(k,105170,"MgAz"),S(k,105195,"NAAAAAAANQA2"),S(k,105226,"NwA4ADkArQABAAwgAQ=="),S(k,105249,"AQIDAAQAAQIDAAQFBgIDAAQFBwEDAAQICQoDAAAICAoDAAALCwsLAAAMDAwMAAAMAQ4BEwEBAw8DDgYRBgMJAQsPCwEMCQwBDgYOCQ4ODg8OHA4DDxEPEg8PEBEQAREGEQkRDxETEiAS/38AAAAAlgCMANwA3AAAAAAABAEYAYKAeHRkZICAgIyAgKCrq4CAgA=="),S(k,105412,"yAAAAMgAAACQAQAAkAEAAJABAABYAgAAWAIAAFgC"),S(k,105456,"8AAAAKoAAACqAAAAqgAAAKoAAACqAAAAqgAAAKoAAACqAAAAAQIMAw0EDgULAAAAAQIDBAUGAAAAAAAACwwNDg=="),S(k,105540,"MgAAAK8AAABkAAAAMg=="),S(k,105568,"rw=="),S(k,105596,"EBAKEBY="),S(k,105620,"/38AANAHAAAsAQAAYwAAAGMAAABjAAAAAAAAANAH"),S(k,105668,"BA=="),S(k,105680,"QEFCQ0RFRkdISUpLTE1OT1BRUlNUVldYWVtcXV5gYWJkZWdoaWtsbm9xc3R2d3l7fH6AgoSFh4mLjY+Rk5WXmZueoKKkp6mrrrCztbi6vb/CxcfKzdDT1tnc3+Ll6Ozv8vb5/P7/"),S(k,105792,"//7+/v7+/v7+/v39/f38/Pz7+/v6+vn5+Pj39/b19fTz8/Lx7+3r6efl4+Hf3drY1dPQzcvIxcK/u7i1sq6rp6OgnJiUkIyIhH97d3JuaWRgXltYVlNRTkxKR0VCQD48OTc1MzEvLCooJiQiIB4dGxkXFRMSEA4MCwkHBgQDAQ=="),S(k,106064,"//7+/v7+/f38+/v6+fj39vX08vHv7uzq6efl4+Hf3NrY1dPRz83LycfFw8G/vbu5t7SysK2rqaakoZ+cmpeUko+MioeEgX57eHZzcGxpZmNgX11bWlhWVVNSUE9NTEpJSEZFRENCQD8+PTw7Ojk4Nzc2NTQ0MzIyMTAwLy8uLi4tLS0sLCwsLCwsKysrKywrKiopKCgnJiYlJCQjIyIhISAgHx4eHR0cHBsaGhkZGBgXFxYWFRUUFBMTEhISEREQEA8PDw4ODQ0NDAwLCwsKCgoJCQkICAgHBwcHBgYGBQUFBQQEBAQEAwMDAwICAgICAgEBAQEBAQ=="),S(k,106341,"RvIpAC8ALwBF8ikALwAuAEXyKAAuAC0ANPIoAC0tLAA08igAKysrADTyKAAqKioANPIoACkpKQA08igAAOf/zv+1/5z/g/9q/1H/N/8e/wX/7P7T/rr+of6I/m/+Vf48/iP+Cv7x/dj9v/2m/Y39dP1b/UL9Kf0Q/ff83vzF/Kz8k/x6/GH8SPwv/Bb8/fvk+8v7svuZ+4D7Z/tP+zb7HfsE++v60vq6+qH6iPpv+lf6Pvol+g369Pnb+cP5qvmR+Xn5YPlH+S/5Fvn++OX4zfi0+Jz4g/hr+FP4Ovgi+Ar48ffZ98H3qPeQ93j3YPdH9y/3F/f/9uf2z/a39p/2h/Zv9lf2P/Yn9g/29/Xf9cf1sPWY9YD1aPVR9Tn1IfUK9fL02/TD9Kz0lPR99GX0TvQ29B/0CPTw89nzwvOr85TzfPNl807zN/Mg8wnz8vLb8sTyrvKX8oDyafJS8jzyJfIO8vjx4fHL8bTxnvGH8XHxW/FE8S7xGPEB8evw1fC/8Knwk/B98GfwUfA78CXwEPD67+Tvzu+576Pvje9472LvTe847yLvDe/47uLuze647qPuju557mTuT+467iXuEO777eft0u297antlO2A7WvtV+1C7S7tGu0F7fHs3ezJ7LXsoeyN7HnsZexR7D3sKuwW7ALs7+vb68jrtOuh643reutn61TrQest6xrrB+v06uLqz+q86qnqluqE6nHqX+pM6jrqJ+oV6gPq8One6czpuumo6ZbphOly6WHpT+k96SzpGukI6ffo5ujU6MPosuig6I/ofuht6FzoS+g76CroGegI6Pjn5+fX58bntuel55Xnhed152XnVedF5zXnJecV5wXn9ubm5tfmx+a45qjmmeaK5nvma+Zc5k3mPuYw5iHmEuYD5vXl5uXY5cnlu+Wt5Z7lkOWC5XTlZuVY5UrlPOUv5SHlE+UG5fjk6+Te5NDkw+S25KnknOSP5ILkdeRo5FzkT+RD5DbkKuQd5BHkBeT54+3j4ePV48njveOx46XjmuOO44Pjd+Ns42HjVuNL4z/jNOMq4x/jFOMJ4//i9OLq4t/i1eLK4sDituKs4qLimOKO4oTie+Jx4mfiXuJU4kviQuI54i/iJuId4hTiDOID4vrh8eHp4eDh2OHQ4cfhv+G34a/hp+Gf4Zfhj+GI4YDheOFx4WrhYuFb4VThTeFG4T/hOOEx4SrhJOEd4RbhEOEK4QPh/eD34PHg6+Dl4N/g2eDU4M7gyeDD4L7guOCz4K7gqeCk4J/gmuCV4JHgjOCH4IPgfuB64HbgcuBu4GrgZuBi4F7gWuBX4FPgT+BM4EngReBC4D/gPOA54DbgM+Ax4C7gK+Ap4CfgJOAi4CDgHuAc4BrgGOAW4BTgEuAR4A/gDuAN4AvgCuAJ4AjgB+AG4AXgBeAE4APgA+AC4ALgAuAC4ALgAeAC4ALgAuAC4ALgA+AD4ATgBeAF4AbgB+AI4AngCuAL4A3gDuAP4BHgEuAU4BbgGOAa4BzgHuAg4CLgJOAn4CngK+Au4DHgM+A24DngPOA/4ELgReBJ4EzgT+BT4FfgWuBe4GLgZuBq4G7gcuB24HrgfuCD4IfgjOCR4JXgmuCf4KTgqeCu4LPguOC+4MPgyeDO4NTg2eDf4OXg6+Dx4Pfg/eAD4QrhEOEW4R3hJOEq4THhOOE/4UbhTeFU4VvhYuFq4XHheOGA4Yjhj+GX4Z/hp+Gv4bfhv+HH4dDh2OHg4enh8eH64QPiDOIU4h3iJuIv4jniQuJL4lTiXuJn4nHie+KE4o7imOKi4qzituLA4sri1eLf4uri9OL/4gnjFOMf4yrjNOM/40vjVuNh42zjd+OD447jmuOl47HjvePJ49Xj4ePt4/njBeQR5B3kKuQ25EPkT+Rc5GjkdeSC5I/knOSp5Lbkw+TQ5N7k6+T45AblE+Uh5S/lPOVK5VjlZuV05YLlkOWe5a3lu+XJ5djl5uX15QPmEuYh5jDmPuZN5lzma+Z75ormmeao5rjmx+bX5ubm9uYF5xXnJec150XnVedl53XnheeV56XntufG59fn5+f45wjoGegq6DvoS+hc6G3ofuiP6KDosujD6NTo5uj36AjpGuks6T3pT+lh6XLphOmW6ajpuunM6d7p8OkD6hXqJ+o66kzqX+px6oTqluqp6rzqz+ri6vTqB+sa6y3rQetU62freuuN66HrtOvI69vr7+sC7BbsKuw97FHsZex57I3soey17Mns3ezx7AXtGu0u7ULtV+1r7YDtlO2p7b3t0u3n7fvtEO4l7jruT+5k7nnuju6j7rjuze7i7vjuDe8i7zjvTe9i73jvje+j77nvzu/k7/rvEPAl8DvwUfBn8H3wk/Cp8L/w1fDr8AHxGPEu8UTxW/Fx8YfxnvG08cvx4fH48Q7yJfI88lLyafKA8pfyrvLE8tvy8vIJ8yDzN/NO82XzfPOU86vzwvPZ8/DzCPQf9Db0TvRl9H30lPSs9MP02/Ty9Ar1IfU59VH1aPWA9Zj1sPXH9d/19/UP9if2P/ZX9m/2h/af9rf2z/bn9v/2F/cv90f3YPd495D3qPfB99n38fcK+CL4OvhT+Gv4g/ic+LT4zfjl+P74Fvkv+Uf5YPl5+ZH5qvnD+dv59PkN+iX6PvpX+m/6iPqh+rr60vrr+gT7Hfs2+0/7Z/uA+5n7svvL++T7/fsW/C/8SPxh/Hr8k/ys/MX83vz3/BD9Kf1C/Vv9dP2N/ab9v/3Y/fH9Cv4j/jz+Vf5v/oj+of66/tP+7P4F/x7/N/9R/2r/g/+c/7X/zv/n/wAAGQAyAEsAZAB9AJYArwDJAOIA+wAUAS0BRgFfAXgBkQGrAcQB3QH2AQ8CKAJBAloCcwKMAqUCvgLXAvACCQMiAzsDVANtA4YDnwO4A9ED6gMDBBwENQROBGcEgASZBLEEygTjBPwEFQUuBUYFXwV4BZEFqQXCBdsF8wUMBiUGPQZWBm8GhwagBrkG0QbqBgIHGwczB0wHZAd9B5UHrQfGB94H9gcPCCcIPwhYCHAIiAigCLkI0QjpCAEJGQkxCUkJYQl5CZEJqQnBCdkJ8QkJCiEKOQpQCmgKgAqYCq8KxwrfCvYKDgslCz0LVAtsC4MLmwuyC8oL4Qv4CxAMJww+DFUMbAyEDJsMsgzJDOAM9wwODSUNPA1SDWkNgA2XDa4NxA3bDfINCA4fDjUOTA5iDnkOjw6lDrwO0g7oDv8OFQ8rD0EPVw9tD4MPmQ+vD8UP2w/wDwYQHBAyEEcQXRBzEIgQnhCzEMgQ3hDzEAgRHhEzEUgRXRFyEYcRnBGxEcYR2xHwEQUSGRIuEkMSVxJsEoASlRKpEr4S0hLmEvsSDxMjEzcTSxNfE3MThxObE68TwxPWE+oT/hMRFCUUOBRMFF8UcxSGFJkUrBS/FNMU5hT5FAwVHhUxFUQVVxVqFXwVjxWhFbQVxhXZFesV/RUQFiIWNBZGFlgWahZ8Fo4WnxaxFsMW1BbmFvgWCRcaFywXPRdOF2AXcReCF5MXpBe1F8UX1hfnF/gXCBgZGCkYOhhKGFsYaxh7GIsYmxirGLsYyxjbGOsY+xgKGRoZKRk5GUgZWBlnGXYZhRmVGaQZsxnCGdAZ3xnuGf0ZCxoaGigaNxpFGlMaYhpwGn4ajBqaGqgathrEGtEa3xrtGvoaCBsVGyIbMBs9G0obVxtkG3EbfhuLG5gbpBuxG70byhvWG+Mb7xv7GwccExwfHCscNxxDHE8cWxxmHHIcfRyJHJQcnxyqHLUcwRzMHNYc4RzsHPccAR0MHRYdIR0rHTYdQB1KHVQdXh1oHXIdfB2FHY8dmR2iHawdtR2+Hccd0R3aHeMd7B30Hf0dBh4PHhceIB4oHjAeOR5BHkkeUR5ZHmEeaR5xHngegB6IHo8elh6eHqUerB6zHroewR7IHs8e1h7cHuMe6h7wHvYe/R4DHwkfDx8VHxsfIR8nHywfMh83Hz0fQh9IH00fUh9XH1wfYR9mH2sfbx90H3kffR+CH4Yfih+OH5Iflh+aH54foh+mH6kfrR+xH7Qftx+7H74fwR/EH8cfyh/NH88f0h/VH9cf2R/cH94f4B/iH+Qf5h/oH+of7B/uH+8f8R/yH/Mf9R/2H/cf+B/5H/of+x/7H/wf/R/9H/4f/h/+H/4f/h//H/4f/h/+H/4f/h/9H/0f/B/7H/sf+h/5H/gf9x/2H/Uf8x/yH/Ef7x/uH+wf6h/oH+Yf5B/iH+Af3h/cH9kf1x/VH9Ifzx/NH8ofxx/EH8Efvh+7H7cftB+xH60fqR+mH6Ifnh+aH5Yfkh+OH4ofhh+CH30feR90H28fax9mH2EfXB9XH1IfTR9IH0IfPR83HzIfLB8nHyEfGx8VHw8fCR8DH/0e9h7wHuoe4x7cHtYezx7IHsEeuh6zHqwepR6eHpYejx6IHoAeeB5xHmkeYR5ZHlEeSR5BHjkeMB4oHiAeFx4PHgYe/R30Hewd4x3aHdEdxx2+HbUdrB2iHZkdjx2FHXwdch1oHV4dVB1KHUAdNh0rHSEdFh0MHQEd9xzsHOEc1hzMHMEctRyqHJ8clByJHH0cchxmHFscTxxDHDccKxwfHBMcBxz7G+8b4xvWG8obvRuxG6QbmBuLG34bcRtkG1cbShs9GzAbIhsVGwgb+hrtGt8a0RrEGrYaqBqaGowafhpwGmIaUxpFGjcaKBoaGgsa/RnuGd8Z0BnCGbMZpBmVGYUZdhlnGVgZSBk5GSkZGhkKGfsY6xjbGMsYuxirGJsYixh7GGsYWxhKGDoYKRgZGAgY+BfnF9YXxRe1F6QXkxeCF3EXYBdOFz0XLBcaFwkX+BbmFtQWwxaxFp8WjhZ8FmoWWBZGFjQWIhYQFv0V6xXZFcYVtBWhFY8VfBVqFVcVRBUxFR4VDBX5FOYU0xS/FKwUmRSGFHMUXxRMFDgUJRQRFP4T6hPWE8MTrxObE4cTcxNfE0sTNxMjEw8T+xLmEtISvhKpEpUSgBJsElcSQxIuEhkSBRLwEdsRxhGxEZwRhxFyEV0RSBEzER4RCBHzEN4QyBCzEJ4QiBBzEF0QRxAyEBwQBhDwD9sPxQ+vD5kPgw9tD1cPQQ8rDxUP/w7oDtIOvA6lDo8OeQ5iDkwONQ4fDggO8g3bDcQNrg2XDYANaQ1SDTwNJQ0ODfcM4AzJDLIMmwyEDGwMVQw+DCcMEAz4C+ELyguyC5sLgwtsC1QLPQslCw4L9grfCscKrwqYCoAKaApQCjkKIQoJCvEJ2QnBCakJkQl5CWEJSQkxCRkJAQnpCNEIuQigCIgIcAhYCD8IJwgPCPYH3gfGB60HlQd9B2QHTAczBxsHAgfqBtEGuQagBocGbwZWBj0GJQYMBvMF2wXCBakFkQV4BV8FRgUuBRUF/ATjBMoEsQSZBIAEZwROBDUEHAQDBOoD0QO4A58DhgNtA1QDOwMiAwkD8ALXAr4CpQKMAnMCWgJBAigCDwL2Ad0BxAGrAZEBeAFfAUYBLQEUAfsA4gDJAK8AlgB9AGQASwAyABkAMAAAADAAAABAAAAAUAAAAJAAAACgAAAAsAAAAMAAAACAm7XL3Ojt7Obczr+wo5iQjIuMj5KUlZKMg3hpWUk8MSopLTZEVml9j5+qsbKtpJaHeGlcU09PVV5reoiWoquwsa6ooJiRi4iJjZSdqLK7wMG9tKWSfGNKMh4OBQIFDx4wRFltf4yWnJ+fnZuZmZyhqbO/ytXc4N7YzLumj3dgSzouKCkvOkhZanqGkJSVkYmAdWtiXFpcYWl0gIqUmp6dmJCGfHFoYmBja3iIm6/C0t/m5+LXxrKchG9bS0A5Nzg9Q0pQVFZVUk1IQj8+QUlWZ3yTq8PZ6vb8+/Tn1cCqlIBxZF1aXGFocHd9f397dGthV05IRkhOWWZ1hJOfp6uqpJmLe2pbTkZDRU1aa3+SprjFz9PSzcS5raGWjomHh4qNkZKRjIR4aFVBLhwOBQEFDx80TWiBmrDBzdPT0Mi/taukn5ydoKWqrrGwq6OWh3ZjUUI2Ly0xOkhZa36OnKaqqaOYintsXVJKSEpQWmd1gi0AAAAmAAAALQAAAC0AAAA3AAAALQ=="),S(k,110928,"yv5w/hICZAHgAFkAFwD2/8b/8P/NAVcCGAK9AgIDXQLxAc0BMAKUAW4A4ACDAGgAn/+bABYBZv9z+6r94QJ9ALD9KQALAAn/9v9BAFwAUADQ/kcApwD//3oA6QChANX/FgHfAeUBlwEKAYoChgBQAOwARAAEAQ0BswA1AIwAEwElASgBaAABAZgANwG2AAcB9QB9ADoBjAAsAMsA5gAV/+L+FwBrAFwApf8mANABuwGwAGIA8Pxv9p346/vA+Ur6mPoT+0v8Jv0="),S(k,111162,"BgAHAAgACQAKAAsADQAOABAAEgAUABYAGQAcACAAIwAoAC0AMwA5AEAARwBQAFoAZQByAIAAjgCfALMAygDjAAABHAE+AWcBlQHHAQACOAJ+As8CcQOPAwAEcQT8BJ4FVgYfBwAI4Qj4CTsLrAw9DgAQwxHwE3cWWBl7HAAghSPfJ+4ssDL2OABArkekUIVbZmYzc/9/"),S(k,111324,"qMtoQQAAAACoy2jBAAAAAAAAAAAXCtQJkglQCQ8JzgiPCE8IEwjVB5oHYgcoB/MGvgaLBloGKwb9BdMFqQWBBVwFOAUWBfcE1wS7BKAEhgRuBFcEQQQtBBkEBwT1A+QD1APFA7YDqAOZA40DfwNxA2UDVwNLAz4DMgMkAxgDCwP+AvIC5ALYAssCvgKxAqQClwKLAn0CcgJkAlkCTAJAAjQCKAIcAhICBQL7AfAB5QHbAdABxgG7AbIBqAGeAZQBigGBAXcBbgFjAVsBUAFIAT0BNAErASABGAENAQQB+gDwAOcA3ADUAMgAwAC1AKwAoQCYAI4AhQB7AHEAaQBeAFYATABDADkAMQAnAB4AFgALAAQA+//y/+n/4P/X/87/xP+7/7L/qf+g/5X/jf+C/3r/cP9m/1z/Uv9J/z//Nf8r/yL/F/8O/wT/+v7x/uf+3f7T/sr+wP62/q3+o/6b/pD+h/59/nP+av5f/lb+TP5C/jj+Lf4j/hn+Df4D/vf97P3h/dX9yf29/bH9pf2Y/Yz9f/1z/Wb9Wf1M/T/9M/0k/Rn9Cv3//PH85fzY/Mz8vvyz/KT8mPyL/H78cfxi/FX8Rfw4/Cb8GfwG/Pb74vvQ+7r7pfuO+3b7XPtB+yT7Bvvl+sT6n/p5+lP6KPr++dD5oflw+Tz5CfnR+Jr4YPgm+Oj3q/ds9yz36/aq9mj2Jvbj9bAEdgRABA4E3wO0A4sDZQNBAx8DAAPiAsYCqwKSAnoCZAJOAjoCJwIVAgMC8wHjAdQBxgG4AasBnwGTAYcBfAFyAWgBXgFVAUwBQwE7ATMBLAEkAR0BFgEQAQkBAwH9APcA8gDtAOcA4gDdANkA1ADQAMwAxwDDAMAAvAC4ALQAsQCuAKoApwCkAKEAngCbAJkAlgCTAJEAjgCMAIkAhwCFAIMAgAB+AHwAegB4AHcAdQBzAHEAbwBuAGwAagBpAGcAZgBkAGMAYQBgAF8AXQBcAFsAWgBYAFcAVgBVAFQAUwBSAFAATwBOAE0ATABLAEsASgBJAEgARwBGAEUARABEAEMAQgBBAEAAQAA/AD4APQA9ADwAOwA7ADoAOQA5ADgAOAA3ADcANgA2ADUANQA0ADQAMwAzADIAMgAxADEAMAAwAC8ALwAuAC4ALQAtACwALAArACsAKgAqACkAKQApACkAKAAoACcAJwAmACYAJgAmACUAJQAkACQAJAAkACMAIwAjACMAIgAiACEAIQAhACEAIAAgACAAIAAfAB8AHwAfAB4AHgAeAB4AHQAdAB0AHQAcABwAHAAcABsAGwAxNkZyYW1lTWFuYWdlckltcGwAMTJGcmFtZU1hbmFnZXIAMjNTcGVlY2hXYXZlR2VuZXJhdG9ySW1wbAAxOVNwZWVjaFdhdmVHZW5lcmF0b3IAMTNXYXZlR2VuZXJhdG9y"),S(k,112416,"AwAAAAQAAAAEAAAABgAAAIP5ogBETm4A/CkVANFXJwDdNPUAYtvAADyZlQBBkEMAY1H+ALveqwC3YcUAOm4kANJNQgBJBuAACeouAByS0QDrHf4AKbEcAOg+pwD1NYIARLsuAJzphAC0JnAAQX5fANaROQBTgzkAnPQ5AItfhAAo+b0A+B87AN7/lwAPmAUAES/vAApaiwBtH20Az342AAnLJwBGT7cAnmY/AC3qXwC6J3UA5evHAD178QD3OQcAklKKAPtr6gAfsV8ACF2NADADVgB7/EYA8KtrACC8zwA29JoA46kdAF5hkQAIG+YAhZllAKAUXwCNQGgAgNj/ACdzTQAGBjEAylYVAMmocwB74mAAa4zAABnERwDNZ8MACejcAFmDKgCLdsQAphyWAESv3QAZV9EApT4FAAUH/wAzfj8AwjLoAJhP3gC7fTIAJj3DAB5r7wCf+F4ANR86AH/yygDxhx0AfJAhAGokfADVbvoAMC13ABU7QwC1FMYAwxmdAK3EwgAsTUEADABdAIZ9RgDjcS0Am8aaADNiAAC00nwAtKeXADdV1QDXPvYAoxAYAE12/ABknSoAcNerAGN8+AB6sFcAFxXnAMBJVgA71tkAp4Q4ACQjywDWincAWlQjAAAfuQDxChsAGc7fAJ8x/wBmHmoAmVdhAKz7RwB+f9gAImW3ADLoiQDmv2AA78TNAGw2CQBdP9QAFt7XAFg73gDem5IA0iIoACiG6ADiWE0AxsoyAAjjFgDgfcsAF8BQAPMdpwAY4FsALhM0AIMSYgCDSAEA9Y5bAK2wfwAe6fIASEpDABBn0wCq3dgArl9CAGphzgAKKKQA05m0AAam8gBcd38Ao8KDAGE8iACKc3gAr4xaAG/XvQAtpmMA9L/LAI2B7wAmwWcAVcpFAMrZNgAoqNIAwmGNABLJdwAEJhQAEkabAMRZxADIxUQATbKRAAAX8wDUQ60AKUnlAP3VEAAAvvwAHpTMAHDO7gATPvUA7PGAALPnwwDH+CgAkwWUAMFxPgAuCbMAC0XzAIgSnACrIHsALrWfAEeSwgB7Mi8ADFVtAHKnkABr5x8AMcuWAHkWSgBBeeIA9N+JAOiUlwDi5oQAmTGXAIjtawBfXzYAu/0OAEiatABnpGwAcXJCAI1dMgCfFbgAvOUJAI0xJQD3dDkAMAUcAA0MAQBLCGgALO5YAEeqkAB05wIAvdYkAPd9pgBuSHIAnxbvAI6UpgC0kfYA0VNRAM8K8gAgmDMA9Ut+ALJjaADdPl8AQF0DAIWJfwBVUikAN2TAAG3YEAAySDIAW0x1AE5x1ABFVG4ACwnBACr1aQAUZtUAJwedAF0EUAC0O9sA6nbFAIf5FwBJa30AHSe6AJZpKQDGzKwArRRUAJDiagCI2YkALHJQAASkvgB3B5QA8zBwAAD8JwDqcagAZsJJAGTgPQCX3YMAoz+XAEOU/QANhowAMUHeAJI5nQDdcIwAF7fnAAjfOwAVNysAXICgAFqAkwAQEZIAD+jYAGyArwDb/0sAOJAPAFkYdgBipRUAYcu7AMeJuQAQQL0A0vIEAEl1JwDrtvYA2yK7AAoUqgCJJi8AZIN2AAk7MwAOlBoAUTqqAB2jwgCv7a4AXCYSAG3CTQAtepwAwFaXAAM/gwAJ8PYAK0CMAG0xmQA5tAcADCAVANjDWwD1ksQAxq1LAE7KpQCnN80A5qk2AKuSlADdQmgAGWPeAHaM7wBoi1IA/Ns3AK6hqwDfFTEAAK6hAAz72gBkTWYA7QW3ACllMABXVr8AR/86AGr5uQB1vvMAKJPfAKuAMABmjPYABMsVAPoiBgDZ5B0APbOkAFcbjwA2zQkATkLpABO+pAAzI7UA8KoaAE9lqADSwaUACz8PAFt4zQAj+XYAe4sEAIkXcgDGplMAb27iAO/rAACbSlgAxNq3AKpmugB2z88A0QIdALHxLQCMmcEAw613AIZI2gD3XaAAxoD0AKzwLwDd7JoAP1y8ANDebQCQxx8AKtu2AKMlOgAAr5oArVOTALZXBAApLbQAS4B+ANoHpwB2qg4Ae1mhABYSKgDcty0A+uX9AInb/gCJvv0A5HZsAAap/AA+gHAAhW4VAP2H/wAoPgcAYWczACoYhgBNveoAs+evAI9tbgCVZzkAMb9bAITXSAAw3xYAxy1DACVhNQDJcM4AMMu4AL9s/QCkAKIABWzkAFrdoAAhb0cAYhLSALlchABwYUkAa1bgAJlSAQBQVTcAHtW3ADPxxAATbl8AXTDkAIUuqQAdssMAoTI2AAi3pADqsdQAFvchAI9p5AAn/3cADAOAAI1ALQBPzaAAIKWZALOi0wAvXQoAtPlCABHaywB9vtAAm9vBAKsXvQDKooEACGpcAC5VFwAnAFUAfxTwAOEHhgAUC2QAlkGNAIe+3gDa/SoAayW2AHuJNAAF8/4Aub+eAGhqTwBKKqgAT8RaAC34vADXWpgA9MeVAA1NjQAgOqYApFdfABQ/sQCAOJUAzCABAHHdhgDJ3rYAv2D1AE1lEQABB2sAjLCsALLA0ABRVUgAHvsOAJVywwCjBjsAwEA1AAbcewDgRcwATin6ANbKyADo80EAfGTeAJtk2ADZvjEApJfDAHdY1ABp48UA8NoTALo6PABGGEYAVXVfANK99QBuksYArC5dAA5E7QAcPkIAYcSHACn96QDn1vMAInzKAG+RNQAI4MUA/9eNAG5q4gCw/cYAkwjBAHxddABrrbIAzW6dAD5yewDGEWoA98+pAClz3wC1yboAtwBRAOKyDQB0uiQA5X1gAHTYigANFSwAgRgMAH5mlAABKRYAn3p2AP39vgBWRe8A2X42AOzZEwCLurkAxJf8ADGoJwDxbsMAlMU2ANioVgC0qLUAz8wOABKJLQBvVzQALFaJAJnO4wDWILkAa16qAD4qnAARX8wA/QtKAOH0+wCOO20A4oYsAOnUhAD8tKkA7+7RAC41yQAvOWEAOCFEABvZyACB/AoA+0pqAC8c2ABTtIQATpmMAFQizAAqVdwAwMbWAAsZlgAacLgAaZVkACZaYAA/Uu4AfxEPAPS1EQD8y/UANLwtADS87gDoXcwA3V5gAGeOmwCSM+8AyRe4AGFYmwDhV7wAUYPGANg+EADdcUgALRzdAK8YoQAhLEYAWfPXANl6mACeVMAAT4b6AFYG/ADlea4AiSI2ADitIgBnk9wAVeiqAIImOADK55sAUQ2kAJkzsQCp1w4AaQVIAGWy8AB/iKcAiEyXAPnRNgAhkrMAe4JKAJjPIQBAn9wA3EdVAOF0OgBn60IA/p3fAF7UXwB7Z6QAuqx6AFX2ogAriCMAQbpVAFluCAAhKoYAOUeDAInj5gDlntQASftAAP9W6QAcD8oAxVmKAJT6KwDTwcUAD8XPANtargBHxYYAhUNiACGGOwAseZQAEGGHACpMewCALBoAQ78SAIgmkAB4PIkAqMTkAOXbewDEOsIAJvTqAPdnigANkr8AZaMrAD2TsQC9fAsApFHcACfdYwBp4d0AmpQZAKgplQBozigACe20AESfIABOmMoAcIJjAH58IwAPuTIAp/WOABRW5wAh8QgAtZ0qAG9+TQClGVEAtfmrAILf1gCW3WEAFjYCAMQ6nwCDoqEAcu1tADmNegCCuKkAazJcAEYnWwAANO0A0gB3APz0VQABWU0A4HGA"),S(k,115203,"QPsh+T8AAAAALUR0PgAAAICYRvg8AAAAYFHMeDsAAACAgxvwOQAAAEAgJXo4AAAAgCKC4zYAAAAAHfNpNf6CK2VHFWdAAAAAAAAAOEMAAPr+Qi52vzo7nrya9wy9vf3/////3z88VFVVVVXFP5ErF89VVaU/F9CkZxERgT8AAAAAAADIQu85+v5CLuY/JMSC/72/zj+19AzXCGusP8xQRtKrsoM/hDpOm+DXVT8="),S(k,115390,"8D9uv4gaTzubPDUz+6k99u8/XdzYnBNgcbxhgHc+muzvP9FmhxB6XpC8hX9u6BXj7z8T9mc1UtKMPHSFFdOw2e8/+o75I4DOi7ze9t0pa9DvP2HI5mFO92A8yJt1GEXH7z+Z0zNb5KOQPIPzxso+vu8/bXuDXaaalzwPiflsWLXvP/zv/ZIatY4890dyK5Ks7z/RnC9wPb4+PKLR0zLso+8/C26QiTQDarwb0/6vZpvvPw69LypSVpW8UVsS0AGT7z9V6k6M74BQvMwxbMC9iu8/FvTVuSPJkbzgLamumoLvP69VXOnj04A8UY6lyJh67z9Ik6XqFRuAvHtRfTy4cu8/PTLeVfAfj7zqjYw4+WrvP79TEz+MiYs8dctv61tj7z8m6xF2nNmWvNRcBITgW+8/YC86PvfsmjyquWgxh1TvP504hsuC54+8Hdn8IlBN7z+Nw6ZEQW+KPNaMYog7Ru8/fQTksAV6gDyW3H2RST/vP5SoqOP9jpY8OGJ1bno47z99SHTyGF6HPD+msk/OMe8/8ucfmCtHgDzdfOJlRSvvP14IcT97uJa8gWP14d8k7z8xqwlt4feCPOHeH/WdHu8/+r9vGpshPbyQ2drQfxjvP7QKDHKCN4s8CwPkpoUS7z+Py86JkhRuPFYvPqmvDO8/tquwTXVNgzwVtzEK/gbvP0x0rOIBQoY8MdhM/HAB7z9K+NNdOd2PPP8WZLII/O4/BFuOO4Cjhrzxn5JfxfbuP2hQS8ztSpK8y6k6N6fx7j+OLVEb+AeZvGbYBW2u7O4/0jaUPujRcbz3n+U02+fuPxUbzrMZGZm85agTwy3j7j9tTCqnSJ+FPCI0Ekym3u4/imkoemASk7wcgKwERdruP1uJF0iPp1i8Ki73IQrW7j8bmklnmyx8vJeoUNn10e4/EazCYO1jQzwtiWFgCM7uP+9kBjsJZpY8VwAd7UHK7j95A6Ha4cxuPNA8wbWixu4/MBIPP47/kzze09fwKsPuP7CvervOkHY8Jyo21dq/7j934FTrvR2TPA3d/ZmyvO4/jqNxADSUj7ynLJ12srnuP0mjk9zM3oe8QmbPotq27j9fOA+9xt54vIJPnVYrtO4/9lx77EYShrwPkl3KpLHuP47X/RgFNZM82ie1Nkev7j8Fm4ovt5h7PP3Hl9QSre4/CVQc4uFjkDwpVEjdB6vuP+rGGVCFxzQ8t0ZZiiap7j81wGQr5jKUPEghrRVvp+4/n3aZYUrkjLwJ3Ha54aXuP6hN7zvFM4y8hVU6sH6k7j+u6SuJeFOEvCDDzDRGo+4/WFhWeN3Ok7wlIlWCOKLuP2QZfoCqEFc8c6lM1FWh7j8oIl6/77OTvM07f2aeoO4/grk0h60Sary/2gt1EqDuP+6pbbjvZ2O8LxplPLKf7j9RiOBUPdyAvISUUfl9n+4/zz5afmQfeLx0X+zodZ/uP7B9i8BK7oa8dIGlSJqf7j+K5lUeMhmGvMlnQlbrn+4/09QJXsuckDw/Xd5PaaDuPx2lTbncMnu8hwHrcxSh7j9rwGdU/eyUPDLBMAHtoe4/VWzWq+HrZTxiTs8286LuP0LPsy/FoYi8Eho+VCek7j80NzvxtmmTvBPOTJmJpe4/Hv8ZOoRegLytxyNGGqfuP25XcthQ1JS87ZJEm9mo7j8Aig5bZ62QPJlmitnHqu4/tOrwwS+3jTzboCpC5azuP//nxZxgtmW8jES1FjKv7j9EX/NZg/Z7PDZ3FZmuse4/gz0epx8Jk7zG/5ELW7TuPykebIu4qV285cXNsDe37j9ZuZB8+SNsvA9SyMtEuu4/qvn0IkNDkrxQTt6fgr3uP0uOZtdsyoW8ugfKcPHA7j8nzpEr/K9xPJDwo4KRxO4/u3MK4TXSbTwjI+MZY8juP2MiYiIExYe8ZeVde2bM7j/VMeLjhhyLPDMtSuyb0O4/Fbu809G7kbxdJT6yA9XuP9Ix7pwxzJA8WLMwE57Z7j+zWnNuhGmEPL/9eVVr3u4/tJ2Ol83fgrx689O/a+PuP4czy5J3Gow8rdNamZ/o7j/62dFKj3uQvGa2jSkH7u4/uq7cVtnDVbz7FU+4ovPuP0D2pj0OpJC8OlnljXL57j80k6049NZovEde+/J2/+4/NYpYa+LukbxKBqEwsAXvP83dXwrX/3Q80sFLkB4M7z+smJL6+72RvAke11vCEu8/swyvMK5uczycUoXdmxnvP5T9n1wy4448etD/X6sg7z+sWQnRj+CEPEvRVy7xJ+8/ZxpOOK/NYzy15waUbS/vP2gZkmwsa2c8aZDv3CA37z/StcyDGIqAvPrDXVULP+8/b/r/P12tj7x8iQdKLUfvP0mpdTiuDZC88okNCIdP7z+nBz2mhaN0PIek+9wYWO8/DyJAIJ6RgryYg8kW42DvP6ySwdVQWo48hTLbA+Zp7z9LawGsWTqEPGC0AfMhc+8/Hz60ByHVgrxfm3szl3zvP8kNRzu5Kom8KaH1FEaG7z/TiDpgBLZ0PPY/i+cukO8/cXKdUezFgzyDTMf7UZrvP/CR048S94+82pCkoq+k7z99dCPimK6NvPFnji1Ir+8/CCCqQbzDjjwnWmHuG7rvPzLrqcOUK4Q8l7prNyvF7z/uhdExqWSKPEBFblt20O8/7eM75Lo3jrwUvpyt/dvvP53NkU07iXc82JCegcHn7z+JzGBBwQVTPPFxjyvC8+8/EhETFBUWFxgZGhscHR4fICERIiMkESUmJygpKissES0uLxAQMBAQEBAQEBAxMjMQNDUQEBERERERERERERERERERERERERERERERERE2ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERNxERERE4ETk6Ozw9PhERERERERERERERERERERERERERERERERERERERERERERERERERERERERE/EBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEUBBEUJDREVGR0hJShFLTE1OT1BREFJTVFVWV1hZWltcXRBeX2AQERERYWJjEBAQEBAQEBAQEBERERFkEBAQEBAQEBAQEBAQEBAQERFlEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQERFmZxAQaGkREREREREREREREREREREREREREREREWoREWsQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEWxtEBAQEBAQEBAQbhAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQb3BxchAQEBAQEBAQc3R1EBAQEBB2dxAQEBB4EBB5EBAQEBAQEBAQEBAQEBA="),S(k,117968,"//////////////////////////////////////////8AAAAAAAAAAP7//wf+//8HAAAAAAAEIAT//3////9//////////////////////////////////8P/AwAfUA=="),S(k,118072,"IAAAAAAA37xA1///+////////////7///////////////////////wP8///////////////////////////+////fwL//////wEAAAAA/7+2AP///4cHAAAA/wf//////////v/D////////////////7x/+4f+fAAD///////8A4P///////////////wMA//////8HMAT////8/x8AAP///wH/BwAAAAAAAP//3z8AAPD/+AP////////////v/9/h/8///v/vn/n///3F459ZgLDP/wMQ7of5///9bcOHGQJewP8/AO6/+////e3jvxsBAM//AB7un/n///3t458ZwLDP/wIA7Mc91hjH/8PHHYEAwP8AAO/f/f///f/j3x1gB8//AADv3/3///3v498dYEDP/wYA79/9/////+ffXfCAz/8A/Oz/f/z///svf4Bf/8D/DAD+/////3//Bz8g/wMAAAAA1vf//6///ztfIP/zAAAAAAEAAAD/AwAA//7///8f/v8D///+////HwAAAAAAAAAA////////f/n/A////////////z//////vyD///////f///////////89fz3//////z3/////PX89/3//////////Pf//////////BwAAAAD//wAA/////////////z8//v//////////////////////////////////////////////////////////n////v//B////////////8f/Af/fDwD//w8A//8PAP/fDQD////////P//8BgBD/AwAAAAD/A///////////////Af//////B///////////PwD///9//w//AcD/////Px8A//////8P////A/8DAAAAAP///w//////////f/7/HwD/A/8DgA=="),S(k,118768,"////////7//vD/8DAAAAAP//////8////////7//AwD///////9/AP/j//////8//wH//////+cAAAAAAN5vBP///////////////////////////////wAAAACA/x8A//8/P/////8/P/+q////P////////99f3B/PD/8f3B8="),S(k,118910,"AoAAAP8f"),S(k,118928,"hPwvPlC9//PgQwAA//////8B"),S(k,118982,"wP///////wMAAP//////f///////f/////////////////////8feAwA/////78g/////////4AAAP//fwB/f39/f39/f/////8AAAAAAIA="),S(k,119088,"4AAAAP4DPh/+////////////f+D+//////////////fg///////+/////////////38AAP///wcAAAAAAAD///////////////////////////////8/"),S(k,119184,"////////////////////////////////////////AAD//////////////////////x8AAAAAAAAAAP//////P/8f////DwAA//////9/8I///////////////////wAAAACA//z////////////////5////////fAAAAAAAgP+//////wAAAP///////w8A//////////8vAP8DAAD86P//////B/////8HAP///x/////////3/wCA/wP///9/////////fwD/P/8D//9//P////////9/BQAAOP//PAB+fn4Af3////////f/AP///////////////////wf/A///////////////////////////DwD//3/4//////8P/////////////////z//////////////////AwAAAAB/APjg//1/X9v/////////////////AwAAAPj///////////////8/AAD///////////z///////8AAAAAAP8P"),S(k,119582,"3/////////////////////8fAAD/A/7//wf+//8HwP////////////9//Pz8HAAAAAD/7///f///t/8//z8AAAAA////////////////////BwAAAAAAAAAA////////Hw=="),S(k,119712,"////H////////wEAAAAAAP////8A4P///wf//////wf///8//////w//PgAAAAAA/////////////////////////z//A/////8P/////w///////wD///////8P"),S(k,119824,"////////fwD//z8A/w=="),S(k,119856,"P/3/////v5H//z8A//9/AP///38AAAAAAAAAAP//NwD//z8A////AwAAAAAAAAAA/////////8AAAAAAAAAAAG/w7/7//z8AAAAAAP///x////8fAAAAAP/+//8fAAAA////////PwD//z8A//8HAP//Aw=="),S(k,119984,"////////////AQAAAAAAAP///////wcA////////BwD//////wD/Aw=="),S(k,120048,"////H4AA//8/"),S(k,120076,"//9/AP//////////PwAAAMD/AAD8////////AQAA////Af8D////////x/9wAP////9HAP//////////HgD/FwAAAAD///v///+fQAAAAAAAAAAAf73/v/8B/////////wH/A++f+f///e3jnxmB4A8="),S(k,120208,"//////////+7B/+DAAAAAP//////////swD/Aw=="),S(k,120256,"////////P38AAAA/AAAAAP////////9/EQD/AwAAAAD///////8/Af8DAAAAAAAA////5/8H/wM="),S(k,120336,"/////////wE="),S(k,120356,"////////////AwCA"),S(k,120388,"//z///////waAAAA////////538AAP///////////yAAAAAA/////////wH//f////9/fwEA/wMAAPz////8///+fw=="),S(k,120464,"f/v/////f7TLAP8Dv/3///9/ewH/Aw=="),S(k,120524,"//9/AP////////////////////////8D"),S(k,120560,"/////////////////38AAP///////////////////////////////w8="),S(k,120624,"//////9/"),S(k,120656,"//////////9/"),S(k,120688,"/////////wH///9//wM="),S(k,120714,"////PwAA////////AAAPAP8D+P//4P//"),S(k,120760,"//////////8="),S(k,120784,"////////////h/////////+A//8AAAAAAAAAAAsAAAD/////////////////////////////////////////AP///////////////////////////////////////wcA////fwAAAAAAAAcA8AD/////////////////////////////////////////////////////////////////D/////////////////8H/x//Af9D"),S(k,120976,"/////////////9///////////99k3v/r7/////////+/59/f////e1/8/f//////////////////////////////////////////////////////P/////3///f////3///f////3///f////3/////9/////f//98////////9////52wc="),S(k,121136,"//////8fgD//Qw=="),S(k,121192,"//////8P/wP///////////////////////////////8fAAAAAAAAAP//////////jwj/Aw=="),S(k,121264,"7////5b+9wqE6paqlvf3Xv/7/w/u+/8P"),S(k,121302,"////A////wP///8D"),S(k,121328,"/////////////////////////////////////////////////////////////////wABAgMEBQYHCAn/////////CgsMDQ4PEBESExQVFhcYGRobHB0eHyAhIiP///////8KCwwNDg8QERITFBUWFxgZGhscHR4fICEiI/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////8="),S(k,121601,"ARcCHRgTAx4bGQsUCAQNHxYcEhoKBwwVEQkGEAUPDt4SBJUAAAAA////////////////INsBABQAAABDLlVURi04"),S(k,121696,"TENfQ1RZUEUAAAAATENfTlVNRVJJQwAATENfVElNRQAAAAAATENfQ09MTEFURQAATENfTU9ORVRBUlkATENfTUVTU0FHRVM="),S(k,121776,"Qy5VVEYtOA=="),S(k,121800,"MAUCAE5vIGVycm9yIGluZm9ybWF0aW9uAElsbGVnYWwgYnl0ZSBzZXF1ZW5jZQBEb21haW4gZXJyb3IAUmVzdWx0IG5vdCByZXByZXNlbnRhYmxlAE5vdCBhIHR0eQBQZXJtaXNzaW9uIGRlbmllZABPcGVyYXRpb24gbm90IHBlcm1pdHRlZABObyBzdWNoIGZpbGUgb3IgZGlyZWN0b3J5AE5vIHN1Y2ggcHJvY2VzcwBGaWxlIGV4aXN0cwBWYWx1ZSB0b28gbGFyZ2UgZm9yIGRhdGEgdHlwZQBObyBzcGFjZSBsZWZ0IG9uIGRldmljZQBPdXQgb2YgbWVtb3J5AFJlc291cmNlIGJ1c3kASW50ZXJydXB0ZWQgc3lzdGVtIGNhbGwAUmVzb3VyY2UgdGVtcG9yYXJpbHkgdW5hdmFpbGFibGUASW52YWxpZCBzZWVrAENyb3NzLWRldmljZSBsaW5rAFJlYWQtb25seSBmaWxlIHN5c3RlbQBEaXJlY3Rvcnkgbm90IGVtcHR5AENvbm5lY3Rpb24gcmVzZXQgYnkgcGVlcgBPcGVyYXRpb24gdGltZWQgb3V0AENvbm5lY3Rpb24gcmVmdXNlZABIb3N0IGlzIGRvd24ASG9zdCBpcyB1bnJlYWNoYWJsZQBBZGRyZXNzIGluIHVzZQBCcm9rZW4gcGlwZQBJL08gZXJyb3IATm8gc3VjaCBkZXZpY2Ugb3IgYWRkcmVzcwBCbG9jayBkZXZpY2UgcmVxdWlyZWQATm8gc3VjaCBkZXZpY2UATm90IGEgZGlyZWN0b3J5AElzIGEgZGlyZWN0b3J5AFRleHQgZmlsZSBidXN5AEV4ZWMgZm9ybWF0IGVycm9yAEludmFsaWQgYXJndW1lbnQAQXJndW1lbnQgbGlzdCB0b28gbG9uZwBTeW1ib2xpYyBsaW5rIGxvb3AARmlsZW5hbWUgdG9vIGxvbmcAVG9vIG1hbnkgb3BlbiBmaWxlcyBpbiBzeXN0ZW0ATm8gZmlsZSBkZXNjcmlwdG9ycyBhdmFpbGFibGUAQmFkIGZpbGUgZGVzY3JpcHRvcgBObyBjaGlsZCBwcm9jZXNzAEJhZCBhZGRyZXNzAEZpbGUgdG9vIGxhcmdlAFRvbyBtYW55IGxpbmtzAE5vIGxvY2tzIGF2YWlsYWJsZQBSZXNvdXJjZSBkZWFkbG9jayB3b3VsZCBvY2N1cgBTdGF0ZSBub3QgcmVjb3ZlcmFibGUAUHJldmlvdXMgb3duZXIgZGllZABPcGVyYXRpb24gY2FuY2VsZWQARnVuY3Rpb24gbm90IGltcGxlbWVudGVkAE5vIG1lc3NhZ2Ugb2YgZGVzaXJlZCB0eXBlAElkZW50aWZpZXIgcmVtb3ZlZABEZXZpY2Ugbm90IGEgc3RyZWFtAE5vIGRhdGEgYXZhaWxhYmxlAERldmljZSB0aW1lb3V0AE91dCBvZiBzdHJlYW1zIHJlc291cmNlcwBMaW5rIGhhcyBiZWVuIHNldmVyZWQAUHJvdG9jb2wgZXJyb3IAQmFkIG1lc3NhZ2UARmlsZSBkZXNjcmlwdG9yIGluIGJhZCBzdGF0ZQBOb3QgYSBzb2NrZXQARGVzdGluYXRpb24gYWRkcmVzcyByZXF1aXJlZABNZXNzYWdlIHRvbyBsYXJnZQBQcm90b2NvbCB3cm9uZyB0eXBlIGZvciBzb2NrZXQAUHJvdG9jb2wgbm90IGF2YWlsYWJsZQBQcm90b2NvbCBub3Qgc3VwcG9ydGVkAFNvY2tldCB0eXBlIG5vdCBzdXBwb3J0ZWQATm90IHN1cHBvcnRlZABQcm90b2NvbCBmYW1pbHkgbm90IHN1cHBvcnRlZABBZGRyZXNzIGZhbWlseSBub3Qgc3VwcG9ydGVkIGJ5IHByb3RvY29sAEFkZHJlc3Mgbm90IGF2YWlsYWJsZQBOZXR3b3JrIGlzIGRvd24ATmV0d29yayB1bnJlYWNoYWJsZQBDb25uZWN0aW9uIHJlc2V0IGJ5IG5ldHdvcmsAQ29ubmVjdGlvbiBhYm9ydGVkAE5vIGJ1ZmZlciBzcGFjZSBhdmFpbGFibGUAU29ja2V0IGlzIGNvbm5lY3RlZABTb2NrZXQgbm90IGNvbm5lY3RlZABDYW5ub3Qgc2VuZCBhZnRlciBzb2NrZXQgc2h1dGRvd24AT3BlcmF0aW9uIGFscmVhZHkgaW4gcHJvZ3Jlc3MAT3BlcmF0aW9uIGluIHByb2dyZXNzAFN0YWxlIGZpbGUgaGFuZGxlAFJlbW90ZSBJL08gZXJyb3IAUXVvdGEgZXhjZWVkZWQATm8gbWVkaXVtIGZvdW5kAFdyb25nIG1lZGl1bSB0eXBlAE11bHRpaG9wIGF0dGVtcHRlZABSZXF1aXJlZCBrZXkgbm90IGF2YWlsYWJsZQBLZXkgaGFzIGV4cGlyZWQAS2V5IGhhcyBiZWVuIHJldm9rZWQAS2V5IHdhcyByZWplY3RlZCBieSBzZXJ2aWNl"),S(k,123730,"pQJbAPABtQWMBSUBgwYdA5QE/wDHAzEDCwa8AY8BfwPKBCsA2gavAEIDTgPcAQ4EFQChBg0BlAILAjgGZAK8Av8CXQPnBAsHzwLLBe8F2wXhAh4GRQKFAIICbANvBPEA8wMYBdkA2gNMBlQCewGdA70EAABRABUCuwCzA20A/wGFBC8F+QQ4AGUBRgGfALcGqAFzAlMB"),S(k,123928,"IQQAAAAAAAAAAC8C"),S(k,123960,"NQRHBFYE"),S(k,123982,"oAQ="),S(k,124002,"RgVgBW4FYQYAAM8BAAAAAAAAAADJBukG+QYeBzkHSQdeBw=="),S(k,124048,"GQAKABkZGQAAAAAFAAAAAAAACQAAAAALAAAAAAAAAAAZABEKGRkZAwoHAAEACQsYAAAJBgsAAAsABhkAAAAZGRk="),S(k,124129,"DgAAAAAAAAAAGQAKDRkZGQANAAACAAkOAAAACQAOAAAO"),S(k,124187,"DA=="),S(k,124199,"EwAAAAATAAAAAAkMAAAAAAAMAAAM"),S(k,124245,"EA=="),S(k,124257,"DwAAAAQPAAAAAAkQAAAAAAAQAAAQ"),S(k,124303,"Eg=="),S(k,124315,"EQAAAAARAAAAAAkSAAAAAAASAAASAAAaAAAAGhoa"),S(k,124370,"GgAAABoaGgAAAAAAAAk="),S(k,124419,"FA=="),S(k,124431,"FwAAAAAXAAAAAAkUAAAAAAAUAAAU"),S(k,124477,"Fg=="),S(k,124489,"FQAAAAAVAAAAAAkWAAAAAAAWAAAWAAAwMTIzNDU2Nzg5QUJDREVG"),S(k,124564,"EQ=="),S(k,124604,"//////////8="),S(k,124672,"0XSeAFedvSqAcFIP//8+JwoAAABkAAAA6AMAABAnAACghgEAQEIPAICWmAAA4fUFGAAAADUAAABxAAAAa////877//+Sv///AAAAAAAAAAACAADAAwAAwAQAAMAFAADABgAAwAcAAMAIAADACQAAwAoAAMALAADADAAAwA0AAMAOAADADwAAwBAAAMARAADAEgAAwBMAAMAUAADAFQAAwBYAAMAXAADAGAAAwBkAAMAaAADAGwAAwBwAAMAdAADAHgAAwB8AAMAAAACzAQAAwwIAAMMDAADDBAAAwwUAAMMGAADDBwAAwwgAAMMJAADDCgAAwwsAAMMMAADDDQAA0w4AAMMPAADDAAAMuwEADMMCAAzDAwAMwwQADNsAAAAAIAAAAAkAAAAKAAAADQAAAAsAAAAMAAAAhQAAAAAgAAABIAAAAiAAAAMgAAAEIAAABSAAAAYgAAAIIAAACSAAAAogAAAoIAAAKSAAAF8gAAAAMAAAAAAAAE4xMF9fY3h4YWJpdjExNl9fc2hpbV90eXBlX2luZm9FAAAAAGjpAQB46AEAZOoBAE4xMF9fY3h4YWJpdjExN19fY2xhc3NfdHlwZV9pbmZvRQAAAGjpAQCo6AEAnOgBAE4xMF9fY3h4YWJpdjExN19fcGJhc2VfdHlwZV9pbmZvRQAAAGjpAQDY6AEAnOgBAE4xMF9fY3h4YWJpdjExOV9fcG9pbnRlcl90eXBlX2luZm9FAGjpAQAI6QEA/OgBAAAAAADM6AEAFAAAABUAAAAWAAAAFwAAABgAAAAZAAAAGgAAABsAAAAAAAAAsOkBABQAAAAcAAAAFgAAABcAAAAYAAAAHQAAAB4AAAAfAAAATjEwX19jeHhhYml2MTIwX19zaV9jbGFzc190eXBlX2luZm9FAAAAAGjpAQCI6QEAzOgBAAAAAAAg6gEACQAAACAAAAAhAAAAAAAAAEjqAQAJAAAAIgAAACMAAAAAAAAACOoBAAkAAAAkAAAAJQAAAFN0OWV4Y2VwdGlvbgAAAABA6QEA+OkBAFN0OWJhZF9hbGxvYwAAAABo6QEAEOoBAAjqAQBTdDIwYmFkX2FycmF5X25ld19sZW5ndGgAAAAAaOkBACzqAQAg6gEAU3Q5dHlwZV9pbmZvAAAAAEDpAQBU6gE="),S(k,125552,"wLEAAMCyAADAswAAwLQAAMC1AADAtgAAwLcAAMC4AADAuQAAwLoAAMC7AADAvAAAwL0AAMC+AADAvwAAwMAAAMDBAADAwgAAwMMAAMDEAADAxQAAwMIAAMDGAADAxwAAwMgAAMDJAADAygAAwMsAAMDMAADAzQAAwM4AAMDPAADA0AAAwNEAAMDSAADA0wAAwNQAAMDVAADA1gAAwNcAAMDYAADA2QAAwNIAAMDaAADA2wAAwNwAAMDdAADA3gAAwN8AAMDgAADA4QAAwNgAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADA4gAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwOMAAMDkAADAwgAAwMIAAMDCAADA5QAAwMIAAMDmAADA5wAAwOgAAMDpAADA6gAAwOsAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADA7AAAwO0AAMDCAADA7gAAwO8AAMDCAADA8AAAwPEAAMDyAADA8wAAwPQAAMD1AADA9gAAwPcAAMD4AADAwgAAwPkAAMD6AADA+wAAwPwAAMD9AADA/gAAwP8AAMAAAQDAAQEAwAIBAMADAQDABAEAwAUBAMAGAQDABwEAwAgBAMAJAQDACgEAwAsBAMAMAQDACwEAwA0BAMAOAQDADwEAwAsBAMDCAADAwgAAwMIAAMAQAQDAEQEAwBIBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDAwgAAwMIAAMDCAADAwgAAwBMBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMDCAADAwgAAwBQBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMDCAADAwgAAwBUBAMAWAQDACwEAwAsBAMAXAQDAGAEAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAGQEAwMIAAMDCAADAGgEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMDCAADAGwEAwBwBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMAdAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwB4BAMAfAQDAIAEAwCEBAMAiAQDAIwEAwCQBAMAlAQDA2AAAwNgAAMAmAQDACwEAwAsBAMALAQDACwEAwAsBAMAnAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwCgBAMApAQDACwEAwAsBAMAqAQDACwEAwCsBAMALAQDALAEAwC0BAMAuAQDALwEAwNgAAMDYAADAMAEAwDEBAMAyAQDAMwEAwDQBAMALAQDACwEAwAsBAMALAQDACwEAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMA1AQDAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwDYBAMA3AQDAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAOAEAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMA5AQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDAwgAAwMIAAMA6AQDAOwEAwDwB"),S(k,128496,"oVcBAEEAAADdVwEAQgAAACZYAQBDAAAAa1gBAEQAAADSWAEARQAAABNZAQBGAAAAfFkBAEcAAACEWQEASAAAADBaAQBJAAAAZ1oBAEoAAADuWgEASwAAAC5bAQBMAAAAcVsBAE0AAADZWwEATgAAAGtcAQBPAAAAh1wBAAgAAADcXAEACQAAAB9dAQAKAAAAZ10BAAsAAACVXQEADAAAAMpdAQANAAAAD14BAA4AAAAqXgEADwAAAIZeAQAPAAAAvV4BABAAAABDXwEAEQAAAH1fAQASAAAAq18BABMAAADZXwEAFAAAAAVgAQAVAAAAMGABABcAAABgYAEAGAAAAHlgAQAZAAAAtWABABsAAADdYAEAHAAAAPBgAQAdAAAAI2EBACAAAABEYQEAIQAAAG9hAQAiAAAAnWEBACMAAADRYQEAJAAAAPNhAQAlAAAAFWIBACYAAABZYgEAKAAAAH1iAQApAAAArmIBACoAAADoYgEAKwAAADVjAQAtAAAAb2MBAC4AAACnYwEALwAAAOZjAQAwAAAAeGQBADEAAACdZAEAMgAAAM9kAQAzAAAA/mQBAGQAAABgZQEAyAAAAN1lAQDJAAAAAAAAAP////8iZgEAAQAAAD5mAQACAAAABVUBAAMAAADNZgEAEQAAADRnAQASAAAAg2cBABMAAAD7ZwEAFAAAADtoAQAVAAAATGgBABYAAAB0aAEAEQAAALdoAQAhAAAAymgBACIAAAD+aAEAIwAAAEtpAQAkAAAAaWkBACUAAACfaQEAJgAAAOJpAQAhAAAAAAAAAP////8AAAAAAAAAACYAAAAAAAAAAQAAAJByAQABAAAAkHMBAAEAAACQdAEAAQAAAJB1AQABAAAAkHYBAAEAAACQdwEAAQAAAJB4AQABAAAAkHkBAAEAAACQegEAAQAAAJB7AQABAAAAkHwBAAEAAACQfQEAAQAAAJB+AQABAAAAkH8BAAEAAACQgAEAAQAAAJCBAQABAAAAkIIBAAUAAAAAAAAABg=="),S(k,129280,"oIMBAKCDAQAghAEAIIQBAKCEAQAghQEAoIUBACCGAQCghgEAoIYBACCHAQAghwEAoIcBAKCHAQAgiAEAIIgBAKCIAQCgiAEAIIkBACCJAQAuOU4ycIoBAAMHBQCQigEALjlOLnCKAQADBwUAkIoBAC45Ti5wigEAAwcFAJCKAQAuOVoycIoBAAMJBQCVigEALjlOMnCKAQADBwUAkIoBAC45SjdwigEABAcFAJqKAQAuOUo3cIoBAAQHBQCaigEALjlKN3CKAQAEBwUAmooBAC45TjJwigEAAwcFAJCKAQAuOU4ucIoBAAMHBQCQigEALjlOMnCKAQADBwUAkIoBACIpKSBwigEAAwcFAJqKAQAuOTcycIoBAAMHBQCaigEAo1MBABABAAAAVAEADAEAANJUAQARAQAAClUBACMAAAB/VQEAGwAAADRWAQAVAAAAxVYBAAABAAABVwEAAgEAAE1XAQADAQAAvVcBAAQBAAD7VwEABQEAAE5YAQATAAAAkVgBAB4AAADVWAEAFwAAAF9ZAQAaAAAAkVkBABkAAAD0WQEAGAAAADhaAQAdAAAAzloBABwAAAAPWwEAFgAAADdbAQAU"),S(k,129744,"Q1gBABABAACIWAEADAEAAPNYAQARAQAAM1kBACMAAACHWQEAGwAAAOBZAQAVAAAAQloBAAABAACcWgEAAgEAAABbAQADAQAAT1sBAAQBAACnWwEABQEAAEhcAQATAAAAc1wBAB4AAADEXAEAFwAAABVdAQAaAAAAXV0BABkAAACIXQEAGAAAANJdAQAdAAAABF4BABwAAAAvXgEAFgAAAF9eAQAU"),S(k,129920,"u08BAAEAAABcUAEAAAAAAM9QAQAAAAAAOFIBAAAAAABBUwEAAAAAAIFTAQAAAAAA+1MBAAAAAADnVAEAAAAAACVVAQAAAAAAiVUBAAAAAABUVgEAAAAAAPxWAQAAAAAADlcBAAAAAABIVwEAAAAAAKdXAQAAAAAA9lcBAAAAAAA3WAEAAAAAAKNYAQAAAAAA6FgBAAAAAAAuWQEAAAAAAH9ZAQAAAAAA61kBAAAAAAD/////g00BAIIAAAB5AAAAdg=="),S(k,130128,"4I8BAOCPAQBQkAEAwJABAMCQAQDAkAEAAQAAANQKAwCMCgMAROcC"),S(k,130176,"I0sBAAEAAAAAAAAA/////1dMAQABAAAA+0wBAAIAAADGTQEAAwAAAAAAAAD/////Vk4BAAAAAADSTgEAAQAAALJPAQACAAAAGFABABQAAAAAAAAA/////wAAAAAAAAAAt1ABABIAAABNUgEAFAAAAN5SAQAkAAAAhlMBAEAAAAARVAEAwQAAAAAAAAD/////q1QBAAEAAAAAAAAA/////1dMAQAAAAAAGVUBAAEAAACRVQEAAgAAAENWAQADAAAA31YBAAQAAAAgVwEABQAAAAAAAAD/////AAAAAAAAAABXTAEAAQAAAIlXAQACAAAAr1cBAAMAAADfVgEABAAAACBXAQAFAAAAAAAAAP////8AAAAAClgBADxYAQAYUAEAqFgB"),S(k,130480,"8l8BAAEAAAA5YAEAAgAAAFhgAQADAAAAgWABAAQAAACwYAEABQAAANNgAQAGAAAABWEBAAcAAAAqYQEACAAAAFFhAQAJAAAAdmEBAAoAAACQYQEACwAAAMNhAQAMAAAA+WEBAA0AAAAuYgEADgAAAE5iAQAPAAAAhmIBAA8AAADUYgEADwAAABljAQAPAAAAP2MBAA8AAACkYwEABwAAANpjAQAHAAAAO2QBAAcAAACEZAEABwAAAK9kAQAHAAAAw2QBAA4AAADnZAEADgAAAAplAQAQAAAA9GUBABAAAAArZgEAEAAAAN9WAQAQAAAAbmYBABAAAADBZgEAEA=="),S(k,130752,"f20BAD4AAACjbQEAPOAAAM1tAQAmAAAA1G0BACIAAAA6bgEAIAAAAHhuAQAnAAAAAAAAAP////8AAAAAAAAAAGNnAQBkAAAAxWcBAAAAAAAJaAEAHgAAAEJoAQBBAAAAQ1YBAGQAAACGaAEAlgAAAKVoAQDmAAAAAAAAAP////9jZwEAZAAAAL5oAQA8AAAA6WgBAFAAAABDVgEAZAAAABJpAQB9AAAAUmkBAKAAAAAAAAAA/////wAAAAAAAAAAY2cBAGQAAACUaQEARgAAAN5pAQBVAAAAQ1YBAGQAAAAoagEAbgAAAGdqAQB4AAAAAAAAAP////8AAAAAAAAAAGNnAQBkAAAAlGkBABQAAADeaQEAMgAAAENWAQBkAAAAKGoBAIwAAABnagEAtAAAAAAAAAD/////"),S(k,131076,"QP8BAAD/AQCA/wEAwP8B"),S(k,131104,"wmoBACDgAAALawEACeAAAEFrAQBf4AAAe2sBACI="),S(k,131152,"q2sBAAEAAAC8awEAAgAAAA1sAQAD"),S(k,131184,"+EwBAMJNAQBTTgEACU8BAOVPAQBkUAEA2lABAGdSAQDyUgEA1FMBAGFUAQ=="),S(k,131236,"iFIBADlTAQAAAAAAnlMBAGRUAQDwVAEAL1UBAJpVAQBQVgE="),S(k,131280,"Y1IBAIADAACAA/8DbGUAAAcAAAA0UwEAIAQAAAAELwUAAAAAAAAAAHNTAQAwBQAAMAWPBXloAAAEAAAAG1QBAJAFAACQBf8FAAAAAAAAAAC3VAEAAAYAAAAG/wYAAAAAAAAAACpVAQAABwAAAAdPBwAAAAAAAAAAllUBAAAJAAAACX8JaWgAAAQAAAA/VgEAgAkAAIAJ/wluYgAABAAAANZWAQAACgAAAAp/CmFwAAAEAAAAClcBAIAKAACACv8KdWcAAAQAAABfVwEAAAsAAAALfwsAAAAAAAAAAM5XAQCACwAAgAv/C2F0AAAEAAAAD1gBAAAMAAAADH8MZXQAAAAAAAAsWAEAgAwAAIAM/wxuawAABAAAAJ9YAQAADQAAAA1/DWxtAAAEAAAA5FgBAIANAACADf8NaXMAAAQAAAA8WQEAAA4AAAAOfw4AAAAAAAAAAJtZAQCADgAAgA7/DgAAAAAAAAAA8FkBAAAPAAAAD/8PAAAAAAAAAAA0WgEAABAAAAAQnxAAAAAAAAAAANlaAQCgEAAAoBD/EGFrAAAEAAAAGFsBAAARAAAAEf8Rb2sAAAQAAABKWwEAABIAAAASnxMAAAAAAAAAALlbAQAAKAAAACj/KAAAAAAQAAAAWlwBAEAwAABAMP8wAAAAAAgAAACDXAEAADEAAAAx/58AAAAACAAAABhbAQAApwAAAKf/129rAAAM"),S(k,131840,"WAIAAKoAAACwBAAAhwAAANAHAABuAAAAuAsAAG4AAAD/////"),S(k,131888,"qAsD"),S(k,131904,"mF4BAAEAAAA4XwEAAgAAAGFfAQADAAAAnV8BAAYAAADCXwEACQAAAPhfAQAKAAAAJ2ABAAQAAABNYAEABQAAAI1gAQAkAAAAq2ABAAsAAADVYAEADAAAAPZgAQANAAAAFmEBAA4AAABMYQEADwAAAGdhAQAQAAAAlmEBABEAAAC7YQEAEgAAAAJiAQAfAAAAG2IBACUAAABIYgEAIAAAAJJiAQAhAAAAzmIBACIAAADwYgEABwAAAC5jAQAI"),S(k,132112,"jmMBAAEAAAC8YwEAAgAAAAAAAAABAAAAFJwBACCcAQAsnAEAPAAAABo="),S(k,132163,"AgMFCAsOEhYbICUrMTc+RUxTWmJpcXmAiJCYn6autbzCyc/V2uDk6e3w9Pb5+/z9/f39/Pv59vTw7enk4NrVz8nCvLWupp+YkIiAeXFpYlpTTEU+NzErJSAbFhIOCwgFAwI="),S(k,132288,"QAAAAAABAAAAAAAA7AQCACcAAAAoAAAAKQAAACoAAAArAAAAQOkBAMO2AQBo6QEAsLYBAOQEAgAAAAAAJAUCACwAAAAtAAAALgAAAC8AAABA6QEAArcBAGjpAQDstgEAEAUCAGjpAQDStgEAGAUCAAU="),S(k,132412,"DQ=="),S(k,132436,"CwAAAAoAAADoeAM="),S(k,132460,"Ag=="),S(k,132476,"//////////8="),S(k,132544,"MAUCAAAAAAAF"),S(k,132564,"MA=="),S(k,132588,"CwAAADEAAAD4eAMAAAQ="),S(k,132612,"AQ=="),S(k,132628,"/////wo="),S(k,132696,"yAUCAAB/BA==");var ps,pt=(ps=[null,function(A){var t,r=0;return r=e[(A|=0)>>2],e[A>>2]=r+1,r=255&(t=g[0|r]),(0|t)<0&&(r=M[(e[A+12>>2]+(r<<1)|0)-256>>1]),0|r},Ai,function(A){var t,r;return t=e[(A|=0)>>2],r=e[t>>2],e[A>>2]=t+4,0|r},function(A){var t=0,r=0;return t=e[(A|=0)>>2],(0|(r=uA(A)))==65533&&(e[A>>2]=t+1,e[A+8>>2]=1,r=255&(t=g[0|t]),(0|t)>=0||(r=M[(e[A+12>>2]+(r<<1)|0)-256>>1])),0|r},uA,function(A){var t,r,n=0;return(n=e[4+(A|=0)>>2])>>>0<=(r=(t=e[A>>2])+1|0)>>>0?(e[A>>2]=n,65533):(e[A>>2]=r,n=l[0|t],e[A>>2]=t+2,n|l[t+1|0]<<8)},function(A,t){var r,n,a;return t|=0,A=e[(A|=0)>>2],r=e[A+4>>2],n=e[t>>2],(t=Mr(r+1|0,(a=e[n+4>>2])+1|0))||(t=g[0|r]-g[0|a]|0)||(t=Mr(e[A>>2],e[n>>2])),0|t},function(A,t){var r;return A|=0,t=e[(t|=0)>>2],r=e[A>>2],(A=e[t+16>>2]-e[r+16>>2]|0)||(A=Mr(e[r>>2],e[t>>2])),0|A},Ji,function(A,t,r,n){var a;return t|=0,r|=0,n|=0,q=a=q-16|0,(A=0|yA(e[60+(A|=0)>>2],0|t,0|r,255&n,a+8|0))?(e[56798]=A,A=-1):A=0,q=a+16|0,J=A?-1:e[a+12>>2],0|(A?-1:e[a+8>>2])},function(A,t,r){t|=0,r|=0;var n,a=0,s=0,o=0,c=0,f=0,m=0;q=n=q-32|0,a=e[28+(A|=0)>>2],e[n+16>>2]=a,o=e[A+20>>2],e[n+28>>2]=r,e[n+24>>2]=t,t=o-a|0,e[n+20>>2]=t,o=t+r|0,f=2;e:{A:{t=n+16|0,(a=0|Ge(e[A+60>>2],0|t,2,n+12|0))?(e[56798]=a,a=-1):a=0;r:{if(a)a=t;else for(;;){if((0|(s=e[n+12>>2]))==(0|o))break r;if((0|s)<0){a=t;break A}if(c=s-((m=(c=e[t+4>>2])>>>0<s>>>0)?c:0)|0,e[(a=(m<<3)+t|0)>>2]=c+e[a>>2],e[(t=(m?12:4)+t|0)>>2]=e[t>>2]-c,o=o-s|0,t=a,f=f-m|0,(s=0|Ge(e[A+60>>2],0|t,0|f,n+12|0))?(e[56798]=s,s=-1):s=0,s)break}if((0|o)!=-1)break A}t=e[A+44>>2],e[A+28>>2]=t,e[A+20>>2]=t,e[A+16>>2]=t+e[A+48>>2],A=r;break e}e[A+28>>2]=0,e[A+16>>2]=0,e[A+20>>2]=0,e[A>>2]=32|e[A>>2],A=0,(0|f)!=2&&(A=r-e[a+4>>2]|0)}return q=n+32|0,0|A},function(A,t,r){A|=0,t|=0,r|=0;var n,a=0,s=0,o=0;q=n=q-32|0,e[n+16>>2]=t,a=e[A+48>>2],e[n+20>>2]=r-!!(0|a),s=e[A+44>>2],e[n+28>>2]=a,e[n+24>>2]=s;e:{A:{if((a=0|LA(e[A+60>>2],n+16|0,2,n+12|0))?(e[56798]=a,a=-1):a=0,a)t=32;else{if((0|(a=e[n+12>>2]))>0)break A;t=a?32:16}e[A>>2]=t|e[A>>2];break e}o=a,(s=e[n+20>>2])>>>0>=a>>>0||(a=e[A+44>>2],e[A+4>>2]=a,e[A+8>>2]=a+(o-s|0),e[A+48>>2]&&(e[A+4>>2]=a+1,g[(t+r|0)-1|0]=l[0|a]),o=r)}return q=n+32|0,0|o},function(A){return 0|DA(e[60+(A|=0)>>2])},Fa,function(A,t,r,n,a,s){A|=0,t=+t,r|=0,n|=0,a|=0,s|=0;var o,c=0,f=0,m=0,p=0,I=0,y=0,P=0,Y=0,X=0,_=0,ce=0,he=0,ye=0,De=0,Re=0,Xe=0,nA=0,fA=0;q=o=q-560|0,e[o+44>>2]=0,me(+t),c=0|K(1),K(0),(0|c)<0?(he=1,nA=84997,me(+(t=-t)),c=0|K(1),K(0)):2048&a?(he=1,nA=85e3):(nA=(he=1&a)?85003:84998,fA=!he);e:if(2146435072&~c){De=o+16|0;A:{r:{a:{if(t=Gi(t,o+44|0),(t+=t)!=0){if(c=e[o+44>>2],e[o+44>>2]=c-1,(0|(Re=32|s))!=97)break a;break A}if((0|(Re=32|s))==97)break A;I=e[o+44>>2],y=(0|n)<0?6:n;break r}I=c-29|0,e[o+44>>2]=I,t*=268435456,y=(0|n)<0?6:n}for(f=_=(o+48|0)+((0|I)>=0?288:0)|0;n=t<4294967296&t>=0?~~t>>>0:0,e[f>>2]=n,f=f+4|0,(t=1e9*(t-+(n>>>0)))!=0;);if((0|I)<=0)n=I,c=f,m=_;else for(m=_,n=I;;){if(Y=(0|n)>=29?29:n,!(m>>>0>(c=f-4|0)>>>0)){for(n=0;p=e[c>>2],Xe=n,n=31&Y,(63&Y)>>>0>=32?(P=p<<n,n=0):(P=(1<<n)-1&p>>>32-n,n=p<<n),p=P+X|0,n=fs(Xe=Xe+n|0,n>>>0>Xe>>>0?p+1|0:p,1e9),e[c>>2]=Xe-kt(n,J,1e9,0),m>>>0<=(c=c-4|0)>>>0;);n&&(e[(m=m-4|0)>>2]=n)}for(;m>>>0<(c=f)>>>0&&!e[(f=c-4|0)>>2];);if(n=e[o+44>>2]-Y|0,e[o+44>>2]=n,f=c,!((0|n)>0))break}if((0|n)<0)for(ye=1+((y+25>>>0)/9|0)|0,X=(0|Re)==102;;){if(P=(0|(n=0-n|0))>=9?9:n,c>>>0<=m>>>0)f=e[m>>2];else{for(Y=1e9>>>P|0,p=~(-1<<P),n=0,f=m;Xe=n,n=e[f>>2],e[f>>2]=Xe+(n>>>P|0),n=F(Y,n&p),(f=f+4|0)>>>0<c>>>0;);f=e[m>>2],n&&(e[c>>2]=n,c=c+4|0)}if(n=P+e[o+44>>2]|0,e[o+44>>2]=n,m=(!f<<2)+m|0,c=c-(f=X?_:m)>>2>(0|ye)?f+(ye<<2)|0:c,!((0|n)<0))break}if(n=0,!(c>>>0<=m>>>0||(n=F(_-m>>2,9),f=10,(p=e[m>>2])>>>0<10)))for(;n=n+1|0,p>>>0>=(f=F(f,10))>>>0;);if((0|(f=(y-((0|Re)!=102?n:0)|0)-((0|Re)==103&!!(0|y))|0))<(F(c-_>>2,9)-9|0)){if(I=((((0|I)<0?4:292)+o|0)+((p=(0|(Y=f+9216|0))/9|0)<<2)|0)-4048|0,f=10,(0|(P=Y-F(p,9)|0))<=7)for(;f=F(f,10),(0|(P=P+1|0))!=8;);if(!(!(X=(Y=e[I>>2])-F(f,ye=(Y>>>0)/(f>>>0)|0)|0)&(0|(p=I+4|0))==(0|c))&&(!(1&ye)&&(t=9007199254740992,!(1&g[I-4|0])|(0|f)!=1e9|m>>>0>=I>>>0)||(t=9007199254740994),ce=(0|c)==(0|p)?1:1.5,ce=(p=f>>>1|0)>>>0>X>>>0?.5:(0|p)==(0|X)?ce:1.5,l[0|nA]!=45|fA||(ce=-ce,t=-t),p=Y-X|0,e[I>>2]=p,t+ce!=t)){if(n=f+p|0,e[I>>2]=n,n>>>0>=1e9)for(;e[I>>2]=0,(I=I-4|0)>>>0<m>>>0&&(e[(m=m-4|0)>>2]=0),n=e[I>>2]+1|0,e[I>>2]=n,n>>>0>999999999;);if(n=F(_-m>>2,9),f=10,!((p=e[m>>2])>>>0<10))for(;n=n+1|0,p>>>0>=(f=F(f,10))>>>0;);}c=c>>>0>(f=I+4|0)>>>0?f:c}for(;p=c,!(Y=c>>>0<=m>>>0)&&!e[(c=p-4|0)>>2];);if((0|Re)==103){if(y=((c=(0|(f=y||1))>(0|n)&(0|n)>-5)?~n:-1)+f|0,s=(c?-1:-2)+s|0,!(I=8&a)){if(c=-9,!Y&&(I=e[p-4>>2])&&(P=10,c=0,!((I>>>0)%10|0))){for(;f=c,c=c+1|0,!((I>>>0)%((P=F(P,10))>>>0)|0););c=~f}f=F(p-_>>2,9),(-33&s)!=70?(I=0,y=(0|(c=(0|(c=((n+f|0)+c|0)-9|0))>0?c:0))>(0|y)?y:c):(I=0,y=(0|(c=(0|(c=(c+f|0)-9|0))>0?c:0))>(0|y)?y:c)}}else I=8&a;if(P=-1,(0|((Y=I|y)?2147483645:2147483646))<(0|y))break e;if(X=1+(!!(0|Y)+y|0)|0,(0|(f=-33&s))!=70){if((De-(c=wa(((c=n>>31)^n)-c|0,0,De))|0)<=1)for(;g[0|(c=c-1|0)]=48,(De-c|0)<2;);if(g[0|(ye=c-2|0)]=s,g[c-1|0]=(0|n)<0?45:43,(0|(c=De-ye|0))>(2147483647^X))break e}else{if((2147483647^X)<(0|n))break e;c=(0|n)>0?n:0}if((0|(n=c+X|0))>(2147483647^he))break e;tn(A,32,r,X=n+he|0,a),_r(A,nA,he),tn(A,48,r,X,65536^a);r:{a:{s:{if((0|f)==70){for(n=8|(s=o+16|0),I=9|s,m=f=m>>>0>_>>>0?_:m;;){c=wa(e[m>>2],0,I);c:if((0|f)==(0|m))(0|c)==(0|I)&&(g[o+24|0]=48,c=n);else{if(o+16>>>0>=c>>>0)break c;for(;g[0|(c=c-1|0)]=48,o+16>>>0<c>>>0;);}if(_r(A,c,I-c|0),!(_>>>0>=(m=m+4|0)>>>0))break}if(Y&&_r(A,85998,1),(0|y)<=0|m>>>0>=p>>>0)break s;for(;;){if((c=wa(e[m>>2],0,I))>>>0>o+16>>>0)for(;g[0|(c=c-1|0)]=48,o+16>>>0<c>>>0;);if(_r(A,c,(0|y)>=9?9:y),c=y-9|0,p>>>0<=(m=m+4|0)>>>0)break a;if(n=(0|y)>9,y=c,!n)break}break a}c:if(!((0|y)<0))for(_=m>>>0<p>>>0?p:m+4|0,n=8|(s=o+16|0),p=9|s,f=m;;){(0|p)==(0|(c=wa(e[f>>2],0,p)))&&(g[o+24|0]=48,c=n);o:if((0|f)==(0|m))_r(A,c,1),c=c+1|0,I|y&&_r(A,85998,1);else{if(o+16>>>0>=c>>>0)break o;for(;g[0|(c=c-1|0)]=48,o+16>>>0<c>>>0;);}if(_r(A,c,(0|(s=p-c|0))>(0|y)?y:s),y=y-s|0,_>>>0<=(f=f+4|0)>>>0)break c;if(!((0|y)>=0))break}tn(A,48,y+18|0,18,0),_r(A,ye,De-ye|0);break r}c=y}tn(A,48,c+9|0,9,0)}tn(A,32,r,X,8192^a),P=(0|r)<(0|X)?X:r;break e}if(I=(s<<26>>31&9)+nA|0,!(n>>>0>11)){for(c=12-n|0,ce=16;ce*=16,c=c-1|0;);t=l[0|I]!=45?t+ce-ce:-(ce+(-t-ce))}for((0|De)==(0|(c=wa(((c=e[o+44>>2])^(f=c>>31))-f|0,0,De)))&&(g[o+15|0]=48,c=o+15|0),_=2|he,m=32&s,f=e[o+44>>2],g[0|(y=c-2|0)]=s+15,g[c-1|0]=(0|f)<0?45:43,c=8&a,f=o+16|0;s=f,p=Ne(t)<2147483648?~~t:-2147483648,g[0|f]=m|l[p+124512|0],!((0|n)>0|c)&(t=16*(t-+(0|p)))==0|((f=s+1|0)-(o+16|0)|0)!=1||(g[s+1|0]=46,f=s+2|0),t!=0;);P=-1,(2147483645-(s=(c=De-y|0)+_|0)|0)<(0|n)||(tn(A,32,r,s=(n=!n||((m=f-(o+16|0)|0)-2|0)>=(0|n)?m=f-(o+16|0)|0:n+2|0)+s|0,a),_r(A,I,_),tn(A,48,r,s,65536^a),_r(A,o+16|0,m),tn(A,48,n-m|0,0,0),_r(A,y,c),tn(A,32,r,s,8192^a),P=(0|r)<(0|s)?s:r)}else tn(A,32,r,c=he+3|0,-65537&a),_r(A,nA,he),n=32&s,_r(A,t!=t?n?85596:85774:n?85247:85460,3),tn(A,32,r,c,8192^a),P=(0|r)<(0|c)?c:r;return q=o+560|0,0|P},function(A,t){var r;A|=0,r=t|=0,t=e[t>>2]+7&-8,e[r>>2]=t+16,D[A>>3]=Qa(e[t>>2],e[t+4>>2],e[t+8>>2],e[t+12>>2])},function(A,t,r){t|=0,r|=0;var n,a,s=0,o=0;return n=e[84+(A|=0)>>2],o=e[n+4>>2],a=e[A+28>>2],(s=(s=e[A+20>>2]-a|0)>>>0>o>>>0?o:s)&&(xt(e[n>>2],a,s),e[n>>2]=s+e[n>>2],o=e[n+4>>2]-s|0,e[n+4>>2]=o),s=e[n>>2],(o=r>>>0>o>>>0?o:r)&&(xt(s,t,o),s=o+e[n>>2]|0,e[n>>2]=s,e[n+4>>2]=e[n+4>>2]-o),g[0|s]=0,t=e[A+44>>2],e[A+28>>2]=t,e[A+20>>2]=t,0|r},function(A,t,r){r|=0;var n,a,s=0;return xt(t|=0,n=e[84+(A|=0)>>2],r=r>>>0>(s=(a=ss(n,0,s=r+256|0))?a-n|0:s)>>>0?s:r),t=n+s|0,e[A+84>>2]=t,e[A+8>>2]=t,e[A+4>>2]=r+n,0|r},function(A,t,r){t|=0,r|=0;var n,a=0,s=0,o=0;a=e[84+(A|=0)>>2],n=e[a>>2]?a:84412,a=0;e:if(e[A+48>>2])for(;;){if(!(s=e[(a<<2)+n>>2]))break e;if(g[e[A+44>>2]+a|0]=(0|s)>=128?64:s,!((a=a+1|0)>>>0<ue[A+48>>2]))break}return s=e[A+44>>2],e[A+4>>2]=s,e[A+84>>2]=(a<<2)+n,e[A+8>>2]=a+s,!r|!a||(e[A+4>>2]=s+1,g[0|t]=l[0|s],o=1),0|o},Ji,qa,S0,S0,function(A,t,r){r|=0;var n,a=0;return q=n=q+-64|0,a=1,ta(A|=0,t|=0,0)||(a=0,t&&(a=0,(t=er(t,125132))&&(VA(4|(a=n+8|0),0,52),e[n+56>>2]=1,e[n+20>>2]=-1,e[n+16>>2]=A,e[n+8>>2]=t,pt[e[e[t>>2]+28>>2]](t,a,e[r>>2],1),(0|(A=e[n+32>>2]))==1&&(e[r>>2]=e[n+24>>2]),a=(0|A)==1))),q=n- -64|0,0|a},function(A,t,r,n,a,s){r|=0,n|=0,a|=0,s|=0,ta(A|=0,e[8+(t|=0)>>2],s)&&ys(t,r,n,a)},function(A,t,r,n,a){if(r|=0,n|=0,a|=0,ta(A|=0,e[8+(t|=0)>>2],a))e[t+28>>2]==1|e[t+4>>2]!=(0|r)||(e[t+28>>2]=n);else e:if(ta(A,e[t>>2],a)){if(!(e[t+16>>2]!=(0|r)&e[t+20>>2]!=(0|r))){if((0|n)!=1)break e;return void(e[t+32>>2]=1)}e[t+20>>2]=r,e[t+32>>2]=n,e[t+40>>2]=e[t+40>>2]+1,e[t+36>>2]!=1|e[t+24>>2]!=2||(g[t+54|0]=1),e[t+44>>2]=4}},function(A,t,r,n){r|=0,n|=0,ta(A|=0,e[8+(t|=0)>>2],0)&&E0(t,r,n)},qa,function(A,t,r,n,a,s){r|=0,n|=0,a|=0,s|=0,ta(A|=0,e[8+(t|=0)>>2],s)?ys(t,r,n,a):(A=e[A+8>>2],pt[e[e[A>>2]+20>>2]](A,t,r,n,a,s))},function(A,t,r,n,a){if(r|=0,n|=0,a|=0,ta(A|=0,e[8+(t|=0)>>2],a))e[t+28>>2]==1|e[t+4>>2]!=(0|r)||(e[t+28>>2]=n);else e:{if(ta(A,e[t>>2],a)){if(!(e[t+16>>2]!=(0|r)&e[t+20>>2]!=(0|r))){if((0|n)!=1)break e;return void(e[t+32>>2]=1)}e[t+32>>2]=n;A:if(e[t+44>>2]!=4){if(b[t+52>>1]=0,A=e[A+8>>2],pt[e[e[A>>2]+20>>2]](A,t,r,r,1,a),l[t+53|0]){if(e[t+44>>2]=3,!l[t+52|0])break A;break e}e[t+44>>2]=4}if(e[t+20>>2]=r,e[t+40>>2]=e[t+40>>2]+1,e[t+36>>2]!=1|e[t+24>>2]!=2)break e;return void(g[t+54|0]=1)}A=e[A+8>>2],pt[e[e[A>>2]+24>>2]](A,t,r,n,a)}},function(A,t,r,n){r|=0,n|=0,ta(A|=0,e[8+(t|=0)>>2],0)?E0(t,r,n):(A=e[A+8>>2],pt[e[e[A>>2]+28>>2]](A,t,r,n))},qa,function(A){return 84787},qa,function(A){return 85058},qa,function(A){return 84147},function(A){var t;return t=A|=0,A=e[A>>2],e[t>>2]=A+1,0|((0|(A=g[0|A]))<0?65533:255&A)},function(A,t,r,n,a,s){A|=0,t|=0,r|=0,n|=0,a|=0,s|=0;var o,c=0,f=0,m=0,p=0,I=0,y=0,P=0,Y=0;if(o=On(408),e[o+4>>2]=n,e[o>>2]=r,t?(xt(o+16|0,t,376),D[o+392>>3]=(D[t+368>>3]-D[t>>3])/+(r>>>0),t=0):t=1,e[o+400>>2]=a,g[o+8|0]=t,s){if(r=e[A+24>>2])for(t=e[A+20>>2],n=e[A+8>>2];(a=e[e[(t>>>8&16777212)+n>>2]+((1023&t)<<2)>>2])&&(yt(a),r=e[A+24>>2],n=e[A+8>>2],t=e[A+20>>2]),t=t+1|0,e[A+20>>2]=t,r=r-1|0,e[A+24>>2]=r,t>>>0>=2048&&(yt(e[n>>2]),n=e[A+8>>2]+4|0,e[A+8>>2]=n,t=e[A+20>>2]-1024|0,e[A+20>>2]=t,r=e[A+24>>2]),r;);t=e[A+28>>2],e[A+420>>2]=e[t>>2],(r=e[A+32>>2])&&(g[t+8|0]=l[r+8|0],xt(t+16|0,A+40|0,376),(t=e[A+32>>2])&&yt(t),e[A+32>>2]=0)}if(r=(n=e[A+24>>2])+e[A+20>>2]|0,a=e[A+12>>2],(0|r)==(0|((0|(t=e[A+8>>2]))!=(0|a)?(a-t<<8)-1:0))){q=c=q-32|0;e:{A:{r:{a:{if((t=e[16+(s=A+4|0)>>2])>>>0>=1024){if(e[s+16>>2]=t-1024,t=e[s+4>>2],y=e[t>>2],a=t+4|0,e[s+4>>2]=a,(0|(t=e[s+8>>2]))==e[s+12>>2])if((f=e[s>>2])>>>0<a>>>0)r=Bt((n=(1+(a-f>>2)|0)/-2<<2)+a|0,a,t=t-a|0)+t|0,e[s+8>>2]=r,e[s+4>>2]=n+e[s+4>>2];else{if((r=(0|t)==(0|f)?1:t-f>>1)>>>0>=1073741824)break a;if(P=(n=r<<2)+(m=On(n))|0,r=n=m+(-4&r)|0,(0|t)!=(0|a)){if(Y=-4&(t=t-a|0),I=1+((p=t-4|0)>>>2|0)&7)for(r=0,t=n;e[t>>2]=e[a>>2],a=a+4|0,t=t+4|0,(0|I)!=(0|(r=r+1|0)););else t=n;if(r=n+Y|0,!(p>>>0<28))for(;e[t>>2]=e[a>>2],e[t+4>>2]=e[a+4>>2],e[t+8>>2]=e[a+8>>2],e[t+12>>2]=e[a+12>>2],e[t+16>>2]=e[a+16>>2],e[t+20>>2]=e[a+20>>2],e[t+24>>2]=e[a+24>>2],e[t+28>>2]=e[a+28>>2],a=a+32|0,(0|r)!=(0|(t=t+32|0)););}e[s+12>>2]=P,e[s+8>>2]=r,e[s+4>>2]=n,e[s>>2]=m,f&&(yt(f),r=e[s+8>>2])}else r=t;e[r>>2]=y,e[s+8>>2]=e[s+8>>2]+4;break e}if((f=(a=e[s+8>>2])-e[s+4>>2]>>2)>>>0<(n=(t=e[s+12>>2])-(r=e[s>>2])|0)>>2>>>0){if((0|t)!=(0|a)){e[c+8>>2]=On(4096),je(s,c+8|0);break e}if(e[c+8>>2]=On(4096),xe(s,c+8|0),t=e[s+4>>2],y=e[t>>2],a=t+4|0,e[s+4>>2]=a,(0|(t=e[s+8>>2]))==e[s+12>>2])if((f=e[s>>2])>>>0<a>>>0)r=Bt((n=(1+(a-f>>2)|0)/-2<<2)+a|0,a,t=t-a|0)+t|0,e[s+8>>2]=r,e[s+4>>2]=n+e[s+4>>2];else{if((r=(0|t)==(0|f)?1:t-f>>1)>>>0>=1073741824)break a;if(P=(n=r<<2)+(m=On(n))|0,r=n=m+(-4&r)|0,(0|t)!=(0|a)){if(Y=-4&(t=t-a|0),I=1+((p=t-4|0)>>>2|0)&7)for(r=0,t=n;e[t>>2]=e[a>>2],a=a+4|0,t=t+4|0,(0|I)!=(0|(r=r+1|0)););else t=n;if(r=n+Y|0,!(p>>>0<28))for(;e[t>>2]=e[a>>2],e[t+4>>2]=e[a+4>>2],e[t+8>>2]=e[a+8>>2],e[t+12>>2]=e[a+12>>2],e[t+16>>2]=e[a+16>>2],e[t+20>>2]=e[a+20>>2],e[t+24>>2]=e[a+24>>2],e[t+28>>2]=e[a+28>>2],a=a+32|0,(0|r)!=(0|(t=t+32|0)););}e[s+12>>2]=P,e[s+8>>2]=r,e[s+4>>2]=n,e[s>>2]=m,f&&(yt(f),r=e[s+8>>2])}else r=t;e[r>>2]=y,e[s+8>>2]=e[s+8>>2]+4;break e}if(e[c+24>>2]=s+12,!((t=(0|t)==(0|r)?1:n>>1)>>>0>=1073741824)){if(t=On(r=t<<2),e[c+8>>2]=t,n=t+(f<<2)|0,e[c+16>>2]=n,e[c+20>>2]=t+r,e[c+12>>2]=n,e[c+4>>2]=On(4096),je(c+8|0,c+4|0),(0|(a=e[s+8>>2]))==e[s+4>>2]){t=a;break A}for(;xe(c+8|0,a=a-4|0),e[s+4>>2]!=(0|a););break r}}$s(),Be()}t=e[s+8>>2]}r=e[s>>2],e[s>>2]=e[c+8>>2],e[c+8>>2]=r,e[s+4>>2]=e[c+12>>2],e[c+12>>2]=a,e[s+8>>2]=e[c+16>>2],e[c+16>>2]=t,n=e[s+12>>2],e[s+12>>2]=e[c+20>>2],e[c+20>>2]=n,(0|t)!=(0|a)&&(e[c+16>>2]=t+(3+(a-t|0)&-4)),r&&yt(r)}q=c+32|0,r=(n=e[A+24>>2])+e[A+20>>2]|0,t=e[A+8>>2]}e[e[t+(r>>>8&16777212)>>2]+((1023&r)<<2)>>2]=o,e[A+24>>2]=n+1},function(A){var t=0,r=0,n=0,a=0,s=0,o=0,c=0,f=0,m=0;r=e[420+(A|=0)>>2]+1|0,e[A+420>>2]=r;e:{if(t=e[A+32>>2]){if(r>>>0>(c=e[t+4>>2])>>>0){(r=e[A+28>>2])&&(yt(r),t=e[A+32>>2]),e[A+32>>2]=0,e[A+28>>2]=t;break e}for(s=A+40|0,o=t+16|0,f=e[A+28>>2]+16|0,m=+(r>>>0)/+(c>>>0),t=0;;){if(n=D[(r=t<<3)+o>>3],a=D[r+f>>3],D[r+s>>3]=n==n?(n-a)*m+a:a,(0|(r=1|t))==47)break e;n=D[(r<<=3)+o>>3],a=D[r+f>>3],D[r+s>>3]=n==n?(n-a)*m+a:a,t=t+2|0}}if(t=e[A+28>>2],r>>>0>ue[t>>2]){if(s=e[A+24>>2]){if(g[A+416|0]=0,o=e[A+8>>2],r=e[A+20>>2],t=e[e[o+(r>>>8&16777212)>>2]+((1023&r)<<2)>>2],e[A+32>>2]=t,e[A+24>>2]=s-1,r=r+1|0,e[A+20>>2]=r,r>>>0>=2048&&(yt(e[o>>2]),e[A+8>>2]=e[A+8>>2]+4,e[A+20>>2]=e[A+20>>2]-1024,t=e[A+32>>2]),l[t+8|0])xt(t+16|0,e[A+28>>2]+16|0,376),t=e[A+32>>2],e[t+368>>2]=0,e[t+372>>2]=0,n=D[A+40>>3],e[t+392>>2]=0,e[t+396>>2]=0,D[t+16>>3]=n;else if(r=e[A+28>>2],l[r+8|0]&&(xt(r+16|0,t+16|0,376),t=e[A+28>>2],e[t+368>>2]=0,e[t+372>>2]=0,!(t=e[A+32>>2])))break e;(0|(r=e[t+400>>2]))!=-1&&(e[A+424>>2]=r),e[A+420>>2]=0,D[t+16>>3]=D[t+392>>3]*+ue[t+4>>2]+D[t+16>>3];break e}g[A+416|0]=1}else n=D[t+392>>3]+D[A+40>>3],D[A+40>>3]=n,D[t+16>>3]=n}return 0|(l[A+416|0]?0:A+40)},function(A){return e[424+(A|=0)>>2]},function(A){var t=0;return e[(A|=0)>>2]=132304,(t=e[A+28>>2])&&yt(t),(t=e[A+32>>2])&&yt(t),f0(A+4|0),0|A},function(A){var t=0;e[(A|=0)>>2]=132304,(t=e[A+28>>2])&&yt(t),(t=e[A+32>>2])&&yt(t),f0(A+4|0),yt(A)},function(A,t,r){t|=0,r|=0;var n=0,a=0,s=0,o=0,c=0,f=0,m=0,p=0,I=0,y=0,P=0,Y=0,X=0,_=0,ce=0,he=0,ye=0,De=0,Re=0;if(!e[1088+(A|=0)>>2])return 0;e:if(t){for(m=A+648|0,f=A- -64|0;;){if(n=e[A+1088>>2],!(n=0|pt[e[e[n>>2]+4>>2]](n)))break e;if(a=Va(D[A+32>>3]+D[n+16>>3]/+e[A+24>>2]),D[A+32>>3]=a,a=Ws(6.283185307179586*a),a=Va(D[A+16>>3]+D[n>>3]*(.06*a*D[n+8>>3]+1)/+e[A+8>>2]),D[A+16>>3]=a,c=kt(e[56848],e[56849],1284865837,1481765933),s=J,s=(c=c+1|0)?s:s+1|0,e[56848]=c,e[56849]=s,o=.75*D[A+40>>3]+ +(s>>>1|0)/2147483647,D[A+40>>3]=o,p=D[n+24>>3],s=a>=D[n+32>>3],g[A+48|0]=s,o=(y=p)*(p=.2*o),o=vr(f+512|0,vr(f+440|0,a=D[n+352>>3]*(p*D[n+48>>3]+D[n+40>>3]*(a+a+-1+(s?o:.01*o)))*.5,D[n+104>>3],D[n+168>>3]),D[n+112>>3],D[n+176>>3]),o=vr(f+8|0,vr(f+80|0,vr(f+152|0,vr(f+224|0,vr(f+296|0,vr(f+368|0,o==o?(o-a)*D[n+184>>3]+a:a,D[n+96>>3],D[n+160>>3]),D[n+88>>3],D[n+152>>3]),D[n+80>>3],D[n+144>>3]),D[n+72>>3],D[n+136>>3]),D[n+64>>3],D[n+128>>3]),D[n+56>>3],D[n+120>>3]),c=kt(e[56848],e[56849],1284865837,1481765933),s=J,s=(c=c+1|0)?s:s+1|0,e[56848]=c,e[56849]=s,a=.75*D[A+56>>3]+ +(s>>>1|0)/2147483647,D[A+56>>3]=a,s=(I<<1)+r|0,p=vr(m+8|0,a=D[n+352>>3]*(D[n+192>>3]*(.3*a))*.5,D[n+200>>3],D[n+248>>3]),P=D[n+296>>3],Y=vr(m+80|0,a,D[n+208>>3],D[n+256>>3]),X=D[n+304>>3],_=vr(m+152|0,a,D[n+216>>3],D[n+264>>3]),ce=D[n+312>>3],he=vr(m+224|0,a,D[n+224>>3],D[n+272>>3]),ye=D[n+320>>3],De=vr(m+296|0,a,D[n+232>>3],D[n+280>>3]),Re=D[n+328>>3],y=o,o=(vr(m+368|0,a,D[n+240>>3],D[n+288>>3])-a)*D[n+336>>3]+(Re*(De-a)+(ye*(he-a)+(ce*(_-a)+(X*(Y-a)+(P*(p-a)+0))))),a=(y+(a==a?(a-o)*D[n+344>>3]+o:o))*D[n+360>>3]*4e3,n=(0|(n=Ne(a)<2147483648?~~a:-2147483648))>=32e3?32e3:n,b[s>>1]=(0|n)<=-32e3?-32e3:n,(0|(I=I+1|0))==(0|t))break}I=t}return 0|(t>>>0>I>>>0?I:t)},function(A,t){t|=0,e[1088+(A|=0)>>2]=t},Ji,qa,Ai,function(A,t,r,n){return J=0,0}],ps.grow=function(A){var t=this.length;return this.length=this.length+A,t},ps.set=function(A,t){this[A]=t},ps.get=function(A){return this[A]},ps);return{v:function(){var A,t=0;q=A=q-16|0,0|MA(A+12|0,A+8|0)||(t=It(4+(e[A+12>>2]<<2)|0),e[56800]=t,t&&(!(t=It(e[A+8>>2]))||(e[e[56800]+(e[A+12>>2]<<2)>>2]=0,0|mA(e[56800],0|t)))&&(e[56800]=0)),q=A+16|0,e[56841]=227236,e[56823]=42},w:zs,x:qi,y:function(A,t){t|=0,e[(A|=0)>>2]=t},z:function(A,t){return t|=0,g[e[4+(A|=0)>>2]+t|0]},A:bn,B:z0,C:function(A){return l[12+(A|=0)|0]},D:function(A,t){t|=0,g[12+(A|=0)|0]=t},E:function(A){return l[13+(A|=0)|0]},F:function(A,t){t|=0,g[13+(A|=0)|0]=t},G:function(A){return l[14+(A|=0)|0]},H:function(A,t){t|=0,g[14+(A|=0)|0]=t},I:function(A){return l[15+(A|=0)|0]},J:function(A,t){t|=0,g[15+(A|=0)|0]=t},K:Xa,L:function(A,t){t|=0,e[16+(A|=0)>>2]=t},M:Xi,N:function(A,t){t|=0,e[20+(A|=0)>>2]=t},O:zs,P:qi,Q:F0,R:bn,S:Na,T:Xa,U:Xi,V:function(A){return e[24+(A|=0)>>2]},W:zs,X:function(){var A,t=0,r=0,n=0,a=0,s=0,o=0,c=0,f=0,m=0,p=0,I=0,y=0,P=0,Y=0,X=0,_=0,ce=0,he=0,ye=0,De=0,Re=0,Xe=0,nA=0;if(A=On(20),e[A+16>>2]=0,e[A+8>>2]=175,e[A+12>>2]=50,!(t=e[33208])){q=t=(q=ye=q-16|0)-80|0;e:{if((r=is(84292))&&(e[t+32>>2]=r,ua(137584,160,85959,t+32|0),(0|da(137584))==-31||(e[t+16>>2]=r,ua(137584,160,86031,t+16|0),(0|da(137584))==-31)))break e;(r=is(84619))&&(e[t>>2]=r,ua(137584,160,85959,t),(0|da(137584))==-31)||(r=l[84826]|l[84827]<<8|l[84828]<<16|l[84829]<<24,e[34396]=l[84822]|l[84823]<<8|l[84824]<<16|l[84825]<<24,e[34397]=r,b[68804]=l[84846]|l[84847]<<8,r=l[84842]|l[84843]<<8|l[84844]<<16|l[84845]<<24,e[34400]=l[84838]|l[84839]<<8|l[84840]<<16|l[84841]<<24,e[34401]=r,r=l[84834]|l[84835]<<8|l[84836]<<16|l[84837]<<24,e[34398]=l[84830]|l[84831]<<8|l[84832]<<16|l[84833]<<24,e[34399]=r)}if(q=t+80|0,e[ye+12>>2]=0,a=ye+12|0,q=c=q-16|0,e[c+12>>2]=22050,YA(85144)||YA(85315)||YA(85473)||YA(85698),I=c+12|0,q=s=q-16|0,e[s+12>>2]=0,!((t=Hs(137832,84262,0,a))||(t=Hs(137836,84420,0,a))||(t=Hs(137840,84813,0,a))||(t=Hs(137820,85016,s+12|0,a))))if(e[34454]=ue[s+12>>2]/68,r=e[34460],e[34456]=r,r&&(0|(m=l[0|r]|l[r+1|0]<<8|l[r+2|0]<<16|l[r+3|0]<<24))==83969){if(y=l[r+4|0]|l[r+5|0]<<8|l[r+6|0]<<16|l[r+7|0]<<24,r=e[34458],Y=l[0|r],e[34461]=Y,Y)for(t=r+4|0,m=0;n=F(m,44)+137856|0,a=l[0|t],e[n+36>>2]=a,e[n+40>>2]=l[t+1|0],o=l[t+8|0]|l[t+9|0]<<8|l[t+10|0]<<16|l[t+11|0]<<24,r=l[t+4|0]|l[t+5|0]<<8|l[t+6|0]<<16|l[t+7|0]<<24,g[0|n]=r,g[n+1|0]=r>>>8,g[n+2|0]=r>>>16,g[n+3|0]=r>>>24,g[n+4|0]=o,g[n+5|0]=o>>>8,g[n+6|0]=o>>>16,g[n+7|0]=o>>>24,o=l[t+16|0]|l[t+17|0]<<8|l[t+18|0]<<16|l[t+19|0]<<24,r=l[t+12|0]|l[t+13|0]<<8|l[t+14|0]<<16|l[t+15|0]<<24,g[n+8|0]=r,g[n+9|0]=r>>>8,g[n+10|0]=r>>>16,g[n+11|0]=r>>>24,g[n+12|0]=o,g[n+13|0]=o>>>8,g[n+14|0]=o>>>16,g[n+15|0]=o>>>24,o=l[t+24|0]|l[t+25|0]<<8|l[t+26|0]<<16|l[t+27|0]<<24,r=l[t+20|0]|l[t+21|0]<<8|l[t+22|0]<<16|l[t+23|0]<<24,g[n+16|0]=r,g[n+17|0]=r>>>8,g[n+18|0]=r>>>16,g[n+19|0]=r>>>24,g[n+20|0]=o,g[n+21|0]=o>>>8,g[n+22|0]=o>>>16,g[n+23|0]=o>>>24,o=l[t+32|0]|l[t+33|0]<<8|l[t+34|0]<<16|l[t+35|0]<<24,r=l[t+28|0]|l[t+29|0]<<8|l[t+30|0]<<16|l[t+31|0]<<24,g[n+24|0]=r,g[n+25|0]=r>>>8,g[n+26|0]=r>>>16,g[n+27|0]=r>>>24,g[n+28|0]=o,g[n+29|0]=o>>>8,g[n+30|0]=o>>>16,g[n+31|0]=o>>>24,r=t+36|0,e[n+32>>2]=r,t=r+(a<<4)|0,(0|Y)!=(0|(m=m+1|0)););(0|Y)<=e[34457]&&(e[34457]=0),t=0,I&&(e[I>>2]=y)}else e:{A:{if(a){if(r=e[a>>2]){yt(e[r+4>>2]),t=e[a>>2];break A}if(t=It(16),e[a>>2]=t,t)break A;t=48}else t=268436223;break e}e[t>>2]=1,e[t+4>>2]=ei(137584),r=e[a>>2],e[r+12>>2]=83969,e[r+8>>2]=m,t=268436223}if(q=s+16|0,r=t,!t){if(I=e[c+12>>2],e[50754]=I,e[50759]=0,e[50760]=134217728/(0|I),e[50762]=0,e[50763]=0,e[50765]=2147483647,e[50781]=100,e[50779]=32,e[50761]=(I<<6)/(0|I),t=e[26385],e[50784]=e[26384],e[50785]=t,t=e[26387],e[50786]=e[26386],e[50787]=t,t=e[26389],e[50788]=e[26388],e[50789]=t,t=e[26391],e[50790]=e[26390],e[50791]=t,t=e[26393],e[50792]=e[26392],e[50793]=t,t=e[26395],e[50794]=e[26394],e[50795]=t,t=e[26397],e[50796]=e[26396],e[50797]=t,e[50798]=e[26398],y=(0|(t=(0|(a=F(I,60)))/12800|0))>=128?128:t,e[50799]=y,e[50800]=(0|y)/2,!((0|I)==22050|(0|a)<12800)){if(I=1&(t=(0|y)<=1?1:y),ce=+(0|y),m=0,(0|y)>=2)for(y=2147483646&t,t=0;X=m+132160|0,f=127*(1-Tn(6.283185307179586*+(0|m)/ce)),P=Ne(f)<2147483648?~~f:-2147483648,g[0|X]=P,X=132160+(a=1|m)|0,f=127*(1-Tn(6.283185307179586*+(0|a)/ce)),P=Ne(f)<2147483648?~~f:-2147483648,g[0|X]=P,m=m+2|0,(0|y)!=(0|(t=t+2|0)););I&&(t=m+132160|0,f=127*(1-Tn(6.283185307179586*+(0|m)/ce)),X=Ne(f)<2147483648?~~f:-2147483648,g[0|t]=X)}if(e[50801]=105792,e[56797]=ca(),e[55964]=38,e[55921]=1,e[55918]=22050,e[56606]=0,e[55960]=110928,e[55958]=0,e[55959]=1074266112,e[55956]=100,e[55922]=20,e[55923]=220,e[55916]=1,e[55917]=0,qs(),e[56244]=0,e[56245]=0,e[55928]=0,e[55926]=0,e[55927]=0,e[55924]=0,e[56246]=0,e[56247]=0,e[56260]=0,e[56261]=0,e[56262]=0,e[56263]=0,e[56276]=0,e[56277]=0,e[56278]=0,e[56279]=0,e[55974]=0,e[55975]=0,e[55972]=0,e[55973]=0,ce=-3.141592653589793/+(0|(t=e[55918])),D[27967]=ce,a=(0|F(t,630))/1e4|0,e[55920]=a,t=(0|F(t,950))/1e4|0,e[55919]=t,f=-2*ce,D[27968]=f,ce=(Xe=Ft(ce*+(0|a)))*-Xe,D[28129]=ce,f=Xe*Tn(f*+(0|t)),f+=f,D[28128]=f,D[28127]=1-f-ce,e[55990]=0,e[55991]=0,e[55988]=0,e[55989]=0,e[56006]=0,e[56007]=0,e[56004]=0,e[56005]=0,e[56022]=0,e[56023]=0,e[56020]=0,e[56021]=0,e[56038]=0,e[56039]=0,e[56036]=0,e[56037]=0,e[56054]=0,e[56055]=0,e[56052]=0,e[56053]=0,e[56070]=0,e[56071]=0,e[56068]=0,e[56069]=0,e[56086]=0,e[56087]=0,e[56084]=0,e[56085]=0,e[56102]=0,e[56103]=0,e[56100]=0,e[56101]=0,e[56118]=0,e[56119]=0,e[56116]=0,e[56117]=0,e[56134]=0,e[56135]=0,e[56132]=0,e[56133]=0,e[56150]=0,e[56151]=0,e[56148]=0,e[56149]=0,e[56166]=0,e[56167]=0,e[56164]=0,e[56165]=0,e[56182]=0,e[56183]=0,e[56180]=0,e[56181]=0,e[56198]=0,e[56199]=0,e[56196]=0,e[56197]=0,e[56214]=0,e[56215]=0,e[56212]=0,e[56213]=0,e[56230]=0,e[56231]=0,e[56228]=0,e[56229]=0,e[56639]=59,e[56640]=59,e[56629]=0,e[56630]=59,e[56619]=89,e[56620]=160,e[56609]=280,e[56610]=688,e[56611]=1064,e[56621]=70,e[56631]=59,e[56612]=2806,e[56613]=3260,e[56622]=160,e[56623]=200,e[56632]=59,e[56633]=59,e[56641]=89,e[56642]=149,e[56643]=200,e[56644]=200,e[56634]=59,e[56635]=59,e[56624]=200,e[56625]=500,e[56614]=3700,e[56615]=6500,e[56645]=500,e[56646]=0,e[56616]=7e3,e[56626]=500,e[56636]=0,e[56647]=0,e[56637]=0,e[56627]=500,e[56617]=8e3,e[56669]=89,e[56648]=0,e[56638]=0,e[56628]=89,e[56618]=280,e[56657]=62,e[56655]=0,e[56656]=0,e[56653]=50,e[56654]=0,e[56651]=0,e[56652]=0,e[56649]=0,e[56650]=40,e[56607]=1e3,e[56608]=59,q=s=q-416|0,e[s+16>>2]=137584,e[s+20>>2]=47,e[s+24>>2]=85952,QA(t=s+240|0,85699,s+16|0),o=xn(t,86034)){if(Zt(s+240|0,170,o))for(I=5|(t=s+240|0),y=10|t;l[s+240|0]!=47&&(e[s+240>>2]!=1701736308?yn(s+240|0,86614,9)||(e[s+4>>2]=s+32,e[s>>2]=s+239,(0|nt(y,86829,s))==2&&(a=e[34064],e[(Y=136272+(a<<4)|0)>>2]=g[s+239|0],t=ei(s+32|0),e[34064]=a+1,e[Y+12>>2]=t,e[Y+4>>2]=0)):(q=t=q-48|0,e[32960]=-1,e[32961]=-1,e[32970]=-1,e[32971]=-1,e[32968]=-1,e[32969]=-1,e[32966]=-1,e[32967]=-1,e[32964]=-1,e[32965]=-1,e[32962]=-1,e[32963]=-1,e[t+36>>2]=131876,e[t+32>>2]=131872,e[t+28>>2]=131868,e[t+24>>2]=131864,e[t+20>>2]=131860,e[t+16>>2]=131856,e[t+12>>2]=131852,e[t+8>>2]=131848,e[t+4>>2]=131844,e[t>>2]=131840,nt(I,84222,t),q=t+48|0)),Zt(s+240|0,170,o););rn(o)}q=s+416|0,e[50297]=0,e[50298]=0,e[50301]=0,e[50302]=0,e[50299]=0,e[50300]=0,vs(0,85698),e[36425]=0,e[36424]=0,e[36426]=0,e[36427]=-1,Un(),Xt(0),n=e[25690],e[34062]=n,p=e[25689],s=e[25688],e[34060]=s,e[34061]=p,_=e[25687],o=e[25686],e[34058]=o,e[34059]=_,he=e[25685],Y=e[25684],e[34056]=Y,e[34057]=he,De=e[25683],I=e[25682],e[34054]=I,e[34055]=De,Re=e[25681],y=e[25680],e[34052]=y,e[34053]=Re,P=e[25679],a=e[25678],e[34050]=a,e[34051]=P,X=e[25677],t=e[25676],e[34048]=t,e[34049]=X,e[33729]=t,e[33730]=X,e[33731]=a,e[33732]=P,e[33733]=y,e[33734]=Re,e[33735]=I,e[33736]=De,e[33737]=Y,e[33738]=he,e[33739]=o,e[33740]=_,e[33741]=s,e[33742]=p,e[33743]=n,wr(1,175),wr(2,100),wr(6,e[47200]),wr(5,e[47201]),wr(7,0),e[47198]=0,e[47197]=0,f=+Ke()/1e3,a=kt(t=Ne(f)<9223372036854776e3?~~f>>>0:0,0,1103515245,0),t=J,t=(a=a+12345|0)>>>0<12345?t+1|0:t,e[33209]=Zi(a,t)}if(q=c+16|0,r){X=e[30450],De=e[ye+12>>2],c=48+(p=q-560|0)|0,q=n=(q=p)-16|0;e:{switch(0|an(r-268435967|0,24)){case 0:ar(c,84133,512);break e;case 1:ar(c,84580,512);break e;case 2:ar(c,84747,512);break e;case 3:ar(c,85084,512);break e;case 4:ar(c,85251,512);break e;case 5:ar(c,85380,512);break e;case 6:ar(c,85607,512);break e;case 7:ar(c,85722,512);break e;case 8:ar(c,85913,512);break e;case 9:ar(c,86046,512);break e;case 10:ar(c,86153,512);break e;case 11:ar(c,86678,512);break e;case 12:ar(c,86773,512);break e;case 14:ar(c,86958,512);break e;case 15:ar(c,87071,512);break e}if(1879048192&r)e[n>>2]=r,ua(c,512,87182,n);else{if(m=0,s=M[123728+((r>>>0<=153?r:0)<<1)>>1]+121804|0,r=e[e[56841]+20>>2]){Re=e[r+4>>2],_=e[r>>2],he=e[_>>2]+1794895138|0,P=za(e[_+8>>2],he),a=za(e[_+12>>2],he),t=za(e[_+16>>2],he);A:if(!(Re>>>2>>>0<=P>>>0||3&(t|a)|(r=Re-(P<<2)|0)>>>0<=a>>>0|t>>>0>=r>>>0))for(I=t>>>2|0,y=a>>>2|0;;){if(Y=za(e[(r=((t=(a=(o=P>>>1|0)+nA|0)<<1)+y<<2)+_|0)>>2],he),(r=za(e[r+4>>2],he))>>>0>=Re>>>0|Y>>>0>=Re-r>>>0|l[(r+Y|0)+_|0])break A;if(!(r=Mr(s,r+_|0))){if(t=za(e[(r=(t+I<<2)+_|0)>>2],he),(r=za(e[r+4>>2],he))>>>0>=Re>>>0|t>>>0>=Re-r>>>0)break A;m=l[(t+r|0)+_|0]?0:r+_|0;break A}if((0|P)==1)break A;P=(r=(0|r)<0)?o:P-o|0,nA=r?nA:a}}if((r=RA(t=m||s))>>>0>=512){xt(c,t,511),g[c+511|0]=0;break e}xt(c,t,r+1|0)}}q=n+16|0;e:if(De){A:switch(e[De>>2]){case 0:e[p+16>>2]=e[De+4>>2],e[p+20>>2]=p+48,hr(X,87384,p+16|0);break e;case 1:break A;default:break e}t=e[De+12>>2],r=e[De+8>>2],e[p+36>>2]=e[De+4>>2],J=r,e[p+40>>2]=t,e[p+44>>2]=J,e[p+32>>2]=p+48,hr(X,87521,p+32|0)}else e[p>>2]=p+48,hr(X,87700,p);q=p+560|0,(0|ye)!=-12&&(r=e[ye+12>>2])&&(yt(e[r+4>>2]),yt(e[ye+12>>2]),e[ye+12>>2]=0)}r=e[24806],e[34389]=0,e[32538]=r,r=(1e3+((r=F(e[50754],100))-((0|r)%1e3|0)|0)|0)/500|0,e[34390]=r,r=qr(e[34391],r),e[34392]=r,r&&(e[34391]=r,e[34393]=40,(r=qr(e[34388],1440))&&(e[34388]=r)),e[47198]=0,q=ye+16|0,t=e[50754],e[33208]=t}return e[A+4>>2]=t,e[A>>2]=_A(),0|A},Y:function(A,t,r){A|=0,t|=0,r|=0,e[34440]=r,Fi(3,e[A+12>>2]),Fi(1,e[A+8>>2]),(A=e[A+16>>2])?Fn(A):ls(1024),dA(t),e[34440]=0},Z:function(A,t,r){return A|=0,t|=0,r|=0,e[34440]=0,(A=xn(r,1032))?(e[47195]=A,e[47197]=130,A||(e[47195]=e[30450]),dA(t),e[47195]=0,e[47197]=0,e[47195]=e[30450],rn(A),0):-1},_:function(A){return 36},$:function(A,t,r){var n;return A|=0,t|=0,q=n=q-32|0,(r|=0)?(e[n+24>>2]=0,e[n+28>>2]=0,e[n+16>>2]=0,e[n+20>>2]=0,e[n+12>>2]=r,e[n+8>>2]=t,g[n+21|0]=0,t=Fn(n+8|0)):t=ls(t),e[A+16>>2]=201188,q=n+32|0,0|t},aa:function(A,t,r,n){var a;return A|=0,t|=0,q=a=q-32|0,(r|=0)|(n|=0)?(e[a+24>>2]=0,e[a+28>>2]=0,e[a+16>>2]=0,e[a+20>>2]=0,e[a+12>>2]=r,e[a+8>>2]=t,g[a+22|0]=0,g[a+20|0]=n,t=Fn(a+8|0)):t=ls(t),e[A+16>>2]=201188,q=a+32|0,0|t},ba:function(A,t,r,n,a){var s;return A|=0,t|=0,q=s=q-32|0,(n|=0)|(a|=0)|(r|=0)?(e[s+24>>2]=0,e[s+28>>2]=0,e[s+16>>2]=0,e[s+20>>2]=0,e[s+12>>2]=r,e[s+8>>2]=t,g[s+21|0]=a,g[s+20|0]=n,t=Fn(s+8|0)):t=ls(t),e[A+16>>2]=201188,q=s+32|0,0|t},ca:function(A,t,r,n,a,s){var o;return A|=0,t|=0,q=o=q-32|0,(n|=0)|(a|=0)|(s|=0)|(r|=0)?(e[o+24>>2]=0,e[o+28>>2]=0,e[o+16>>2]=0,e[o+20>>2]=0,e[o+12>>2]=r,e[o+8>>2]=t,g[o+22|0]=s,g[o+21|0]=a,g[o+20|0]=n,t=Fn(o+8|0)):t=ls(t),e[A+16>>2]=201188,q=o+32|0,0|t},da:function(A,t){return t|=0,e[e[(A|=0)>>2]+(t<<2)>>2]},ea:function(A,t,r){t|=0,r|=0,e[e[(A|=0)>>2]+(t<<2)>>2]=r},fa:F0,ga:bn,ha:z0,ia:Na,ja:function(A,t){t|=0,e[12+(A|=0)>>2]=t},ka:zs,la:function(){return 0},ma:function(){return 1},na:function(){return 2},oa:function(){return 3},pa:function(){return 4},qa:function(){return 5},ra:function(){return 6},sa:function(){return 7},ta:function(){return 8},ua:pt,va:function(){return 227192},wa:yt,xa:It,ya:function(A){return(A|=0)?0|!!(0|er(A,125228)):0}}}(d)}(C)},instantiate:function(x,C){return{then:function(d){var k=new k2.Module(x);d({instance:new k2.Instance(k,C)})}}},RuntimeError:Error};typeof k2!="object"&&c0("no native wasm support detected");var gd=!1;function eg(x,C){x||c0(C)}var ma,h2,wc,Ir,Gn,ud,dd,Ad=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0;function f2(x,C,d){for(var k=C+d,Q=C;x[Q]&&!(Q>=k);)++Q;if(Q-C>16&&x.buffer&&Ad)return Ad.decode(x.subarray(C,Q));for(var H="";C<Q;){var S=x[C++];if(128&S){var W=63&x[C++];if((224&S)!=192){var Z=63&x[C++];if((S=(240&S)==224?(15&S)<<12|W<<6|Z:(7&S)<<18|W<<12|Z<<6|63&x[C++])<65536)H+=String.fromCharCode(S);else{var R=S-65536;H+=String.fromCharCode(55296|R>>10,56320|1023&R)}}else H+=String.fromCharCode((31&S)<<6|W)}else H+=String.fromCharCode(S)}return H}function m2(x,C){return x?f2(h2,x,C):""}function ug(x,C,d,k){if(!(k>0))return 0;for(var Q=d,H=d+k-1,S=0;S<x.length;++S){var W=x.charCodeAt(S);if(W>=55296&&W<=57343&&(W=65536+((1023&W)<<10)|1023&x.charCodeAt(++S)),W<=127){if(d>=H)break;C[d++]=W}else if(W<=2047){if(d+1>=H)break;C[d++]=192|W>>6,C[d++]=128|63&W}else if(W<=65535){if(d+2>=H)break;C[d++]=224|W>>12,C[d++]=128|W>>6&63,C[d++]=128|63&W}else{if(d+3>=H)break;C[d++]=240|W>>18,C[d++]=128|W>>12&63,C[d++]=128|W>>6&63,C[d++]=128|63&W}}return C[d]=0,d-Q}function fd(x){for(var C=0,d=0;d<x.length;++d){var k=x.charCodeAt(d);k<=127?C++:k<=2047?C+=2:k>=55296&&k<=57343?(C+=4,++d):C+=3}return C}var o0,Ag=pe.INITIAL_MEMORY||16777216;o0=(sg=pe.wasmMemory?pe.wasmMemory:new k2.Memory({initial:Ag/65536,maximum:Ag/65536})).buffer,pe.HEAP8=ma=new Int8Array(o0),pe.HEAP16=wc=new Int16Array(o0),pe.HEAP32=Ir=new Int32Array(o0),pe.HEAPU8=h2=new Uint8Array(o0),pe.HEAPU16=new Uint16Array(o0),pe.HEAPU32=Gn=new Uint32Array(o0),pe.HEAPF32=ud=new Float32Array(o0),pe.HEAPF64=dd=new Float64Array(o0),Ag=sg.buffer.byteLength;var td=[],pd=[],rd=[],hd=!1;function md(x){pd.unshift(x)}var Rt,pn,mo=0,D1=null;function Cd(x){mo++,pe.monitorRunDependencies&&pe.monitorRunDependencies(mo)}function bd(x){if(mo--,pe.monitorRunDependencies&&pe.monitorRunDependencies(mo),mo==0&&D1){var C=D1;D1=null,C()}}function c0(x){throw pe.onAbort&&pe.onAbort(x),w2(x="Aborted("+x+")"),gd=!0,x+=". Build with -sASSERTIONS for more info.",new k2.RuntimeError(x)}function np(x){this.name="ExitStatus",this.message="Program terminated with exit("+x+")",this.status=x}function tg(x){for(;x.length>0;)x.shift()(pe)}function ap(x,C="i8"){switch(C.endsWith("*")&&(C="*"),C){case"i1":case"i8":return ma[0|x];case"i16":return wc[x>>1];case"i32":case"i64":return Ir[x>>2];case"float":return ud[x>>2];case"double":return dd[x>>3];case"*":return Gn[x>>2];default:c0("invalid type for getValue: "+C)}return null}function sp(x){this.excPtr=x,this.ptr=x-24,this.set_type=function(C){Gn[this.ptr+4>>2]=C},this.get_type=function(){return Gn[this.ptr+4>>2]},this.set_destructor=function(C){Gn[this.ptr+8>>2]=C},this.get_destructor=function(){return Gn[this.ptr+8>>2]},this.set_refcount=function(C){Ir[this.ptr>>2]=C},this.set_caught=function(C){C=C?1:0,ma[this.ptr+12|0]=C},this.get_caught=function(){return ma[this.ptr+12|0]!=0},this.set_rethrown=function(C){C=C?1:0,ma[this.ptr+13|0]=C},this.get_rethrown=function(){return ma[this.ptr+13|0]!=0},this.init=function(C,d){this.set_adjusted_ptr(0),this.set_type(C),this.set_destructor(d),this.set_refcount(0),this.set_caught(!1),this.set_rethrown(!1)},this.add_ref=function(){var C=Ir[this.ptr>>2];Ir[this.ptr>>2]=C+1},this.release_ref=function(){var C=Ir[this.ptr>>2];return Ir[this.ptr>>2]=C-1,C===1},this.set_adjusted_ptr=function(C){Gn[this.ptr+16>>2]=C},this.get_adjusted_ptr=function(){return Gn[this.ptr+16>>2]},this.get_exception_ptr=function(){if(kf(this.get_type()))return Gn[this.excPtr>>2];var C=this.get_adjusted_ptr();return C!==0?C:this.excPtr}}var Tr={isAbs:x=>x.charAt(0)==="/",splitPath:x=>/^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/.exec(x).slice(1),normalizeArray:(x,C)=>{for(var d=0,k=x.length-1;k>=0;k--){var Q=x[k];Q==="."?x.splice(k,1):Q===".."?(x.splice(k,1),d++):d&&(x.splice(k,1),d--)}if(C)for(;d;d--)x.unshift("..");return x},normalize:x=>{var C=Tr.isAbs(x),d=x.substr(-1)==="/";return(x=Tr.normalizeArray(x.split("/").filter(k=>!!k),!C).join("/"))||C||(x="."),x&&d&&(x+="/"),(C?"/":"")+x},dirname:x=>{var C=Tr.splitPath(x),d=C[0],k=C[1];return d||k?(k&&(k=k.substr(0,k.length-1)),d+k):"."},basename:x=>{if(x==="/")return"/";var C=(x=(x=Tr.normalize(x)).replace(/\/$/,"")).lastIndexOf("/");return C===-1?x:x.substr(C+1)},join:function(){var x=Array.prototype.slice.call(arguments);return Tr.normalize(x.join("/"))},join2:(x,C)=>Tr.normalize(x+"/"+C)},q0={resolve:function(){for(var x="",C=!1,d=arguments.length-1;d>=-1&&!C;d--){var k=d>=0?arguments[d]:ae.cwd();if(typeof k!="string")throw new TypeError("Arguments to path.resolve must be strings");if(!k)return"";x=k+"/"+x,C=Tr.isAbs(k)}return(C?"/":"")+(x=Tr.normalizeArray(x.split("/").filter(Q=>!!Q),!C).join("/"))||"."},relative:(x,C)=>{function d(R){for(var N=0;N<R.length&&R[N]==="";N++);for(var K=R.length-1;K>=0&&R[K]==="";K--);return N>K?[]:R.slice(N,K-N+1)}x=q0.resolve(x).substr(1),C=q0.resolve(C).substr(1);for(var k=d(x.split("/")),Q=d(C.split("/")),H=Math.min(k.length,Q.length),S=H,W=0;W<H;W++)if(k[W]!==Q[W]){S=W;break}var Z=[];for(W=S;W<k.length;W++)Z.push("..");return(Z=Z.concat(Q.slice(S))).join("/")}};function Id(x,C,d){var k=fd(x)+1,Q=new Array(k),H=ug(x,Q,0,Q.length);return C&&(Q.length=H),Q}var ho={ttys:[],init:function(){},shutdown:function(){},register:function(x,C){ho.ttys[x]={input:[],output:[],ops:C},ae.registerDevice(x,ho.stream_ops)},stream_ops:{open:function(x){var C=ho.ttys[x.node.rdev];if(!C)throw new ae.ErrnoError(43);x.tty=C,x.seekable=!1},close:function(x){x.tty.ops.fsync(x.tty)},fsync:function(x){x.tty.ops.fsync(x.tty)},read:function(x,C,d,k,Q){if(!x.tty||!x.tty.ops.get_char)throw new ae.ErrnoError(60);for(var H=0,S=0;S<k;S++){var W;try{W=x.tty.ops.get_char(x.tty)}catch{throw new ae.ErrnoError(29)}if(W===void 0&&H===0)throw new ae.ErrnoError(6);if(W==null)break;H++,C[d+S]=W}return H&&(x.node.timestamp=Date.now()),H},write:function(x,C,d,k,Q){if(!x.tty||!x.tty.ops.put_char)throw new ae.ErrnoError(60);try{for(var H=0;H<k;H++)x.tty.ops.put_char(x.tty,C[d+H])}catch{throw new ae.ErrnoError(29)}return k&&(x.node.timestamp=Date.now()),H}},default_tty_ops:{put_char:function(x,C){C===null||C===10?(Ic(f2(x.output,0)),x.output=[]):C!=0&&x.output.push(C)},fsync:function(x){x.output&&x.output.length>0&&(Ic(f2(x.output,0)),x.output=[])}},default_tty1_ops:{put_char:function(x,C){C===null||C===10?(w2(f2(x.output,0)),x.output=[]):C!=0&&x.output.push(C)},fsync:function(x){x.output&&x.output.length>0&&(w2(f2(x.output,0)),x.output=[])}}};function wd(x){c0()}var _t={ops_table:null,mount:function(x){return _t.createNode(null,"/",16895,0)},createNode:function(x,C,d,k){if(ae.isBlkdev(d)||ae.isFIFO(d))throw new ae.ErrnoError(63);_t.ops_table||(_t.ops_table={dir:{node:{getattr:_t.node_ops.getattr,setattr:_t.node_ops.setattr,lookup:_t.node_ops.lookup,mknod:_t.node_ops.mknod,rename:_t.node_ops.rename,unlink:_t.node_ops.unlink,rmdir:_t.node_ops.rmdir,readdir:_t.node_ops.readdir,symlink:_t.node_ops.symlink},stream:{llseek:_t.stream_ops.llseek}},file:{node:{getattr:_t.node_ops.getattr,setattr:_t.node_ops.setattr},stream:{llseek:_t.stream_ops.llseek,read:_t.stream_ops.read,write:_t.stream_ops.write,allocate:_t.stream_ops.allocate,mmap:_t.stream_ops.mmap,msync:_t.stream_ops.msync}},link:{node:{getattr:_t.node_ops.getattr,setattr:_t.node_ops.setattr,readlink:_t.node_ops.readlink},stream:{}},chrdev:{node:{getattr:_t.node_ops.getattr,setattr:_t.node_ops.setattr},stream:ae.chrdev_stream_ops}});var Q=ae.createNode(x,C,d,k);return ae.isDir(Q.mode)?(Q.node_ops=_t.ops_table.dir.node,Q.stream_ops=_t.ops_table.dir.stream,Q.contents={}):ae.isFile(Q.mode)?(Q.node_ops=_t.ops_table.file.node,Q.stream_ops=_t.ops_table.file.stream,Q.usedBytes=0,Q.contents=null):ae.isLink(Q.mode)?(Q.node_ops=_t.ops_table.link.node,Q.stream_ops=_t.ops_table.link.stream):ae.isChrdev(Q.mode)&&(Q.node_ops=_t.ops_table.chrdev.node,Q.stream_ops=_t.ops_table.chrdev.stream),Q.timestamp=Date.now(),x&&(x.contents[C]=Q,x.timestamp=Q.timestamp),Q},getFileDataAsTypedArray:function(x){return x.contents?x.contents.subarray?x.contents.subarray(0,x.usedBytes):new Uint8Array(x.contents):new Uint8Array(0)},expandFileStorage:function(x,C){var d=x.contents?x.contents.length:0;if(!(d>=C)){C=Math.max(C,d*(d<1048576?2:1.125)>>>0),d!=0&&(C=Math.max(C,256));var k=x.contents;x.contents=new Uint8Array(C),x.usedBytes>0&&x.contents.set(k.subarray(0,x.usedBytes),0)}},resizeFileStorage:function(x,C){if(x.usedBytes!=C)if(C==0)x.contents=null,x.usedBytes=0;else{var d=x.contents;x.contents=new Uint8Array(C),d&&x.contents.set(d.subarray(0,Math.min(C,x.usedBytes))),x.usedBytes=C}},node_ops:{getattr:function(x){var C={};return C.dev=ae.isChrdev(x.mode)?x.id:1,C.ino=x.id,C.mode=x.mode,C.nlink=1,C.uid=0,C.gid=0,C.rdev=x.rdev,ae.isDir(x.mode)?C.size=4096:ae.isFile(x.mode)?C.size=x.usedBytes:ae.isLink(x.mode)?C.size=x.link.length:C.size=0,C.atime=new Date(x.timestamp),C.mtime=new Date(x.timestamp),C.ctime=new Date(x.timestamp),C.blksize=4096,C.blocks=Math.ceil(C.size/C.blksize),C},setattr:function(x,C){C.mode!==void 0&&(x.mode=C.mode),C.timestamp!==void 0&&(x.timestamp=C.timestamp),C.size!==void 0&&_t.resizeFileStorage(x,C.size)},lookup:function(x,C){throw ae.genericErrors[44]},mknod:function(x,C,d,k){return _t.createNode(x,C,d,k)},rename:function(x,C,d){if(ae.isDir(x.mode)){var k;try{k=ae.lookupNode(C,d)}catch{}if(k)for(var Q in k.contents)throw new ae.ErrnoError(55)}delete x.parent.contents[x.name],x.parent.timestamp=Date.now(),x.name=d,C.contents[d]=x,C.timestamp=x.parent.timestamp,x.parent=C},unlink:function(x,C){delete x.contents[C],x.timestamp=Date.now()},rmdir:function(x,C){var d=ae.lookupNode(x,C);for(var k in d.contents)throw new ae.ErrnoError(55);delete x.contents[C],x.timestamp=Date.now()},readdir:function(x){var C=[".",".."];for(var d in x.contents)x.contents.hasOwnProperty(d)&&C.push(d);return C},symlink:function(x,C,d){var k=_t.createNode(x,C,41471,0);return k.link=d,k},readlink:function(x){if(!ae.isLink(x.mode))throw new ae.ErrnoError(28);return x.link}},stream_ops:{read:function(x,C,d,k,Q){var H=x.node.contents;if(Q>=x.node.usedBytes)return 0;var S=Math.min(x.node.usedBytes-Q,k);if(S>8&&H.subarray)C.set(H.subarray(Q,Q+S),d);else for(var W=0;W<S;W++)C[d+W]=H[Q+W];return S},write:function(x,C,d,k,Q,H){if(!k)return 0;var S=x.node;if(S.timestamp=Date.now(),C.subarray&&(!S.contents||S.contents.subarray)){if(H)return S.contents=C.subarray(d,d+k),S.usedBytes=k,k;if(S.usedBytes===0&&Q===0)return S.contents=C.slice(d,d+k),S.usedBytes=k,k;if(Q+k<=S.usedBytes)return S.contents.set(C.subarray(d,d+k),Q),k}if(_t.expandFileStorage(S,Q+k),S.contents.subarray&&C.subarray)S.contents.set(C.subarray(d,d+k),Q);else for(var W=0;W<k;W++)S.contents[Q+W]=C[d+W];return S.usedBytes=Math.max(S.usedBytes,Q+k),k},llseek:function(x,C,d){var k=C;if(d===1?k+=x.position:d===2&&ae.isFile(x.node.mode)&&(k+=x.node.usedBytes),k<0)throw new ae.ErrnoError(28);return k},allocate:function(x,C,d){_t.expandFileStorage(x.node,C+d),x.node.usedBytes=Math.max(x.node.usedBytes,C+d)},mmap:function(x,C,d,k,Q){if(!ae.isFile(x.node.mode))throw new ae.ErrnoError(43);var H,S,W=x.node.contents;if(2&Q||W.buffer!==ma.buffer){if((d>0||d+C<W.length)&&(W=W.subarray?W.subarray(d,d+C):Array.prototype.slice.call(W,d,d+C)),S=!0,!(H=wd()))throw new ae.ErrnoError(48);ma.set(W,H)}else S=!1,H=W.byteOffset;return{ptr:H,allocated:S}},msync:function(x,C,d,k,Q){return _t.stream_ops.write(x,C,0,k,d,!1),0}}},ae={root:null,mounts:[],devices:{},streams:[],nextInode:1,nameTable:null,currentPath:"/",initialized:!1,ignorePermissions:!0,ErrnoError:null,genericErrors:{},filesystems:null,syncFSRequests:0,lookupPath:(x,C={})=>{if(!(x=q0.resolve(x)))return{path:"",node:null};if((C=Object.assign({follow_mount:!0,recurse_count:0},C)).recurse_count>8)throw new ae.ErrnoError(32);for(var d=x.split("/").filter(R=>!!R),k=ae.root,Q="/",H=0;H<d.length;H++){var S=H===d.length-1;if(S&&C.parent)break;if(k=ae.lookupNode(k,d[H]),Q=Tr.join2(Q,d[H]),ae.isMountpoint(k)&&(!S||S&&C.follow_mount)&&(k=k.mounted.root),!S||C.follow)for(var W=0;ae.isLink(k.mode);){var Z=ae.readlink(Q);if(Q=q0.resolve(Tr.dirname(Q),Z),k=ae.lookupPath(Q,{recurse_count:C.recurse_count+1}).node,W++>40)throw new ae.ErrnoError(32)}}return{path:Q,node:k}},getPath:x=>{for(var C;;){if(ae.isRoot(x)){var d=x.mount.mountpoint;return C?d[d.length-1]!=="/"?d+"/"+C:d+C:d}C=C?x.name+"/"+C:x.name,x=x.parent}},hashName:(x,C)=>{for(var d=0,k=0;k<C.length;k++)d=(d<<5)-d+C.charCodeAt(k)|0;return(x+d>>>0)%ae.nameTable.length},hashAddNode:x=>{var C=ae.hashName(x.parent.id,x.name);x.name_next=ae.nameTable[C],ae.nameTable[C]=x},hashRemoveNode:x=>{var C=ae.hashName(x.parent.id,x.name);if(ae.nameTable[C]===x)ae.nameTable[C]=x.name_next;else for(var d=ae.nameTable[C];d;){if(d.name_next===x){d.name_next=x.name_next;break}d=d.name_next}},lookupNode:(x,C)=>{var d=ae.mayLookup(x);if(d)throw new ae.ErrnoError(d,x);for(var k=ae.hashName(x.id,C),Q=ae.nameTable[k];Q;Q=Q.name_next){var H=Q.name;if(Q.parent.id===x.id&&H===C)return Q}return ae.lookup(x,C)},createNode:(x,C,d,k)=>{var Q=new ae.FSNode(x,C,d,k);return ae.hashAddNode(Q),Q},destroyNode:x=>{ae.hashRemoveNode(x)},isRoot:x=>x===x.parent,isMountpoint:x=>!!x.mounted,isFile:x=>(61440&x)==32768,isDir:x=>(61440&x)==16384,isLink:x=>(61440&x)==40960,isChrdev:x=>(61440&x)==8192,isBlkdev:x=>(61440&x)==24576,isFIFO:x=>(61440&x)==4096,isSocket:x=>!(49152&~x),flagModes:{r:0,"r+":2,w:577,"w+":578,a:1089,"a+":1090},modeStringToFlags:x=>{var C=ae.flagModes[x];if(C===void 0)throw new Error("Unknown file open mode: "+x);return C},flagsToPermissionString:x=>{var C=["r","w","rw"][3&x];return 512&x&&(C+="w"),C},nodePermissions:(x,C)=>ae.ignorePermissions||(!C.includes("r")||292&x.mode)&&(!C.includes("w")||146&x.mode)&&(!C.includes("x")||73&x.mode)?0:2,mayLookup:x=>ae.nodePermissions(x,"x")||(x.node_ops.lookup?0:2),mayCreate:(x,C)=>{try{return ae.lookupNode(x,C),20}catch{}return ae.nodePermissions(x,"wx")},mayDelete:(x,C,d)=>{var k;try{k=ae.lookupNode(x,C)}catch(H){return H.errno}var Q=ae.nodePermissions(x,"wx");if(Q)return Q;if(d){if(!ae.isDir(k.mode))return 54;if(ae.isRoot(k)||ae.getPath(k)===ae.cwd())return 10}else if(ae.isDir(k.mode))return 31;return 0},mayOpen:(x,C)=>x?ae.isLink(x.mode)?32:ae.isDir(x.mode)&&(ae.flagsToPermissionString(C)!=="r"||512&C)?31:ae.nodePermissions(x,ae.flagsToPermissionString(C)):44,MAX_OPEN_FDS:4096,nextfd:(x=0,C=ae.MAX_OPEN_FDS)=>{for(var d=x;d<=C;d++)if(!ae.streams[d])return d;throw new ae.ErrnoError(33)},getStream:x=>ae.streams[x],createStream:(x,C,d)=>{ae.FSStream||(ae.FSStream=function(){this.shared={}},ae.FSStream.prototype={},Object.defineProperties(ae.FSStream.prototype,{object:{get:function(){return this.node},set:function(Q){this.node=Q}},isRead:{get:function(){return(2097155&this.flags)!=1}},isWrite:{get:function(){return!!(2097155&this.flags)}},isAppend:{get:function(){return 1024&this.flags}},flags:{get:function(){return this.shared.flags},set:function(Q){this.shared.flags=Q}},position:{get:function(){return this.shared.position},set:function(Q){this.shared.position=Q}}})),x=Object.assign(new ae.FSStream,x);var k=ae.nextfd(C,d);return x.fd=k,ae.streams[k]=x,x},closeStream:x=>{ae.streams[x]=null},chrdev_stream_ops:{open:x=>{var C=ae.getDevice(x.node.rdev);x.stream_ops=C.stream_ops,x.stream_ops.open&&x.stream_ops.open(x)},llseek:()=>{throw new ae.ErrnoError(70)}},major:x=>x>>8,minor:x=>255&x,makedev:(x,C)=>x<<8|C,registerDevice:(x,C)=>{ae.devices[x]={stream_ops:C}},getDevice:x=>ae.devices[x],getMounts:x=>{for(var C=[],d=[x];d.length;){var k=d.pop();C.push(k),d.push.apply(d,k.mounts)}return C},syncfs:(x,C)=>{typeof x=="function"&&(C=x,x=!1),ae.syncFSRequests++,ae.syncFSRequests>1&&w2("warning: "+ae.syncFSRequests+" FS.syncfs operations in flight at once, probably just doing extra work");var d=ae.getMounts(ae.root.mount),k=0;function Q(S){return ae.syncFSRequests--,C(S)}function H(S){if(S)return H.errored?void 0:(H.errored=!0,Q(S));++k>=d.length&&Q(null)}d.forEach(S=>{if(!S.type.syncfs)return H(null);S.type.syncfs(S,x,H)})},mount:(x,C,d)=>{var k,Q=d==="/",H=!d;if(Q&&ae.root)throw new ae.ErrnoError(10);if(!Q&&!H){var S=ae.lookupPath(d,{follow_mount:!1});if(d=S.path,k=S.node,ae.isMountpoint(k))throw new ae.ErrnoError(10);if(!ae.isDir(k.mode))throw new ae.ErrnoError(54)}var W={type:x,opts:C,mountpoint:d,mounts:[]},Z=x.mount(W);return Z.mount=W,W.root=Z,Q?ae.root=Z:k&&(k.mounted=W,k.mount&&k.mount.mounts.push(W)),Z},unmount:x=>{var C=ae.lookupPath(x,{follow_mount:!1});if(!ae.isMountpoint(C.node))throw new ae.ErrnoError(28);var d=C.node,k=d.mounted,Q=ae.getMounts(k);Object.keys(ae.nameTable).forEach(S=>{for(var W=ae.nameTable[S];W;){var Z=W.name_next;Q.includes(W.mount)&&ae.destroyNode(W),W=Z}}),d.mounted=null;var H=d.mount.mounts.indexOf(k);d.mount.mounts.splice(H,1)},lookup:(x,C)=>x.node_ops.lookup(x,C),mknod:(x,C,d)=>{var k=ae.lookupPath(x,{parent:!0}).node,Q=Tr.basename(x);if(!Q||Q==="."||Q==="..")throw new ae.ErrnoError(28);var H=ae.mayCreate(k,Q);if(H)throw new ae.ErrnoError(H);if(!k.node_ops.mknod)throw new ae.ErrnoError(63);return k.node_ops.mknod(k,Q,C,d)},create:(x,C)=>(C=C!==void 0?C:438,C&=4095,C|=32768,ae.mknod(x,C,0)),mkdir:(x,C)=>(C=C!==void 0?C:511,C&=1023,C|=16384,ae.mknod(x,C,0)),mkdirTree:(x,C)=>{for(var d=x.split("/"),k="",Q=0;Q<d.length;++Q)if(d[Q]){k+="/"+d[Q];try{ae.mkdir(k,C)}catch(H){if(H.errno!=20)throw H}}},mkdev:(x,C,d)=>(d===void 0&&(d=C,C=438),C|=8192,ae.mknod(x,C,d)),symlink:(x,C)=>{if(!q0.resolve(x))throw new ae.ErrnoError(44);var d=ae.lookupPath(C,{parent:!0}).node;if(!d)throw new ae.ErrnoError(44);var k=Tr.basename(C),Q=ae.mayCreate(d,k);if(Q)throw new ae.ErrnoError(Q);if(!d.node_ops.symlink)throw new ae.ErrnoError(63);return d.node_ops.symlink(d,k,x)},rename:(x,C)=>{var d,k,Q=Tr.dirname(x),H=Tr.dirname(C),S=Tr.basename(x),W=Tr.basename(C);if(d=ae.lookupPath(x,{parent:!0}).node,k=ae.lookupPath(C,{parent:!0}).node,!d||!k)throw new ae.ErrnoError(44);if(d.mount!==k.mount)throw new ae.ErrnoError(75);var Z,R=ae.lookupNode(d,S),N=q0.relative(x,H);if(N.charAt(0)!==".")throw new ae.ErrnoError(28);if((N=q0.relative(C,Q)).charAt(0)!==".")throw new ae.ErrnoError(55);try{Z=ae.lookupNode(k,W)}catch{}if(R!==Z){var K=ae.isDir(R.mode),V=ae.mayDelete(d,S,K);if(V)throw new ae.ErrnoError(V);if(V=Z?ae.mayDelete(k,W,K):ae.mayCreate(k,W))throw new ae.ErrnoError(V);if(!d.node_ops.rename)throw new ae.ErrnoError(63);if(ae.isMountpoint(R)||Z&&ae.isMountpoint(Z))throw new ae.ErrnoError(10);if(k!==d&&(V=ae.nodePermissions(d,"w")))throw new ae.ErrnoError(V);ae.hashRemoveNode(R);try{d.node_ops.rename(R,k,W)}catch(Ae){throw Ae}finally{ae.hashAddNode(R)}}},rmdir:x=>{var C=ae.lookupPath(x,{parent:!0}).node,d=Tr.basename(x),k=ae.lookupNode(C,d),Q=ae.mayDelete(C,d,!0);if(Q)throw new ae.ErrnoError(Q);if(!C.node_ops.rmdir)throw new ae.ErrnoError(63);if(ae.isMountpoint(k))throw new ae.ErrnoError(10);C.node_ops.rmdir(C,d),ae.destroyNode(k)},readdir:x=>{var C=ae.lookupPath(x,{follow:!0}).node;if(!C.node_ops.readdir)throw new ae.ErrnoError(54);return C.node_ops.readdir(C)},unlink:x=>{var C=ae.lookupPath(x,{parent:!0}).node;if(!C)throw new ae.ErrnoError(44);var d=Tr.basename(x),k=ae.lookupNode(C,d),Q=ae.mayDelete(C,d,!1);if(Q)throw new ae.ErrnoError(Q);if(!C.node_ops.unlink)throw new ae.ErrnoError(63);if(ae.isMountpoint(k))throw new ae.ErrnoError(10);C.node_ops.unlink(C,d),ae.destroyNode(k)},readlink:x=>{var C=ae.lookupPath(x).node;if(!C)throw new ae.ErrnoError(44);if(!C.node_ops.readlink)throw new ae.ErrnoError(28);return q0.resolve(ae.getPath(C.parent),C.node_ops.readlink(C))},stat:(x,C)=>{var d=ae.lookupPath(x,{follow:!C}).node;if(!d)throw new ae.ErrnoError(44);if(!d.node_ops.getattr)throw new ae.ErrnoError(63);return d.node_ops.getattr(d)},lstat:x=>ae.stat(x,!0),chmod:(x,C,d)=>{var k;if(!(k=typeof x=="string"?ae.lookupPath(x,{follow:!d}).node:x).node_ops.setattr)throw new ae.ErrnoError(63);k.node_ops.setattr(k,{mode:4095&C|-4096&k.mode,timestamp:Date.now()})},lchmod:(x,C)=>{ae.chmod(x,C,!0)},fchmod:(x,C)=>{var d=ae.getStream(x);if(!d)throw new ae.ErrnoError(8);ae.chmod(d.node,C)},chown:(x,C,d,k)=>{var Q;if(!(Q=typeof x=="string"?ae.lookupPath(x,{follow:!k}).node:x).node_ops.setattr)throw new ae.ErrnoError(63);Q.node_ops.setattr(Q,{timestamp:Date.now()})},lchown:(x,C,d)=>{ae.chown(x,C,d,!0)},fchown:(x,C,d)=>{var k=ae.getStream(x);if(!k)throw new ae.ErrnoError(8);ae.chown(k.node,C,d)},truncate:(x,C)=>{if(C<0)throw new ae.ErrnoError(28);var d;if(!(d=typeof x=="string"?ae.lookupPath(x,{follow:!0}).node:x).node_ops.setattr)throw new ae.ErrnoError(63);if(ae.isDir(d.mode))throw new ae.ErrnoError(31);if(!ae.isFile(d.mode))throw new ae.ErrnoError(28);var k=ae.nodePermissions(d,"w");if(k)throw new ae.ErrnoError(k);d.node_ops.setattr(d,{size:C,timestamp:Date.now()})},ftruncate:(x,C)=>{var d=ae.getStream(x);if(!d)throw new ae.ErrnoError(8);if(!(2097155&d.flags))throw new ae.ErrnoError(28);ae.truncate(d.node,C)},utime:(x,C,d)=>{var k=ae.lookupPath(x,{follow:!0}).node;k.node_ops.setattr(k,{timestamp:Math.max(C,d)})},open:(x,C,d)=>{if(x==="")throw new ae.ErrnoError(44);var k;if(d=d===void 0?438:d,d=64&(C=typeof C=="string"?ae.modeStringToFlags(C):C)?4095&d|32768:0,typeof x=="object")k=x;else{x=Tr.normalize(x);try{k=ae.lookupPath(x,{follow:!(131072&C)}).node}catch{}}var Q=!1;if(64&C)if(k){if(128&C)throw new ae.ErrnoError(20)}else k=ae.mknod(x,d,0),Q=!0;if(!k)throw new ae.ErrnoError(44);if(ae.isChrdev(k.mode)&&(C&=-513),65536&C&&!ae.isDir(k.mode))throw new ae.ErrnoError(54);if(!Q){var H=ae.mayOpen(k,C);if(H)throw new ae.ErrnoError(H)}512&C&&!Q&&ae.truncate(k,0),C&=-131713;var S=ae.createStream({node:k,path:ae.getPath(k),flags:C,seekable:!0,position:0,stream_ops:k.stream_ops,ungotten:[],error:!1});return S.stream_ops.open&&S.stream_ops.open(S),!pe.logReadFiles||1&C||(ae.readFiles||(ae.readFiles={}),x in ae.readFiles||(ae.readFiles[x]=1)),S},close:x=>{if(ae.isClosed(x))throw new ae.ErrnoError(8);x.getdents&&(x.getdents=null);try{x.stream_ops.close&&x.stream_ops.close(x)}catch(C){throw C}finally{ae.closeStream(x.fd)}x.fd=null},isClosed:x=>x.fd===null,llseek:(x,C,d)=>{if(ae.isClosed(x))throw new ae.ErrnoError(8);if(!x.seekable||!x.stream_ops.llseek)throw new ae.ErrnoError(70);if(d!=0&&d!=1&&d!=2)throw new ae.ErrnoError(28);return x.position=x.stream_ops.llseek(x,C,d),x.ungotten=[],x.position},read:(x,C,d,k,Q)=>{if(k<0||Q<0)throw new ae.ErrnoError(28);if(ae.isClosed(x))throw new ae.ErrnoError(8);if((2097155&x.flags)==1)throw new ae.ErrnoError(8);if(ae.isDir(x.node.mode))throw new ae.ErrnoError(31);if(!x.stream_ops.read)throw new ae.ErrnoError(28);var H=Q!==void 0;if(H){if(!x.seekable)throw new ae.ErrnoError(70)}else Q=x.position;var S=x.stream_ops.read(x,C,d,k,Q);return H||(x.position+=S),S},write:(x,C,d,k,Q,H)=>{if(k<0||Q<0)throw new ae.ErrnoError(28);if(ae.isClosed(x))throw new ae.ErrnoError(8);if(!(2097155&x.flags))throw new ae.ErrnoError(8);if(ae.isDir(x.node.mode))throw new ae.ErrnoError(31);if(!x.stream_ops.write)throw new ae.ErrnoError(28);x.seekable&&1024&x.flags&&ae.llseek(x,0,2);var S=Q!==void 0;if(S){if(!x.seekable)throw new ae.ErrnoError(70)}else Q=x.position;var W=x.stream_ops.write(x,C,d,k,Q,H);return S||(x.position+=W),W},allocate:(x,C,d)=>{if(ae.isClosed(x))throw new ae.ErrnoError(8);if(C<0||d<=0)throw new ae.ErrnoError(28);if(!(2097155&x.flags))throw new ae.ErrnoError(8);if(!ae.isFile(x.node.mode)&&!ae.isDir(x.node.mode))throw new ae.ErrnoError(43);if(!x.stream_ops.allocate)throw new ae.ErrnoError(138);x.stream_ops.allocate(x,C,d)},mmap:(x,C,d,k,Q)=>{if(2&k&&!(2&Q)&&(2097155&x.flags)!=2)throw new ae.ErrnoError(2);if((2097155&x.flags)==1)throw new ae.ErrnoError(2);if(!x.stream_ops.mmap)throw new ae.ErrnoError(43);return x.stream_ops.mmap(x,C,d,k,Q)},msync:(x,C,d,k,Q)=>x.stream_ops.msync?x.stream_ops.msync(x,C,d,k,Q):0,munmap:x=>0,ioctl:(x,C,d)=>{if(!x.stream_ops.ioctl)throw new ae.ErrnoError(59);return x.stream_ops.ioctl(x,C,d)},readFile:(x,C={})=>{if(C.flags=C.flags||0,C.encoding=C.encoding||"binary",C.encoding!=="utf8"&&C.encoding!=="binary")throw new Error('Invalid encoding type "'+C.encoding+'"');var d,k=ae.open(x,C.flags),Q=ae.stat(x).size,H=new Uint8Array(Q);return ae.read(k,H,0,Q,0),C.encoding==="utf8"?d=f2(H,0):C.encoding==="binary"&&(d=H),ae.close(k),d},writeFile:(x,C,d={})=>{d.flags=d.flags||577;var k=ae.open(x,d.flags,d.mode);if(typeof C=="string"){var Q=new Uint8Array(fd(C)+1),H=ug(C,Q,0,Q.length);ae.write(k,Q,0,H,void 0,d.canOwn)}else{if(!ArrayBuffer.isView(C))throw new Error("Unsupported data type");ae.write(k,C,0,C.byteLength,void 0,d.canOwn)}ae.close(k)},cwd:()=>ae.currentPath,chdir:x=>{var C=ae.lookupPath(x,{follow:!0});if(C.node===null)throw new ae.ErrnoError(44);if(!ae.isDir(C.node.mode))throw new ae.ErrnoError(54);var d=ae.nodePermissions(C.node,"x");if(d)throw new ae.ErrnoError(d);ae.currentPath=C.path},createDefaultDirectories:()=>{ae.mkdir("/tmp"),ae.mkdir("/home"),ae.mkdir("/home/web_user")},createDefaultDevices:()=>{ae.mkdir("/dev"),ae.registerDevice(ae.makedev(1,3),{read:()=>0,write:(x,C,d,k,Q)=>k}),ae.mkdev("/dev/null",ae.makedev(1,3)),ho.register(ae.makedev(5,0),ho.default_tty_ops),ho.register(ae.makedev(6,0),ho.default_tty1_ops),ae.mkdev("/dev/tty",ae.makedev(5,0)),ae.mkdev("/dev/tty1",ae.makedev(6,0)),ae.mkdir("/dev/shm"),ae.mkdir("/dev/shm/tmp")},createSpecialDirectories:()=>{ae.mkdir("/proc");var x=ae.mkdir("/proc/self");ae.mkdir("/proc/self/fd"),ae.mount({mount:()=>{var C=ae.createNode(x,"fd",16895,73);return C.node_ops={lookup:(d,k)=>{var Q=+k,H=ae.getStream(Q);if(!H)throw new ae.ErrnoError(8);var S={parent:null,mount:{mountpoint:"fake"},node_ops:{readlink:()=>H.path}};return S.parent=S,S}},C}},{},"/proc/self/fd")},createStandardStreams:()=>{pe.stdin?ae.createDevice("/dev","stdin",pe.stdin):ae.symlink("/dev/tty","/dev/stdin"),pe.stdout?ae.createDevice("/dev","stdout",null,pe.stdout):ae.symlink("/dev/tty","/dev/stdout"),pe.stderr?ae.createDevice("/dev","stderr",null,pe.stderr):ae.symlink("/dev/tty1","/dev/stderr"),ae.open("/dev/stdin",0),ae.open("/dev/stdout",1),ae.open("/dev/stderr",1)},ensureErrnoError:()=>{ae.ErrnoError||(ae.ErrnoError=function(x,C){this.node=C,this.setErrno=function(d){this.errno=d},this.setErrno(x),this.message="FS error"},ae.ErrnoError.prototype=new Error,ae.ErrnoError.prototype.constructor=ae.ErrnoError,[44].forEach(x=>{ae.genericErrors[x]=new ae.ErrnoError(x),ae.genericErrors[x].stack="<generic error, no stack>"}))},staticInit:()=>{ae.ensureErrnoError(),ae.nameTable=new Array(4096),ae.mount(_t,{},"/"),ae.createDefaultDirectories(),ae.createDefaultDevices(),ae.createSpecialDirectories(),ae.filesystems={MEMFS:_t}},init:(x,C,d)=>{ae.init.initialized=!0,ae.ensureErrnoError(),pe.stdin=x||pe.stdin,pe.stdout=C||pe.stdout,pe.stderr=d||pe.stderr,ae.createStandardStreams()},quit:()=>{ae.init.initialized=!1;for(var x=0;x<ae.streams.length;x++){var C=ae.streams[x];C&&ae.close(C)}},getMode:(x,C)=>{var d=0;return x&&(d|=365),C&&(d|=146),d},findObject:(x,C)=>{var d=ae.analyzePath(x,C);return d.exists?d.object:null},analyzePath:(x,C)=>{try{x=(k=ae.lookupPath(x,{follow:!C})).path}catch{}var d={isRoot:!1,exists:!1,error:0,name:null,path:null,object:null,parentExists:!1,parentPath:null,parentObject:null};try{var k=ae.lookupPath(x,{parent:!0});d.parentExists=!0,d.parentPath=k.path,d.parentObject=k.node,d.name=Tr.basename(x),k=ae.lookupPath(x,{follow:!C}),d.exists=!0,d.path=k.path,d.object=k.node,d.name=k.node.name,d.isRoot=k.path==="/"}catch(Q){d.error=Q.errno}return d},createPath:(x,C,d,k)=>{x=typeof x=="string"?x:ae.getPath(x);for(var Q=C.split("/").reverse();Q.length;){var H=Q.pop();if(H){var S=Tr.join2(x,H);try{ae.mkdir(S)}catch{}x=S}}return S},createFile:(x,C,d,k,Q)=>{var H=Tr.join2(typeof x=="string"?x:ae.getPath(x),C),S=ae.getMode(k,Q);return ae.create(H,S)},createDataFile:(x,C,d,k,Q,H)=>{var S=C;x&&(x=typeof x=="string"?x:ae.getPath(x),S=C?Tr.join2(x,C):x);var W=ae.getMode(k,Q),Z=ae.create(S,W);if(d){if(typeof d=="string"){for(var R=new Array(d.length),N=0,K=d.length;N<K;++N)R[N]=d.charCodeAt(N);d=R}ae.chmod(Z,146|W);var V=ae.open(Z,577);ae.write(V,d,0,d.length,0,H),ae.close(V),ae.chmod(Z,W)}return Z},createDevice:(x,C,d,k)=>{var Q=Tr.join2(typeof x=="string"?x:ae.getPath(x),C),H=ae.getMode(!!d,!!k);ae.createDevice.major||(ae.createDevice.major=64);var S=ae.makedev(ae.createDevice.major++,0);return ae.registerDevice(S,{open:W=>{W.seekable=!1},close:W=>{k&&k.buffer&&k.buffer.length&&k(10)},read:(W,Z,R,N,K)=>{for(var V=0,Ae=0;Ae<N;Ae++){var me;try{me=d()}catch{throw new ae.ErrnoError(29)}if(me===void 0&&V===0)throw new ae.ErrnoError(6);if(me==null)break;V++,Z[R+Ae]=me}return V&&(W.node.timestamp=Date.now()),V},write:(W,Z,R,N,K)=>{for(var V=0;V<N;V++)try{k(Z[R+V])}catch{throw new ae.ErrnoError(29)}return N&&(W.node.timestamp=Date.now()),V}}),ae.mkdev(Q,H,S)},forceLoadFile:x=>{if(x.isDevice||x.isFolder||x.link||x.contents)return!0;throw typeof XMLHttpRequest<"u"?new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread."):new Error("Cannot load without read() or XMLHttpRequest.")},createLazyFile:(x,C,d,k,Q)=>{function H(){this.lengthKnown=!1,this.chunks=[]}if(H.prototype.get=function(K){if(!(K>this.length-1||K<0)){var V=K%this.chunkSize,Ae=K/this.chunkSize|0;return this.getter(Ae)[V]}},H.prototype.setDataGetter=function(K){this.getter=K},H.prototype.cacheLength=function(){var K=new XMLHttpRequest;if(K.open("HEAD",d,!1),K.send(null),!(K.status>=200&&K.status<300||K.status===304))throw new Error("Couldn't load "+d+". Status: "+K.status);var V,Ae=Number(K.getResponseHeader("Content-length")),me=(V=K.getResponseHeader("Accept-Ranges"))&&V==="bytes",Be=(V=K.getResponseHeader("Content-Encoding"))&&V==="gzip",Ee=1048576;me||(Ee=Ae);var se=this;se.setDataGetter(ie=>{var ve=ie*Ee,g=(ie+1)*Ee-1;if(g=Math.min(g,Ae-1),se.chunks[ie]===void 0&&(se.chunks[ie]=((b,e)=>{if(b>e)throw new Error("invalid range ("+b+", "+e+") or no bytes requested!");if(e>Ae-1)throw new Error("only "+Ae+" bytes available! programmer error!");var l=new XMLHttpRequest;if(l.open("GET",d,!1),Ae!==Ee&&l.setRequestHeader("Range","bytes="+b+"-"+e),l.responseType="arraybuffer",l.overrideMimeType&&l.overrideMimeType("text/plain; charset=x-user-defined"),l.send(null),!(l.status>=200&&l.status<300||l.status===304))throw new Error("Couldn't load "+d+". Status: "+l.status);return l.response!==void 0?new Uint8Array(l.response||[]):Id(l.responseText||"",!0)})(ve,g)),se.chunks[ie]===void 0)throw new Error("doXHR failed!");return se.chunks[ie]}),!Be&&Ae||(Ee=Ae=1,Ae=this.getter(0).length,Ee=Ae,Ic("LazyFiles on gzip forces download of the whole file when length is accessed")),this._length=Ae,this._chunkSize=Ee,this.lengthKnown=!0},typeof XMLHttpRequest<"u"){if(!rp)throw"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc";var S=new H;Object.defineProperties(S,{length:{get:function(){return this.lengthKnown||this.cacheLength(),this._length}},chunkSize:{get:function(){return this.lengthKnown||this.cacheLength(),this._chunkSize}}});var W={isDevice:!1,contents:S}}else W={isDevice:!1,url:d};var Z=ae.createFile(x,C,W,k,Q);W.contents?Z.contents=W.contents:W.url&&(Z.contents=null,Z.url=W.url),Object.defineProperties(Z,{usedBytes:{get:function(){return this.contents.length}}});var R={};function N(K,V,Ae,me,Be){var Ee=K.node.contents;if(Be>=Ee.length)return 0;var se=Math.min(Ee.length-Be,me);if(Ee.slice)for(var ie=0;ie<se;ie++)V[Ae+ie]=Ee[Be+ie];else for(ie=0;ie<se;ie++)V[Ae+ie]=Ee.get(Be+ie);return se}return Object.keys(Z.stream_ops).forEach(K=>{var V=Z.stream_ops[K];R[K]=function(){return ae.forceLoadFile(Z),V.apply(null,arguments)}}),R.read=(K,V,Ae,me,Be)=>(ae.forceLoadFile(Z),N(K,V,Ae,me,Be)),R.mmap=(K,V,Ae,me,Be)=>{ae.forceLoadFile(Z);var Ee=wd();if(!Ee)throw new ae.ErrnoError(48);return N(K,ma,Ee,V,Ae),{ptr:Ee,allocated:!0}},Z.stream_ops=R,Z},indexedDB:()=>window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB,DB_NAME:()=>"EM_FS_"+window.location.pathname,DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",saveFilesToDB:(x,C,d)=>{C=C||(()=>{}),d=d||(()=>{});var k=ae.indexedDB();try{var Q=k.open(ae.DB_NAME(),ae.DB_VERSION)}catch(H){return d(H)}Q.onupgradeneeded=()=>{Ic("creating db"),Q.result.createObjectStore(ae.DB_STORE_NAME)},Q.onsuccess=()=>{var H=Q.result.transaction([ae.DB_STORE_NAME],"readwrite"),S=H.objectStore(ae.DB_STORE_NAME),W=0,Z=0,R=x.length;function N(){Z==0?C():d()}x.forEach(K=>{var V=S.put(ae.analyzePath(K).object.contents,K);V.onsuccess=()=>{++W+Z==R&&N()},V.onerror=()=>{Z++,W+Z==R&&N()}}),H.onerror=d},Q.onerror=d},loadFilesFromDB:(x,C,d)=>{C=C||(()=>{}),d=d||(()=>{});var k=ae.indexedDB();try{var Q=k.open(ae.DB_NAME(),ae.DB_VERSION)}catch(H){return d(H)}Q.onupgradeneeded=d,Q.onsuccess=()=>{var H=Q.result;try{var S=H.transaction([ae.DB_STORE_NAME],"readonly")}catch(V){return void d(V)}var W=S.objectStore(ae.DB_STORE_NAME),Z=0,R=0,N=x.length;function K(){R==0?C():d()}x.forEach(V=>{var Ae=W.get(V);Ae.onsuccess=()=>{ae.analyzePath(V).exists&&ae.unlink(V),ae.createDataFile(Tr.dirname(V),Tr.basename(V),Ae.result,!0,!0,!0),++Z+R==N&&K()},Ae.onerror=()=>{R++,Z+R==N&&K()}}),S.onerror=d},Q.onerror=d}},Xr={DEFAULT_POLLMASK:5,calculateAt:function(x,C,d){if(Tr.isAbs(C))return C;var k;if(k=x===-100?ae.cwd():Xr.getStreamFromFD(x).path,C.length==0){if(!d)throw new ae.ErrnoError(44);return k}return Tr.join2(k,C)},doStat:function(x,C,d){try{var k=x(C)}catch(W){if(W&&W.node&&Tr.normalize(C)!==Tr.normalize(ae.getPath(W.node)))return-54;throw W}Ir[d>>2]=k.dev,Ir[d+8>>2]=k.ino,Ir[d+12>>2]=k.mode,Gn[d+16>>2]=k.nlink,Ir[d+20>>2]=k.uid,Ir[d+24>>2]=k.gid,Ir[d+28>>2]=k.rdev,pn=[k.size>>>0,(Rt=k.size,+Math.abs(Rt)>=1?Rt>0?(0|Math.min(+Math.floor(Rt/4294967296),4294967295))>>>0:~~+Math.ceil((Rt-+(~~Rt>>>0))/4294967296)>>>0:0)],Ir[d+40>>2]=pn[0],Ir[d+44>>2]=pn[1],Ir[d+48>>2]=4096,Ir[d+52>>2]=k.blocks;var Q=k.atime.getTime(),H=k.mtime.getTime(),S=k.ctime.getTime();return pn=[Math.floor(Q/1e3)>>>0,(Rt=Math.floor(Q/1e3),+Math.abs(Rt)>=1?Rt>0?(0|Math.min(+Math.floor(Rt/4294967296),4294967295))>>>0:~~+Math.ceil((Rt-+(~~Rt>>>0))/4294967296)>>>0:0)],Ir[d+56>>2]=pn[0],Ir[d+60>>2]=pn[1],Gn[d+64>>2]=Q%1e3*1e3,pn=[Math.floor(H/1e3)>>>0,(Rt=Math.floor(H/1e3),+Math.abs(Rt)>=1?Rt>0?(0|Math.min(+Math.floor(Rt/4294967296),4294967295))>>>0:~~+Math.ceil((Rt-+(~~Rt>>>0))/4294967296)>>>0:0)],Ir[d+72>>2]=pn[0],Ir[d+76>>2]=pn[1],Gn[d+80>>2]=H%1e3*1e3,pn=[Math.floor(S/1e3)>>>0,(Rt=Math.floor(S/1e3),+Math.abs(Rt)>=1?Rt>0?(0|Math.min(+Math.floor(Rt/4294967296),4294967295))>>>0:~~+Math.ceil((Rt-+(~~Rt>>>0))/4294967296)>>>0:0)],Ir[d+88>>2]=pn[0],Ir[d+92>>2]=pn[1],Gn[d+96>>2]=S%1e3*1e3,pn=[k.ino>>>0,(Rt=k.ino,+Math.abs(Rt)>=1?Rt>0?(0|Math.min(+Math.floor(Rt/4294967296),4294967295))>>>0:~~+Math.ceil((Rt-+(~~Rt>>>0))/4294967296)>>>0:0)],Ir[d+104>>2]=pn[0],Ir[d+108>>2]=pn[1],0},doMsync:function(x,C,d,k,Q){if(!ae.isFile(C.node.mode))throw new ae.ErrnoError(43);if(2&k)return 0;var H=h2.slice(x,x+d);ae.msync(C,H,Q,d,k)},varargs:void 0,get:function(){return Xr.varargs+=4,Ir[Xr.varargs-4>>2]},getStr:function(x){return m2(x)},getStreamFromFD:function(x){var C=ae.getStream(x);if(!C)throw new ae.ErrnoError(8);return C}},rg={};function Q1(){if(!Q1.strings){var x={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:gg||"./this.program"};for(var C in rg)rg[C]===void 0?delete x[C]:x[C]=rg[C];var d=[];for(var C in x)d.push(C+"="+x[C]);Q1.strings=d}return Q1.strings}var nd=function(x,C,d,k){x||(x=this),this.parent=x,this.mount=x.mount,this.mounted=null,this.id=ae.nextInode++,this.name=C,this.mode=d,this.node_ops={},this.stream_ops={},this.rdev=k};Object.defineProperties(nd.prototype,{read:{get:function(){return!(365&~this.mode)},set:function(x){x?this.mode|=365:this.mode&=-366}},write:{get:function(){return!(146&~this.mode)},set:function(x){x?this.mode|=146:this.mode&=-147}},isFolder:{get:function(){return ae.isDir(this.mode)}},isDevice:{get:function(){return ae.isChrdev(this.mode)}}}),ae.FSNode=nd,ae.staticInit(),pe.FS_createPath=ae.createPath,pe.FS_createDataFile=ae.createDataFile,pe.FS_unlink=ae.unlink,pe.FS_createLazyFile=ae.createLazyFile,pe.FS_createDevice=ae.createDevice;var ip={g:function(x,C,d,k){c0("Assertion failed: "+m2(x)+", at: "+[C?m2(C):"unknown filename",d,k?m2(k):"unknown function"])},u:function(x,C,d){throw new sp(x).init(C,d),x},d:function(x,C,d){Xr.varargs=d;try{var k=Xr.getStreamFromFD(x);switch(C){case 0:return(Q=Xr.get())<0?-28:ae.createStream(k,Q).fd;case 1:case 2:case 6:case 7:return 0;case 3:return k.flags;case 4:var Q=Xr.get();return k.flags|=Q,0;case 5:return Q=Xr.get(),wc[Q+0>>1]=2,0;case 16:case 8:default:return-28;case 9:return Ir[wf()>>2]=28,-1}}catch(H){if(ae===void 0||!(H instanceof ae.ErrnoError))throw H;return-H.errno}},q:function(x,C,d){try{var k=Xr.getStreamFromFD(x);k.getdents||(k.getdents=ae.readdir(k.path));for(var Q=280,H=0,S=ae.llseek(k,0,1),W=Math.floor(S/Q);W<k.getdents.length&&H+Q<=d;){var Z,R,N=k.getdents[W];if(N===".")Z=k.node.id,R=4;else if(N==="..")Z=ae.lookupPath(k.path,{parent:!0}).node.id,R=4;else{var K=ae.lookupNode(k.node,N);Z=K.id,R=ae.isChrdev(K.mode)?2:ae.isDir(K.mode)?4:ae.isLink(K.mode)?10:8}pn=[Z>>>0,(Rt=Z,+Math.abs(Rt)>=1?Rt>0?(0|Math.min(+Math.floor(Rt/4294967296),4294967295))>>>0:~~+Math.ceil((Rt-+(~~Rt>>>0))/4294967296)>>>0:0)],Ir[C+H>>2]=pn[0],Ir[C+H+4>>2]=pn[1],pn=[(W+1)*Q>>>0,(Rt=(W+1)*Q,+Math.abs(Rt)>=1?Rt>0?(0|Math.min(+Math.floor(Rt/4294967296),4294967295))>>>0:~~+Math.ceil((Rt-+(~~Rt>>>0))/4294967296)>>>0:0)],Ir[C+H+8>>2]=pn[0],Ir[C+H+12>>2]=pn[1],wc[C+H+16>>1]=280,ma[C+H+18|0]=R,ug(N,h2,C+H+19,256),H+=Q,W+=1}return ae.llseek(k,W*Q,0),H}catch(V){if(ae===void 0||!(V instanceof ae.ErrnoError))throw V;return-V.errno}},h:function(x,C,d){Xr.varargs=d;try{var k=Xr.getStreamFromFD(x);switch(C){case 21509:case 21505:case 21510:case 21511:case 21512:case 21506:case 21507:case 21508:case 21523:case 21524:return k.tty?0:-59;case 21519:if(!k.tty)return-59;var Q=Xr.get();return Ir[Q>>2]=0,0;case 21520:return k.tty?-28:-59;case 21531:return Q=Xr.get(),ae.ioctl(k,C,Q);default:return-28}}catch(H){if(ae===void 0||!(H instanceof ae.ErrnoError))throw H;return-H.errno}},e:function(x,C,d,k){Xr.varargs=k;try{C=Xr.getStr(C),C=Xr.calculateAt(x,C);var Q=k?Xr.get():0;return ae.open(C,d,Q).fd}catch(H){if(ae===void 0||!(H instanceof ae.ErrnoError))throw H;return-H.errno}},o:function(x){try{return x=Xr.getStr(x),ae.rmdir(x),0}catch(C){if(ae===void 0||!(C instanceof ae.ErrnoError))throw C;return-C.errno}},n:function(x,C){try{return x=Xr.getStr(x),Xr.doStat(ae.stat,x,C)}catch(d){if(ae===void 0||!(d instanceof ae.ErrnoError))throw d;return-d.errno}},p:function(x,C,d){try{return C=Xr.getStr(C),C=Xr.calculateAt(x,C),d===0?ae.unlink(C):d===512?ae.rmdir(C):c0("Invalid flags passed to unlinkat"),0}catch(k){if(ae===void 0||!(k instanceof ae.ErrnoError))throw k;return-k.errno}},i:function(){return!0},l:function(){c0("")},f:function(){return Date.now()},j:function(x,C,d){h2.copyWithin(x,C,C+d)},m:function(x){h2.length,c0("OOM")},r:function(x,C){var d=0;return Q1().forEach(function(k,Q){var H=C+d;Gn[x+4*Q>>2]=H,function(S,W){for(var Z=0;Z<S.length;++Z)ma[0|W++]=S.charCodeAt(Z);ma[0|W]=0}(k,H),d+=k.length+1}),0},s:function(x,C){var d=Q1();Gn[x>>2]=d.length;var k=0;return d.forEach(function(Q){k+=Q.length+1}),Gn[C>>2]=k,0},b:function(x){try{var C=Xr.getStreamFromFD(x);return ae.close(C),0}catch(d){if(ae===void 0||!(d instanceof ae.ErrnoError))throw d;return d.errno}},t:function(x,C,d,k){try{var Q=function(H,S,W){for(var Z=0,R=0;R<W;R++){var N=Gn[S>>2],K=Gn[S+4>>2];S+=8;var V=ae.read(H,ma,N,K,void 0);if(V<0)return-1;if(Z+=V,V<K)break}return Z}(Xr.getStreamFromFD(x),C,d);return Gn[k>>2]=Q,0}catch(H){if(ae===void 0||!(H instanceof ae.ErrnoError))throw H;return H.errno}},k:function(x,C,d,k,Q){try{var H=(Z=d)+2097152>>>0<4194305-!!(W=C)?(W>>>0)+4294967296*Z:NaN;if(isNaN(H))return 61;var S=Xr.getStreamFromFD(x);return ae.llseek(S,H,k),pn=[S.position>>>0,(Rt=S.position,+Math.abs(Rt)>=1?Rt>0?(0|Math.min(+Math.floor(Rt/4294967296),4294967295))>>>0:~~+Math.ceil((Rt-+(~~Rt>>>0))/4294967296)>>>0:0)],Ir[Q>>2]=pn[0],Ir[Q+4>>2]=pn[1],S.getdents&&H===0&&k===0&&(S.getdents=null),0}catch(R){if(ae===void 0||!(R instanceof ae.ErrnoError))throw R;return R.errno}var W,Z},c:function(x,C,d,k){try{var Q=function(H,S,W){for(var Z=0,R=0;R<W;R++){var N=Gn[S>>2],K=Gn[S+4>>2];S+=8;var V=ae.write(H,ma,N,K,void 0);if(V<0)return-1;Z+=V}return Z}(Xr.getStreamFromFD(x),C,d);return Gn[k>>2]=Q,0}catch(H){if(ae===void 0||!(H instanceof ae.ErrnoError))throw H;return H.errno}},a:sg};(function(){var x,C={a:ip};function d(k,Q){var H=k.exports;pe.asm=H,pe.asm.ua,md(pe.asm.v),bd()}if(Cd(),pe.instantiateWasm)try{return pe.instantiateWasm(C,d)}catch(k){return w2("Module.instantiateWasm callback failed with error: "+k),!1}x=function(k){d(k.instance)},async function(){return[]}().then(function(k){return k2.instantiate(k,C)}).then(function(k){return k}).then(x,function(k){w2("failed to asynchronously prepare wasm: "+k),c0(k)})})(),pe.___wasm_call_ctors=function(){return(pe.___wasm_call_ctors=pe.asm.v).apply(null,arguments)};var kd=pe._emscripten_bind_VoidPtr___destroy___0=function(){return(kd=pe._emscripten_bind_VoidPtr___destroy___0=pe.asm.w).apply(null,arguments)},xd=pe._emscripten_bind_espeak_VOICE_get_name_0=function(){return(xd=pe._emscripten_bind_espeak_VOICE_get_name_0=pe.asm.x).apply(null,arguments)},Bd=pe._emscripten_bind_espeak_VOICE_set_name_1=function(){return(Bd=pe._emscripten_bind_espeak_VOICE_set_name_1=pe.asm.y).apply(null,arguments)},vd=pe._emscripten_bind_espeak_VOICE_get_languages_1=function(){return(vd=pe._emscripten_bind_espeak_VOICE_get_languages_1=pe.asm.z).apply(null,arguments)},yd=pe._emscripten_bind_espeak_VOICE_get_identifier_0=function(){return(yd=pe._emscripten_bind_espeak_VOICE_get_identifier_0=pe.asm.A).apply(null,arguments)},Ed=pe._emscripten_bind_espeak_VOICE_set_identifier_1=function(){return(Ed=pe._emscripten_bind_espeak_VOICE_set_identifier_1=pe.asm.B).apply(null,arguments)},Md=pe._emscripten_bind_espeak_VOICE_get_gender_0=function(){return(Md=pe._emscripten_bind_espeak_VOICE_get_gender_0=pe.asm.C).apply(null,arguments)},Gd=pe._emscripten_bind_espeak_VOICE_set_gender_1=function(){return(Gd=pe._emscripten_bind_espeak_VOICE_set_gender_1=pe.asm.D).apply(null,arguments)},Dd=pe._emscripten_bind_espeak_VOICE_get_age_0=function(){return(Dd=pe._emscripten_bind_espeak_VOICE_get_age_0=pe.asm.E).apply(null,arguments)},Qd=pe._emscripten_bind_espeak_VOICE_set_age_1=function(){return(Qd=pe._emscripten_bind_espeak_VOICE_set_age_1=pe.asm.F).apply(null,arguments)},Td=pe._emscripten_bind_espeak_VOICE_get_variant_0=function(){return(Td=pe._emscripten_bind_espeak_VOICE_get_variant_0=pe.asm.G).apply(null,arguments)},Pd=pe._emscripten_bind_espeak_VOICE_set_variant_1=function(){return(Pd=pe._emscripten_bind_espeak_VOICE_set_variant_1=pe.asm.H).apply(null,arguments)},zd=pe._emscripten_bind_espeak_VOICE_get_xx1_0=function(){return(zd=pe._emscripten_bind_espeak_VOICE_get_xx1_0=pe.asm.I).apply(null,arguments)},Fd=pe._emscripten_bind_espeak_VOICE_set_xx1_1=function(){return(Fd=pe._emscripten_bind_espeak_VOICE_set_xx1_1=pe.asm.J).apply(null,arguments)},Sd=pe._emscripten_bind_espeak_VOICE_get_score_0=function(){return(Sd=pe._emscripten_bind_espeak_VOICE_get_score_0=pe.asm.K).apply(null,arguments)},Nd=pe._emscripten_bind_espeak_VOICE_set_score_1=function(){return(Nd=pe._emscripten_bind_espeak_VOICE_set_score_1=pe.asm.L).apply(null,arguments)},Od=pe._emscripten_bind_espeak_VOICE_get_spare_0=function(){return(Od=pe._emscripten_bind_espeak_VOICE_get_spare_0=pe.asm.M).apply(null,arguments)},Ld=pe._emscripten_bind_espeak_VOICE_set_spare_1=function(){return(Ld=pe._emscripten_bind_espeak_VOICE_set_spare_1=pe.asm.N).apply(null,arguments)},Yd=pe._emscripten_bind_espeak_VOICE___destroy___0=function(){return(Yd=pe._emscripten_bind_espeak_VOICE___destroy___0=pe.asm.O).apply(null,arguments)},Hd=pe._emscripten_bind_espeak_EVENT_get_type_0=function(){return(Hd=pe._emscripten_bind_espeak_EVENT_get_type_0=pe.asm.P).apply(null,arguments)},Rd=pe._emscripten_bind_espeak_EVENT_get_unique_identifier_0=function(){return(Rd=pe._emscripten_bind_espeak_EVENT_get_unique_identifier_0=pe.asm.Q).apply(null,arguments)},Wd=pe._emscripten_bind_espeak_EVENT_get_text_position_0=function(){return(Wd=pe._emscripten_bind_espeak_EVENT_get_text_position_0=pe.asm.R).apply(null,arguments)},Vd=pe._emscripten_bind_espeak_EVENT_get_length_0=function(){return(Vd=pe._emscripten_bind_espeak_EVENT_get_length_0=pe.asm.S).apply(null,arguments)},jd=pe._emscripten_bind_espeak_EVENT_get_audio_position_0=function(){return(jd=pe._emscripten_bind_espeak_EVENT_get_audio_position_0=pe.asm.T).apply(null,arguments)},Ud=pe._emscripten_bind_espeak_EVENT_get_sample_0=function(){return(Ud=pe._emscripten_bind_espeak_EVENT_get_sample_0=pe.asm.U).apply(null,arguments)},Kd=pe._emscripten_bind_espeak_EVENT_get_user_data_0=function(){return(Kd=pe._emscripten_bind_espeak_EVENT_get_user_data_0=pe.asm.V).apply(null,arguments)},Zd=pe._emscripten_bind_espeak_EVENT___destroy___0=function(){return(Zd=pe._emscripten_bind_espeak_EVENT___destroy___0=pe.asm.W).apply(null,arguments)},Xd=pe._emscripten_bind_eSpeakNGWorker_eSpeakNGWorker_0=function(){return(Xd=pe._emscripten_bind_eSpeakNGWorker_eSpeakNGWorker_0=pe.asm.X).apply(null,arguments)},qd=pe._emscripten_bind_eSpeakNGWorker_synth__2=function(){return(qd=pe._emscripten_bind_eSpeakNGWorker_synth__2=pe.asm.Y).apply(null,arguments)},Jd=pe._emscripten_bind_eSpeakNGWorker_synth_ipa__2=function(){return(Jd=pe._emscripten_bind_eSpeakNGWorker_synth_ipa__2=pe.asm.Z).apply(null,arguments)},_d=pe._emscripten_bind_eSpeakNGWorker_getSizeOfEventStruct__0=function(){return(_d=pe._emscripten_bind_eSpeakNGWorker_getSizeOfEventStruct__0=pe.asm._).apply(null,arguments)},$d=pe._emscripten_bind_eSpeakNGWorker_set_voice_2=function(){return($d=pe._emscripten_bind_eSpeakNGWorker_set_voice_2=pe.asm.$).apply(null,arguments)},ef=pe._emscripten_bind_eSpeakNGWorker_set_voice_3=function(){return(ef=pe._emscripten_bind_eSpeakNGWorker_set_voice_3=pe.asm.aa).apply(null,arguments)},Af=pe._emscripten_bind_eSpeakNGWorker_set_voice_4=function(){return(Af=pe._emscripten_bind_eSpeakNGWorker_set_voice_4=pe.asm.ba).apply(null,arguments)},tf=pe._emscripten_bind_eSpeakNGWorker_set_voice_5=function(){return(tf=pe._emscripten_bind_eSpeakNGWorker_set_voice_5=pe.asm.ca).apply(null,arguments)},rf=pe._emscripten_bind_eSpeakNGWorker_get_voices_1=function(){return(rf=pe._emscripten_bind_eSpeakNGWorker_get_voices_1=pe.asm.da).apply(null,arguments)},nf=pe._emscripten_bind_eSpeakNGWorker_set_voices_2=function(){return(nf=pe._emscripten_bind_eSpeakNGWorker_set_voices_2=pe.asm.ea).apply(null,arguments)},af=pe._emscripten_bind_eSpeakNGWorker_get_samplerate_0=function(){return(af=pe._emscripten_bind_eSpeakNGWorker_get_samplerate_0=pe.asm.fa).apply(null,arguments)},sf=pe._emscripten_bind_eSpeakNGWorker_get_rate_0=function(){return(sf=pe._emscripten_bind_eSpeakNGWorker_get_rate_0=pe.asm.ga).apply(null,arguments)},of=pe._emscripten_bind_eSpeakNGWorker_set_rate_1=function(){return(of=pe._emscripten_bind_eSpeakNGWorker_set_rate_1=pe.asm.ha).apply(null,arguments)},lf=pe._emscripten_bind_eSpeakNGWorker_get_pitch_0=function(){return(lf=pe._emscripten_bind_eSpeakNGWorker_get_pitch_0=pe.asm.ia).apply(null,arguments)},cf=pe._emscripten_bind_eSpeakNGWorker_set_pitch_1=function(){return(cf=pe._emscripten_bind_eSpeakNGWorker_set_pitch_1=pe.asm.ja).apply(null,arguments)},gf=pe._emscripten_bind_eSpeakNGWorker___destroy___0=function(){return(gf=pe._emscripten_bind_eSpeakNGWorker___destroy___0=pe.asm.ka).apply(null,arguments)},uf=pe._emscripten_enum_espeak_EVENT_TYPE_espeakEVENT_LIST_TERMINATED=function(){return(uf=pe._emscripten_enum_espeak_EVENT_TYPE_espeakEVENT_LIST_TERMINATED=pe.asm.la).apply(null,arguments)},df=pe._emscripten_enum_espeak_EVENT_TYPE_espeakEVENT_WORD=function(){return(df=pe._emscripten_enum_espeak_EVENT_TYPE_espeakEVENT_WORD=pe.asm.ma).apply(null,arguments)},ff=pe._emscripten_enum_espeak_EVENT_TYPE_espeakEVENT_SENTENCE=function(){return(ff=pe._emscripten_enum_espeak_EVENT_TYPE_espeakEVENT_SENTENCE=pe.asm.na).apply(null,arguments)},pf=pe._emscripten_enum_espeak_EVENT_TYPE_espeakEVENT_MARK=function(){return(pf=pe._emscripten_enum_espeak_EVENT_TYPE_espeakEVENT_MARK=pe.asm.oa).apply(null,arguments)},hf=pe._emscripten_enum_espeak_EVENT_TYPE_espeakEVENT_PLAY=function(){return(hf=pe._emscripten_enum_espeak_EVENT_TYPE_espeakEVENT_PLAY=pe.asm.pa).apply(null,arguments)},mf=pe._emscripten_enum_espeak_EVENT_TYPE_espeakEVENT_END=function(){return(mf=pe._emscripten_enum_espeak_EVENT_TYPE_espeakEVENT_END=pe.asm.qa).apply(null,arguments)},Cf=pe._emscripten_enum_espeak_EVENT_TYPE_espeakEVENT_MSG_TERMINATED=function(){return(Cf=pe._emscripten_enum_espeak_EVENT_TYPE_espeakEVENT_MSG_TERMINATED=pe.asm.ra).apply(null,arguments)},bf=pe._emscripten_enum_espeak_EVENT_TYPE_espeakEVENT_PHONEME=function(){return(bf=pe._emscripten_enum_espeak_EVENT_TYPE_espeakEVENT_PHONEME=pe.asm.sa).apply(null,arguments)},If=pe._emscripten_enum_espeak_EVENT_TYPE_espeakEVENT_SAMPLERATE=function(){return(If=pe._emscripten_enum_espeak_EVENT_TYPE_espeakEVENT_SAMPLERATE=pe.asm.ta).apply(null,arguments)},wf=pe.___errno_location=function(){return(wf=pe.___errno_location=pe.asm.va).apply(null,arguments)};pe._free=function(){return(pe._free=pe.asm.wa).apply(null,arguments)},pe._malloc=function(){return(pe._malloc=pe.asm.xa).apply(null,arguments)};var kc,kf=pe.___cxa_is_pointer_type=function(){return(kf=pe.___cxa_is_pointer_type=pe.asm.ya).apply(null,arguments)};function xf(x){function C(){kc||(kc=!0,pe.calledRun=!0,gd||(hd=!0,pe.noFSInit||ae.init.initialized||ae.init(),ae.ignorePermissions=!1,tg(pd),pe.onRuntimeInitialized&&pe.onRuntimeInitialized(),function(){if(pe.postRun)for(typeof pe.postRun=="function"&&(pe.postRun=[pe.postRun]);pe.postRun.length;)d=pe.postRun.shift(),rd.unshift(d);var d;tg(rd)}()))}mo>0||(function(){if(pe.preRun)for(typeof pe.preRun=="function"&&(pe.preRun=[pe.preRun]);pe.preRun.length;)d=pe.preRun.shift(),td.unshift(d);var d;tg(td)}(),mo>0||(pe.setStatus?(pe.setStatus("Running..."),setTimeout(function(){setTimeout(function(){pe.setStatus("")},1),C()},1)):C()))}if(pe.___start_em_js=132724,pe.___stop_em_js=132822,pe.addRunDependency=Cd,pe.removeRunDependency=bd,pe.FS_createPath=ae.createPath,pe.FS_createDataFile=ae.createDataFile,pe.FS_createLazyFile=ae.createLazyFile,pe.FS_createDevice=ae.createDevice,pe.FS_unlink=ae.unlink,D1=function x(){kc||xf(),kc||(D1=x)},pe.preInit)for(typeof pe.preInit=="function"&&(pe.preInit=[pe.preInit]);pe.preInit.length>0;)pe.preInit.pop()();function La(){}function xc(x){return(x||La).__cache__}function C2(x,C){var d=xc(C),k=d[x];return k||((k=Object.create((C||La).prototype)).ptr=x,d[x]=k)}xf(),La.prototype=Object.create(La.prototype),La.prototype.constructor=La,La.prototype.__class__=La,La.__cache__={},pe.WrapperObject=La,pe.getCache=xc,pe.wrapPointer=C2,pe.castObject=function(x,C){return C2(x.ptr,C)},pe.NULL=C2(0),pe.destroy=function(x){if(!x.__destroy__)throw"Error: Cannot destroy object. (Did you create it yourself?)";x.__destroy__(),delete xc(x.__class__)[x.ptr]},pe.compare=function(x,C){return x.ptr===C.ptr},pe.getPointer=function(x){return x.ptr},pe.getClass=function(x){return x.__class__};var Er={buffer:0,size:0,pos:0,temps:[],needed:0,prepare:function(){if(Er.needed){for(var x=0;x<Er.temps.length;x++)pe._free(Er.temps[x]);Er.temps.length=0,pe._free(Er.buffer),Er.buffer=0,Er.size+=Er.needed,Er.needed=0}Er.buffer||(Er.size+=128,Er.buffer=pe._malloc(Er.size),eg(Er.buffer)),Er.pos=0},alloc:function(x,C){eg(Er.buffer);var d,k=C.BYTES_PER_ELEMENT,Q=x.length*k;return Q=Q+7&-8,Er.pos+Q>=Er.size?(eg(Q>0),Er.needed+=Q,d=pe._malloc(Q),Er.temps.push(d)):(d=Er.buffer+Er.pos,Er.pos+=Q),d},copy:function(x,C,d){switch(d>>>=0,C.BYTES_PER_ELEMENT){case 2:d>>>=1;break;case 4:d>>>=2;break;case 8:d>>>=3}for(var k=0;k<x.length;k++)C[d+k]=x[k]}};function po(x){if(typeof x=="string"){var C=Id(x),d=Er.alloc(C,ma);return Er.copy(C,ma,d),d}return x}function l0(){throw"cannot construct a VoidPtr, no constructor in IDL"}function ft(){throw"cannot construct a espeak_VOICE, no constructor in IDL"}function rr(){throw"cannot construct a espeak_EVENT, no constructor in IDL"}function Vt(){this.ptr=Xd(),xc(Vt)[this.ptr]=this}l0.prototype=Object.create(La.prototype),l0.prototype.constructor=l0,l0.prototype.__class__=l0,l0.__cache__={},pe.VoidPtr=l0,l0.prototype.__destroy__=l0.prototype.__destroy__=function(){var x=this.ptr;kd(x)},ft.prototype=Object.create(La.prototype),ft.prototype.constructor=ft,ft.prototype.__class__=ft,ft.__cache__={},pe.espeak_VOICE=ft,ft.prototype.get_name=ft.prototype.get_name=function(){var x=this.ptr;return m2(xd(x))},ft.prototype.set_name=ft.prototype.set_name=function(x){var C=this.ptr;Er.prepare(),x=x&&typeof x=="object"?x.ptr:po(x),Bd(C,x)},Object.defineProperty(ft.prototype,"name",{get:ft.prototype.get_name,set:ft.prototype.set_name}),ft.prototype.get_languages=ft.prototype.get_languages=function(x){var C=this.ptr;return x&&typeof x=="object"&&(x=x.ptr),vd(C,x)},Object.defineProperty(ft.prototype,"languages",{get:ft.prototype.get_languages}),ft.prototype.get_identifier=ft.prototype.get_identifier=function(){var x=this.ptr;return m2(yd(x))},ft.prototype.set_identifier=ft.prototype.set_identifier=function(x){var C=this.ptr;Er.prepare(),x=x&&typeof x=="object"?x.ptr:po(x),Ed(C,x)},Object.defineProperty(ft.prototype,"identifier",{get:ft.prototype.get_identifier,set:ft.prototype.set_identifier}),ft.prototype.get_gender=ft.prototype.get_gender=function(){var x=this.ptr;return Md(x)},ft.prototype.set_gender=ft.prototype.set_gender=function(x){var C=this.ptr;x&&typeof x=="object"&&(x=x.ptr),Gd(C,x)},Object.defineProperty(ft.prototype,"gender",{get:ft.prototype.get_gender,set:ft.prototype.set_gender}),ft.prototype.get_age=ft.prototype.get_age=function(){var x=this.ptr;return Dd(x)},ft.prototype.set_age=ft.prototype.set_age=function(x){var C=this.ptr;x&&typeof x=="object"&&(x=x.ptr),Qd(C,x)},Object.defineProperty(ft.prototype,"age",{get:ft.prototype.get_age,set:ft.prototype.set_age}),ft.prototype.get_variant=ft.prototype.get_variant=function(){var x=this.ptr;return Td(x)},ft.prototype.set_variant=ft.prototype.set_variant=function(x){var C=this.ptr;x&&typeof x=="object"&&(x=x.ptr),Pd(C,x)},Object.defineProperty(ft.prototype,"variant",{get:ft.prototype.get_variant,set:ft.prototype.set_variant}),ft.prototype.get_xx1=ft.prototype.get_xx1=function(){var x=this.ptr;return zd(x)},ft.prototype.set_xx1=ft.prototype.set_xx1=function(x){var C=this.ptr;x&&typeof x=="object"&&(x=x.ptr),Fd(C,x)},Object.defineProperty(ft.prototype,"xx1",{get:ft.prototype.get_xx1,set:ft.prototype.set_xx1}),ft.prototype.get_score=ft.prototype.get_score=function(){var x=this.ptr;return Sd(x)},ft.prototype.set_score=ft.prototype.set_score=function(x){var C=this.ptr;x&&typeof x=="object"&&(x=x.ptr),Nd(C,x)},Object.defineProperty(ft.prototype,"score",{get:ft.prototype.get_score,set:ft.prototype.set_score}),ft.prototype.get_spare=ft.prototype.get_spare=function(){var x=this.ptr;return Od(x)},ft.prototype.set_spare=ft.prototype.set_spare=function(x){var C=this.ptr;x&&typeof x=="object"&&(x=x.ptr),Ld(C,x)},Object.defineProperty(ft.prototype,"spare",{get:ft.prototype.get_spare,set:ft.prototype.set_spare}),ft.prototype.__destroy__=ft.prototype.__destroy__=function(){var x=this.ptr;Yd(x)},rr.prototype=Object.create(La.prototype),rr.prototype.constructor=rr,rr.prototype.__class__=rr,rr.__cache__={},pe.espeak_EVENT=rr,rr.prototype.get_type=rr.prototype.get_type=function(){var x=this.ptr;return Hd(x)},Object.defineProperty(rr.prototype,"type",{get:rr.prototype.get_type}),rr.prototype.get_unique_identifier=rr.prototype.get_unique_identifier=function(){var x=this.ptr;return Rd(x)},Object.defineProperty(rr.prototype,"unique_identifier",{get:rr.prototype.get_unique_identifier}),rr.prototype.get_text_position=rr.prototype.get_text_position=function(){var x=this.ptr;return Wd(x)},Object.defineProperty(rr.prototype,"text_position",{get:rr.prototype.get_text_position}),rr.prototype.get_length=rr.prototype.get_length=function(){var x=this.ptr;return Vd(x)},Object.defineProperty(rr.prototype,"length",{get:rr.prototype.get_length}),rr.prototype.get_audio_position=rr.prototype.get_audio_position=function(){var x=this.ptr;return jd(x)},Object.defineProperty(rr.prototype,"audio_position",{get:rr.prototype.get_audio_position}),rr.prototype.get_sample=rr.prototype.get_sample=function(){var x=this.ptr;return Ud(x)},Object.defineProperty(rr.prototype,"sample",{get:rr.prototype.get_sample}),rr.prototype.get_user_data=rr.prototype.get_user_data=function(){var x=this.ptr;return Kd(x)},Object.defineProperty(rr.prototype,"user_data",{get:rr.prototype.get_user_data}),rr.prototype.__destroy__=rr.prototype.__destroy__=function(){var x=this.ptr;Zd(x)},Vt.prototype=Object.create(La.prototype),Vt.prototype.constructor=Vt,Vt.prototype.__class__=Vt,Vt.__cache__={},pe.eSpeakNGWorker=Vt,Vt.prototype.synth_=Vt.prototype.synth_=function(x,C){var d=this.ptr;Er.prepare(),x=x&&typeof x=="object"?x.ptr:po(x),C&&typeof C=="object"&&(C=C.ptr),qd(d,x,C)},Vt.prototype.synth_ipa_=Vt.prototype.synth_ipa_=function(x,C){var d=this.ptr;return Er.prepare(),x=x&&typeof x=="object"?x.ptr:po(x),C=C&&typeof C=="object"?C.ptr:po(C),Jd(d,x,C)},Vt.prototype.getSizeOfEventStruct_=Vt.prototype.getSizeOfEventStruct_=function(){var x=this.ptr;return _d(x)},Vt.prototype.set_voice=Vt.prototype.set_voice=function(x,C,d,k,Q){var H=this.ptr;return Er.prepare(),x=x&&typeof x=="object"?x.ptr:po(x),C=C&&typeof C=="object"?C.ptr:po(C),d&&typeof d=="object"&&(d=d.ptr),k&&typeof k=="object"&&(k=k.ptr),Q&&typeof Q=="object"&&(Q=Q.ptr),d===void 0?$d(H,x,C):k===void 0?ef(H,x,C,d):Q===void 0?Af(H,x,C,d,k):tf(H,x,C,d,k,Q)},Vt.prototype.get_voices=Vt.prototype.get_voices=function(x){var C=this.ptr;return x&&typeof x=="object"&&(x=x.ptr),C2(rf(C,x),ft)},Vt.prototype.set_voices=Vt.prototype.set_voices=function(x,C){var d=this.ptr;Er.prepare(),x&&typeof x=="object"&&(x=x.ptr),C&&typeof C=="object"&&(C=C.ptr),nf(d,x,C)},Object.defineProperty(Vt.prototype,"voices",{get:Vt.prototype.get_voices,set:Vt.prototype.set_voices}),Vt.prototype.get_samplerate=Vt.prototype.get_samplerate=function(){var x=this.ptr;return af(x)},Object.defineProperty(Vt.prototype,"samplerate",{get:Vt.prototype.get_samplerate}),Vt.prototype.get_rate=Vt.prototype.get_rate=function(){var x=this.ptr;return sf(x)},Vt.prototype.set_rate=Vt.prototype.set_rate=function(x){var C=this.ptr;x&&typeof x=="object"&&(x=x.ptr),of(C,x)},Object.defineProperty(Vt.prototype,"rate",{get:Vt.prototype.get_rate,set:Vt.prototype.set_rate}),Vt.prototype.get_pitch=Vt.prototype.get_pitch=function(){var x=this.ptr;return lf(x)},Vt.prototype.set_pitch=Vt.prototype.set_pitch=function(x){var C=this.ptr;x&&typeof x=="object"&&(x=x.ptr),cf(C,x)},Object.defineProperty(Vt.prototype,"pitch",{get:Vt.prototype.get_pitch,set:Vt.prototype.set_pitch}),Vt.prototype.__destroy__=Vt.prototype.__destroy__=function(){var x=this.ptr;gf(x)},function(){function x(){pe.espeakEVENT_LIST_TERMINATED=uf(),pe.espeakEVENT_WORD=df(),pe.espeakEVENT_SENTENCE=ff(),pe.espeakEVENT_MARK=pf(),pe.espeakEVENT_PLAY=hf(),pe.espeakEVENT_END=mf(),pe.espeakEVENT_MSG_TERMINATED=Cf(),pe.espeakEVENT_PHONEME=bf(),pe.espeakEVENT_SAMPLERATE=If()}hd?x():md(x)}(),Vt.prototype.list_voices=function(){for(var x,C=[],d=this.get_voices(x=0);d.ptr!=0;d=this.get_voices(++x)){let W=function(Z){for(var R="",N=Z,K=d.get_languages(N++);K!=0;)R+=String.fromCharCode(K),K=d.get_languages(N++);return R};for(var k={name:d.get_name(),identifier:d.get_identifier(),languages:[]},Q=0,H=d.get_languages(Q);H!=0;){var S={priority:H,name:W(++Q)};k.languages.push(S),Q+=S.name.length+1,H=d.get_languages(Q)}C.push(k)}return C};var op=["list_terminated","word","sentence","mark","play","end","msg_terminated","phoneme","samplerate"];Vt.prototype.synthesize=function(x,C){var d=this.getSizeOfEventStruct_(),k=addFunction(function(Q,H,S){for(var W=new Float32Array(2*H),Z=0;Z<H;Z++)W[2*Z]=Math.max(-1,Math.min(1,ap(Q+2*Z,"i16")/32768)),W[2*Z+1]=W[2*Z];var R=[];for(Q=S,ev=C2(Q,rr);ev.get_type()!=pe.espeakEVENT_LIST_TERMINATED;ev=C2(Q+=d,rr))R.push({type:op[ev.get_type()],text_position:ev.get_text_position(),word_length:ev.get_length(),audio_position:ev.get_audio_position()});return C(W,R)?1:0});this.synth_(x,k),removeFunction(k)},Vt.prototype.synthesize_ipa=function(x,C){var d="espeak-ng-ipa-tmp-"+Math.random().toString().substring(2),k="",Q=this.synth_ipa_(x,d);return Q==0&&(k=ae.readFile(d,{encoding:"utf8"})),ae.unlink(d),{code:Q,ipa:k}};const Bf=new Promise(x=>{pe.calledRun?x(new pe.eSpeakNGWorker):pe.onRuntimeInitialized=()=>x(new pe.eSpeakNGWorker)}),lp=["en"],cp=Bf.then(x=>{const C=x.list_voices().map(({name:k,identifier:Q,languages:H})=>({name:k,identifier:Q,languages:H.filter(S=>lp.includes(S.name.split("-")[0]))})).filter(k=>k.languages.length>0),d=new Set;for(const k of C){d.add(k.identifier);for(const Q of k.languages)d.add(Q.name)}return{voices:C,identifiers:d}});function gp(x){if(x.includes("."))return x;if(x.includes(":")){let[H,S]=x.split(":").map(Number);return S===0?`${H} o'clock`:S<10?`${H} oh ${S}`:`${H} ${S}`}let C=parseInt(x.slice(0,4),10);if(C<1100||C%1e3<10)return x;let d=x.slice(0,2),k=parseInt(x.slice(2,4),10),Q=x.endsWith("s")?"s":"";if(C%1e3>=100&&C%1e3<=999){if(k===0)return`${d} hundred${Q}`;if(k<10)return`${d} oh ${k}${Q}`}return`${d} ${k}${Q}`}function up(x){const C=x[0]==="$"?"dollar":"pound";if(isNaN(Number(x.slice(1))))return`${x.slice(1)} ${C}s`;if(!x.includes(".")){let H=x.slice(1)==="1"?"":"s";return`${x.slice(1)} ${C}${H}`}const[d,k]=x.slice(1).split("."),Q=parseInt(k.padEnd(2,"0"),10);return`${d} ${C}${d==="1"?"":"s"} and ${Q} ${x[0]==="$"?Q===1?"cent":"cents":Q===1?"penny":"pence"}`}function dp(x){let[C,d]=x.split(".");return`${C} point ${d.split("").join(" ")}`}const fp=new RegExp(`(\\s*[${ad=';:,.!?¡¿—…"«»“”(){}[]',ad.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}]+\\s*)+`,"g");var ad;async function sd(x,C="a",d=!0){d&&(x=function(W){return W.replace(/[‘’]/g,"'").replace(/«/g,"“").replace(/»/g,"”").replace(/[“”]/g,'"').replace(/\(/g,"«").replace(/\)/g,"»").replace(/、/g,", ").replace(/。/g,". ").replace(/！/g,"! ").replace(/，/g,", ").replace(/：/g,": ").replace(/；/g,"; ").replace(/？/g,"? ").replace(/[^\S \n]/g," ").replace(/  +/," ").replace(new RegExp("(?<=\\n) +(?=\\n)","g"),"").replace(/\bD[Rr]\.(?= [A-Z])/g,"Doctor").replace(/\b(?:Mr\.|MR\.(?= [A-Z]))/g,"Mister").replace(/\b(?:Ms\.|MS\.(?= [A-Z]))/g,"Miss").replace(/\b(?:Mrs\.|MRS\.(?= [A-Z]))/g,"Mrs").replace(/\betc\.(?! [A-Z])/gi,"etc").replace(/\b(y)eah?\b/gi,"$1e'a").replace(new RegExp("\\d*\\.\\d+|\\b\\d{4}s?\\b|(?<!:)\\b(?:[1-9]|1[0-2]):[0-5]\\d\\b(?!:)","g"),gp).replace(new RegExp("(?<=\\d),(?=\\d)","g"),"").replace(/[$£]\d+(?:\.\d+)?(?: hundred| thousand| (?:[bm]|tr)illion)*\b|[$£]\d+\.\d\d?\b/gi,up).replace(/\d*\.\d+/g,dp).replace(new RegExp("(?<=\\d)-(?=\\d)","g")," to ").replace(new RegExp("(?<=\\d)S","g")," S").replace(new RegExp("(?<=[BCDFGHJ-NP-TV-Z])'?s\\b","g"),"'S").replace(new RegExp("(?<=X')S\\b","g"),"s").replace(/(?:[A-Za-z]\.){2,} [a-z]/g,Z=>Z.replace(/\./g,"-")).replace(new RegExp("(?<=[A-Z])\\.(?=[A-Z])","gi"),"-").trim()}(x));const k=function(W,Z){const R=[];let N=0;for(const K of W.matchAll(Z)){const V=K[0];N<K.index&&R.push({match:!1,text:W.slice(N,K.index)}),V.length>0&&R.push({match:!0,text:V}),N=K.index+V.length}return N<W.length&&R.push({match:!1,text:W.slice(N)}),R}(x,fp),Q=C==="a"?"en-us":"en";let S=(await Promise.all(k.map(async({match:W,text:Z})=>W?Z:(await(async(R,N="en-us")=>{var Ae;const K=await Bf,{identifiers:V}=await cp;if(!V.has(N))throw new Error(`Invalid language identifier: "${N}". Should be one of: ${Array.from(V).toSorted().join(", ")}.`);return K.set_voice(N),((Ae=K.synthesize_ipa(R).ipa)==null?void 0:Ae.split(`
`).filter(me=>me.length>0))??[]})(Z,Q)).join(" ")))).join("").replace(/kəkˈoːɹoʊ/g,"kˈoʊkəɹoʊ").replace(/kəkˈɔːɹəʊ/g,"kˈəʊkəɹəʊ").replace(/ʲ/g,"j").replace(/r/g,"ɹ").replace(/x/g,"k").replace(/ɬ/g,"l").replace(new RegExp("(?<=[a-zɹː])(?=hˈʌndɹɪd)","g")," ").replace(/ z(?=[;:,.!?¡¿—…"«»“” ]|$)/g,"z");return C==="a"&&(S=S.replace(new RegExp("(?<=nˈaɪn)ti(?!ː)","g"),"di")),S.trim()}function ng(x,C=!0){return".!?…。？！".includes(x)||C&&x===`
`}function pp(x){return`"')]}」』`.includes(x)}function hp(x,C){let d=C;for(;d<x.length&&!/\s/.test(x[d]);)++d;return x.substring(C,d)}const mp=new Set(["mr","mrs","ms","dr","prof","sr","jr","sgt","col","gen","rep","sen","gov","lt","maj","capt","st","mt","etc","co","inc","ltd","dept","vs","p","pg","jan","feb","mar","apr","jun","jul","aug","sep","sept","oct","nov","dec","sun","mon","tu","tue","tues","wed","th","thu","thur","thurs","fri","sat"]);function Cp(x){return x=x.replace(/['’]s$/i,"").replace(/\.+$/,""),mp.has(x.toLowerCase())}const vf=new Map([[")","("],["]","["],["}","{"],["》","《"],["〉","〈"],["›","‹"],["»","«"],["〉","〈"],["」","「"],["』","『"],["〕","〔"],["】","【"]]),bp=new Set(vf.values());function Ip(x,C,d,k){if(x==='"'||x==="'")return x==="'"&&d>0&&d<k.length-1&&/[A-Za-z]/.test(k[d-1])&&/[A-Za-z]/.test(k[d+1])?void 0:void(C.length&&C.at(-1)===x?C.pop():C.push(x));if(bp.has(x))return void C.push(x);const Q=vf.get(x);Q&&C.length&&C.at(-1)===Q&&C.pop()}class ig{constructor(){this._buffer="",this._sentences=[],this._resolver=null,this._closed=!1}push(...C){for(const d of C)this._buffer+=d,this._process()}close(){if(this._closed)throw new Error("Stream is already closed.");this._closed=!0,this.flush()}flush(){const C=this._buffer.trim();C.length>0&&this._sentences.push(C),this._buffer="",this._resolve()}_resolve(){this._resolver&&(this._resolver(),this._resolver=null)}_process(){let C=0;const d=this._buffer,k=d.length;let Q=0,H=[];const S=W=>{let Z=W;for(;Z+1<k&&ng(d[Z+1],!1);)++Z;for(;Z+1<k&&pp(d[Z+1]);)++Z;let R=Z+1;for(;R<k&&/\s/.test(d[R]);)++R;return{end:Z,nextNonSpace:R}};for(;Q<k;){const W=d[Q];if(Ip(W,H,Q,d),H.length===0&&ng(W)){const Z=d.slice(C,Q);if(/(^|\n)\d+$/.test(Z)){++Q;continue}const{end:R,nextNonSpace:N}=S(Q);if(Q===N-1&&W!==`
`){++Q;continue}if(N===k)break;let K=Q-1;for(;K>=0&&/\S/.test(d[K]);)K--;K=Math.max(C,K+1);const V=hp(d,K);if(!V){++Q;continue}if((/https?[,:]\/\//.test(V)||V.includes("@"))&&!ng(V.at(-1))){Q=K+V.length;continue}if(Cp(V)){++Q;continue}if(/^([A-Za-z]\.)+$/.test(V)&&N<k&&/[A-Z]/.test(d[N])){++Q;continue}if(W==="."&&N<k&&/[a-z]/.test(d[N])){++Q;continue}const Ae=d.substring(C,R+1).trim();if(Ae==="..."||Ae==="…"){++Q;continue}Ae&&this._sentences.push(Ae),Q=C=R+1}else++Q}this._buffer=d.substring(C),this._sentences.length>0&&this._resolve()}async*[Symbol.asyncIterator](){if(this._resolver)throw new Error("Another iterator is already active.");for(;;)if(this._sentences.length>0)yield this._sentences.shift();else{if(this._closed)break;await new Promise(C=>{this._resolver=C})}}[Symbol.iterator](){this.flush();const C=this._sentences[Symbol.iterator]();return this._sentences=[],C}get sentences(){return this._sentences}}var E1={};const M1=Object.freeze({af_heart:{name:"Heart",language:"en-us",gender:"Female",traits:"❤️",targetQuality:"A",overallGrade:"A"},af_alloy:{name:"Alloy",language:"en-us",gender:"Female",targetQuality:"B",overallGrade:"C"},af_aoede:{name:"Aoede",language:"en-us",gender:"Female",targetQuality:"B",overallGrade:"C+"},af_bella:{name:"Bella",language:"en-us",gender:"Female",traits:"🔥",targetQuality:"A",overallGrade:"A-"},af_jessica:{name:"Jessica",language:"en-us",gender:"Female",targetQuality:"C",overallGrade:"D"},af_kore:{name:"Kore",language:"en-us",gender:"Female",targetQuality:"B",overallGrade:"C+"},af_nicole:{name:"Nicole",language:"en-us",gender:"Female",traits:"🎧",targetQuality:"B",overallGrade:"B-"},af_nova:{name:"Nova",language:"en-us",gender:"Female",targetQuality:"B",overallGrade:"C"},af_river:{name:"River",language:"en-us",gender:"Female",targetQuality:"C",overallGrade:"D"},af_sarah:{name:"Sarah",language:"en-us",gender:"Female",targetQuality:"B",overallGrade:"C+"},af_sky:{name:"Sky",language:"en-us",gender:"Female",targetQuality:"B",overallGrade:"C-"},am_adam:{name:"Adam",language:"en-us",gender:"Male",targetQuality:"D",overallGrade:"F+"},am_echo:{name:"Echo",language:"en-us",gender:"Male",targetQuality:"C",overallGrade:"D"},am_eric:{name:"Eric",language:"en-us",gender:"Male",targetQuality:"C",overallGrade:"D"},am_fenrir:{name:"Fenrir",language:"en-us",gender:"Male",targetQuality:"B",overallGrade:"C+"},am_liam:{name:"Liam",language:"en-us",gender:"Male",targetQuality:"C",overallGrade:"D"},am_michael:{name:"Michael",language:"en-us",gender:"Male",targetQuality:"B",overallGrade:"C+"},am_onyx:{name:"Onyx",language:"en-us",gender:"Male",targetQuality:"C",overallGrade:"D"},am_puck:{name:"Puck",language:"en-us",gender:"Male",targetQuality:"B",overallGrade:"C+"},am_santa:{name:"Santa",language:"en-us",gender:"Male",targetQuality:"C",overallGrade:"D-"},bf_emma:{name:"Emma",language:"en-gb",gender:"Female",traits:"🚺",targetQuality:"B",overallGrade:"B-"},bf_isabella:{name:"Isabella",language:"en-gb",gender:"Female",targetQuality:"B",overallGrade:"C"},bm_george:{name:"George",language:"en-gb",gender:"Male",targetQuality:"B",overallGrade:"C"},bm_lewis:{name:"Lewis",language:"en-gb",gender:"Male",targetQuality:"C",overallGrade:"D+"},bf_alice:{name:"Alice",language:"en-gb",gender:"Female",traits:"🚺",targetQuality:"C",overallGrade:"D"},bf_lily:{name:"Lily",language:"en-gb",gender:"Female",traits:"🚺",targetQuality:"C",overallGrade:"D"},bm_daniel:{name:"Daniel",language:"en-gb",gender:"Male",traits:"🚹",targetQuality:"C",overallGrade:"D"},bm_fable:{name:"Fable",language:"en-gb",gender:"Male",traits:"🚹",targetQuality:"B",overallGrade:"C"}}),ag=new Map;async function wp(x){if(ag.has(x))return ag.get(x);const C=new Float32Array(await async function(d){if(E1!=null&&E1.readFile){const W=typeof __dirname<"u"?__dirname:import.meta.dirname,Z=E1.resolve(W,`../voices/${d}.bin`),{buffer:R}=await E1.readFile(Z);return R}const k=`https://huggingface.co/onnx-community/Kokoro-82M-v1.0-ONNX/resolve/main/voices/${d}.bin`;let Q;try{Q=await caches.open("kokoro-voices");const W=await Q.match(k);if(W)return await W.arrayBuffer()}catch(W){console.warn("Unable to open cache",W)}const H=await fetch(k),S=await H.arrayBuffer();if(Q)try{await Q.put(k,new Response(S,{headers:H.headers}))}catch(W){console.warn("Unable to cache file",W)}return S}(x));return ag.set(x,C),C}class dg{constructor(C,d){this.model=C,this.tokenizer=d}static async from_pretrained(C,{dtype:d="fp32",device:k=null,progress_callback:Q=null}={}){const H=tp.from_pretrained(C,{progress_callback:Q,dtype:d,device:k}),S=ep.from_pretrained(C,{progress_callback:Q}),W=await Promise.all([H,S]);return new dg(...W)}get voices(){return M1}list_voices(){console.table(M1)}_validate_voice(C){if(!M1.hasOwnProperty(C))throw console.error(`Voice "${C}" not found. Available voices:`),console.table(M1),new Error(`Voice "${C}" not found. Should be one of: ${Object.keys(M1).join(", ")}.`);return C.at(0)}async generate(C,{voice:d="af_heart",speed:k=1}={}){const Q=this._validate_voice(d),H=await sd(C,Q),{input_ids:S}=this.tokenizer(H,{truncation:!0});return this.generate_from_ids(S,{voice:d,speed:k})}async generate_from_ids(C,{voice:d="af_heart",speed:k=1}={}){const Q=256*Math.min(Math.max(C.dims.at(-1)-2,0),509),H=(await wp(d)).slice(Q,Q+256),S={input_ids:C,style:new _u("float32",H,[1,256]),speed:new _u("float32",[k],[1])},{waveform:W}=await this.model(S);return new Ap(W.data,24e3)}async*stream(C,{voice:d="af_heart",speed:k=1,split_pattern:Q=null}={}){const H=this._validate_voice(d);let S;if(C instanceof ig)S=C;else{if(typeof C!="string")throw new Error("Invalid input type. Expected string or TextSplitterStream.");{S=new ig;const W=Q?C.split(Q).map(Z=>Z.trim()).filter(Z=>Z.length>0):[C];S.push(...W)}}for await(const W of S){const Z=await sd(W,H),{input_ids:R}=this.tokenizer(Z,{truncation:!0}),N=await this.generate_from_ids(R,{voice:d,speed:k});yield{text:W,phonemes:Z,audio:N}}}}async function kp(){try{return!!await navigator.gpu.requestAdapter()}catch{return!1}}const xp=document.getElementById("textInput"),og=document.getElementById("generateButton"),fg=document.getElementById("downloadButton"),id=document.getElementById("voiceSelect"),pg=document.getElementById("chunks"),lg=document.getElementById("speedControl"),Bp=document.getElementById("speedValue");let bc,hg,cg,b2=-1,p2=[];lg.addEventListener("input",()=>{Bp.textContent=lg.value});async function vp(){const x=await kp()?"webgpu":"wasm";bc=await dg.from_pretrained("onnx-community/Kokoro-82M-v1.0-ONNX",{dtype:x==="wasm"?"q8":"fp32",device:x}),yp(bc.voices),hg=Object.keys(bc.voices)[0]}function yp(x){for(const C in x){const d=document.createElement("option");d.value=C,d.textContent=`${x[C].name} (${x[C].language==="en-us"?"American":"British"} ${x[C].gender})`,id.appendChild(d)}id.addEventListener("change",C=>{hg=C.target.value})}async function Ep(){og.disabled=!0,fg.disabled=!0,pg.innerHTML="",p2=[],b2=0;const x=xp.value,C=parseFloat(lg.value),d=new ig;d.push(x),d.close();const k=bc.stream(d,{voice:hg,speed:C});for await(const{text:Q,audio:H}of k){const S=H.toBlob();p2.push({text:Q,audio:S}),Mp(Q,S,p2.length-1)}Gp(p2),yf(),og.disabled=!1}function Mp(x,C,d){const k=document.createElement("div");k.classList.add("audio-chunk"),k.innerHTML=`<p>${x}</p><audio src="${URL.createObjectURL(C)}" controls data-index="${d}"></audio>`,pg.appendChild(k),k.querySelector("audio").addEventListener("ended",()=>{b2<p2.length-1&&(b2++,yf())})}function yf(){b2>=0&&b2<p2.length&&pg.querySelectorAll("audio").forEach((C,d)=>{d===b2&&C.play()})}async function Gp(x){if(x.length===0)return;const C=await Promise.all(x.map(W=>W.audio.arrayBuffer())),d=new AudioContext,k=await Promise.all(C.map(W=>d.decodeAudioData(W))),Q=k.reduce((W,Z)=>W+Z.length,0),H=d.createBuffer(1,Q,k[0].sampleRate);let S=0;k.forEach(W=>{H.copyToChannel(W.getChannelData(0),0,S),S+=W.length}),cg=await d.encodeAudioData(H).then(W=>new Blob([W],{type:"audio/wav"})),fg.disabled=!1}fg.addEventListener("click",()=>{if(cg){const x=URL.createObjectURL(cg),C=document.createElement("a");C.href=x,C.download="merged_audio.wav",C.click(),URL.revokeObjectURL(x)}});og.addEventListener("click",Ep);vp();
